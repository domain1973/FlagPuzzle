android.support.v4.app.ActivityCompatHoneycomb -> a.a.a.a.a:
    android.support.v4.app.ActivityCompatHoneycomb next$fe619d5 -> a
    android.support.v4.app.ActivityCompatHoneycomb prev$fe619d5 -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackRecord -> a.a.a.a.b:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.ActivityCompatHoneycomb mHead$fe619d5 -> b
    android.support.v4.app.ActivityCompatHoneycomb mTail$fe619d5 -> c
    int mNumOp -> d
    int mTransition -> e
    int mTransitionStyle -> f
    boolean mAddToBackStack -> g
    java.lang.String mName -> h
    int mIndex -> i
    int mBreadCrumbTitleRes -> j
    java.lang.CharSequence mBreadCrumbTitleText -> k
    int mBreadCrumbShortTitleRes -> l
    java.lang.CharSequence mBreadCrumbShortTitleText -> m
    java.lang.String toString() -> toString
    void dump$ec96877(java.lang.String,java.io.PrintWriter) -> a
    void bumpBackStackNesting(int) -> a
    void run() -> run
    void popFromBackStack(boolean) -> a
android.support.v4.app.BackStackState -> a.a.a.a.c:
    int[] mOps -> b
    int mTransition -> c
    int mTransitionStyle -> d
    java.lang.String mName -> e
    int mIndex -> f
    int mBreadCrumbTitleRes -> g
    java.lang.CharSequence mBreadCrumbTitleText -> h
    int mBreadCrumbShortTitleRes -> i
    java.lang.CharSequence mBreadCrumbShortTitleText -> j
    android.os.Parcelable$Creator CREATOR -> a
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> a.a.a.a.d:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.Fragment -> a.a.a.a.e:
    java.util.HashMap sClassMap -> sClassMap
    int INITIALIZING -> INITIALIZING
    int CREATED -> CREATED
    int ACTIVITY_CREATED -> ACTIVITY_CREATED
    int STOPPED -> STOPPED
    int STARTED -> STARTED
    int RESUMED -> RESUMED
    int mState -> mState
    android.view.View mAnimatingAway -> mAnimatingAway
    int mStateAfterAnimating -> mStateAfterAnimating
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.util.SparseArray mSavedViewState -> mSavedViewState
    int mIndex -> mIndex
    java.lang.String mWho -> mWho
    android.os.Bundle mArguments -> mArguments
    android.support.v4.app.Fragment mTarget -> mTarget
    int mTargetIndex -> mTargetIndex
    int mTargetRequestCode -> mTargetRequestCode
    boolean mAdded -> mAdded
    boolean mRemoving -> mRemoving
    boolean mResumed -> mResumed
    boolean mFromLayout -> mFromLayout
    boolean mInLayout -> mInLayout
    boolean mRestored -> mRestored
    int mBackStackNesting -> mBackStackNesting
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> mChildFragmentManager
    android.support.v4.app.Fragment mParentFragment -> mParentFragment
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mHidden -> mHidden
    boolean mDetached -> mDetached
    boolean mRetainInstance -> mRetainInstance
    boolean mRetaining -> mRetaining
    boolean mHasMenu -> mHasMenu
    boolean mMenuVisible -> mMenuVisible
    boolean mCalled -> mCalled
    int mNextAnim -> mNextAnim
    android.view.ViewGroup mContainer -> mContainer
    android.view.View mView -> mView
    android.view.View mInnerView -> mInnerView
    boolean mDeferStart -> mDeferStart
    boolean mUserVisibleHint -> mUserVisibleHint
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> instantiate
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    void restoreViewState(android.os.Bundle) -> restoreViewState
    void setIndex(int,android.support.v4.app.Fragment) -> setIndex
    boolean isInBackStack() -> isInBackStack
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getId() -> getId
    java.lang.String getTag() -> getTag
    void setArguments(android.os.Bundle) -> setArguments
    android.os.Bundle getArguments() -> getArguments
    void setInitialSavedState(android.support.v4.app.Fragment$SavedState) -> setInitialSavedState
    void setTargetFragment(android.support.v4.app.Fragment,int) -> setTargetFragment
    android.support.v4.app.Fragment getTargetFragment() -> getTargetFragment
    int getTargetRequestCode() -> getTargetRequestCode
    android.support.v4.app.FragmentActivity getActivity() -> getActivity
    android.content.res.Resources getResources() -> getResources
    java.lang.CharSequence getText(int) -> getText
    java.lang.String getString(int) -> getString
    java.lang.String getString(int,java.lang.Object[]) -> getString
    android.support.v4.app.FragmentManager getFragmentManager() -> getFragmentManager
    android.support.v4.app.FragmentManager getChildFragmentManager() -> getChildFragmentManager
    android.support.v4.app.Fragment getParentFragment() -> getParentFragment
    boolean isAdded() -> isAdded
    boolean isDetached() -> isDetached
    boolean isRemoving() -> isRemoving
    boolean isInLayout() -> isInLayout
    boolean isResumed() -> isResumed
    boolean isVisible() -> isVisible
    boolean isHidden() -> isHidden
    void onHiddenChanged(boolean) -> onHiddenChanged
    void setRetainInstance(boolean) -> setRetainInstance
    boolean getRetainInstance() -> getRetainInstance
    void setHasOptionsMenu(boolean) -> setHasOptionsMenu
    void setMenuVisibility(boolean) -> setMenuVisibility
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    boolean getUserVisibleHint() -> getUserVisibleHint
    android.support.v4.app.LoaderManager getLoaderManager() -> getLoaderManager
    void startActivity(android.content.Intent) -> startActivity
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onAttach(android.app.Activity) -> onAttach
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> onCreateAnimation
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    android.view.View getView() -> getView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    void onStart() -> onStart
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> onPause
    void onStop() -> onStop
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void initState() -> initState
    void onDetach() -> onDetach
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onDestroyOptionsMenu() -> onDestroyOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onOptionsMenuClosed(android.view.Menu) -> onOptionsMenuClosed
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void registerForContextMenu(android.view.View) -> registerForContextMenu
    void unregisterForContextMenu(android.view.View) -> unregisterForContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void instantiateChildFragmentManager() -> instantiateChildFragmentManager
    void performCreate(android.os.Bundle) -> performCreate
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    void performActivityCreated(android.os.Bundle) -> performActivityCreated
    void performStart() -> performStart
    void performResume() -> performResume
    void performConfigurationChanged(android.content.res.Configuration) -> performConfigurationChanged
    void performLowMemory() -> performLowMemory
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> performCreateOptionsMenu
    boolean performPrepareOptionsMenu(android.view.Menu) -> performPrepareOptionsMenu
    boolean performOptionsItemSelected(android.view.MenuItem) -> performOptionsItemSelected
    boolean performContextItemSelected(android.view.MenuItem) -> performContextItemSelected
    void performOptionsMenuClosed(android.view.Menu) -> performOptionsMenuClosed
    void performSaveInstanceState(android.os.Bundle) -> performSaveInstanceState
    void performPause() -> performPause
    void performStop() -> performStop
    void performReallyStop() -> performReallyStop
    void performDestroyView() -> performDestroyView
    void performDestroy() -> performDestroy
android.support.v4.app.Fragment$1 -> a.a.a.a.f:
    android.support.v4.app.Fragment this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.Fragment$InstantiationException -> a.a.a.a.g:
android.support.v4.app.Fragment$SavedState -> a.a.a.a.h:
    android.os.Bundle mState -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> a.a.a.a.i:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> a.a.a.a.j:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    android.support.v4.app.FragmentContainer mContainer -> d
    boolean mCreated -> e
    boolean mResumed -> f
    boolean mStopped -> g
    boolean mReallyStopped -> h
    boolean mRetaining -> c
    boolean mOptionsMenuInvalidated -> i
    boolean mCheckedForLoaderManager -> j
    boolean mLoadersStarted -> k
    java.util.HashMap mAllLoaderManagers -> l
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> m
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    void supportInvalidateOptionsMenu() -> a
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> a
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> a
    void doReallyStop(boolean) -> a
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> a
    void invalidateSupportFragment(java.lang.String) -> a
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$FragmentTag -> a.a.a.a.k:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> a.a.a.a.l:
    java.util.ArrayList fragments -> a
    java.util.HashMap loaders -> b
android.support.v4.app.FragmentContainer -> a.a.a.a.m:
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentManager -> a.a.a.a.n:
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> a.a.a.a.o:
android.support.v4.app.FragmentManagerImpl -> a.a.a.a.p:
    boolean DEBUG -> a
    boolean HONEYCOMB -> j
    boolean mExecutingActions -> k
    java.util.ArrayList mActive -> b
    java.util.ArrayList mAdded -> c
    java.util.ArrayList mAvailIndices -> l
    java.util.ArrayList mBackStack -> d
    java.util.ArrayList mCreatedMenus -> m
    java.util.ArrayList mBackStackIndices -> e
    java.util.ArrayList mAvailBackStackIndices -> f
    int mCurState -> g
    android.support.v4.app.FragmentActivity mActivity -> n
    android.support.v4.app.FragmentContainer mContainer -> o
    android.support.v4.app.Fragment mParent -> p
    boolean mNeedMenuInvalidate -> q
    boolean mStateSaved -> h
    boolean mDestroyed -> r
    java.lang.String mNoTransactionsBecause -> i
    boolean mHavePendingDeferredStart -> s
    android.os.Bundle mStateBundle -> t
    android.util.SparseArray mStateArray -> u
    java.lang.Runnable mExecCommit -> v
    android.view.animation.Interpolator DECELERATE_QUINT -> w
    android.view.animation.Interpolator DECELERATE_CUBIC -> x
    void throwException(java.lang.RuntimeException) -> a
    boolean popBackStackImmediate() -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation$376f30fd(float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation$424ea1bd(float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> a
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> b
    void moveToState(int,boolean) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> k
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    boolean execPendingActions() -> b
    void saveFragmentViewState(android.support.v4.app.Fragment) -> c
    android.os.Parcelable saveAllState() -> c
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    void dispatchCreate() -> d
    void dispatchActivityCreated() -> e
    void dispatchStart() -> f
    void dispatchResume() -> g
    void dispatchStop() -> h
    void dispatchDestroy() -> i
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> j
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> b
android.support.v4.app.FragmentManagerImpl$1 -> a.a.a.a.q:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> a.a.a.a.r:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> a.a.a.a.s:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> a.a.a.a.t:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> a.a.a.a.u:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> l
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> a.a.a.a.v:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTransaction -> a.a.a.a.w:
android.support.v4.app.LoaderManager -> a.a.a.a.x:
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl -> a.a.a.a.y:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> g
    java.lang.String mWho -> c
    android.support.v4.app.FragmentActivity mActivity -> d
    boolean mStarted -> e
    boolean mRetaining -> f
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void doReportNextStart() -> e
    void doReportStart() -> f
    void doDestroy() -> g
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> a.a.a.a.z:
    int mId -> a
    android.os.Bundle mArgs -> j
    android.support.v4.app.FragmentManager$OnBackStackChangedListener mCallbacks$641e715d -> b
    android.support.v4.content.Loader mLoader -> c
    boolean mHaveData -> k
    boolean mDeliveredData -> d
    java.lang.Object mData -> l
    boolean mStarted -> e
    boolean mRetaining -> f
    boolean mRetainingStarted -> g
    boolean mReportNextStart -> h
    boolean mDestroyed -> m
    boolean mListenerRegistered -> i
    void stop() -> a
    void destroy() -> b
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NoSaveStateFrameLayout -> a.a.a.a.A:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.SuperNotCalledException -> a.a.a.a.B:
android.support.v4.content.Loader -> a.a.a.b.a:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void startLoading() -> a
    void stopLoading() -> b
    void reset() -> c
    java.lang.String toString() -> toString
    void dump$ec96877(java.lang.String,java.io.PrintWriter) -> a
android.support.v4.content.Loader$OnLoadCompleteListener -> a.a.a.b.b:
android.support.v4.util.DebugUtils -> a.a.a.c.a:
    com.badlogic.gdx.scenes.scene2d.ui.Image image -> f
    com.badlogic.gdx.scenes.scene2d.ui.Image readmeImage -> g
    java.lang.String url -> h
    boolean musicEnabled -> a
    boolean soundEnabled -> b
    int unlockGateNum -> c
    int helpNum -> d
    boolean adManager -> e
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
    com.badlogic.gdx.scenes.scene2d.ui.Image getImage() -> a
    android.support.v4.util.DebugUtils setImage$7cc30388(com.badlogic.gdx.scenes.scene2d.ui.Image) -> a
    com.badlogic.gdx.scenes.scene2d.ui.Image getReadmeImage() -> b
    android.support.v4.util.DebugUtils setReadmeImage$7cc30388(com.badlogic.gdx.scenes.scene2d.ui.Image) -> b
    java.lang.String getUrl() -> c
    android.support.v4.util.DebugUtils setUrl$19909190(java.lang.String) -> a
    boolean hasModifier(int,int) -> a
    android.graphics.Bitmap getBitmap(java.lang.String) -> b
    android.graphics.Bitmap getBitmap(java.io.InputStream) -> a
    android.graphics.Bitmap getBitmap(java.io.InputStream,int) -> a
    java.lang.String getFileMime(java.lang.String) -> c
    int getScreenWidth(android.content.Context) -> a
android.support.v4.util.LogWriter -> a.a.a.c.b:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.SparseArrayCompat -> a.a.a.c.c:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    int size() -> a
    int keyAt(int) -> a
    java.lang.Object valueAt(int) -> b
    void clear() -> b
    int idealByteArraySize(int) -> c
cn.sharesdk.framework.CustomPlatform -> cn.sharesdk.framework.CustomPlatform:
    void initDevInfo(java.lang.String) -> initDevInfo
    java.lang.String getName() -> getName
    int getVersion() -> getVersion
    int getPlatformId() -> getPlatformId
    int getCustomPlatformId() -> getCustomPlatformId
    void setNetworkDevinfo() -> setNetworkDevinfo
    void doAuthorize(java.lang.String[]) -> doAuthorize
    boolean checkAuthorize(int,java.lang.Object) -> checkAuthorize
    void doShare(cn.sharesdk.framework.Platform$ShareParams) -> doShare
    void follow(java.lang.String) -> follow
    void timeline(int,int,java.lang.String) -> timeline
    void userInfor(java.lang.String) -> userInfor
    void getFriendList(int,int,java.lang.String) -> getFriendList
    void doCustomerProtocol(java.lang.String,java.lang.String,int,java.util.HashMap,java.util.HashMap) -> doCustomerProtocol
    cn.sharesdk.framework.statistics.b.f$a filterShareContent(cn.sharesdk.framework.Platform$ShareParams,java.util.HashMap) -> filterShareContent
cn.sharesdk.framework.FakeActivity -> cn.sharesdk.framework.FakeActivity:
    java.lang.Class shell -> shell
    android.app.Activity activity -> activity
    cn.sharesdk.framework.FakeActivity resultReceiver -> resultReceiver
    java.util.HashMap result -> result
    android.view.View contentView -> contentView
    void setShell(java.lang.Class) -> setShell
    void setActivity(android.app.Activity) -> setActivity
    void setContentView(android.view.View) -> setContentView
    android.view.View getContentView() -> getContentView
    void onCreate() -> onCreate
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onStart() -> onStart
    void onPause() -> onPause
    void onResume() -> onResume
    void onStop() -> onStop
    void onRestart() -> onRestart
    boolean onFinish() -> onFinish
    void onDestroy() -> onDestroy
    void finish() -> finish
    boolean onKeyEvent(int,android.view.KeyEvent) -> onKeyEvent
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void startActivity(android.content.Intent) -> startActivity
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    android.content.Context getContext() -> getContext
    void show(android.content.Context,android.content.Intent) -> show
    void showForResult(android.content.Context,android.content.Intent,cn.sharesdk.framework.FakeActivity) -> showForResult
    cn.sharesdk.framework.FakeActivity getParent() -> getParent
    void setResult(java.util.HashMap) -> setResult
    void sendResult() -> sendResult
    void onResult(java.util.HashMap) -> onResult
    void runOnUIThread(java.lang.Runnable) -> runOnUIThread
    void runOnUIThread(java.lang.Runnable,long) -> runOnUIThread
cn.sharesdk.framework.Platform -> cn.sharesdk.framework.Platform:
    int ACTION_AUTHORIZING -> ACTION_AUTHORIZING
    int ACTION_GETTING_FRIEND_LIST -> ACTION_GETTING_FRIEND_LIST
    int ACTION_SENDING_DIRECT_MESSAGE -> ACTION_SENDING_DIRECT_MESSAGE
    int ACTION_FOLLOWING_USER -> ACTION_FOLLOWING_USER
    int ACTION_TIMELINE -> ACTION_TIMELINE
    int ACTION_USER_INFOR -> ACTION_USER_INFOR
    int ACTION_SHARE -> ACTION_SHARE
    int ACTION_CUSTOMER -> ACTION_CUSTOMER
    int CUSTOMER_ACTION_MASK -> CUSTOMER_ACTION_MASK
    int SHARE_TEXT -> SHARE_TEXT
    int SHARE_IMAGE -> SHARE_IMAGE
    int SHARE_WEBPAGE -> SHARE_WEBPAGE
    int SHARE_MUSIC -> SHARE_MUSIC
    int SHARE_VIDEO -> SHARE_VIDEO
    int SHARE_APPS -> SHARE_APPS
    int SHARE_FILE -> SHARE_FILE
    int SHARE_EMOJI -> SHARE_EMOJI
    cn.sharesdk.framework.i a -> a
    android.content.Context context -> context
    cn.sharesdk.framework.PlatformDb db -> db
    cn.sharesdk.framework.PlatformActionListener listener -> listener
    void a() -> a
    void initDevInfo(java.lang.String) -> initDevInfo
    void copyDevinfo(java.lang.String,java.lang.String) -> copyDevinfo
    void copyNetworkDevinfo(int,int) -> copyNetworkDevinfo
    java.lang.String getDevinfo(java.lang.String) -> getDevinfo
    java.lang.String getDevinfo(java.lang.String,java.lang.String) -> getDevinfo
    java.lang.String getNetworkDevinfo(java.lang.String,java.lang.String) -> getNetworkDevinfo
    java.lang.String getNetworkDevinfo(int,java.lang.String,java.lang.String) -> getNetworkDevinfo
    android.content.Context getContext() -> getContext
    java.lang.String getName() -> getName
    int getVersion() -> getVersion
    int getId() -> getId
    int getPlatformId() -> getPlatformId
    int getSortId() -> getSortId
    void setPlatformActionListener(cn.sharesdk.framework.PlatformActionListener) -> setPlatformActionListener
    cn.sharesdk.framework.PlatformActionListener getPlatformActionListener() -> getPlatformActionListener
    boolean isValid() -> isValid
    void SSOSetting(boolean) -> SSOSetting
    boolean isSSODisable() -> isSSODisable
    boolean b() -> b
    void authorize() -> authorize
    void authorize(java.lang.String[]) -> authorize
    void setNetworkDevinfo() -> setNetworkDevinfo
    void doAuthorize(java.lang.String[]) -> doAuthorize
    boolean checkAuthorize(int,java.lang.Object) -> checkAuthorize
    void innerAuthorize(int,java.lang.Object) -> innerAuthorize
    void share(cn.sharesdk.framework.Platform$ShareParams) -> share
    void doShare(cn.sharesdk.framework.Platform$ShareParams) -> doShare
    void followFriend(java.lang.String) -> followFriend
    void follow(java.lang.String) -> follow
    void getTimeLine(java.lang.String,int,int) -> getTimeLine
    void timeline(int,int,java.lang.String) -> timeline
    void showUser(java.lang.String) -> showUser
    void userInfor(java.lang.String) -> userInfor
    void listFriend(int,int,java.lang.String) -> listFriend
    void getFriendList(int,int,java.lang.String) -> getFriendList
    void customerProtocol(java.lang.String,java.lang.String,short,java.util.HashMap,java.util.HashMap) -> customerProtocol
    void doCustomerProtocol(java.lang.String,java.lang.String,int,java.util.HashMap,java.util.HashMap) -> doCustomerProtocol
    void afterRegister(int,java.lang.Object) -> afterRegister
    cn.sharesdk.framework.PlatformDb getDb() -> getDb
    void removeAccount() -> removeAccount
    java.lang.String getShortLintk(java.lang.String,boolean) -> getShortLintk
    cn.sharesdk.framework.statistics.b.f$a filterShareContent(cn.sharesdk.framework.Platform$ShareParams,java.util.HashMap) -> filterShareContent
    java.lang.String uploadImageToFileServer(java.lang.String) -> uploadImageToFileServer
    java.lang.String uploadImageToFileServer(android.graphics.Bitmap) -> uploadImageToFileServer
cn.sharesdk.framework.Platform$ShareParams -> cn.sharesdk.framework.Platform$ShareParams:
    java.lang.String text -> text
    java.lang.String imagePath -> imagePath
cn.sharesdk.framework.PlatformActionListener -> cn.sharesdk.framework.PlatformActionListener:
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
cn.sharesdk.framework.PlatformDb -> cn.sharesdk.framework.PlatformDb:
    java.lang.String DB_NAME -> DB_NAME
    android.content.SharedPreferences db -> db
    java.lang.String platformNname -> platformNname
    int platformVersion -> platformVersion
    void put(java.lang.String,java.lang.String) -> put
    java.lang.String get(java.lang.String) -> get
    java.lang.String getToken() -> getToken
    void putToken(java.lang.String) -> putToken
    java.lang.String getTokenSecret() -> getTokenSecret
    void putTokenSecret(java.lang.String) -> putTokenSecret
    long getExpiresIn() -> getExpiresIn
    void putExpiresIn(long) -> putExpiresIn
    long getExpiresTime() -> getExpiresTime
    int getPlatformVersion() -> getPlatformVersion
    java.lang.String getPlatformNname() -> getPlatformNname
    void putUserId(java.lang.String) -> putUserId
    java.lang.String getUserId() -> getUserId
    java.lang.String getUserName() -> getUserName
    java.lang.String getUserIcon() -> getUserIcon
    void removeAccount() -> removeAccount
    java.lang.String exportData() -> exportData
    void importData(java.lang.String) -> importData
    boolean isValid() -> isValid
    java.lang.String getUserGender() -> getUserGender
cn.sharesdk.framework.Service -> cn.sharesdk.framework.Service:
    android.content.Context a -> a
    java.lang.String b -> b
    void a(android.content.Context) -> a
    android.content.Context getContext() -> getContext
    void a(java.lang.String) -> a
    java.lang.String getAppKey() -> getAppKey
    java.lang.String getDeviceKey() -> getDeviceKey
    int getServiceVersionInt() -> getServiceVersionInt
    java.lang.String getServiceVersionName() -> getServiceVersionName
    void onBind() -> onBind
    void onUnbind() -> onUnbind
    android.content.Context a(cn.sharesdk.framework.Service) -> a
cn.sharesdk.framework.Service$ServiceEvent -> cn.sharesdk.framework.Service$ServiceEvent:
    int PLATFORM -> PLATFORM
    cn.sharesdk.framework.Service service -> service
    java.util.HashMap toMap() -> toMap
    java.lang.String toString() -> toString
    java.util.HashMap filterShareContent(int,cn.sharesdk.framework.Platform$ShareParams,java.util.HashMap) -> filterShareContent
cn.sharesdk.framework.ShareSDK -> cn.sharesdk.framework.ShareSDK:
    cn.sharesdk.framework.p a -> a
    boolean b -> b
    void initSDK(android.content.Context) -> initSDK
    void initSDK(android.content.Context,boolean) -> initSDK
    void initSDK(android.content.Context,java.lang.String) -> initSDK
    void initSDK(android.content.Context,java.lang.String,boolean) -> initSDK
    void stopSDK(android.content.Context) -> stopSDK
    void stopSDK() -> stopSDK
    void c() -> c
    void registerService(java.lang.Class) -> registerService
    void unregisterService(java.lang.Class) -> unregisterService
    cn.sharesdk.framework.Service getService(java.lang.Class) -> getService
    void registerPlatform(java.lang.Class) -> registerPlatform
    void unregisterPlatform(java.lang.Class) -> unregisterPlatform
    java.lang.String getSDKVersionName() -> getSDKVersionName
    int getSDKVersionCode() -> getSDKVersionCode
    void setConnTimeout(int) -> setConnTimeout
    void setReadTimeout(int) -> setReadTimeout
    void removeCookieOnAuthorize(boolean) -> removeCookieOnAuthorize
    cn.sharesdk.framework.Platform[] getPlatformList(android.content.Context) -> getPlatformList
    cn.sharesdk.framework.Platform[] getPlatformList() -> getPlatformList
    cn.sharesdk.framework.Platform getPlatform(android.content.Context,java.lang.String) -> getPlatform
    cn.sharesdk.framework.Platform getPlatform(java.lang.String) -> getPlatform
    void logDemoEvent(int,cn.sharesdk.framework.Platform) -> logDemoEvent
    void logApiEvent(java.lang.String,int) -> logApiEvent
    void setPlatformDevInfo(java.lang.String,java.util.HashMap) -> setPlatformDevInfo
    java.lang.String platformIdToName(int) -> platformIdToName
    int platformNameToId(java.lang.String) -> platformNameToId
    boolean isRemoveCookieOnAuthorize() -> isRemoveCookieOnAuthorize
    void closeDebug() -> closeDebug
    boolean isDebug() -> isDebug
    void a(java.lang.String,java.lang.String) -> a
    void a(int,int) -> a
    java.lang.String b(java.lang.String,java.lang.String) -> b
    java.lang.String a(int,java.lang.String) -> a
    boolean a() -> a
    boolean b() -> b
    boolean a(java.util.HashMap) -> a
    boolean b(java.util.HashMap) -> b
    java.lang.String a(java.lang.String,boolean,int,java.lang.String) -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(android.graphics.Bitmap) -> a
cn.sharesdk.framework.ShareSDKUIShell -> cn.sharesdk.framework.ShareSDKUIShell:
    java.util.HashMap a -> a
    cn.sharesdk.framework.FakeActivity b -> b
    java.lang.String a(cn.sharesdk.framework.FakeActivity) -> a
    java.lang.String a(java.lang.String,cn.sharesdk.framework.FakeActivity) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onStart() -> onStart
    void onResume() -> onResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onRestart() -> onRestart
    void onDestroy() -> onDestroy
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void finish() -> finish
cn.sharesdk.framework.TitleLayout -> cn.sharesdk.framework.TitleLayout:
    android.widget.ImageView btnBack -> btnBack
    android.widget.TextView tvTitle -> tvTitle
    android.widget.TextView btnRight -> btnRight
    void init(android.content.Context) -> init
    android.widget.ImageView getBtnBack() -> getBtnBack
    android.widget.TextView getTvTitle() -> getTvTitle
    android.widget.TextView getBtnRight() -> getBtnRight
cn.sharesdk.framework.a -> cn.sharesdk.framework.a:
    cn.sharesdk.framework.FakeActivity a -> a
    boolean handleMessage(android.os.Message) -> handleMessage
cn.sharesdk.framework.authorize.AuthorizeAdapter -> cn.sharesdk.framework.authorize.AuthorizeAdapter:
    android.app.Activity activity -> activity
    cn.sharesdk.framework.TitleLayout title -> title
    android.webkit.WebView webview -> webview
    boolean noTitle -> noTitle
    java.lang.String platform -> platform
    android.widget.RelativeLayout rlBody -> rlBody
    boolean popUpAnimationDisable -> popUpAnimationDisable
    void setActivity(android.app.Activity) -> setActivity
    android.app.Activity getActivity() -> getActivity
    void setTitleView(cn.sharesdk.framework.TitleLayout) -> setTitleView
    cn.sharesdk.framework.TitleLayout getTitleLayout() -> getTitleLayout
    void setWebView(android.webkit.WebView) -> setWebView
    android.webkit.WebView getWebBody() -> getWebBody
    void setNotitle(boolean) -> setNotitle
    boolean isNotitle() -> isNotitle
    void setPlatformName(java.lang.String) -> setPlatformName
    java.lang.String getPlatformName() -> getPlatformName
    void setBodyView(android.widget.RelativeLayout) -> setBodyView
    android.widget.RelativeLayout getBodyView() -> getBodyView
    void onCreate() -> onCreate
    void onResize(int,int,int,int) -> onResize
    void onDestroy() -> onDestroy
    boolean onKeyEvent(int,android.view.KeyEvent) -> onKeyEvent
    void disablePopUpAnimation() -> disablePopUpAnimation
    boolean isPopUpAnimationDisable() -> isPopUpAnimationDisable
    void onStart() -> onStart
    void onPause() -> onPause
    void onResume() -> onResume
    void onStop() -> onStop
    void onRestart() -> onRestart
    boolean onFinish() -> onFinish
    void hideShareSDKLogo() -> hideShareSDKLogo
cn.sharesdk.framework.authorize.AuthorizeHelper -> cn.sharesdk.framework.authorize.AuthorizeHelper:
    cn.sharesdk.framework.Platform getPlatform() -> getPlatform
    cn.sharesdk.framework.authorize.b getAuthorizeWebviewClient(cn.sharesdk.framework.authorize.g) -> getAuthorizeWebviewClient
    cn.sharesdk.framework.authorize.AuthorizeListener getAuthorizeListener() -> getAuthorizeListener
    java.lang.String getAuthorizeUrl() -> getAuthorizeUrl
    java.lang.String getRedirectUri() -> getRedirectUri
    cn.sharesdk.framework.authorize.f getSSOProcessor(cn.sharesdk.framework.authorize.e) -> getSSOProcessor
    cn.sharesdk.framework.authorize.SSOListener getSSOListener() -> getSSOListener
cn.sharesdk.framework.authorize.AuthorizeListener -> cn.sharesdk.framework.authorize.AuthorizeListener:
    void onComplete(android.os.Bundle) -> onComplete
    void onError(java.lang.Throwable) -> onError
    void onCancel() -> onCancel
cn.sharesdk.framework.authorize.RegisterView -> cn.sharesdk.framework.authorize.RegisterView:
    cn.sharesdk.framework.TitleLayout a -> a
    android.widget.RelativeLayout b -> b
    android.webkit.WebView c -> c
    void a(android.content.Context) -> a
    int b(android.content.Context) -> b
    android.view.View a() -> a
    void a(boolean) -> a
    android.webkit.WebView b() -> b
    cn.sharesdk.framework.TitleLayout c() -> c
    android.widget.RelativeLayout d() -> d
cn.sharesdk.framework.authorize.ResizeLayout -> cn.sharesdk.framework.authorize.ResizeLayout:
    cn.sharesdk.framework.authorize.ResizeLayout$OnResizeListener a -> a
    void a(cn.sharesdk.framework.authorize.ResizeLayout$OnResizeListener) -> a
    void onSizeChanged(int,int,int,int) -> onSizeChanged
cn.sharesdk.framework.authorize.ResizeLayout$OnResizeListener -> cn.sharesdk.framework.authorize.ResizeLayout$OnResizeListener:
    void OnResize(int,int,int,int) -> OnResize
cn.sharesdk.framework.authorize.SSOListener -> cn.sharesdk.framework.authorize.SSOListener:
    void onFailed(java.lang.Throwable) -> onFailed
    void onCancel() -> onCancel
    void onComplete(android.os.Bundle) -> onComplete
cn.sharesdk.framework.authorize.a -> cn.sharesdk.framework.authorize.a:
    cn.sharesdk.framework.authorize.AuthorizeHelper a -> a
    void a(cn.sharesdk.framework.authorize.AuthorizeHelper) -> a
    void show(android.content.Context,android.content.Intent) -> show
    cn.sharesdk.framework.authorize.AuthorizeHelper a() -> a
cn.sharesdk.framework.authorize.b -> cn.sharesdk.framework.authorize.b:
    cn.sharesdk.framework.authorize.g a -> a
    java.lang.String b -> b
    cn.sharesdk.framework.authorize.AuthorizeListener c -> c
    java.lang.String a() -> a
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError) -> onReceivedSslError
cn.sharesdk.framework.authorize.c -> cn.sharesdk.framework.authorize.c:
    cn.sharesdk.framework.authorize.RegisterView a -> a
    void onClick(android.view.View) -> onClick
cn.sharesdk.framework.authorize.d -> cn.sharesdk.framework.authorize.d:
    android.widget.TextView a -> a
    int b -> b
    cn.sharesdk.framework.authorize.RegisterView c -> c
    void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
cn.sharesdk.framework.authorize.e -> cn.sharesdk.framework.authorize.e:
    cn.sharesdk.framework.authorize.f c -> c
    cn.sharesdk.framework.authorize.SSOListener b -> b
    void a(cn.sharesdk.framework.authorize.SSOListener) -> a
    void onCreate() -> onCreate
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onNewIntent(android.content.Intent) -> onNewIntent
cn.sharesdk.framework.authorize.f -> cn.sharesdk.framework.authorize.f:
    cn.sharesdk.framework.authorize.e a -> a
    int b -> b
    cn.sharesdk.framework.authorize.SSOListener c -> c
    void a() -> a
    void a(int) -> a
    void a(int,int,android.content.Intent) -> a
    void a(android.content.Intent) -> a
cn.sharesdk.framework.authorize.g -> cn.sharesdk.framework.authorize.g:
    cn.sharesdk.framework.authorize.AuthorizeAdapter c -> c
    cn.sharesdk.framework.authorize.RegisterView d -> d
    android.webkit.WebView e -> e
    cn.sharesdk.framework.authorize.AuthorizeListener b -> b
    void a(cn.sharesdk.framework.authorize.AuthorizeListener) -> a
    void setActivity(android.app.Activity) -> setActivity
    cn.sharesdk.framework.authorize.AuthorizeAdapter c() -> c
    void onCreate() -> onCreate
    cn.sharesdk.framework.authorize.RegisterView b() -> b
    boolean handleMessage(android.os.Message) -> handleMessage
    void OnResize(int,int,int,int) -> OnResize
    boolean onKeyEvent(int,android.view.KeyEvent) -> onKeyEvent
    void onStart() -> onStart
    void onPause() -> onPause
    void onResume() -> onResume
    void onStop() -> onStop
    void onRestart() -> onRestart
    boolean onFinish() -> onFinish
    void onDestroy() -> onDestroy
    android.app.Activity a(cn.sharesdk.framework.authorize.g) -> a
    android.app.Activity b(cn.sharesdk.framework.authorize.g) -> b
cn.sharesdk.framework.authorize.g$a -> cn.sharesdk.framework.authorize.g$a:
    float[] a -> a
    float getInterpolation(float) -> getInterpolation
cn.sharesdk.framework.authorize.h -> cn.sharesdk.framework.authorize.h:
    cn.sharesdk.framework.authorize.g a -> a
    void onClick(android.view.View) -> onClick
cn.sharesdk.framework.authorize.i -> cn.sharesdk.framework.authorize.i:
    cn.sharesdk.framework.authorize.h a -> a
    void run() -> run
cn.sharesdk.framework.authorize.j -> cn.sharesdk.framework.authorize.j:
    cn.sharesdk.framework.authorize.g a -> a
    void run() -> run
cn.sharesdk.framework.b -> cn.sharesdk.framework.b:
    java.lang.Runnable a -> a
    cn.sharesdk.framework.FakeActivity b -> b
    boolean handleMessage(android.os.Message) -> handleMessage
cn.sharesdk.framework.c -> cn.sharesdk.framework.c:
    java.lang.Runnable a -> a
    cn.sharesdk.framework.FakeActivity b -> b
    boolean handleMessage(android.os.Message) -> handleMessage
cn.sharesdk.framework.d -> cn.sharesdk.framework.d:
    cn.sharesdk.framework.PlatformActionListener a -> a
    void a(cn.sharesdk.framework.PlatformActionListener) -> a
    cn.sharesdk.framework.PlatformActionListener a() -> a
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
    void a(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> a
    void b(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> b
    void a(cn.sharesdk.framework.Platform,int,java.lang.Object) -> a
    java.lang.String a(cn.sharesdk.framework.Platform) -> a
    java.lang.String b(cn.sharesdk.framework.Platform) -> b
    java.lang.String a(cn.sharesdk.framework.PlatformDb,java.lang.String[]) -> a
    cn.sharesdk.framework.PlatformActionListener a(cn.sharesdk.framework.d,cn.sharesdk.framework.PlatformActionListener) -> a
    cn.sharesdk.framework.PlatformActionListener a(cn.sharesdk.framework.d) -> a
    java.lang.String a(cn.sharesdk.framework.d,cn.sharesdk.framework.Platform) -> a
cn.sharesdk.framework.e -> cn.sharesdk.framework.e:
    cn.sharesdk.framework.PlatformActionListener a -> a
    int b -> b
    java.util.HashMap c -> c
    cn.sharesdk.framework.d d -> d
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
cn.sharesdk.framework.f -> cn.sharesdk.framework.f:
    cn.sharesdk.framework.PlatformActionListener a -> a
    int b -> b
    java.lang.Object c -> c
    cn.sharesdk.framework.d d -> d
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
cn.sharesdk.framework.g -> cn.sharesdk.framework.g:
    java.lang.String TEXT -> TEXT
    java.lang.String IMAGE_PATH -> IMAGE_PATH
    java.lang.String FILE_PATH -> FILE_PATH
    java.lang.String TITLE -> TITLE
    java.lang.String NOTEBOOK -> NOTEBOOK
    java.lang.String STACK -> STACK
    java.lang.String TAGS -> TAGS
    java.lang.String IS_PUBLIC -> IS_PUBLIC
    java.lang.String IS_FRIEND -> IS_FRIEND
    java.lang.String IS_FAMILY -> IS_FAMILY
    java.lang.String SAFETY_LEVEL -> SAFETY_LEVEL
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String HIDDEN -> HIDDEN
    java.lang.String VENUE_NAME -> VENUE_NAME
    java.lang.String VENUE_DESCRIPTION -> VENUE_DESCRIPTION
    java.lang.String LATITUDE -> LATITUDE
    java.lang.String LONGITUDE -> LONGITUDE
    java.lang.String IMAGE_URL -> IMAGE_URL
    java.lang.String COMMENT -> COMMENT
    java.lang.String TITLE_URL -> TITLE_URL
    java.lang.String URL -> URL
    java.lang.String ADDRESS -> ADDRESS
    java.lang.String SITE -> SITE
    java.lang.String SITE_URL -> SITE_URL
    java.lang.String GROPU_ID -> GROPU_ID
    java.lang.String EXT_INFO -> EXT_INFO
    java.lang.String SHARE_TYPE -> SHARE_TYPE
    java.lang.String MUSIC_URL -> MUSIC_URL
    java.lang.String IMAGE_DATA -> IMAGE_DATA
    java.lang.String AUTHOR -> AUTHOR
    java.lang.String SCENCE -> SCENCE
    java.lang.String CUSTOM_FLAG -> CUSTOM_FLAG
    java.util.HashMap params -> params
    void set(java.lang.String,java.lang.Object) -> set
    java.lang.Object get(java.lang.String,java.lang.Class) -> get
    java.util.HashMap toMap() -> toMap
    java.lang.String toString() -> toString
    void setText(java.lang.String) -> setText
    java.lang.String getText() -> getText
    void setImagePath(java.lang.String) -> setImagePath
    java.lang.String getImagePath() -> getImagePath
    void setImageUrl(java.lang.String) -> setImageUrl
    java.lang.String getImageUrl() -> getImageUrl
    void setFilePath(java.lang.String) -> setFilePath
    java.lang.String getFilePath() -> getFilePath
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getNotebook() -> getNotebook
    void setNotebook(java.lang.String) -> setNotebook
    java.lang.String getStack() -> getStack
    void setStack(java.lang.String) -> setStack
    java.lang.String[] getTags() -> getTags
    void setTags(java.lang.String[]) -> setTags
    boolean isPublic() -> isPublic
    void setPublic(boolean) -> setPublic
    boolean isFriend() -> isFriend
    void setFriend(boolean) -> setFriend
    boolean isFamily() -> isFamily
    void setFamily(boolean) -> setFamily
    int getSafetyLevel() -> getSafetyLevel
    void setSafetyLevel(int) -> setSafetyLevel
    int getContentType() -> getContentType
    void setContentType(int) -> setContentType
    int getHidden() -> getHidden
    void setHidden(int) -> setHidden
    void setVenueName(java.lang.String) -> setVenueName
    java.lang.String getVenueName() -> getVenueName
    java.lang.String getVenueDescription() -> getVenueDescription
    void setVenueDescription(java.lang.String) -> setVenueDescription
    float getLatitude() -> getLatitude
    void setLatitude(float) -> setLatitude
    float getLongitude() -> getLongitude
    void setLongitude(float) -> setLongitude
    java.lang.String getTitleUrl() -> getTitleUrl
    void setTitleUrl(java.lang.String) -> setTitleUrl
    java.lang.String getComment() -> getComment
    void setComment(java.lang.String) -> setComment
    java.lang.String getUrl() -> getUrl
    void setUrl(java.lang.String) -> setUrl
    java.lang.String getAddress() -> getAddress
    void setAddress(java.lang.String) -> setAddress
    java.lang.String getMusicUrl() -> getMusicUrl
    void setMusicUrl(java.lang.String) -> setMusicUrl
    java.lang.String getSite() -> getSite
    void setSite(java.lang.String) -> setSite
    java.lang.String getSiteUrl() -> getSiteUrl
    void setSiteUrl(java.lang.String) -> setSiteUrl
    java.lang.String getGroupId() -> getGroupId
    void setGroupId(java.lang.String) -> setGroupId
    java.lang.String getAuthor() -> getAuthor
    void setAuthor(java.lang.String) -> setAuthor
    android.graphics.Bitmap getImageData() -> getImageData
    void setImageData(android.graphics.Bitmap) -> setImageData
    int getShareType() -> getShareType
    void setShareType(int) -> setShareType
    int getScence() -> getScence
    void setScence(int) -> setScence
    java.lang.String getExtInfo() -> getExtInfo
    void setExtInfo(java.lang.String) -> setExtInfo
    java.lang.String[] getCustomFlag() -> getCustomFlag
    void setCustomFlag(java.lang.String[]) -> setCustomFlag
cn.sharesdk.framework.h -> cn.sharesdk.framework.h:
    cn.sharesdk.framework.Platform a -> a
    cn.sharesdk.framework.authorize.AuthorizeListener b -> b
    cn.sharesdk.framework.authorize.SSOListener c -> c
    cn.sharesdk.framework.Platform getPlatform() -> getPlatform
    cn.sharesdk.framework.authorize.f getSSOProcessor(cn.sharesdk.framework.authorize.e) -> getSSOProcessor
    int c() -> c
    void b(cn.sharesdk.framework.authorize.AuthorizeListener) -> b
    cn.sharesdk.framework.authorize.AuthorizeListener getAuthorizeListener() -> getAuthorizeListener
    void a(cn.sharesdk.framework.authorize.SSOListener) -> a
    cn.sharesdk.framework.authorize.SSOListener getSSOListener() -> getSSOListener
cn.sharesdk.framework.i -> cn.sharesdk.framework.i:
    cn.sharesdk.framework.Platform a -> a
    android.content.Context b -> b
    cn.sharesdk.framework.PlatformDb c -> c
    cn.sharesdk.framework.d d -> d
    int e -> e
    int f -> f
    boolean g -> g
    boolean h -> h
    boolean i -> i
    void a(java.lang.String) -> a
    int a() -> a
    int b() -> b
    void a(cn.sharesdk.framework.PlatformActionListener) -> a
    cn.sharesdk.framework.PlatformActionListener c() -> c
    boolean d() -> d
    void a(boolean) -> a
    boolean e() -> e
    boolean f() -> f
    void a(java.lang.String[]) -> a
    boolean j() -> j
    java.lang.String a(int,java.lang.String,java.lang.String) -> a
    void a(int,java.lang.Object) -> a
    void b(int,java.lang.Object) -> b
    void c(int,java.lang.Object) -> c
    void a(cn.sharesdk.framework.Platform$ShareParams) -> a
    void b(java.lang.String) -> b
    void a(java.lang.String,int,int) -> a
    void c(java.lang.String) -> c
    void a(int,int,java.lang.String) -> a
    void a(java.lang.String,java.lang.String,short,java.util.HashMap,java.util.HashMap) -> a
    cn.sharesdk.framework.PlatformDb g() -> g
    void h() -> h
    java.lang.String a(java.lang.String,boolean) -> a
    java.lang.String k() -> k
    cn.sharesdk.framework.PlatformActionListener i() -> i
    java.lang.String d(java.lang.String) -> d
    java.lang.String a(android.graphics.Bitmap) -> a
    boolean a(cn.sharesdk.framework.i) -> a
    cn.sharesdk.framework.Platform b(cn.sharesdk.framework.i) -> b
cn.sharesdk.framework.j -> cn.sharesdk.framework.j:
    java.lang.String[] a -> a
    cn.sharesdk.framework.i b -> b
    void run() -> run
cn.sharesdk.framework.k -> cn.sharesdk.framework.k:
    int a -> a
    java.lang.Object b -> b
    cn.sharesdk.framework.i c -> c
    void run() -> run
cn.sharesdk.framework.l -> cn.sharesdk.framework.l:
    android.os.Handler a -> a
    void a() -> a
    void a(int,int,java.lang.Object) -> a
    void b() -> b
    void b(int,int,java.lang.Object) -> b
    boolean handleMessage(android.os.Message) -> handleMessage
    void a(android.os.Message) -> a
    void b(android.os.Message) -> b
    void c(android.os.Message) -> c
cn.sharesdk.framework.m -> cn.sharesdk.framework.m:
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onLoadResource(android.webkit.WebView,java.lang.String) -> onLoadResource
    void onTooManyRedirects(android.webkit.WebView,android.os.Message,android.os.Message) -> onTooManyRedirects
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void onFormResubmission(android.webkit.WebView,android.os.Message,android.os.Message) -> onFormResubmission
    void doUpdateVisitedHistory(android.webkit.WebView,java.lang.String,boolean) -> doUpdateVisitedHistory
    void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError) -> onReceivedSslError
    void onReceivedHttpAuthRequest(android.webkit.WebView,android.webkit.HttpAuthHandler,java.lang.String,java.lang.String) -> onReceivedHttpAuthRequest
    boolean shouldOverrideKeyEvent(android.webkit.WebView,android.view.KeyEvent) -> shouldOverrideKeyEvent
    void onUnhandledKeyEvent(android.webkit.WebView,android.view.KeyEvent) -> onUnhandledKeyEvent
    void onScaleChanged(android.webkit.WebView,float,float) -> onScaleChanged
cn.sharesdk.framework.n -> cn.sharesdk.framework.n:
    boolean a -> a
    java.util.ArrayList a(android.content.Context) -> a
    android.content.pm.PackageInfo c(android.content.Context) -> c
    java.util.ArrayList a(android.content.pm.PackageInfo,android.content.Context) -> a
    java.util.ArrayList d(android.content.Context) -> d
    void a(java.util.ArrayList) -> a
    void a(android.content.Context,java.lang.String,android.os.Handler,boolean,int) -> a
    void b(android.content.Context) -> b
    void a(int,cn.sharesdk.framework.Platform) -> a
    void a(java.lang.String,int) -> a
    java.lang.String a(int,java.lang.String,java.util.HashMap) -> a
    boolean a(java.util.HashMap,java.util.HashMap) -> a
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String,boolean,int,java.lang.String) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.lang.String a(android.content.Context,android.graphics.Bitmap) -> a
    java.lang.String a() -> a
    int b() -> b
    void a(int,int,java.util.HashMap) -> a
cn.sharesdk.framework.network.RawNetworkCallback -> cn.sharesdk.framework.network.RawNetworkCallback:
    void onResponse(java.io.InputStream) -> onResponse
cn.sharesdk.framework.network.a -> cn.sharesdk.framework.network.a:
    byte[] a() -> a
cn.sharesdk.framework.network.b -> cn.sharesdk.framework.network.b:
    cn.sharesdk.framework.network.a a -> a
    cn.sharesdk.framework.network.b a(byte[]) -> a
    java.io.InputStream a() -> a
    java.lang.String toString() -> toString
    long b() -> b
cn.sharesdk.framework.network.c -> cn.sharesdk.framework.network.c:
    java.io.File a -> a
    void a(java.io.File) -> a
    void a(java.lang.String) -> a
    java.io.InputStream a() -> a
    java.lang.String toString() -> toString
    long b() -> b
cn.sharesdk.framework.network.d -> cn.sharesdk.framework.network.d:
    java.io.InputStream a() -> a
    long b() -> b
    org.apache.http.entity.InputStreamEntity c() -> c
cn.sharesdk.framework.network.e -> cn.sharesdk.framework.network.e:
    java.lang.String a -> a
    java.lang.Object b -> b
    java.lang.String toString() -> toString
cn.sharesdk.framework.network.f -> cn.sharesdk.framework.network.f:
    java.util.ArrayList a -> a
    cn.sharesdk.framework.network.f a(cn.sharesdk.framework.network.d) -> a
    java.io.InputStream a() -> a
    java.lang.String toString() -> toString
    long b() -> b
cn.sharesdk.framework.network.g -> cn.sharesdk.framework.network.g:
    java.util.ArrayList a -> a
    int b -> b
    void a(java.io.InputStream) -> a
    boolean a() -> a
    int available() -> available
    void close() -> close
    long skip(long) -> skip
    int read() -> read
    int read(byte[],int,int) -> read
cn.sharesdk.framework.network.h -> cn.sharesdk.framework.network.h:
    int a -> a
    int b -> b
    java.lang.String a(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList) -> a
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String,boolean) -> a
    java.lang.String a(java.lang.String,java.util.ArrayList,cn.sharesdk.framework.network.e,java.util.ArrayList,java.util.ArrayList) -> a
    org.apache.http.client.methods.HttpPost a(java.lang.String,java.util.ArrayList,cn.sharesdk.framework.network.e) -> a
    org.apache.http.client.methods.HttpPost a(java.lang.String,java.util.ArrayList) -> a
    void a(java.lang.String,java.util.ArrayList,cn.sharesdk.framework.network.d,cn.sharesdk.framework.network.RawNetworkCallback) -> a
    java.lang.String b(java.lang.String,java.util.ArrayList,cn.sharesdk.framework.network.e,java.util.ArrayList,java.util.ArrayList) -> b
    java.lang.String a(java.util.ArrayList) -> a
    org.apache.http.client.HttpClient a() -> a
cn.sharesdk.framework.network.i -> cn.sharesdk.framework.network.i:
    cn.sharesdk.framework.network.i c -> c
    cn.sharesdk.framework.network.i a() -> a
    java.lang.String a(java.lang.String,java.util.ArrayList,java.lang.String,int) -> a
    java.lang.String a(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.lang.String,int) -> a
    java.lang.String b(java.lang.String,java.util.ArrayList,java.lang.String,int) -> b
    java.lang.String a(java.lang.String,java.util.ArrayList,cn.sharesdk.framework.network.e,java.lang.String,int) -> a
    java.lang.String a(java.lang.String,java.util.ArrayList,cn.sharesdk.framework.network.e,java.util.ArrayList,java.lang.String,int) -> a
    java.lang.String a(java.lang.String,java.util.ArrayList,cn.sharesdk.framework.network.e,java.util.ArrayList,java.util.ArrayList,java.lang.String,int) -> a
    java.lang.String b(java.lang.String,java.util.ArrayList,cn.sharesdk.framework.network.e,java.util.ArrayList,java.util.ArrayList,java.lang.String,int) -> b
    void a(java.lang.String,java.util.ArrayList,cn.sharesdk.framework.network.d,cn.sharesdk.framework.network.RawNetworkCallback,java.lang.String,int) -> a
    void a(java.lang.String,int) -> a
cn.sharesdk.framework.network.j -> cn.sharesdk.framework.network.j:
    javax.net.ssl.SSLContext a -> a
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    java.net.Socket createSocket() -> createSocket
cn.sharesdk.framework.network.k -> cn.sharesdk.framework.network.k:
    cn.sharesdk.framework.network.j a -> a
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
cn.sharesdk.framework.network.l -> cn.sharesdk.framework.network.l:
    java.lang.StringBuilder a -> a
    cn.sharesdk.framework.network.l a(java.lang.String) -> a
    java.io.InputStream a() -> a
    java.lang.String toString() -> toString
    long b() -> b
cn.sharesdk.framework.o -> cn.sharesdk.framework.o:
    cn.sharesdk.framework.n a -> a
    int a(cn.sharesdk.framework.Platform,cn.sharesdk.framework.Platform) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
cn.sharesdk.framework.p -> cn.sharesdk.framework.p:
    cn.sharesdk.framework.p$a b -> b
    android.content.Context c -> c
    java.util.HashMap d -> d
    java.util.ArrayList e -> e
    java.util.HashMap f -> f
    java.util.HashMap g -> g
    java.util.HashMap h -> h
    java.lang.String i -> i
    boolean j -> j
    java.lang.String k -> k
    boolean l -> l
    boolean m -> m
    void a(java.lang.String) -> a
    void a(boolean) -> a
    void a() -> a
    void i() -> i
    void j() -> j
    void a(android.os.Message) -> a
    void k() -> k
    void l() -> l
    void b(android.os.Message) -> b
    void c(android.os.Message) -> c
    void a(java.lang.Class) -> a
    void b(java.lang.Class) -> b
    cn.sharesdk.framework.Service c(java.lang.Class) -> c
    void d(java.lang.Class) -> d
    void e(java.lang.Class) -> e
    cn.sharesdk.framework.Platform b(java.lang.String) -> b
    cn.sharesdk.framework.Platform[] c() -> c
    java.lang.String d() -> d
    int e() -> e
    void a(int) -> a
    void b(int) -> b
    void b(boolean) -> b
    boolean f() -> f
    void a(int,cn.sharesdk.framework.Platform) -> a
    void a(java.lang.String,int) -> a
    void a(java.lang.String,java.util.HashMap) -> a
    java.lang.String c(int) -> c
    int c(java.lang.String) -> c
    void a(java.lang.String,java.lang.String) -> a
    void a(int,int) -> a
    java.lang.String b(java.lang.String,java.lang.String) -> b
    java.lang.String a(int,java.lang.String) -> a
    boolean g() -> g
    boolean h() -> h
    boolean a(java.util.HashMap) -> a
    boolean a(cn.sharesdk.framework.statistics.a,java.util.HashMap,java.util.HashMap) -> a
    boolean b(java.util.HashMap) -> b
    java.lang.String a(java.lang.String,boolean,int,java.lang.String) -> a
    java.lang.String d(java.lang.String) -> d
    java.lang.String a(android.graphics.Bitmap) -> a
    java.lang.String a(cn.sharesdk.framework.p) -> a
cn.sharesdk.framework.p$a -> cn.sharesdk.framework.p$a:
    cn.sharesdk.framework.p$a a -> a
    cn.sharesdk.framework.p$a b -> b
    cn.sharesdk.framework.p$a c -> c
    cn.sharesdk.framework.p$a[] d -> d
    cn.sharesdk.framework.p$a[] values() -> values
    cn.sharesdk.framework.p$a valueOf(java.lang.String) -> valueOf
cn.sharesdk.framework.q -> cn.sharesdk.framework.q:
    cn.sharesdk.framework.statistics.a a -> a
    cn.sharesdk.framework.p b -> b
    void run() -> run
cn.sharesdk.framework.r -> cn.sharesdk.framework.r:
    android.widget.ImageView a -> a
    cn.sharesdk.framework.TitleLayout b -> b
    void setVisibility(int) -> setVisibility
cn.sharesdk.framework.statistics.NewAppReceiver -> cn.sharesdk.framework.statistics.NewAppReceiver:
    java.lang.String[] a -> a
    cn.sharesdk.framework.statistics.NewAppReceiver b -> b
    android.content.Context c -> c
    android.content.IntentFilter[] d -> d
    android.os.Handler e -> e
    void a(android.content.Context) -> a
    void a() -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    boolean a(java.lang.String) -> a
    boolean handleMessage(android.os.Message) -> handleMessage
cn.sharesdk.framework.statistics.NewAppReceiver$a -> cn.sharesdk.framework.statistics.NewAppReceiver$a:
    cn.sharesdk.framework.utils.f a -> a
    java.util.ArrayList a() -> a
    void a(java.util.ArrayList) -> a
cn.sharesdk.framework.statistics.NewAppReceiver$b -> cn.sharesdk.framework.statistics.NewAppReceiver$b:
    android.content.Context a -> a
    cn.sharesdk.framework.statistics.NewAppReceiver$a b -> b
    void a(android.content.Context) -> a
    void run() -> run
    java.util.HashMap a(java.util.ArrayList) -> a
    java.util.ArrayList a(java.util.HashMap) -> a
cn.sharesdk.framework.statistics.a -> cn.sharesdk.framework.statistics.a:
    android.content.Context a -> a
    cn.sharesdk.framework.statistics.a d -> d
    java.lang.String b -> b
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String c -> c
    boolean h -> h
    int i -> i
    cn.sharesdk.framework.network.h j -> j
    cn.sharesdk.framework.statistics.a a(android.content.Context) -> a
    void a(boolean) -> a
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String f() -> f
    long a() -> a
    long a(java.lang.String) -> a
    void a(java.lang.String,java.util.ArrayList) -> a
    void a(cn.sharesdk.framework.statistics.b.c) -> a
    java.lang.String b(java.lang.String) -> b
    java.lang.String a(android.graphics.Bitmap) -> a
    void b() -> b
    boolean c(java.lang.String,java.lang.String) -> c
    java.lang.String c(java.lang.String) -> c
    java.lang.String a(java.lang.String,byte[]) -> a
    java.lang.String g() -> g
    java.lang.String h() -> h
    java.lang.String a(java.lang.String,java.lang.String,int,boolean,java.lang.String) -> a
    java.lang.String a(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String) -> a
    java.lang.String d(java.lang.String,java.lang.String) -> d
    java.util.HashMap d(java.lang.String) -> d
    void a(java.lang.String,java.lang.String) -> a
    java.lang.String e(java.lang.String) -> e
    java.lang.String b(java.lang.String,java.lang.String) -> b
cn.sharesdk.framework.statistics.a.a -> cn.sharesdk.framework.statistics.a.a:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void onOpen(android.database.sqlite.SQLiteDatabase) -> onOpen
    void close() -> close
cn.sharesdk.framework.statistics.a.b -> cn.sharesdk.framework.statistics.a.b:
    android.content.Context a -> a
    cn.sharesdk.framework.statistics.a.a b -> b
    cn.sharesdk.framework.statistics.a.b c -> c
    cn.sharesdk.framework.statistics.a.b a(android.content.Context) -> a
    android.database.Cursor a(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> a
    long a(java.lang.String,android.content.ContentValues) -> a
    int a(java.lang.String,java.lang.String,java.lang.String[]) -> a
    int a(java.lang.String) -> a
cn.sharesdk.framework.statistics.a.c -> cn.sharesdk.framework.statistics.a.c:
    android.content.Context a -> a
    android.content.SharedPreferences b -> b
    cn.sharesdk.framework.statistics.a.c c -> c
    cn.sharesdk.framework.statistics.a.c a(android.content.Context) -> a
    void a(java.lang.String,java.lang.String) -> a
    java.lang.String a(java.lang.String) -> a
    void a(java.lang.String,java.lang.Long) -> a
    long b(java.lang.String) -> b
    void a(java.lang.String,int) -> a
    int c(java.lang.String) -> c
    long a() -> a
    boolean b() -> b
    boolean c() -> c
    int d() -> d
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    void b(java.lang.String,java.lang.String) -> b
    java.lang.String g(java.lang.String) -> g
cn.sharesdk.framework.statistics.a.d -> cn.sharesdk.framework.statistics.a.d:
    java.lang.String a -> a
    java.util.ArrayList b -> b
cn.sharesdk.framework.statistics.a.e -> cn.sharesdk.framework.statistics.a.e:
    int a -> a
    int b -> b
    int c -> c
    long a(android.content.Context,java.lang.String,long) -> a
    long a(android.content.Context,java.util.ArrayList) -> a
    java.util.ArrayList a(android.content.Context,java.lang.String,java.lang.String[]) -> a
    java.util.ArrayList a(android.content.Context) -> a
cn.sharesdk.framework.statistics.b -> cn.sharesdk.framework.statistics.b:
    cn.sharesdk.framework.statistics.b b -> b
    android.content.Context c -> c
    cn.sharesdk.framework.utils.b d -> d
    cn.sharesdk.framework.statistics.a e -> e
    java.lang.String f -> f
    android.os.Handler g -> g
    boolean h -> h
    int i -> i
    boolean j -> j
    long k -> k
    boolean l -> l
    cn.sharesdk.framework.statistics.b a(android.content.Context) -> a
    void a(java.lang.String) -> a
    void a(android.os.Handler) -> a
    void a(boolean) -> a
    void a(int) -> a
    void a(android.os.Message) -> a
    void b(android.os.Message) -> b
    void a(cn.sharesdk.framework.statistics.b.c) -> a
    void b(cn.sharesdk.framework.statistics.b.c) -> b
    void c(android.os.Message) -> c
    void c(cn.sharesdk.framework.statistics.b.c) -> c
    void c() -> c
    boolean d() -> d
    void e() -> e
cn.sharesdk.framework.statistics.b.a -> cn.sharesdk.framework.statistics.b.a:
    int c -> c
    long d -> d
    int a -> a
    java.lang.String b -> b
    java.lang.String a() -> a
    java.lang.String toString() -> toString
    int b() -> b
    int c() -> c
    long d() -> d
    long e() -> e
    void f() -> f
    void a(long) -> a
cn.sharesdk.framework.statistics.b.b -> cn.sharesdk.framework.statistics.b.b:
    int n -> n
    long o -> o
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String a() -> a
    java.lang.String toString() -> toString
    int b() -> b
    int c() -> c
    long d() -> d
    long e() -> e
    void f() -> f
    void a(long) -> a
cn.sharesdk.framework.statistics.b.c -> cn.sharesdk.framework.statistics.b.c:
    long e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    int i -> i
    java.lang.String j -> j
    int k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String a() -> a
    int b() -> b
    int c() -> c
    long e() -> e
    long d() -> d
    void a(long) -> a
    void f() -> f
    boolean a(android.content.Context) -> a
    void b(android.content.Context) -> b
    java.lang.String toString() -> toString
cn.sharesdk.framework.statistics.b.d -> cn.sharesdk.framework.statistics.b.d:
    int d -> d
    long n -> n
    java.lang.String a -> a
    int b -> b
    java.lang.String c -> c
    java.lang.String a() -> a
    java.lang.String toString() -> toString
    int b() -> b
    int c() -> c
    long d() -> d
    long e() -> e
    void f() -> f
    void a(long) -> a
cn.sharesdk.framework.statistics.b.e -> cn.sharesdk.framework.statistics.b.e:
    int b -> b
    long c -> c
    long a -> a
    java.lang.String a() -> a
    int b() -> b
    int c() -> c
    boolean a(android.content.Context) -> a
    void b(android.content.Context) -> b
    long d() -> d
    long e() -> e
    void f() -> f
    void a(long) -> a
    java.lang.String toString() -> toString
cn.sharesdk.framework.statistics.b.f -> cn.sharesdk.framework.statistics.b.f:
    int p -> p
    long q -> q
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    cn.sharesdk.framework.statistics.b.f$a d -> d
    java.lang.String n -> n
    java.lang.String[] o -> o
    java.lang.String a() -> a
    java.lang.String toString() -> toString
    int b() -> b
    int c() -> c
    long d() -> d
    long e() -> e
    void f() -> f
    void a(long) -> a
cn.sharesdk.framework.statistics.b.f$a -> cn.sharesdk.framework.statistics.b.f$a:
    java.lang.String a -> a
    java.lang.String b -> b
    java.util.ArrayList c -> c
    java.util.ArrayList d -> d
    java.util.ArrayList e -> e
    java.util.ArrayList f -> f
    java.util.HashMap g -> g
    java.lang.String toString() -> toString
cn.sharesdk.framework.statistics.b.g -> cn.sharesdk.framework.statistics.b.g:
    int a -> a
    long b -> b
    java.lang.String a() -> a
    int b() -> b
    int c() -> c
    boolean a(android.content.Context) -> a
    void b(android.content.Context) -> b
    long d() -> d
    long e() -> e
    void f() -> f
    void a(long) -> a
    java.lang.String toString() -> toString
cn.sharesdk.framework.utils.BitmapHelper -> cn.sharesdk.framework.utils.BitmapHelper:
    android.graphics.Bitmap getBitmap(java.lang.String,int) -> getBitmap
    android.graphics.Bitmap getBitmap(java.io.File,int) -> getBitmap
    android.graphics.Bitmap a(java.io.InputStream,int) -> a
    android.graphics.Bitmap getBitmap(java.lang.String) -> getBitmap
    android.graphics.Bitmap getBitmap(android.content.Context,java.lang.String) -> getBitmap
    java.lang.String downloadBitmap(android.content.Context,java.lang.String) -> downloadBitmap
    java.lang.String saveViewToImage(android.view.View) -> saveViewToImage
    java.lang.String saveViewToImage(android.view.View,int,int) -> saveViewToImage
    android.graphics.Bitmap captureView(android.view.View,int,int) -> captureView
    android.graphics.Bitmap blur(android.graphics.Bitmap,int,int) -> blur
    android.graphics.Bitmap a(android.graphics.Bitmap,int,boolean) -> a
cn.sharesdk.framework.utils.Escaper -> cn.sharesdk.framework.utils.Escaper:
    java.lang.String escape(java.lang.String) -> escape
    java.lang.Appendable escape(java.lang.Appendable) -> escape
cn.sharesdk.framework.utils.R -> cn.sharesdk.framework.utils.R:
    java.lang.String a -> a
    float b -> b
    int dipToPx(android.content.Context,int) -> dipToPx
    int pxToDip(android.content.Context,int) -> pxToDip
    int getScreenWidth(android.content.Context) -> getScreenWidth
    int getScreenHeight(android.content.Context) -> getScreenHeight
    int getResId(java.lang.Class,java.lang.String) -> getResId
    int getBitmapRes(android.content.Context,java.lang.String) -> getBitmapRes
    int getStringRes(android.content.Context,java.lang.String) -> getStringRes
    int getStringArrayRes(android.content.Context,java.lang.String) -> getStringArrayRes
    int getLayoutRes(android.content.Context,java.lang.String) -> getLayoutRes
    int getStyleRes(android.content.Context,java.lang.String) -> getStyleRes
    int getIdRes(android.content.Context,java.lang.String) -> getIdRes
    int getColorRes(android.content.Context,java.lang.String) -> getColorRes
    void setCacheRoot(java.lang.String) -> setCacheRoot
    java.lang.String getCachePath(android.content.Context,java.lang.String) -> getCachePath
    java.lang.String toWordText(java.lang.String,int) -> toWordText
    android.net.Uri pathToContentUri(android.content.Context,java.lang.String) -> pathToContentUri
    long strToDate(java.lang.String) -> strToDate
    long dateStrToLong(java.lang.String) -> dateStrToLong
    java.util.Date longToDate(long) -> longToDate
    java.lang.String longToTime(long,int) -> longToTime
    long parseTwitterDate(java.lang.String) -> parseTwitterDate
    java.lang.String encodeUrl(android.os.Bundle) -> encodeUrl
    java.lang.String encodeUrl(java.util.ArrayList) -> encodeUrl
    android.os.Bundle urlToBundle(java.lang.String) -> urlToBundle
    android.os.Bundle decodeUrl(java.lang.String) -> decodeUrl
cn.sharesdk.framework.utils.UIHandler -> cn.sharesdk.framework.utils.UIHandler:
    java.lang.String[] prays -> prays
    android.os.Handler handler -> handler
    void prepare() -> prepare
    void reset() -> reset
    void printPray() -> printPray
    void handleMessage(android.os.Message) -> handleMessage
    android.os.Message getShellMessage(android.os.Message,android.os.Handler$Callback) -> getShellMessage
    android.os.Message getShellMessage(int,android.os.Handler$Callback) -> getShellMessage
    boolean sendMessage(android.os.Message,android.os.Handler$Callback) -> sendMessage
    boolean sendMessageDelayed(android.os.Message,long,android.os.Handler$Callback) -> sendMessageDelayed
    boolean sendMessageAtTime(android.os.Message,long,android.os.Handler$Callback) -> sendMessageAtTime
    boolean sendMessageAtFrontOfQueue(android.os.Message,android.os.Handler$Callback) -> sendMessageAtFrontOfQueue
    boolean sendEmptyMessage(int,android.os.Handler$Callback) -> sendEmptyMessage
    boolean sendEmptyMessageAtTime(int,long,android.os.Handler$Callback) -> sendEmptyMessageAtTime
    boolean sendEmptyMessageDelayed(int,long,android.os.Handler$Callback) -> sendEmptyMessageDelayed
    void access$000(android.os.Message) -> access$000
cn.sharesdk.framework.utils.a -> cn.sharesdk.framework.utils.a:
    cn.sharesdk.framework.utils.d a -> a
    byte[] a(java.lang.String) -> a
    byte[] a(java.lang.String,java.lang.String) -> a
    byte[] a(byte[],java.lang.String) -> a
    byte[] a(byte[],byte[]) -> a
    java.lang.String a(byte[]) -> a
    java.lang.String a(byte[],int,int) -> a
    java.lang.String b(java.lang.String) -> b
    byte[] c(java.lang.String) -> c
    java.lang.String b(java.lang.String,java.lang.String) -> b
    java.lang.String c(java.lang.String,java.lang.String) -> c
    java.lang.String d(java.lang.String) -> d
cn.sharesdk.framework.utils.b -> cn.sharesdk.framework.utils.b:
    android.content.Context a -> a
    cn.sharesdk.framework.utils.b b -> b
    cn.sharesdk.framework.utils.b a(android.content.Context) -> a
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String f() -> f
    java.lang.String g() -> g
    java.lang.String h() -> h
    java.lang.String a(java.lang.String,java.lang.String) -> a
    java.lang.String i() -> i
    java.lang.String j() -> j
    java.lang.String k() -> k
    java.lang.String l() -> l
    java.lang.Object b(java.lang.String) -> b
    java.lang.String m() -> m
    java.lang.String n() -> n
    int o() -> o
    boolean z() -> z
    org.json.JSONArray p() -> p
    java.lang.String q() -> q
    java.lang.String A() -> A
    void c(java.lang.String) -> c
    java.lang.String r() -> r
    java.lang.String s() -> s
    int t() -> t
    java.lang.String u() -> u
    java.util.ArrayList a(boolean) -> a
    boolean a(android.content.pm.PackageInfo) -> a
    java.lang.String v() -> v
    boolean a(java.lang.String) -> a
    java.lang.String w() -> w
    boolean x() -> x
    java.lang.String y() -> y
cn.sharesdk.framework.utils.c -> cn.sharesdk.framework.utils.c:
    char[] a -> a
    java.lang.String a(byte[]) -> a
cn.sharesdk.framework.utils.d -> cn.sharesdk.framework.utils.d:
    java.util.HashMap a(java.lang.String) -> a
    java.util.HashMap a(org.json.JSONObject) -> a
    java.util.ArrayList a(org.json.JSONArray) -> a
    java.lang.String a(java.util.HashMap) -> a
    org.json.JSONObject b(java.util.HashMap) -> b
    boolean a(java.lang.Object) -> a
    java.util.ArrayList b(java.lang.Object) -> b
    org.json.JSONArray a(java.util.ArrayList) -> a
cn.sharesdk.framework.utils.e -> cn.sharesdk.framework.utils.e:
    android.content.Context c -> c
    java.lang.String d -> d
    cn.sharesdk.framework.utils.e$a a -> a
    cn.sharesdk.framework.utils.e$b b -> b
    void a(android.content.Context) -> a
    int a(java.lang.Throwable) -> a
    int a(java.lang.Object,java.lang.Object[]) -> a
    int b(java.lang.Object,java.lang.Object[]) -> b
    int b(java.lang.Throwable) -> b
    int c(java.lang.Throwable) -> c
    int c(java.lang.Object,java.lang.Object[]) -> c
    int a(java.lang.Throwable,java.lang.Object,java.lang.Object[]) -> a
    android.content.Context a() -> a
    java.lang.String b() -> b
cn.sharesdk.framework.utils.e$a -> cn.sharesdk.framework.utils.e$a:
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
cn.sharesdk.framework.utils.e$b -> cn.sharesdk.framework.utils.e$b:
    int a(int,java.lang.String) -> a
    int b(int,java.lang.String) -> b
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(int) -> a
cn.sharesdk.framework.utils.f -> cn.sharesdk.framework.utils.f:
    java.io.File a -> a
    java.util.HashMap b -> b
    void a(java.lang.String) -> a
    void a() -> a
    void b(java.lang.String,java.lang.Object) -> b
    java.lang.Object d(java.lang.String) -> d
    void a(java.lang.String,java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
    void a(java.lang.String,java.lang.Object) -> a
    java.lang.Object c(java.lang.String) -> c
cn.sharesdk.framework.utils.g -> cn.sharesdk.framework.utils.g:
    cn.sharesdk.framework.utils.g$b a -> a
    cn.sharesdk.framework.utils.h b -> b
    void a(java.lang.String,java.lang.String,java.lang.String) -> a
    cn.sharesdk.framework.utils.g$b a() -> a
    java.util.ArrayList a(java.lang.String,java.util.ArrayList) -> a
    java.util.ArrayList a(java.lang.String,java.util.ArrayList,cn.sharesdk.framework.utils.g$a) -> a
    java.util.ArrayList b(java.lang.String,java.util.ArrayList) -> b
    java.util.ArrayList b(java.lang.String,java.util.ArrayList,cn.sharesdk.framework.utils.g$a) -> b
    java.util.ArrayList c(java.lang.String,java.util.ArrayList,cn.sharesdk.framework.utils.g$a) -> c
    void a(java.lang.String,java.lang.String) -> a
    java.util.ArrayList a(java.lang.String,java.lang.String,java.util.ArrayList,cn.sharesdk.framework.utils.g$a) -> a
    java.lang.String a(java.lang.String) -> a
    java.util.ArrayList a(long,java.util.ArrayList,java.lang.String) -> a
    java.lang.String b(java.util.ArrayList) -> b
    java.util.ArrayList a(long,java.lang.String) -> a
    java.util.ArrayList a(java.util.ArrayList) -> a
cn.sharesdk.framework.utils.g$1 -> cn.sharesdk.framework.utils.g$1:
    int[] a -> a
cn.sharesdk.framework.utils.g$a -> cn.sharesdk.framework.utils.g$a:
    cn.sharesdk.framework.utils.g$a a -> a
    cn.sharesdk.framework.utils.g$a b -> b
    cn.sharesdk.framework.utils.g$a[] c -> c
    cn.sharesdk.framework.utils.g$a[] values() -> values
    cn.sharesdk.framework.utils.g$a valueOf(java.lang.String) -> valueOf
cn.sharesdk.framework.utils.g$b -> cn.sharesdk.framework.utils.g$b:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
cn.sharesdk.framework.utils.h -> cn.sharesdk.framework.utils.h:
    char[] a -> a
    char[] b -> b
    boolean c -> c
    boolean[] d -> d
    boolean[] a(java.lang.String) -> a
    int a(java.lang.CharSequence,int,int) -> a
    java.lang.String escape(java.lang.String) -> escape
    char[] a(int) -> a
cn.sharesdk.framework.utils.i -> cn.sharesdk.framework.utils.i:
    java.lang.Object a(java.lang.Object) -> a
cn.sharesdk.framework.utils.j -> cn.sharesdk.framework.utils.j:
    boolean handleMessage(android.os.Message) -> handleMessage
cn.sharesdk.framework.utils.k -> cn.sharesdk.framework.utils.k:
    java.lang.ThreadLocal a -> a
    char[] a(int) -> a
    int a(java.lang.CharSequence,int,int) -> a
    java.lang.String escape(java.lang.String) -> escape
    java.lang.String a(java.lang.String,int) -> a
    java.lang.Appendable escape(java.lang.Appendable) -> escape
    int b(java.lang.CharSequence,int,int) -> b
    char[] a(char[],int,int) -> a
cn.sharesdk.framework.utils.l -> cn.sharesdk.framework.utils.l:
    int a -> a
    char[] b -> b
    java.lang.Appendable c -> c
    cn.sharesdk.framework.utils.k d -> d
    java.lang.Appendable append(java.lang.CharSequence) -> append
    java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    java.lang.Appendable append(char) -> append
    void a(char[],int) -> a
cn.sharesdk.framework.utils.m -> cn.sharesdk.framework.utils.m:
    char[] a() -> a
    java.lang.Object initialValue() -> initialValue
cn.sharesdk.framework.utils.n -> cn.sharesdk.framework.utils.n:
    java.util.HashMap a(java.lang.String) -> a
cn.sharesdk.framework.utils.n$a -> cn.sharesdk.framework.utils.n$a:
    java.util.HashMap a -> a
    java.util.HashMap b -> b
    java.util.HashMap a() -> a
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    void characters(char[],int,int) -> characters
cn.sharesdk.onekeyshare.CustomerLogo -> cn.sharesdk.onekeyshare.CustomerLogo:
    java.lang.String label -> label
    android.graphics.Bitmap logo -> logo
    android.view.View$OnClickListener listener -> listener
cn.sharesdk.onekeyshare.EditPage -> cn.sharesdk.onekeyshare.EditPage:
    int MAX_TEXT_COUNT -> MAX_TEXT_COUNT
    int DIM_COLOR -> DIM_COLOR
    java.util.HashMap reqData -> reqData
    android.widget.RelativeLayout rlPage -> rlPage
    cn.sharesdk.framework.TitleLayout llTitle -> llTitle
    android.widget.LinearLayout llBody -> llBody
    android.widget.RelativeLayout rlThumb -> rlThumb
    android.widget.EditText etContent -> etContent
    android.widget.TextView tvCounter -> tvCounter
    android.widget.ImageView ivPin -> ivPin
    android.widget.ImageView ivImage -> ivImage
    android.graphics.Bitmap image -> image
    boolean shareImage -> shareImage
    android.widget.LinearLayout llPlat -> llPlat
    cn.sharesdk.framework.Platform[] platformList -> platformList
    android.view.View[] views -> views
    boolean dialogMode -> dialogMode
    android.view.View tmpBgView -> tmpBgView
    android.graphics.drawable.Drawable background -> background
    void setShareData(java.util.HashMap) -> setShareData
    void setDialogMode() -> setDialogMode
    void setActivity(android.app.Activity) -> setActivity
    void setBackGround(android.view.View) -> setBackGround
    void onCreate() -> onCreate
    android.widget.RelativeLayout getPageView() -> getPageView
    cn.sharesdk.framework.TitleLayout getPageTitle() -> getPageTitle
    android.widget.LinearLayout getPageBody() -> getPageBody
    android.widget.LinearLayout getMainBody() -> getMainBody
    android.widget.RelativeLayout getThumbView() -> getThumbView
    void showThumb() -> showThumb
    android.widget.LinearLayout getBodyBottom() -> getBodyBottom
    android.widget.LinearLayout getAtLine(java.lang.String) -> getAtLine
    android.view.View getSep() -> getSep
    android.widget.LinearLayout getPlatformList() -> getPlatformList
    android.widget.ImageView getImagePin() -> getImagePin
    void genBackground() -> genBackground
    java.lang.String getName(java.lang.String) -> getName
    void onClick(android.view.View) -> onClick
    void afterPlatformListGot() -> afterPlatformListGot
    android.graphics.Bitmap getPlatLogo(cn.sharesdk.framework.Platform) -> getPlatLogo
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void onResult(java.util.HashMap) -> onResult
    void hideSoftInput() -> hideSoftInput
    boolean onFinish() -> onFinish
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    cn.sharesdk.framework.Platform[] access$002(cn.sharesdk.onekeyshare.EditPage,cn.sharesdk.framework.Platform[]) -> access$002
    cn.sharesdk.framework.Platform[] access$000(cn.sharesdk.onekeyshare.EditPage) -> access$000
    android.graphics.Bitmap access$100(cn.sharesdk.onekeyshare.EditPage) -> access$100
    android.app.Activity access$200(cn.sharesdk.onekeyshare.EditPage) -> access$200
    android.widget.RelativeLayout access$300(cn.sharesdk.onekeyshare.EditPage) -> access$300
    android.widget.ImageView access$400(cn.sharesdk.onekeyshare.EditPage) -> access$400
    boolean access$502(cn.sharesdk.onekeyshare.EditPage,boolean) -> access$502
    java.util.HashMap access$600(cn.sharesdk.onekeyshare.EditPage) -> access$600
    android.graphics.Bitmap access$102(cn.sharesdk.onekeyshare.EditPage,android.graphics.Bitmap) -> access$102
    android.app.Activity access$700(cn.sharesdk.onekeyshare.EditPage) -> access$700
    boolean access$500(cn.sharesdk.onekeyshare.EditPage) -> access$500
    android.widget.ImageView access$800(cn.sharesdk.onekeyshare.EditPage) -> access$800
    android.app.Activity access$900(cn.sharesdk.onekeyshare.EditPage) -> access$900
    android.widget.LinearLayout access$1000(cn.sharesdk.onekeyshare.EditPage) -> access$1000
    void access$1100(cn.sharesdk.onekeyshare.EditPage) -> access$1100
    android.graphics.drawable.Drawable access$1200(cn.sharesdk.onekeyshare.EditPage) -> access$1200
    android.widget.RelativeLayout access$1300(cn.sharesdk.onekeyshare.EditPage) -> access$1300
cn.sharesdk.onekeyshare.EditPage$1 -> cn.sharesdk.onekeyshare.EditPage$1:
    cn.sharesdk.onekeyshare.EditPage this$0 -> this$0
    void run() -> run
cn.sharesdk.onekeyshare.EditPage$1$1 -> cn.sharesdk.onekeyshare.EditPage$1$1:
    cn.sharesdk.onekeyshare.EditPage$1 this$1 -> this$1
    boolean handleMessage(android.os.Message) -> handleMessage
cn.sharesdk.onekeyshare.EditPage$2 -> cn.sharesdk.onekeyshare.EditPage$2:
    cn.sharesdk.onekeyshare.EditPage this$0 -> this$0
    void onClick(android.view.View) -> onClick
cn.sharesdk.onekeyshare.EditPage$3 -> cn.sharesdk.onekeyshare.EditPage$3:
    cn.sharesdk.onekeyshare.EditPage this$0 -> this$0
    void onClick(android.view.View) -> onClick
cn.sharesdk.onekeyshare.EditPage$4 -> cn.sharesdk.onekeyshare.EditPage$4:
    cn.sharesdk.onekeyshare.EditPage this$0 -> this$0
    void run() -> run
cn.sharesdk.onekeyshare.EditPage$4$1 -> cn.sharesdk.onekeyshare.EditPage$4$1:
    cn.sharesdk.onekeyshare.EditPage$4 this$1 -> this$1
    boolean handleMessage(android.os.Message) -> handleMessage
cn.sharesdk.onekeyshare.EditPage$5 -> cn.sharesdk.onekeyshare.EditPage$5:
    cn.sharesdk.onekeyshare.EditPage this$0 -> this$0
    void onClick(android.view.View) -> onClick
cn.sharesdk.onekeyshare.EditPage$6 -> cn.sharesdk.onekeyshare.EditPage$6:
    int val$postSel -> val$postSel
    int val$dp_24 -> val$dp_24
    int val$dp_9 -> val$dp_9
    cn.sharesdk.onekeyshare.EditPage this$0 -> this$0
    boolean handleMessage(android.os.Message) -> handleMessage
cn.sharesdk.onekeyshare.EditPage$7 -> cn.sharesdk.onekeyshare.EditPage$7:
    cn.sharesdk.onekeyshare.EditPage this$0 -> this$0
    void run() -> run
cn.sharesdk.onekeyshare.EditPage$8 -> cn.sharesdk.onekeyshare.EditPage$8:
    cn.sharesdk.onekeyshare.EditPage this$0 -> this$0
    void run() -> run
cn.sharesdk.onekeyshare.FollowList -> cn.sharesdk.onekeyshare.FollowList:
    cn.sharesdk.framework.TitleLayout llTitle -> llTitle
    cn.sharesdk.framework.Platform platform -> platform
    cn.sharesdk.onekeyshare.FollowList$FollowAdapter adapter -> adapter
    void setPlatform(cn.sharesdk.framework.Platform) -> setPlatform
    void onCreate() -> onCreate
    void onClick(android.view.View) -> onClick
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
cn.sharesdk.onekeyshare.FollowList$1 -> cn.sharesdk.onekeyshare.FollowList$1:
cn.sharesdk.onekeyshare.FollowList$FollowAdapter -> cn.sharesdk.onekeyshare.FollowList$FollowAdapter:
    int curPage -> curPage
    java.util.ArrayList follows -> follows
    java.util.HashMap map -> map
    boolean hasNext -> hasNext
    cn.sharesdk.framework.Platform platform -> platform
    cn.sharesdk.onekeyshare.FollowList$PRTHeader llHeader -> llHeader
    android.graphics.Bitmap bmChd -> bmChd
    android.graphics.Bitmap bmUnch -> bmUnch
    void setPlatform(cn.sharesdk.framework.Platform) -> setPlatform
    void next() -> next
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    cn.sharesdk.onekeyshare.FollowList$Following getItem(int) -> getItem
    long getItemId(int) -> getItemId
    int getCount() -> getCount
    android.view.View getHeaderView() -> getHeaderView
    void onPullDown(int) -> onPullDown
    void onRequest() -> onRequest
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    java.util.ArrayList parseList(java.util.HashMap) -> parseList
    boolean handleMessage(android.os.Message) -> handleMessage
    void onReversed() -> onReversed
    java.lang.Object getItem(int) -> getItem
cn.sharesdk.onekeyshare.FollowList$FollowListItem -> cn.sharesdk.onekeyshare.FollowList$FollowListItem:
    m.framework.ui.widget.asyncview.AsyncImageView aivIcon -> aivIcon
    android.widget.TextView tvName -> tvName
    android.widget.TextView tvSign -> tvSign
    android.widget.ImageView ivCheck -> ivCheck
cn.sharesdk.onekeyshare.FollowList$Following -> cn.sharesdk.onekeyshare.FollowList$Following:
    boolean checked -> checked
    java.lang.String screeName -> screeName
    java.lang.String description -> description
    java.lang.String uid -> uid
    java.lang.String icon -> icon
cn.sharesdk.onekeyshare.FollowList$PRTHeader -> cn.sharesdk.onekeyshare.FollowList$PRTHeader:
    android.widget.TextView tvHeader -> tvHeader
    cn.sharesdk.onekeyshare.FollowList$RotateImageView ivArrow -> ivArrow
    android.widget.ProgressBar pbRefreshing -> pbRefreshing
    void onPullDown(int) -> onPullDown
    void onRequest() -> onRequest
    void reverse() -> reverse
cn.sharesdk.onekeyshare.FollowList$RotateImageView -> cn.sharesdk.onekeyshare.FollowList$RotateImageView:
    int rotation -> rotation
    void setRotation(int) -> setRotation
    void onDraw(android.graphics.Canvas) -> onDraw
cn.sharesdk.onekeyshare.OneKeyShareCallback -> cn.sharesdk.onekeyshare.OneKeyShareCallback:
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
cn.sharesdk.onekeyshare.OnekeyShare -> cn.sharesdk.onekeyshare.OnekeyShare:
    int MSG_TOAST -> MSG_TOAST
    int MSG_ACTION_CCALLBACK -> MSG_ACTION_CCALLBACK
    int MSG_CANCEL_NOTIFY -> MSG_CANCEL_NOTIFY
    android.widget.FrameLayout flPage -> flPage
    cn.sharesdk.onekeyshare.PlatformGridView grid -> grid
    android.widget.Button btnCancel -> btnCancel
    android.view.animation.Animation animShow -> animShow
    android.view.animation.Animation animHide -> animHide
    boolean finishing -> finishing
    boolean canceled -> canceled
    java.util.HashMap reqMap -> reqMap
    java.util.ArrayList customers -> customers
    int notifyIcon -> notifyIcon
    java.lang.String notifyTitle -> notifyTitle
    boolean silent -> silent
    cn.sharesdk.framework.PlatformActionListener callback -> callback
    cn.sharesdk.onekeyshare.ShareContentCustomizeCallback customizeCallback -> customizeCallback
    boolean dialogMode -> dialogMode
    boolean disableSSO -> disableSSO
    java.util.HashMap hiddenPlatforms -> hiddenPlatforms
    android.view.View bgView -> bgView
    void show(android.content.Context) -> show
    void setNotification(int,java.lang.String) -> setNotification
    void setAddress(java.lang.String) -> setAddress
    void setTitle(java.lang.String) -> setTitle
    void setTitleUrl(java.lang.String) -> setTitleUrl
    void setText(java.lang.String) -> setText
    java.lang.String getText() -> getText
    void setImagePath(java.lang.String) -> setImagePath
    void setImageUrl(java.lang.String) -> setImageUrl
    void setUrl(java.lang.String) -> setUrl
    void setFilePath(java.lang.String) -> setFilePath
    void setComment(java.lang.String) -> setComment
    void setSite(java.lang.String) -> setSite
    void setSiteUrl(java.lang.String) -> setSiteUrl
    void setVenueName(java.lang.String) -> setVenueName
    void setVenueDescription(java.lang.String) -> setVenueDescription
    void setLatitude(float) -> setLatitude
    void setLongitude(float) -> setLongitude
    void setSilent(boolean) -> setSilent
    void setPlatform(java.lang.String) -> setPlatform
    void setCallback(cn.sharesdk.framework.PlatformActionListener) -> setCallback
    cn.sharesdk.framework.PlatformActionListener getCallback() -> getCallback
    void setShareContentCustomizeCallback(cn.sharesdk.onekeyshare.ShareContentCustomizeCallback) -> setShareContentCustomizeCallback
    cn.sharesdk.onekeyshare.ShareContentCustomizeCallback getShareContentCustomizeCallback() -> getShareContentCustomizeCallback
    void setCustomerLogo(android.graphics.Bitmap,java.lang.String,android.view.View$OnClickListener) -> setCustomerLogo
    void disableSSOWhenAuthorize() -> disableSSOWhenAuthorize
    void setDialogMode() -> setDialogMode
    void addHiddenPlatform(java.lang.String) -> addHiddenPlatform
    void setViewToShare(android.view.View) -> setViewToShare
    void setEditPageBackground(android.view.View) -> setEditPageBackground
    void onCreate() -> onCreate
    void initPageView() -> initPageView
    void initAnim() -> initAnim
    void onClick(android.view.View) -> onClick
    boolean onKeyEvent(int,android.view.KeyEvent) -> onKeyEvent
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    boolean onFinish() -> onFinish
    void share(java.util.HashMap) -> share
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
    boolean handleMessage(android.os.Message) -> handleMessage
    void showNotification(long,java.lang.String) -> showNotification
    android.widget.FrameLayout access$000(cn.sharesdk.onekeyshare.OnekeyShare) -> access$000
    void access$101(cn.sharesdk.onekeyshare.OnekeyShare) -> access$101
cn.sharesdk.onekeyshare.OnekeyShare$1 -> cn.sharesdk.onekeyshare.OnekeyShare$1:
    cn.sharesdk.onekeyshare.OnekeyShare this$0 -> this$0
    void onResult(java.util.HashMap) -> onResult
cn.sharesdk.onekeyshare.OnekeyShare$2 -> cn.sharesdk.onekeyshare.OnekeyShare$2:
    cn.sharesdk.onekeyshare.OnekeyShare this$0 -> this$0
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
cn.sharesdk.onekeyshare.OnekeyShare$3 -> cn.sharesdk.onekeyshare.OnekeyShare$3:
    cn.sharesdk.onekeyshare.OnekeyShare this$0 -> this$0
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
cn.sharesdk.onekeyshare.PicViewer -> cn.sharesdk.onekeyshare.PicViewer:
    android.widget.ImageView ivViewer -> ivViewer
    android.graphics.Bitmap pic -> pic
    void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    void onCreate() -> onCreate
    void onClick(android.view.View) -> onClick
cn.sharesdk.onekeyshare.PlatformGridView -> cn.sharesdk.onekeyshare.PlatformGridView:
    int MIN_CLICK_INTERVAL -> MIN_CLICK_INTERVAL
    int MSG_PLATFORM_LIST_GOT -> MSG_PLATFORM_LIST_GOT
    int LINE_PER_PAGE -> LINE_PER_PAGE
    int COLUMN_PER_LINE -> COLUMN_PER_LINE
    int PAGE_SIZE -> PAGE_SIZE
    m.framework.ui.widget.viewpager.ViewPagerClassic pager -> pager
    android.widget.ImageView[] points -> points
    android.graphics.Bitmap grayPoint -> grayPoint
    android.graphics.Bitmap whitePoint -> whitePoint
    boolean silent -> silent
    cn.sharesdk.framework.Platform[] platformList -> platformList
    java.util.HashMap reqData -> reqData
    cn.sharesdk.onekeyshare.OnekeyShare parent -> parent
    java.util.ArrayList customers -> customers
    java.util.HashMap hiddenPlatforms -> hiddenPlatforms
    android.view.View bgView -> bgView
    long lastClickTime -> lastClickTime
    void init(android.content.Context) -> init
    void calPageSize() -> calPageSize
    boolean handleMessage(android.os.Message) -> handleMessage
    void afterPlatformListGot() -> afterPlatformListGot
    void onConfigurationChanged() -> onConfigurationChanged
    void setData(java.util.HashMap,boolean) -> setData
    void setHiddenPlatforms(java.util.HashMap) -> setHiddenPlatforms
    void setCustomerLogos(java.util.ArrayList) -> setCustomerLogos
    void setEditPageBackground(android.view.View) -> setEditPageBackground
    void setParent(cn.sharesdk.onekeyshare.OnekeyShare) -> setParent
    void onClick(android.view.View) -> onClick
    void disableOverScrollMode(android.view.View) -> disableOverScrollMode
    cn.sharesdk.framework.Platform[] access$002(cn.sharesdk.onekeyshare.PlatformGridView,cn.sharesdk.framework.Platform[]) -> access$002
    cn.sharesdk.framework.Platform[] access$000(cn.sharesdk.onekeyshare.PlatformGridView) -> access$000
    cn.sharesdk.onekeyshare.OnekeyShare access$100(cn.sharesdk.onekeyshare.PlatformGridView) -> access$100
    java.util.HashMap access$200(cn.sharesdk.onekeyshare.PlatformGridView) -> access$200
    java.util.ArrayList access$300(cn.sharesdk.onekeyshare.PlatformGridView) -> access$300
    int access$400(cn.sharesdk.onekeyshare.PlatformGridView) -> access$400
    int access$500(cn.sharesdk.onekeyshare.PlatformGridView) -> access$500
    android.widget.ImageView[] access$600(cn.sharesdk.onekeyshare.PlatformGridView) -> access$600
    android.graphics.Bitmap access$700(cn.sharesdk.onekeyshare.PlatformGridView) -> access$700
    android.graphics.Bitmap access$800(cn.sharesdk.onekeyshare.PlatformGridView) -> access$800
cn.sharesdk.onekeyshare.PlatformGridView$1 -> cn.sharesdk.onekeyshare.PlatformGridView$1:
    cn.sharesdk.onekeyshare.PlatformGridView this$0 -> this$0
    void run() -> run
cn.sharesdk.onekeyshare.PlatformGridView$2 -> cn.sharesdk.onekeyshare.PlatformGridView$2:
    cn.sharesdk.onekeyshare.PlatformGridView this$0 -> this$0
    void onResult(java.util.HashMap) -> onResult
cn.sharesdk.onekeyshare.PlatformGridView$GridView -> cn.sharesdk.onekeyshare.PlatformGridView$GridView:
    java.lang.Object[] beans -> beans
    android.view.View$OnClickListener callback -> callback
    int lines -> lines
    cn.sharesdk.onekeyshare.PlatformGridView$PlatformAdapter platformAdapter -> platformAdapter
    void setData(int,java.lang.Object[]) -> setData
    void init() -> init
    android.widget.LinearLayout getView(int,android.view.View$OnClickListener,android.content.Context) -> getView
    android.graphics.Bitmap getIcon(cn.sharesdk.framework.Platform) -> getIcon
    java.lang.String getName(cn.sharesdk.framework.Platform) -> getName
cn.sharesdk.onekeyshare.PlatformGridView$PlatformAdapter -> cn.sharesdk.onekeyshare.PlatformGridView$PlatformAdapter:
    cn.sharesdk.onekeyshare.PlatformGridView$GridView[] girds -> girds
    java.util.List logos -> logos
    android.view.View$OnClickListener callback -> callback
    int lines -> lines
    cn.sharesdk.onekeyshare.PlatformGridView platformGridView -> platformGridView
    int getCount() -> getCount
    android.view.View getView(int,android.view.ViewGroup) -> getView
    void onScreenChange(int,int) -> onScreenChange
    cn.sharesdk.onekeyshare.PlatformGridView access$900(cn.sharesdk.onekeyshare.PlatformGridView$PlatformAdapter) -> access$900
    android.view.View$OnClickListener access$1000(cn.sharesdk.onekeyshare.PlatformGridView$PlatformAdapter) -> access$1000
cn.sharesdk.onekeyshare.Shake2Share -> cn.sharesdk.onekeyshare.Shake2Share:
    int UPDATE_INTERVAL -> UPDATE_INTERVAL
    int SHAKE_THRESHOLD -> SHAKE_THRESHOLD
    cn.sharesdk.onekeyshare.Shake2Share$OnShakeListener listener -> listener
    android.hardware.SensorManager mSensorManager -> mSensorManager
    long mLastUpdateTime -> mLastUpdateTime
    float mLastX -> mLastX
    float mLastY -> mLastY
    float mLastZ -> mLastZ
    boolean shaken -> shaken
    void setOnShakeListener(cn.sharesdk.onekeyshare.Shake2Share$OnShakeListener) -> setOnShakeListener
    void setActivity(android.app.Activity) -> setActivity
    void onCreate() -> onCreate
    void startSensor() -> startSensor
    void onDestroy() -> onDestroy
    void stopSensor() -> stopSensor
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
cn.sharesdk.onekeyshare.Shake2Share$OnShakeListener -> cn.sharesdk.onekeyshare.Shake2Share$OnShakeListener:
    void onShake() -> onShake
cn.sharesdk.onekeyshare.ShareContentCustomizeCallback -> cn.sharesdk.onekeyshare.ShareContentCustomizeCallback:
    void onShare(cn.sharesdk.framework.Platform,cn.sharesdk.framework.Platform$ShareParams) -> onShare
cn.sharesdk.onekeyshare.ShareCore -> cn.sharesdk.onekeyshare.ShareCore:
    cn.sharesdk.onekeyshare.ShareContentCustomizeCallback customizeCallback -> customizeCallback
    void setShareContentCustomizeCallback(cn.sharesdk.onekeyshare.ShareContentCustomizeCallback) -> setShareContentCustomizeCallback
    boolean share(cn.sharesdk.framework.Platform,java.util.HashMap) -> share
    boolean isUseClientToShare(java.lang.String) -> isUseClientToShare
    boolean canAuthorize(android.content.Context,java.lang.String) -> canAuthorize
cn.sharesdk.wechat.favorite.WechatFavorite -> cn.sharesdk.wechat.favorite.WechatFavorite:
    java.lang.String NAME -> NAME
    java.lang.String a -> a
    void initDevInfo(java.lang.String) -> initDevInfo
    int getPlatformId() -> getPlatformId
    java.lang.String getName() -> getName
    int getVersion() -> getVersion
    void setNetworkDevinfo() -> setNetworkDevinfo
    void doAuthorize(java.lang.String[]) -> doAuthorize
    boolean checkAuthorize(int,java.lang.Object) -> checkAuthorize
    boolean isValid() -> isValid
    boolean c() -> c
    void doShare(cn.sharesdk.framework.Platform$ShareParams) -> doShare
    void follow(java.lang.String) -> follow
    void timeline(int,int,java.lang.String) -> timeline
    void userInfor(java.lang.String) -> userInfor
    void getFriendList(int,int,java.lang.String) -> getFriendList
    void doCustomerProtocol(java.lang.String,java.lang.String,int,java.util.HashMap,java.util.HashMap) -> doCustomerProtocol
    cn.sharesdk.framework.statistics.b.f$a filterShareContent(cn.sharesdk.framework.Platform$ShareParams,java.util.HashMap) -> filterShareContent
    cn.sharesdk.framework.PlatformActionListener a(cn.sharesdk.wechat.favorite.WechatFavorite) -> a
    cn.sharesdk.framework.PlatformActionListener b(cn.sharesdk.wechat.favorite.WechatFavorite) -> b
    void a(cn.sharesdk.wechat.favorite.WechatFavorite,int,java.lang.Object) -> a
    cn.sharesdk.framework.PlatformActionListener c(cn.sharesdk.wechat.favorite.WechatFavorite) -> c
    cn.sharesdk.framework.PlatformActionListener d(cn.sharesdk.wechat.favorite.WechatFavorite) -> d
cn.sharesdk.wechat.favorite.WechatFavorite$ShareParams -> cn.sharesdk.wechat.favorite.WechatFavorite$ShareParams:
cn.sharesdk.wechat.favorite.a -> cn.sharesdk.wechat.favorite.a:
    cn.sharesdk.wechat.favorite.WechatFavorite a -> a
    void onError(java.lang.Throwable) -> onError
    void onComplete(android.os.Bundle) -> onComplete
    void onCancel() -> onCancel
cn.sharesdk.wechat.friends.Wechat -> cn.sharesdk.wechat.friends.Wechat:
    java.lang.String NAME -> NAME
    java.lang.String a -> a
    boolean b -> b
    void initDevInfo(java.lang.String) -> initDevInfo
    int getPlatformId() -> getPlatformId
    java.lang.String getName() -> getName
    int getVersion() -> getVersion
    void setNetworkDevinfo() -> setNetworkDevinfo
    void doAuthorize(java.lang.String[]) -> doAuthorize
    boolean isValid() -> isValid
    boolean checkAuthorize(int,java.lang.Object) -> checkAuthorize
    void doShare(cn.sharesdk.framework.Platform$ShareParams) -> doShare
    void follow(java.lang.String) -> follow
    void timeline(int,int,java.lang.String) -> timeline
    void userInfor(java.lang.String) -> userInfor
    void getFriendList(int,int,java.lang.String) -> getFriendList
    void doCustomerProtocol(java.lang.String,java.lang.String,int,java.util.HashMap,java.util.HashMap) -> doCustomerProtocol
    cn.sharesdk.framework.statistics.b.f$a filterShareContent(cn.sharesdk.framework.Platform$ShareParams,java.util.HashMap) -> filterShareContent
    cn.sharesdk.framework.PlatformActionListener a(cn.sharesdk.wechat.friends.Wechat) -> a
    cn.sharesdk.framework.PlatformActionListener b(cn.sharesdk.wechat.friends.Wechat) -> b
    void a(cn.sharesdk.wechat.friends.Wechat,int,java.lang.Object) -> a
    cn.sharesdk.framework.PlatformActionListener c(cn.sharesdk.wechat.friends.Wechat) -> c
    cn.sharesdk.framework.PlatformActionListener d(cn.sharesdk.wechat.friends.Wechat) -> d
cn.sharesdk.wechat.friends.Wechat$ShareParams -> cn.sharesdk.wechat.friends.Wechat$ShareParams:
cn.sharesdk.wechat.friends.a -> cn.sharesdk.wechat.friends.a:
    cn.sharesdk.wechat.friends.Wechat a -> a
    void onError(java.lang.Throwable) -> onError
    void onComplete(android.os.Bundle) -> onComplete
    void onCancel() -> onCancel
cn.sharesdk.wechat.moments.WechatMoments -> cn.sharesdk.wechat.moments.WechatMoments:
    java.lang.String NAME -> NAME
    java.lang.String a -> a
    boolean b -> b
    void initDevInfo(java.lang.String) -> initDevInfo
    int getPlatformId() -> getPlatformId
    java.lang.String getName() -> getName
    int getVersion() -> getVersion
    void setNetworkDevinfo() -> setNetworkDevinfo
    void doAuthorize(java.lang.String[]) -> doAuthorize
    boolean checkAuthorize(int,java.lang.Object) -> checkAuthorize
    boolean isValid() -> isValid
    void doShare(cn.sharesdk.framework.Platform$ShareParams) -> doShare
    void follow(java.lang.String) -> follow
    void timeline(int,int,java.lang.String) -> timeline
    void userInfor(java.lang.String) -> userInfor
    void getFriendList(int,int,java.lang.String) -> getFriendList
    void doCustomerProtocol(java.lang.String,java.lang.String,int,java.util.HashMap,java.util.HashMap) -> doCustomerProtocol
    cn.sharesdk.framework.statistics.b.f$a filterShareContent(cn.sharesdk.framework.Platform$ShareParams,java.util.HashMap) -> filterShareContent
    cn.sharesdk.framework.PlatformActionListener a(cn.sharesdk.wechat.moments.WechatMoments) -> a
    cn.sharesdk.framework.PlatformActionListener b(cn.sharesdk.wechat.moments.WechatMoments) -> b
    void a(cn.sharesdk.wechat.moments.WechatMoments,int,java.lang.Object) -> a
    cn.sharesdk.framework.PlatformActionListener c(cn.sharesdk.wechat.moments.WechatMoments) -> c
    cn.sharesdk.framework.PlatformActionListener d(cn.sharesdk.wechat.moments.WechatMoments) -> d
cn.sharesdk.wechat.moments.WechatMoments$ShareParams -> cn.sharesdk.wechat.moments.WechatMoments$ShareParams:
cn.sharesdk.wechat.moments.a -> cn.sharesdk.wechat.moments.a:
    cn.sharesdk.wechat.moments.WechatMoments a -> a
    void onError(java.lang.Throwable) -> onError
    void onComplete(android.os.Bundle) -> onComplete
    void onCancel() -> onCancel
cn.sharesdk.wechat.utils.WXAppExtendObject -> cn.sharesdk.wechat.utils.WXAppExtendObject:
    java.lang.String extInfo -> extInfo
    java.lang.String filePath -> filePath
    byte[] fileData -> fileData
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
cn.sharesdk.wechat.utils.WXEmojiObject -> cn.sharesdk.wechat.utils.WXEmojiObject:
    byte[] emojiData -> emojiData
    java.lang.String emojiPath -> emojiPath
    void setEmojiData(byte[]) -> setEmojiData
    void setEmojiPath(java.lang.String) -> setEmojiPath
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
cn.sharesdk.wechat.utils.WXFileObject -> cn.sharesdk.wechat.utils.WXFileObject:
    byte[] fileData -> fileData
    java.lang.String filePath -> filePath
    void setFileData(byte[]) -> setFileData
    void setFilePath(java.lang.String) -> setFilePath
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
cn.sharesdk.wechat.utils.WXImageObject -> cn.sharesdk.wechat.utils.WXImageObject:
    byte[] imageData -> imageData
    java.lang.String imagePath -> imagePath
    java.lang.String imageUrl -> imageUrl
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
cn.sharesdk.wechat.utils.WXMediaMessage -> cn.sharesdk.wechat.utils.WXMediaMessage:
    java.lang.String ACTION_WXAPPMESSAGE -> ACTION_WXAPPMESSAGE
    int sdkVer -> sdkVer
    java.lang.String title -> title
    java.lang.String description -> description
    byte[] thumbData -> thumbData
    cn.sharesdk.wechat.utils.WXMediaMessage$IMediaObject mediaObject -> mediaObject
    int getType() -> getType
    void setThumbImage(android.graphics.Bitmap) -> setThumbImage
cn.sharesdk.wechat.utils.WXMediaMessage$IMediaObject -> cn.sharesdk.wechat.utils.WXMediaMessage$IMediaObject:
    int TYPE_UNKNOWN -> TYPE_UNKNOWN
    int TYPE_TEXT -> TYPE_TEXT
    int TYPE_IMAGE -> TYPE_IMAGE
    int TYPE_MUSIC -> TYPE_MUSIC
    int TYPE_VIDEO -> TYPE_VIDEO
    int TYPE_URL -> TYPE_URL
    int TYPE_FILE -> TYPE_FILE
    int TYPE_APPDATA -> TYPE_APPDATA
    int TYPE_EMOJI -> TYPE_EMOJI
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
cn.sharesdk.wechat.utils.WXMediaMessage$a -> cn.sharesdk.wechat.utils.WXMediaMessage$a:
    android.os.Bundle a(cn.sharesdk.wechat.utils.WXMediaMessage) -> a
    cn.sharesdk.wechat.utils.WXMediaMessage a(android.os.Bundle) -> a
cn.sharesdk.wechat.utils.WXMusicObject -> cn.sharesdk.wechat.utils.WXMusicObject:
    java.lang.String musicUrl -> musicUrl
    java.lang.String musicLowBandUrl -> musicLowBandUrl
    java.lang.String musicDataUrl -> musicDataUrl
    java.lang.String musicLowBandDataUrl -> musicLowBandDataUrl
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
cn.sharesdk.wechat.utils.WXTextObject -> cn.sharesdk.wechat.utils.WXTextObject:
    java.lang.String text -> text
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
cn.sharesdk.wechat.utils.WXVideoObject -> cn.sharesdk.wechat.utils.WXVideoObject:
    java.lang.String videoUrl -> videoUrl
    java.lang.String videoLowBandUrl -> videoLowBandUrl
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
cn.sharesdk.wechat.utils.WXWebpageObject -> cn.sharesdk.wechat.utils.WXWebpageObject:
    java.lang.String webpageUrl -> webpageUrl
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
cn.sharesdk.wechat.utils.WechatClientNotExistException -> cn.sharesdk.wechat.utils.WechatClientNotExistException:
    long serialVersionUID -> serialVersionUID
cn.sharesdk.wechat.utils.WechatFavoriteNotSupportedException -> cn.sharesdk.wechat.utils.WechatFavoriteNotSupportedException:
    long serialVersionUID -> serialVersionUID
cn.sharesdk.wechat.utils.WechatHandlerActivity -> cn.sharesdk.wechat.utils.WechatHandlerActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onGetMessageFromWXReq(cn.sharesdk.wechat.utils.WXMediaMessage) -> onGetMessageFromWXReq
    void onShowMessageFromWXReq(cn.sharesdk.wechat.utils.WXMediaMessage) -> onShowMessageFromWXReq
cn.sharesdk.wechat.utils.WechatHelper -> cn.sharesdk.wechat.utils.WechatHelper:
    boolean a -> a
    cn.sharesdk.wechat.utils.WechatHelper b -> b
    cn.sharesdk.wechat.utils.g c -> c
    cn.sharesdk.wechat.utils.h d -> d
    cn.sharesdk.wechat.utils.WechatHelper a() -> a
    void a(cn.sharesdk.wechat.utils.h) -> a
    void a(cn.sharesdk.wechat.utils.h,cn.sharesdk.framework.Platform$ShareParams) -> a
    void b(cn.sharesdk.wechat.utils.h) -> b
    void a(java.lang.String,java.lang.String,int,cn.sharesdk.wechat.utils.h) -> a
    void a(java.lang.String,java.lang.String,java.lang.String,int,cn.sharesdk.wechat.utils.h) -> a
    void a(java.lang.String,java.lang.String,android.graphics.Bitmap,int,cn.sharesdk.wechat.utils.h) -> a
    void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,cn.sharesdk.wechat.utils.h) -> a
    void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap,int,cn.sharesdk.wechat.utils.h) -> a
    void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,cn.sharesdk.wechat.utils.h) -> a
    void a(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap,int,cn.sharesdk.wechat.utils.h) -> a
    void b(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,cn.sharesdk.wechat.utils.h) -> b
    void b(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap,int,cn.sharesdk.wechat.utils.h) -> b
    void b(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,cn.sharesdk.wechat.utils.h) -> b
    void b(java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap,int,cn.sharesdk.wechat.utils.h) -> b
    void c(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,cn.sharesdk.wechat.utils.h) -> c
    void c(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap,int,cn.sharesdk.wechat.utils.h) -> c
    void b(java.lang.String,java.lang.String,java.lang.String,int,cn.sharesdk.wechat.utils.h) -> b
    void b(java.lang.String,java.lang.String,android.graphics.Bitmap,int,cn.sharesdk.wechat.utils.h) -> b
    byte[] a(java.lang.String) -> a
    byte[] b(java.lang.String) -> b
    byte[] a(byte[]) -> a
    java.lang.String c(java.lang.String) -> c
    boolean a(android.content.Context,java.lang.String) -> a
    boolean a(cn.sharesdk.wechat.utils.WechatHandlerActivity) -> a
    boolean b() -> b
    boolean c() -> c
    void a(cn.sharesdk.wechat.utils.WXMediaMessage,java.lang.String,int,cn.sharesdk.wechat.utils.h) -> a
cn.sharesdk.wechat.utils.WechatHelper$ShareParams -> cn.sharesdk.wechat.utils.WechatHelper$ShareParams:
    int shareType -> shareType
    java.lang.String title -> title
    java.lang.String musicUrl -> musicUrl
    java.lang.String url -> url
    java.lang.String imageUrl -> imageUrl
    android.graphics.Bitmap imageData -> imageData
    int scene -> scene
    java.lang.String filePath -> filePath
    java.lang.String extInfo -> extInfo
cn.sharesdk.wechat.utils.WechatResp -> cn.sharesdk.wechat.utils.WechatResp:
    int e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    int a() -> a
    void b(android.os.Bundle) -> b
    void a(android.os.Bundle) -> a
cn.sharesdk.wechat.utils.WechatResp$ErrCode -> cn.sharesdk.wechat.utils.WechatResp$ErrCode:
    int ERR_OK -> ERR_OK
    int ERR_COMM -> ERR_COMM
    int ERR_USER_CANCEL -> ERR_USER_CANCEL
    int ERR_SENT_FAILED -> ERR_SENT_FAILED
    int ERR_AUTH_DENIED -> ERR_AUTH_DENIED
    int ERR_UNSUPPORT -> ERR_UNSUPPORT
cn.sharesdk.wechat.utils.WechatTimelineNotSupportedException -> cn.sharesdk.wechat.utils.WechatTimelineNotSupportedException:
    long serialVersionUID -> serialVersionUID
cn.sharesdk.wechat.utils.a -> cn.sharesdk.wechat.utils.a:
    java.lang.String a -> a
    java.lang.String b -> b
    int a() -> a
    void a(android.os.Bundle) -> a
    boolean b() -> b
cn.sharesdk.wechat.utils.b -> cn.sharesdk.wechat.utils.b:
    java.lang.String a -> a
    java.lang.String b -> b
    int c -> c
    java.lang.String d -> d
    int a() -> a
    void a(android.os.Bundle) -> a
    void b(android.os.Bundle) -> b
cn.sharesdk.wechat.utils.c -> cn.sharesdk.wechat.utils.c:
    cn.sharesdk.wechat.utils.WXMediaMessage a -> a
    int a() -> a
    void a(android.os.Bundle) -> a
    void b(android.os.Bundle) -> b
cn.sharesdk.wechat.utils.d -> cn.sharesdk.wechat.utils.d:
    cn.sharesdk.wechat.utils.WXMediaMessage a -> a
    int b -> b
    int a() -> a
    void a(android.os.Bundle) -> a
    boolean b() -> b
cn.sharesdk.wechat.utils.e -> cn.sharesdk.wechat.utils.e:
    int a() -> a
cn.sharesdk.wechat.utils.f -> cn.sharesdk.wechat.utils.f:
    cn.sharesdk.wechat.utils.WXMediaMessage a -> a
    int a() -> a
    void a(android.os.Bundle) -> a
    void b(android.os.Bundle) -> b
cn.sharesdk.wechat.utils.g -> cn.sharesdk.wechat.utils.g:
    android.content.Context a -> a
    java.lang.String b -> b
    boolean a(android.content.Context,java.lang.String) -> a
    void a(cn.sharesdk.wechat.utils.i) -> a
    boolean a() -> a
    boolean c() -> c
    byte[] a(java.lang.String,java.lang.String,int) -> a
    java.lang.String a(java.lang.String) -> a
    boolean b() -> b
    boolean a(cn.sharesdk.wechat.utils.WechatHandlerActivity,cn.sharesdk.wechat.utils.h) -> a
    boolean a(byte[],byte[]) -> a
cn.sharesdk.wechat.utils.h -> cn.sharesdk.wechat.utils.h:
    cn.sharesdk.framework.Platform a -> a
    cn.sharesdk.framework.Platform$ShareParams b -> b
    cn.sharesdk.framework.PlatformActionListener c -> c
    cn.sharesdk.framework.authorize.AuthorizeListener d -> d
    void a(cn.sharesdk.framework.authorize.AuthorizeListener) -> a
    void a(cn.sharesdk.framework.Platform$ShareParams,cn.sharesdk.framework.PlatformActionListener) -> a
    void a(cn.sharesdk.wechat.utils.WechatResp) -> a
    cn.sharesdk.framework.Platform$ShareParams a() -> a
    cn.sharesdk.framework.Platform b() -> b
    cn.sharesdk.framework.PlatformActionListener c() -> c
cn.sharesdk.wechat.utils.i -> cn.sharesdk.wechat.utils.i:
    java.lang.String c -> c
    int a() -> a
    void a(android.os.Bundle) -> a
    boolean b() -> b
com.UCMobile.PayPlugin.PayInterface -> com.UCMobile.PayPlugin.PayInterface:
    boolean a -> a
    int show(android.content.Context,java.lang.String) -> show
    void a(android.content.Context,java.lang.String[]) -> a
com.UCMobile.PayPlugin.PayPluginService -> com.UCMobile.PayPlugin.PayPluginService:
    android.os.IBinder onBind(android.content.Intent) -> onBind
com.UCMobile.PayPlugin.PayResultReceiver -> com.UCMobile.PayPlugin.PayResultReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void native_UCPayResultNotify(java.lang.String) -> native_UCPayResultNotify
com.UCMobile.PayPlugin.PluginIcon -> com.UCMobile.PayPlugin.PluginIcon:
    int d -> d
    android.graphics.Bitmap a -> a
    int[] b -> b
    android.content.Context c -> c
    int[] getIconPixels() -> getIconPixels
    int getIconWidth() -> getIconWidth
    int getIconHeight() -> getIconHeight
    int getIconRowBytes() -> getIconRowBytes
com.UCMobile.PayPlugin.PluginSurfaceView -> com.UCMobile.PayPlugin.PluginSurfaceView:
    int e -> e
    boolean f -> f
    java.lang.Object g -> g
    android.view.SurfaceHolder a -> a
    android.graphics.Paint b -> b
    android.graphics.Bitmap c -> c
    int[] d -> d
    void invalidateNPP() -> invalidateNPP
    int[] getIconPixels() -> getIconPixels
    int getIconWidth() -> getIconWidth
    int getIconHeight() -> getIconHeight
    int getIconRowBytes() -> getIconRowBytes
    void nativeSurfaceCreated(int) -> nativeSurfaceCreated
    void nativeSurfaceChanged(int,int,int,int) -> nativeSurfaceChanged
    void nativeSurfaceDestroyed(int) -> nativeSurfaceDestroyed
    java.lang.Object a(com.UCMobile.PayPlugin.PluginSurfaceView) -> a
    boolean b(com.UCMobile.PayPlugin.PluginSurfaceView) -> b
    int c(com.UCMobile.PayPlugin.PluginSurfaceView) -> c
    void a(com.UCMobile.PayPlugin.PluginSurfaceView,int,int,int,int) -> a
    void a(com.UCMobile.PayPlugin.PluginSurfaceView,int) -> a
    void b(com.UCMobile.PayPlugin.PluginSurfaceView,int) -> b
com.UCMobile.PayPlugin.a -> com.UCMobile.PayPlugin.a:
    com.UCMobile.PayPlugin.PluginSurfaceView a -> a
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
com.UCMobile.PayPluginEx.PayPluginServiceEx -> com.UCMobile.PayPluginEx.PayPluginServiceEx:
    android.os.IBinder onBind(android.content.Intent) -> onBind
com.UCMobile.PayPluginEx.PayResultReceiverEx -> com.UCMobile.PayPluginEx.PayResultReceiverEx:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void native_UCPayResultNotify(java.lang.String) -> native_UCPayResultNotify
com.ads.puzzle.flag.Answer -> com.ads.puzzle.flag.a:
    java.lang.String[] TITLES -> a
    java.lang.String[] VALUES -> b
    java.lang.Integer[][] CHALLENGES -> c
    java.util.List gateStars -> d
    boolean isLasterSmallGate(int) -> a
com.ads.puzzle.flag.Assets -> com.ads.puzzle.flag.b:
    com.badlogic.gdx.audio.Music musicbg -> a
    com.badlogic.gdx.audio.Sound btnSound -> b
    com.badlogic.gdx.audio.Sound starSound -> c
    com.badlogic.gdx.graphics.g2d.TextureRegion gameBg -> d
    com.badlogic.gdx.graphics.g2d.TextureRegion theme -> e
    com.badlogic.gdx.graphics.g2d.TextureRegion layerBg -> f
    com.badlogic.gdx.graphics.g2d.TextureRegion areaBg -> g
    com.badlogic.gdx.graphics.g2d.TextureRegion resultBg -> h
    com.badlogic.gdx.graphics.g2d.TextureRegion star -> i
    com.badlogic.gdx.graphics.g2d.TextureRegion star_null -> j
    com.badlogic.gdx.graphics.g2d.TextureRegion readme -> k
    com.badlogic.gdx.graphics.g2d.TextureRegion aboutInfo -> l
    com.badlogic.gdx.graphics.g2d.TextureRegion help -> m
    com.badlogic.gdx.graphics.g2d.TextureRegion share -> n
    com.badlogic.gdx.graphics.g2d.TextureRegion recommend -> o
    com.badlogic.gdx.graphics.g2d.TextureRegion refresh -> p
    com.badlogic.gdx.graphics.g2d.TextureRegion returnTr -> q
    com.badlogic.gdx.graphics.g2d.TextureRegion light -> r
    com.badlogic.gdx.graphics.g2d.TextureRegion gate -> s
    com.badlogic.gdx.graphics.g2d.TextureRegion next -> t
    com.badlogic.gdx.graphics.g2d.TextureRegion suspend -> u
    com.badlogic.gdx.graphics.g2d.TextureRegion setting -> v
    com.badlogic.gdx.graphics.g2d.TextureRegion continueTr -> w
    com.badlogic.gdx.graphics.g2d.TextureRegion music -> x
    com.badlogic.gdx.graphics.g2d.TextureRegion sound -> y
    com.badlogic.gdx.graphics.g2d.TextureRegion about -> z
    com.badlogic.gdx.graphics.g2d.TextureRegion buy -> A
    com.badlogic.gdx.graphics.g2d.TextureRegion forbid -> B
    com.badlogic.gdx.graphics.g2d.TextureRegion exit -> C
    com.badlogic.gdx.graphics.g2d.TextureRegion playBtn -> D
    com.badlogic.gdx.graphics.g2d.TextureRegion playBtnDown -> E
    com.badlogic.gdx.graphics.g2d.TextureRegion resetGameBtn -> F
    com.badlogic.gdx.graphics.g2d.TextureRegion levelPreBtn -> G
    com.badlogic.gdx.graphics.g2d.TextureRegion levelNextBtn -> H
    com.badlogic.gdx.graphics.g2d.TextureRegion downloadBtn -> I
    com.badlogic.gdx.graphics.g2d.TextureRegion downloadBtnDown -> J
    com.badlogic.gdx.graphics.g2d.TextureRegion closeBtn -> K
    com.badlogic.gdx.graphics.g2d.TextureRegion gate_0star -> L
    com.badlogic.gdx.graphics.g2d.TextureRegion gate_1star -> M
    com.badlogic.gdx.graphics.g2d.TextureRegion gate_2star -> N
    com.badlogic.gdx.graphics.g2d.TextureRegion gate_3star -> O
    com.badlogic.gdx.graphics.g2d.TextureRegion gate_lock -> P
    com.badlogic.gdx.graphics.g2d.TextureRegion lock -> Q
    com.badlogic.gdx.graphics.g2d.TextureRegion[] cubes -> ah
    java.util.List levels -> R
    java.util.Map levelSpriteMap -> S
    float SPRITESIZE -> T
    com.badlogic.gdx.graphics.g2d.Sprite[] pieces -> U
    float TOPBAR_HEIGHT -> V
    float WIDTH -> W
    float HEIGHT -> X
    float SPACE -> Y
    float H_SPACE -> Z
    float PIECE_SIZE -> aa
    float SPRITE_SIZE -> ab
    float SMALL_PIECE_SIZE -> ac
    float LEVEL_IMAGE_SIZE -> ad
    float LEVEL_IMAGE_OFF_SIZE -> ae
    int LEVEL_MAX -> af
    java.util.List seriesList -> ag
    void load() -> a
    void creteMagicCubes(com.badlogic.gdx.graphics.g2d.TextureAtlas) -> a
    void createLevelSprite(com.badlogic.gdx.graphics.g2d.TextureAtlas) -> b
    void loadAd() -> b
    java.lang.String getUrl(java.lang.String[],java.lang.String) -> a
    void playSound(com.badlogic.gdx.audio.Sound) -> a
com.ads.puzzle.flag.PEvent -> com.ads.puzzle.flag.c:
    void pay() -> a
    void exit$3749f43() -> b
    void sos(com.ads.puzzle.flag.screen.GameScreen) -> a
    void invalidateSos() -> c
    void resetGame() -> d
    void share() -> e
    void install(java.lang.String) -> a
    boolean isNetworkEnable() -> f
    void save() -> g
com.ads.puzzle.flag.Puzzle -> com.ads.puzzle.flag.d:
    com.ads.puzzle.flag.screen.MainScreen mainScreen -> a
    com.ads.puzzle.flag.PEvent pEvent -> b
    void create() -> create
    com.ads.puzzle.flag.screen.MainScreen getMainScreen() -> a
    com.ads.puzzle.flag.PEvent getPEvent() -> b
com.ads.puzzle.flag.actors.Area -> com.ads.puzzle.flag.a.a:
    int id -> a
    int pieceId -> b
    float size -> c
    float x5 -> d
    float x4 -> e
    float x3 -> f
    float x2 -> g
    float x1 -> h
    float x0 -> i
    float y5 -> j
    float y4 -> k
    float y3 -> l
    float y2 -> m
    float y1 -> n
    float y0 -> o
    float spriteSize -> p
    float x_bg -> q
    float y_bg -> r
    java.util.List sprites -> s
    int getId() -> a
    int getPieceId() -> b
    void setPieceId(int) -> a
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
com.ads.puzzle.flag.actors.Challenge -> com.ads.puzzle.flag.a.b:
    float imageSize -> a
com.ads.puzzle.flag.actors.Gate -> com.ads.puzzle.flag.a.c:
    int gateNum -> a
    int getGateNum() -> a
com.ads.puzzle.flag.actors.Piece -> com.ads.puzzle.flag.a.d:
    int area -> a
    int orientation -> b
    int id -> c
    void return2BeginArea() -> a
    void changeOrientation() -> b
    int getArea() -> c
    void setArea(int) -> a
    int getOrientation() -> d
    void setOrientation(int) -> b
    int getId() -> e
com.ads.puzzle.flag.android.AndroidLauncher -> com.ads.puzzle.flag.android.AndroidLauncher:
    java.lang.String adAtlasStr -> a
    java.io.File adAtlas -> b
    java.lang.String urlStr -> c
    java.io.File url -> d
    boolean initFail -> e
    void onCreate(android.os.Bundle) -> onCreate
    void onBackPressed() -> onBackPressed
    boolean isNetwork() -> a
    void onInitCallback(int,java.lang.String) -> onInitCallback
    java.util.List onReceiveOrders(java.util.List) -> onReceiveOrders
    void loadGameConfig() -> b
    void getObjectWithDestFile(com.baidu.inf.iis.bcs.BaiduBCS,java.lang.String,java.io.File) -> a
    void access$000(com.ads.puzzle.flag.android.AndroidLauncher) -> a
com.ads.puzzle.flag.android.AndroidLauncher$1 -> com.ads.puzzle.flag.android.a:
    com.ads.puzzle.flag.android.AndroidLauncher this$0 -> a
    void run() -> run
com.ads.puzzle.flag.android.AndroidLauncher$2 -> com.ads.puzzle.flag.android.b:
    void onShowSuccess() -> onShowSuccess
    void onShowFailed() -> onShowFailed
com.ads.puzzle.flag.android.AndroidLauncher$3 -> com.ads.puzzle.flag.android.c:
    com.ads.puzzle.flag.android.AndroidLauncher this$0 -> a
    void OnPayProcess(int) -> OnPayProcess
com.ads.puzzle.flag.android.AndroidLauncher$4 -> com.ads.puzzle.flag.android.d:
    void run() -> run
com.ads.puzzle.flag.android.PEventImpl -> com.ads.puzzle.flag.android.e:
    com.ads.puzzle.flag.android.AndroidLauncher launcher -> a
    java.lang.String title -> b
    android.app.ProgressDialog progressDialog -> c
    android.os.Handler handler -> d
    java.lang.String gameLogoImage -> e
    void openNetworkFailDlg() -> h
    void pay() -> a
    void exit$3749f43() -> b
    void save() -> g
    void sos(com.ads.puzzle.flag.screen.GameScreen) -> a
    void invalidateSos() -> c
    void resetGame() -> d
    void share() -> e
    void install(java.lang.String) -> a
    boolean isNetworkEnable() -> f
    boolean note_Intent(android.content.Context) -> a
    void showShare() -> i
    java.io.File downLoadFile(java.lang.String) -> b
    java.lang.String access$000(com.ads.puzzle.flag.android.PEventImpl) -> a
    com.ads.puzzle.flag.android.AndroidLauncher access$100(com.ads.puzzle.flag.android.PEventImpl) -> b
    void access$200(com.ads.puzzle.flag.android.PEventImpl) -> c
    java.lang.String access$300(com.ads.puzzle.flag.android.PEventImpl) -> d
    void access$400(com.ads.puzzle.flag.android.PEventImpl) -> e
com.ads.puzzle.flag.android.PEventImpl$1 -> com.ads.puzzle.flag.android.f:
    com.ads.puzzle.flag.android.PEventImpl this$0 -> a
    void run() -> run
com.ads.puzzle.flag.android.PEventImpl$1$1 -> com.ads.puzzle.flag.android.g:
    void onClick(android.content.DialogInterface,int) -> onClick
com.ads.puzzle.flag.android.PEventImpl$2 -> com.ads.puzzle.flag.android.h:
    com.ads.puzzle.flag.android.PEventImpl this$0 -> a
    void run() -> run
com.ads.puzzle.flag.android.PEventImpl$2$1 -> com.ads.puzzle.flag.android.i:
    com.ads.puzzle.flag.android.PEventImpl$2 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.ads.puzzle.flag.android.PEventImpl$2$2 -> com.ads.puzzle.flag.android.j:
    void onClick(android.content.DialogInterface,int) -> onClick
com.ads.puzzle.flag.android.PEventImpl$2$3 -> com.ads.puzzle.flag.android.k:
    com.ads.puzzle.flag.android.PEventImpl$2 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.ads.puzzle.flag.android.PEventImpl$3 -> com.ads.puzzle.flag.android.l:
    com.ads.puzzle.flag.screen.GameScreen val$gs -> a
    com.ads.puzzle.flag.android.PEventImpl this$0 -> b
    void run() -> run
com.ads.puzzle.flag.android.PEventImpl$3$1 -> com.ads.puzzle.flag.android.m:
    void onClick(android.content.DialogInterface,int) -> onClick
com.ads.puzzle.flag.android.PEventImpl$3$2 -> com.ads.puzzle.flag.android.n:
    com.ads.puzzle.flag.android.PEventImpl$3 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.ads.puzzle.flag.android.PEventImpl$4 -> com.ads.puzzle.flag.android.o:
    com.ads.puzzle.flag.android.PEventImpl this$0 -> a
    void run() -> run
com.ads.puzzle.flag.android.PEventImpl$4$1 -> com.ads.puzzle.flag.android.p:
    com.ads.puzzle.flag.android.PEventImpl$4 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.ads.puzzle.flag.android.PEventImpl$4$2 -> com.ads.puzzle.flag.android.q:
    com.ads.puzzle.flag.android.PEventImpl$4 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.ads.puzzle.flag.android.PEventImpl$4$3 -> com.ads.puzzle.flag.android.r:
    void onClick(android.content.DialogInterface,int) -> onClick
com.ads.puzzle.flag.android.PEventImpl$5 -> com.ads.puzzle.flag.android.s:
    com.ads.puzzle.flag.android.PEventImpl this$0 -> a
    void run() -> run
com.ads.puzzle.flag.android.PEventImpl$5$1 -> com.ads.puzzle.flag.android.t:
    void onClick(android.content.DialogInterface,int) -> onClick
com.ads.puzzle.flag.android.PEventImpl$5$2 -> com.ads.puzzle.flag.android.u:
    com.ads.puzzle.flag.android.PEventImpl$5 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.ads.puzzle.flag.android.PEventImpl$6 -> com.ads.puzzle.flag.android.v:
    com.ads.puzzle.flag.android.PEventImpl this$0 -> a
    void run() -> run
com.ads.puzzle.flag.android.PEventImpl$7 -> com.ads.puzzle.flag.android.w:
    com.ads.puzzle.flag.android.PEventImpl this$0 -> a
    void run() -> run
com.ads.puzzle.flag.android.R$attr -> com.ads.puzzle.flag.android.R$attr:
com.ads.puzzle.flag.android.R$color -> com.ads.puzzle.flag.android.R$color:
    int b_full -> b_full
    int bg -> bg
    int f_b -> f_b
    int f_g -> f_g
    int f_l -> f_l
    int f_m -> f_m
    int f_s -> f_s
    int f_w -> f_w
    int f_xs -> f_xs
    int g_gray -> g_gray
    int g_green -> g_green
    int g_lorange -> g_lorange
    int g_orange -> g_orange
    int highlight -> highlight
    int link -> link
    int list_border -> list_border
    int list_even -> list_even
    int list_light -> list_light
    int list_line -> list_line
    int strip -> strip
    int transparent -> transparent
    int transparent2 -> transparent2
    int umipay_oauth_textcolor_normal -> umipay_oauth_textcolor_normal
    int umipay_oauth_textcolor_pressed -> umipay_oauth_textcolor_pressed
    int widget_border -> widget_border
com.ads.puzzle.flag.android.R$drawable -> com.ads.puzzle.flag.android.R$drawable:
    int auth_follow_cb_chd -> auth_follow_cb_chd
    int auth_follow_cb_unc -> auth_follow_cb_unc
    int auth_title_back -> auth_title_back
    int btn_back_nor -> btn_back_nor
    int btn_cancel_back -> btn_cancel_back
    int data -> data
    int data_high -> data_high
    int data_low -> data_low
    int edittext_back -> edittext_back
    int gray_point -> gray_point
    int ic_launcher -> ic_launcher
    int img_cancel -> img_cancel
    int logo_douban -> logo_douban
    int logo_dropbox -> logo_dropbox
    int logo_email -> logo_email
    int logo_evernote -> logo_evernote
    int logo_facebook -> logo_facebook
    int logo_flickr -> logo_flickr
    int logo_foursquare -> logo_foursquare
    int logo_googleplus -> logo_googleplus
    int logo_instagram -> logo_instagram
    int logo_kaixin -> logo_kaixin
    int logo_line -> logo_line
    int logo_linkedin -> logo_linkedin
    int logo_mingdao -> logo_mingdao
    int logo_neteasemicroblog -> logo_neteasemicroblog
    int logo_pinterest -> logo_pinterest
    int logo_qq -> logo_qq
    int logo_qzone -> logo_qzone
    int logo_renren -> logo_renren
    int logo_shortmessage -> logo_shortmessage
    int logo_sinaweibo -> logo_sinaweibo
    int logo_sohumicroblog -> logo_sohumicroblog
    int logo_sohusuishenkan -> logo_sohusuishenkan
    int logo_tencentweibo -> logo_tencentweibo
    int logo_tumblr -> logo_tumblr
    int logo_twitter -> logo_twitter
    int logo_vkontakte -> logo_vkontakte
    int logo_wechat -> logo_wechat
    int logo_wechatfavorite -> logo_wechatfavorite
    int logo_wechatmoments -> logo_wechatmoments
    int logo_yixin -> logo_yixin
    int logo_yixinmoments -> logo_yixinmoments
    int logo_youdao -> logo_youdao
    int mobilepayplugin -> mobilepayplugin
    int pin -> pin
    int share_vp_back -> share_vp_back
    int ssdk_auth_title_back -> ssdk_auth_title_back
    int ssdk_back_arr -> ssdk_back_arr
    int ssdk_logo -> ssdk_logo
    int ssdk_oks_ptr_ptr -> ssdk_oks_ptr_ptr
    int ssdk_oks_shake_to_share_back -> ssdk_oks_shake_to_share_back
    int ssdk_oks_yaoyiyao -> ssdk_oks_yaoyiyao
    int ssdk_title_div -> ssdk_title_div
    int title_back -> title_back
    int title_shadow -> title_shadow
    int umipay_btn_close -> umipay_btn_close
    int umipay_btn_close_normal -> umipay_btn_close_normal
    int umipay_btn_close_pressed -> umipay_btn_close_pressed
    int umipay_default_btn_pressed_bg -> umipay_default_btn_pressed_bg
    int umipay_layout_pressed -> umipay_layout_pressed
    int umipay_strip -> umipay_strip
    int umipay_strip_bg -> umipay_strip_bg
    int umipay_strip_bg_with_title -> umipay_strip_bg_with_title
    int white_point -> white_point
    int xiaozi -> xiaozi
com.ads.puzzle.flag.android.R$id -> com.ads.puzzle.flag.android.R$id:
    int umipay_base -> umipay_base
    int umipay_base_content -> umipay_base_content
    int umipay_loading_pregressbar -> umipay_loading_pregressbar
    int umipay_loading_progress_ly -> umipay_loading_progress_ly
    int umipay_loading_textview -> umipay_loading_textview
    int umipay_titlebar_layout -> umipay_titlebar_layout
    int umipay_titlebar_rightbtn -> umipay_titlebar_rightbtn
    int umipay_titlebar_title -> umipay_titlebar_title
    int umipay_webview_contentview -> umipay_webview_contentview
com.ads.puzzle.flag.android.R$layout -> com.ads.puzzle.flag.android.R$layout:
    int umipay_base -> umipay_base
    int umipay_layout_webview -> umipay_layout_webview
    int umipay_titlebar -> umipay_titlebar
com.ads.puzzle.flag.android.R$string -> com.ads.puzzle.flag.android.R$string:
    int app_name -> app_name
    int cancel -> cancel
    int douban -> douban
    int dropbox -> dropbox
    int email -> email
    int evernote -> evernote
    int facebook -> facebook
    int finish -> finish
    int flickr -> flickr
    int foursquare -> foursquare
    int google_plus_client_inavailable -> google_plus_client_inavailable
    int googleplus -> googleplus
    int instagram -> instagram
    int instagram_client_inavailable -> instagram_client_inavailable
    int kaixin -> kaixin
    int line -> line
    int line_client_inavailable -> line_client_inavailable
    int linkedin -> linkedin
    int list_friends -> list_friends
    int mingdao -> mingdao
    int mingdao_share_content -> mingdao_share_content
    int multi_share -> multi_share
    int neteasemicroblog -> neteasemicroblog
    int pinterest -> pinterest
    int pinterest_client_inavailable -> pinterest_client_inavailable
    int pull_to_refresh -> pull_to_refresh
    int qq -> qq
    int qq_client_inavailable -> qq_client_inavailable
    int qzone -> qzone
    int refreshing -> refreshing
    int release_to_refresh -> release_to_refresh
    int renren -> renren
    int select_one_plat_at_least -> select_one_plat_at_least
    int shake2share -> shake2share
    int share -> share
    int share_canceled -> share_canceled
    int share_completed -> share_completed
    int share_failed -> share_failed
    int share_to -> share_to
    int share_to_mingdao -> share_to_mingdao
    int share_to_qq -> share_to_qq
    int share_to_qzone -> share_to_qzone
    int share_to_qzone_default -> share_to_qzone_default
    int sharing -> sharing
    int shortmessage -> shortmessage
    int sinaweibo -> sinaweibo
    int sohumicroblog -> sohumicroblog
    int sohusuishenkan -> sohusuishenkan
    int tencentweibo -> tencentweibo
    int tumblr -> tumblr
    int twitter -> twitter
    int umipay_agm -> umipay_agm
    int umipay_base_loading -> umipay_base_loading
    int use_login_button -> use_login_button
    int vkontakte -> vkontakte
    int website -> website
    int wechat -> wechat
    int wechat_client_inavailable -> wechat_client_inavailable
    int wechatfavorite -> wechatfavorite
    int wechatmoments -> wechatmoments
    int weibo_oauth_regiseter -> weibo_oauth_regiseter
    int weibo_upload_content -> weibo_upload_content
    int yixin -> yixin
    int yixin_client_inavailable -> yixin_client_inavailable
    int yixinmoments -> yixinmoments
    int youdao -> youdao
com.ads.puzzle.flag.android.R$style -> com.ads.puzzle.flag.android.R$style:
    int GdxTheme -> GdxTheme
    int Theme_UPPay -> Theme_UPPay
    int UmipayTheme -> UmipayTheme
    int UmipayTheme_NoFullscreen -> UmipayTheme_NoFullscreen
    int fl -> fl
    int fm -> fm
    int fn -> fn
    int fs -> fs
    int fxl -> fxl
    int fxs -> fxs
    int h1 -> h1
    int h2 -> h2
    int h3 -> h3
    int h4 -> h4
    int p -> p
    int text -> text
    int um_agm_cb -> um_agm_cb
    int um_agm_tx1 -> um_agm_tx1
    int um_block -> um_block
    int um_box_editor -> um_box_editor
    int um_box_editor_name -> um_box_editor_name
    int um_box_editor_psw -> um_box_editor_psw
    int um_box_iamge_btn -> um_box_iamge_btn
    int um_box_left_icon -> um_box_left_icon
    int um_box_ly -> um_box_ly
    int um_box_ly_land -> um_box_ly_land
    int um_box_ly_port -> um_box_ly_port
    int um_box_register_editor_name -> um_box_register_editor_name
    int um_box_register_editor_psw -> um_box_register_editor_psw
    int um_box_row_ly -> um_box_row_ly
    int um_fi -> um_fi
    int um_insert -> um_insert
    int um_insert_land -> um_insert_land
    int um_link_btn -> um_link_btn
    int um_link_btn_icon -> um_link_btn_icon
    int um_link_btn_icon_land -> um_link_btn_icon_land
    int um_link_btn_layout -> um_link_btn_layout
    int um_link_btn_layout_land -> um_link_btn_layout_land
    int um_link_ly_land -> um_link_ly_land
    int um_link_ly_port -> um_link_ly_port
    int um_main_ly -> um_main_ly
    int um_oauth_btn_arrow -> um_oauth_btn_arrow
    int um_oauth_btn_icon -> um_oauth_btn_icon
    int um_oauth_login -> um_oauth_login
    int um_oauth_login_land -> um_oauth_login_land
    int um_progress_ly -> um_progress_ly
    int um_progress_text -> um_progress_text
    int um_reg_login_ly -> um_reg_login_ly
    int um_reg_login_ly_land -> um_reg_login_ly_land
    int um_reg_login_ly_port -> um_reg_login_ly_port
    int um_right_btn -> um_right_btn
    int um_title -> um_title
    int um_title_bar -> um_title_bar
    int um_title_bar_title -> um_title_bar_title
    int um_titlebar_ly -> um_titlebar_ly
    int um_titlebar_ly_land -> um_titlebar_ly_land
    int um_titlebar_ly_port -> um_titlebar_ly_port
    int um_toast_account_btn -> um_toast_account_btn
    int um_toast_cancel_btn -> um_toast_cancel_btn
    int um_toast_content -> um_toast_content
    int um_toast_content_child -> um_toast_content_child
    int um_toast_content_parent -> um_toast_content_parent
    int um_toast_game_icon -> um_toast_game_icon
    int um_toast_text -> um_toast_text
    int um_toast_title -> um_toast_title
    int um_toast_title_line -> um_toast_title_line
    int um_toast_title_ly -> um_toast_title_ly
    int um_wr -> um_wr
    int um_wr_agm -> um_wr_agm
    int um_wr_h -> um_wr_h
    int um_wr_v -> um_wr_v
    int umipay_dialog_theme -> umipay_dialog_theme
com.ads.puzzle.flag.android.wxapi.WXEntryActivity -> com.ads.puzzle.flag.android.wxapi.WXEntryActivity:
    void onGetMessageFromWXReq(cn.sharesdk.wechat.utils.WXMediaMessage) -> onGetMessageFromWXReq
    void onShowMessageFromWXReq(cn.sharesdk.wechat.utils.WXMediaMessage) -> onShowMessageFromWXReq
com.ads.puzzle.flag.controller.AreaController -> com.ads.puzzle.flag.b.a:
    com.ads.puzzle.flag.actors.Area[] areas -> a
    com.badlogic.gdx.math.Rectangle bounds -> b
    com.badlogic.gdx.math.Rectangle getBounds() -> a
    com.ads.puzzle.flag.actors.Area[] getAreas() -> b
    void handler() -> c
com.ads.puzzle.flag.controller.ChallengeController -> com.ads.puzzle.flag.b.b:
    com.ads.puzzle.flag.actors.Challenge challenge -> a
    int level -> b
    int gateNum -> c
    void handler() -> a
    int getGateNum() -> b
com.ads.puzzle.flag.controller.IController -> com.ads.puzzle.flag.b.c:
com.ads.puzzle.flag.controller.PieceController -> com.ads.puzzle.flag.b.d:
    com.badlogic.gdx.math.Rectangle fixArea -> a
    void handler() -> a
    com.badlogic.gdx.math.Rectangle getFixAreaBounds() -> b
com.ads.puzzle.flag.listener.LevelDetector -> com.ads.puzzle.flag.c.a:
com.ads.puzzle.flag.listener.LevelListener -> com.ads.puzzle.flag.c.b:
    com.badlogic.gdx.scenes.scene2d.Stage stage -> a
    com.ads.puzzle.flag.Puzzle puzzle -> b
    com.badlogic.gdx.math.Vector3 touchPoint -> c
    float position -> d
    float prex -> e
    float currentx -> f
    float getPosition() -> a
    void setPosition(float) -> a
    boolean touchDown(float,float,int,int) -> touchDown
    boolean tap(float,float,int,int) -> tap
    boolean longPress(float,float) -> longPress
    boolean fling(float,float,int) -> fling
    boolean pan(float,float,float,float) -> pan
    boolean panStop(float,float,int,int) -> panStop
    boolean zoom(float,float) -> zoom
    boolean pinch(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> pinch
com.ads.puzzle.flag.listener.PieceDetector -> com.ads.puzzle.flag.c.c:
    com.badlogic.gdx.scenes.scene2d.Stage stage -> a
    java.lang.String[][] answers -> b
    int[][] areaAnswers -> c
    boolean isPass(int) -> a
com.ads.puzzle.flag.listener.PieceListener -> com.ads.puzzle.flag.c.d:
    com.badlogic.gdx.scenes.scene2d.Stage stage -> a
    com.badlogic.gdx.math.Vector3 touchPoint -> b
    com.ads.puzzle.flag.controller.AreaController areaController -> c
    com.ads.puzzle.flag.controller.PieceController pieceCtrl -> d
    com.ads.puzzle.flag.actors.Area[] areaActors -> e
    com.badlogic.gdx.utils.SnapshotArray pieceActors -> f
    com.ads.puzzle.flag.actors.Piece downActor -> g
    float raw_x -> h
    float raw_y -> i
    float w -> j
    float h -> k
    boolean touchDown(float,float,int,int) -> touchDown
    boolean tap(float,float,int,int) -> tap
    boolean pan(float,float,float,float) -> pan
    boolean fling(float,float,int) -> fling
com.ads.puzzle.flag.screen.AboutScreen -> com.ads.puzzle.flag.d.a:
    com.badlogic.gdx.scenes.scene2d.ui.Image aboutImage -> b
    com.ads.puzzle.flag.screen.BaseScreen gameScreen -> c
    void show() -> show
    com.ads.puzzle.flag.screen.BaseScreen access$000(com.ads.puzzle.flag.screen.AboutScreen) -> a
com.ads.puzzle.flag.screen.AboutScreen$1 -> com.ads.puzzle.flag.d.b:
    com.ads.puzzle.flag.screen.AboutScreen this$0 -> a
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
com.ads.puzzle.flag.screen.AdGameScreen -> com.ads.puzzle.flag.d.c:
    float margin -> b
    float seriesW -> c
    float seriesH -> d
    com.ads.puzzle.flag.screen.BaseScreen baseScreen -> e
    void show() -> show
    void render(float) -> render
    com.ads.puzzle.flag.screen.BaseScreen access$000(com.ads.puzzle.flag.screen.AdGameScreen) -> a
com.ads.puzzle.flag.screen.AdGameScreen$1 -> com.ads.puzzle.flag.d.d:
    android.support.v4.util.DebugUtils val$series$702d04d9 -> a
    com.ads.puzzle.flag.screen.AdGameScreen this$0 -> b
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
com.ads.puzzle.flag.screen.AdGameScreen$2 -> com.ads.puzzle.flag.d.e:
    com.ads.puzzle.flag.screen.AdGameScreen this$0 -> a
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
com.ads.puzzle.flag.screen.BaseScreen -> com.ads.puzzle.flag.d.f:
    com.badlogic.gdx.scenes.scene2d.Stage stage -> b
    com.badlogic.gdx.graphics.g2d.Batch batch -> c
    com.ads.puzzle.flag.Puzzle puzzle -> d
    com.badlogic.gdx.graphics.g2d.BitmapFont gameFont -> e
    com.badlogic.gdx.graphics.g2d.BitmapFont otherFont -> f
    float y_bar -> g
    com.badlogic.gdx.scenes.scene2d.ui.ImageButton returnBtn -> a
    void show() -> show
    void createBtns() -> a
    void addActor(com.badlogic.gdx.scenes.scene2d.Actor) -> a
    void render(float) -> render
    com.ads.puzzle.flag.Puzzle getPuzzle() -> b
    com.badlogic.gdx.graphics.g2d.BitmapFont getGameFont() -> c
    com.badlogic.gdx.graphics.g2d.BitmapFont getOtherFont() -> d
    com.badlogic.gdx.scenes.scene2d.Stage getStage() -> e
    com.badlogic.gdx.graphics.g2d.Batch getBatch() -> f
    float getY_bar() -> g
com.ads.puzzle.flag.screen.GameScreen -> com.ads.puzzle.flag.d.g:
    int level -> b
    int gateNum -> c
    com.ads.puzzle.flag.controller.AreaController areaCtrl -> d
    com.ads.puzzle.flag.controller.PieceController pieceCtrl -> e
    com.ads.puzzle.flag.controller.ChallengeController challengeCtrl -> f
    com.ads.puzzle.flag.listener.PieceDetector gestureDetector -> g
    boolean openResultWin -> h
    boolean isPass -> i
    boolean isSuspend -> j
    com.ads.puzzle.flag.window.SupsendWin gameWindow -> k
    com.badlogic.gdx.InputMultiplexer multiplexer -> l
    com.badlogic.gdx.scenes.scene2d.Actor[] pieces -> m
    boolean isUsedHelp -> n
    boolean isUsingHelp -> o
    int areaId -> p
    int seconds -> q
    java.lang.String timeStr -> r
    boolean isShow -> s
    int starNum -> t
    com.badlogic.gdx.scenes.scene2d.ui.Label labTime -> u
    com.badlogic.gdx.scenes.scene2d.ui.Label labCount -> v
    java.util.concurrent.ScheduledExecutorService executorGateEnd -> w
    java.util.concurrent.ScheduledExecutorService executStarCount -> x
    java.util.concurrent.ScheduledExecutorService executTime -> y
    com.badlogic.gdx.graphics.g2d.ParticleEffect effect -> z
    void show() -> show
    void render(float) -> render
    void resumeTimer() -> h
    void createTimer() -> m
    void pause() -> pause
    int getLevel() -> i
    void return2init() -> j
    void refreshGame() -> k
    void useSos() -> l
    void setGateNum(int) -> a
    void access$000(com.ads.puzzle.flag.screen.GameScreen) -> a
    com.ads.puzzle.flag.window.SupsendWin access$102(com.ads.puzzle.flag.screen.GameScreen,com.ads.puzzle.flag.window.SupsendWin) -> a
    int access$200(com.ads.puzzle.flag.screen.GameScreen) -> b
    com.ads.puzzle.flag.window.SupsendWin access$100(com.ads.puzzle.flag.screen.GameScreen) -> c
    int access$308(com.ads.puzzle.flag.screen.GameScreen) -> d
    int access$300(com.ads.puzzle.flag.screen.GameScreen) -> e
    boolean access$402(com.ads.puzzle.flag.screen.GameScreen,boolean) -> a
    boolean access$500(com.ads.puzzle.flag.screen.GameScreen) -> f
    int access$608(com.ads.puzzle.flag.screen.GameScreen) -> g
    int access$600(com.ads.puzzle.flag.screen.GameScreen) -> h
    java.lang.String access$702(com.ads.puzzle.flag.screen.GameScreen,java.lang.String) -> a
com.ads.puzzle.flag.screen.GameScreen$1 -> com.ads.puzzle.flag.d.h:
    com.ads.puzzle.flag.screen.GameScreen this$0 -> a
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
com.ads.puzzle.flag.screen.GameScreen$2 -> com.ads.puzzle.flag.d.i:
    com.ads.puzzle.flag.screen.GameScreen this$0 -> a
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
com.ads.puzzle.flag.screen.GameScreen$3 -> com.ads.puzzle.flag.d.j:
    com.ads.puzzle.flag.screen.GameScreen this$0 -> a
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
com.ads.puzzle.flag.screen.GameScreen$4 -> com.ads.puzzle.flag.d.k:
    com.ads.puzzle.flag.screen.GameScreen this$0 -> a
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
com.ads.puzzle.flag.screen.GameScreen$5 -> com.ads.puzzle.flag.d.l:
    com.ads.puzzle.flag.screen.GameScreen this$0 -> a
    void run() -> run
com.ads.puzzle.flag.screen.GameScreen$6 -> com.ads.puzzle.flag.d.m:
    com.ads.puzzle.flag.screen.GameScreen this$0 -> a
    void run() -> run
com.ads.puzzle.flag.screen.GameScreen$7 -> com.ads.puzzle.flag.d.n:
    com.ads.puzzle.flag.screen.GameScreen this$0 -> a
    void run() -> run
com.ads.puzzle.flag.screen.GateScreen -> com.ads.puzzle.flag.d.o:
    int level -> b
    int starNum -> c
    void show() -> show
    int access$000(com.ads.puzzle.flag.screen.GateScreen) -> a
com.ads.puzzle.flag.screen.GateScreen$1 -> com.ads.puzzle.flag.d.p:
    com.ads.puzzle.flag.screen.GateScreen this$0 -> a
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
com.ads.puzzle.flag.screen.GateScreen$2 -> com.ads.puzzle.flag.d.q:
    com.ads.puzzle.flag.actors.Gate val$gate -> a
    com.ads.puzzle.flag.screen.GateScreen this$0 -> b
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
com.ads.puzzle.flag.screen.HelpScreen -> com.ads.puzzle.flag.d.r:
    com.badlogic.gdx.scenes.scene2d.ui.Image readmeImage -> b
    com.ads.puzzle.flag.screen.BaseScreen gameScreen -> c
    void show() -> show
    com.ads.puzzle.flag.screen.BaseScreen access$000(com.ads.puzzle.flag.screen.HelpScreen) -> a
com.ads.puzzle.flag.screen.HelpScreen$1 -> com.ads.puzzle.flag.d.s:
    com.ads.puzzle.flag.screen.HelpScreen this$0 -> a
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
com.ads.puzzle.flag.screen.LevelScreen -> com.ads.puzzle.flag.d.t:
    com.badlogic.gdx.scenes.scene2d.ui.ImageButton leftBtn -> b
    com.badlogic.gdx.scenes.scene2d.ui.ImageButton rightBtn -> c
    float lockX -> d
    float lockY -> e
    float lockSize -> f
    float levelSize -> g
    int level -> h
    com.ads.puzzle.flag.listener.LevelListener levelListener -> i
    float targetposition -> j
    float initPosition -> k
    boolean isAddLock -> l
    void show() -> show
    void lock() -> j
    void render(float) -> render
    int access$000(com.ads.puzzle.flag.screen.LevelScreen) -> a
    int access$010(com.ads.puzzle.flag.screen.LevelScreen) -> b
    com.ads.puzzle.flag.listener.LevelListener access$100(com.ads.puzzle.flag.screen.LevelScreen) -> c
    void access$200(com.ads.puzzle.flag.screen.LevelScreen) -> d
    int access$008(com.ads.puzzle.flag.screen.LevelScreen) -> e
    com.badlogic.gdx.scenes.scene2d.ui.ImageButton access$300(com.ads.puzzle.flag.screen.LevelScreen) -> f
    com.badlogic.gdx.scenes.scene2d.ui.ImageButton access$400(com.ads.puzzle.flag.screen.LevelScreen) -> g
com.ads.puzzle.flag.screen.LevelScreen$1 -> com.ads.puzzle.flag.d.u:
    com.ads.puzzle.flag.screen.LevelScreen this$0 -> a
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
com.ads.puzzle.flag.screen.LevelScreen$2 -> com.ads.puzzle.flag.d.v:
    com.ads.puzzle.flag.screen.LevelScreen this$0 -> a
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
com.ads.puzzle.flag.screen.LevelScreen$3 -> com.ads.puzzle.flag.d.w:
    com.ads.puzzle.flag.screen.LevelScreen this$0 -> a
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
com.ads.puzzle.flag.screen.LevelScreen$4 -> com.ads.puzzle.flag.d.x:
    com.ads.puzzle.flag.screen.LevelScreen this$0 -> a
    void run() -> run
com.ads.puzzle.flag.screen.MainScreen -> com.ads.puzzle.flag.d.y:
    com.ads.puzzle.flag.Puzzle puzzle -> b
    void show() -> show
    void pause() -> pause
    void dispose() -> dispose
    com.ads.puzzle.flag.Puzzle access$000(com.ads.puzzle.flag.screen.MainScreen) -> a
com.ads.puzzle.flag.screen.MainScreen$1 -> com.ads.puzzle.flag.d.z:
    com.ads.puzzle.flag.screen.MainScreen this$0 -> a
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
com.ads.puzzle.flag.screen.MainScreen$2 -> com.ads.puzzle.flag.d.A:
    com.ads.puzzle.flag.screen.MainScreen this$0 -> a
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
com.ads.puzzle.flag.screen.MainScreen$3 -> com.ads.puzzle.flag.d.B:
    com.ads.puzzle.flag.screen.MainScreen this$0 -> a
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
com.ads.puzzle.flag.screen.MainScreen$4 -> com.ads.puzzle.flag.d.C:
    com.ads.puzzle.flag.screen.MainScreen this$0 -> a
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
com.ads.puzzle.flag.screen.OtherScreen -> com.ads.puzzle.flag.d.D:
    com.badlogic.gdx.scenes.scene2d.ui.ImageButton shareBtn -> b
    com.badlogic.gdx.scenes.scene2d.ui.ImageButton adBtn -> c
    com.badlogic.gdx.scenes.scene2d.ui.Image star -> d
    com.badlogic.gdx.scenes.scene2d.ui.Label starLabel -> e
    void show() -> show
    void createBtns() -> a
    com.badlogic.gdx.scenes.scene2d.ui.Label getStarLabel() -> h
    int getStarNum() -> i
com.ads.puzzle.flag.screen.OtherScreen$1 -> com.ads.puzzle.flag.d.E:
    com.ads.puzzle.flag.screen.OtherScreen this$0 -> a
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
com.ads.puzzle.flag.screen.OtherScreen$2 -> com.ads.puzzle.flag.d.F:
    com.ads.puzzle.flag.screen.OtherScreen this$0 -> a
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
com.ads.puzzle.flag.screen.SettingScreen -> com.ads.puzzle.flag.d.G:
    com.ads.puzzle.flag.Puzzle game -> b
    com.badlogic.gdx.scenes.scene2d.ui.Image noMusic -> c
    com.badlogic.gdx.scenes.scene2d.ui.Image noSound -> d
    void show() -> show
    com.badlogic.gdx.scenes.scene2d.ui.Image access$000(com.ads.puzzle.flag.screen.SettingScreen) -> a
    com.badlogic.gdx.scenes.scene2d.ui.Image access$100(com.ads.puzzle.flag.screen.SettingScreen) -> b
    com.ads.puzzle.flag.Puzzle access$200(com.ads.puzzle.flag.screen.SettingScreen) -> c
com.ads.puzzle.flag.screen.SettingScreen$1 -> com.ads.puzzle.flag.d.H:
    com.ads.puzzle.flag.screen.SettingScreen this$0 -> a
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
com.ads.puzzle.flag.screen.SettingScreen$2 -> com.ads.puzzle.flag.d.I:
    com.ads.puzzle.flag.screen.SettingScreen this$0 -> a
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
com.ads.puzzle.flag.screen.SettingScreen$3 -> com.ads.puzzle.flag.d.J:
    com.ads.puzzle.flag.screen.SettingScreen this$0 -> a
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
com.ads.puzzle.flag.screen.SettingScreen$4 -> com.ads.puzzle.flag.d.K:
    com.ads.puzzle.flag.screen.SettingScreen this$0 -> a
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
com.ads.puzzle.flag.screen.SettingScreen$5 -> com.ads.puzzle.flag.d.L:
    com.ads.puzzle.flag.screen.SettingScreen this$0 -> a
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
com.ads.puzzle.flag.screen.SettingScreen$6 -> com.ads.puzzle.flag.d.M:
    com.ads.puzzle.flag.screen.SettingScreen this$0 -> a
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
com.ads.puzzle.flag.screen.SettingScreen$7 -> com.ads.puzzle.flag.d.N:
    com.ads.puzzle.flag.screen.SettingScreen this$0 -> a
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
com.ads.puzzle.flag.window.AdGameWin -> com.ads.puzzle.flag.e.a:
    com.ads.puzzle.flag.screen.AdGameScreen gameScreen -> b
    java.lang.String apkUrl -> c
    java.lang.String access$000(com.ads.puzzle.flag.window.AdGameWin) -> a
    com.ads.puzzle.flag.screen.AdGameScreen access$100(com.ads.puzzle.flag.window.AdGameWin) -> b
com.ads.puzzle.flag.window.AdGameWin$1 -> com.ads.puzzle.flag.e.b:
    com.ads.puzzle.flag.window.AdGameWin this$0 -> a
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
com.ads.puzzle.flag.window.AdGameWin$2 -> com.ads.puzzle.flag.e.c:
    com.ads.puzzle.flag.window.AdGameWin this$0 -> a
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
com.ads.puzzle.flag.window.BaseWin -> com.ads.puzzle.flag.e.d:
    com.badlogic.gdx.scenes.scene2d.ui.Image layerBg -> a
com.ads.puzzle.flag.window.ResultWin -> com.ads.puzzle.flag.e.e:
    com.ads.puzzle.flag.screen.GameScreen gameScreen -> b
    float space -> c
    com.badlogic.gdx.scenes.scene2d.ui.Image[] star_nulls -> d
    com.badlogic.gdx.scenes.scene2d.ui.Image[] stars -> e
    java.util.concurrent.ScheduledExecutorService executStarCount -> f
    com.badlogic.gdx.graphics.g2d.ParticleEffect effect -> g
    int starIndex -> h
    int starNum -> i
    boolean exeTimer -> j
    boolean end -> k
    com.badlogic.gdx.scenes.scene2d.ui.ImageButton gateBtn -> l
    com.badlogic.gdx.scenes.scene2d.ui.ImageButton refresh -> m
    com.badlogic.gdx.scenes.scene2d.ui.ImageButton next -> n
    com.badlogic.gdx.scenes.scene2d.Group group -> o
    com.ads.puzzle.flag.controller.ChallengeController challengeCtrl -> p
    float win_H -> q
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    int access$000(com.ads.puzzle.flag.window.ResultWin) -> a
    int access$100(com.ads.puzzle.flag.window.ResultWin) -> b
    com.ads.puzzle.flag.screen.GameScreen access$200(com.ads.puzzle.flag.window.ResultWin) -> c
    com.ads.puzzle.flag.controller.ChallengeController access$300(com.ads.puzzle.flag.window.ResultWin) -> d
    com.badlogic.gdx.scenes.scene2d.Group access$400(com.ads.puzzle.flag.window.ResultWin) -> e
    int access$508(com.ads.puzzle.flag.window.ResultWin) -> f
    int access$500(com.ads.puzzle.flag.window.ResultWin) -> g
com.ads.puzzle.flag.window.ResultWin$1 -> com.ads.puzzle.flag.e.f:
    com.ads.puzzle.flag.window.ResultWin this$0 -> a
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
com.ads.puzzle.flag.window.ResultWin$2 -> com.ads.puzzle.flag.e.g:
    com.ads.puzzle.flag.window.ResultWin this$0 -> a
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
com.ads.puzzle.flag.window.ResultWin$3 -> com.ads.puzzle.flag.e.h:
    com.ads.puzzle.flag.window.ResultWin this$0 -> a
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
com.ads.puzzle.flag.window.ResultWin$4 -> com.ads.puzzle.flag.e.i:
    com.ads.puzzle.flag.window.ResultWin this$0 -> a
    void run() -> run
com.ads.puzzle.flag.window.SupsendWin -> com.ads.puzzle.flag.e.j:
    com.ads.puzzle.flag.Puzzle puzzle -> b
    com.ads.puzzle.flag.screen.GameScreen gameScreen -> c
    float win_H -> d
    float win_Y -> e
    int level -> f
    com.badlogic.gdx.scenes.scene2d.ui.Image noMusic -> g
    com.badlogic.gdx.scenes.scene2d.ui.Image noSound -> h
    com.ads.puzzle.flag.Puzzle access$000(com.ads.puzzle.flag.window.SupsendWin) -> a
    com.badlogic.gdx.scenes.scene2d.ui.Image access$100(com.ads.puzzle.flag.window.SupsendWin) -> b
    com.badlogic.gdx.scenes.scene2d.ui.Image access$200(com.ads.puzzle.flag.window.SupsendWin) -> c
    com.ads.puzzle.flag.screen.GameScreen access$300(com.ads.puzzle.flag.window.SupsendWin) -> d
    int access$400(com.ads.puzzle.flag.window.SupsendWin) -> e
com.ads.puzzle.flag.window.SupsendWin$1 -> com.ads.puzzle.flag.e.k:
    com.ads.puzzle.flag.window.SupsendWin this$0 -> a
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
com.ads.puzzle.flag.window.SupsendWin$10 -> com.ads.puzzle.flag.e.l:
    com.ads.puzzle.flag.window.SupsendWin this$0 -> a
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
com.ads.puzzle.flag.window.SupsendWin$2 -> com.ads.puzzle.flag.e.m:
    com.ads.puzzle.flag.window.SupsendWin this$0 -> a
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
com.ads.puzzle.flag.window.SupsendWin$3 -> com.ads.puzzle.flag.e.n:
    com.ads.puzzle.flag.window.SupsendWin this$0 -> a
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
com.ads.puzzle.flag.window.SupsendWin$4 -> com.ads.puzzle.flag.e.o:
    com.ads.puzzle.flag.window.SupsendWin this$0 -> a
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
com.ads.puzzle.flag.window.SupsendWin$5 -> com.ads.puzzle.flag.e.p:
    com.ads.puzzle.flag.window.SupsendWin this$0 -> a
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
com.ads.puzzle.flag.window.SupsendWin$6 -> com.ads.puzzle.flag.e.q:
    com.ads.puzzle.flag.window.SupsendWin this$0 -> a
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
com.ads.puzzle.flag.window.SupsendWin$7 -> com.ads.puzzle.flag.e.r:
    com.ads.puzzle.flag.window.SupsendWin this$0 -> a
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
com.ads.puzzle.flag.window.SupsendWin$8 -> com.ads.puzzle.flag.e.s:
    com.ads.puzzle.flag.window.SupsendWin this$0 -> a
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
com.ads.puzzle.flag.window.SupsendWin$9 -> com.ads.puzzle.flag.e.t:
    com.ads.puzzle.flag.window.SupsendWin this$0 -> a
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
com.badlogic.gdx.Application -> com.badlogic.gdx.Application:
    int LOG_NONE -> LOG_NONE
    int LOG_DEBUG -> LOG_DEBUG
    int LOG_INFO -> LOG_INFO
    int LOG_ERROR -> LOG_ERROR
    com.badlogic.gdx.ApplicationListener getApplicationListener() -> getApplicationListener
    com.badlogic.gdx.Graphics getGraphics() -> getGraphics
    com.badlogic.gdx.Audio getAudio() -> getAudio
    com.badlogic.gdx.Input getInput() -> getInput
    com.badlogic.gdx.Files getFiles() -> getFiles
    com.badlogic.gdx.Net getNet() -> getNet
    void log(java.lang.String,java.lang.String) -> log
    void log(java.lang.String,java.lang.String,java.lang.Throwable) -> log
    void error(java.lang.String,java.lang.String) -> error
    void error(java.lang.String,java.lang.String,java.lang.Throwable) -> error
    void debug(java.lang.String,java.lang.String) -> debug
    void debug(java.lang.String,java.lang.String,java.lang.Throwable) -> debug
    void setLogLevel(int) -> setLogLevel
    int getLogLevel() -> getLogLevel
    com.badlogic.gdx.Application$ApplicationType getType() -> getType
    int getVersion() -> getVersion
    long getJavaHeap() -> getJavaHeap
    long getNativeHeap() -> getNativeHeap
    com.badlogic.gdx.Preferences getPreferences(java.lang.String) -> getPreferences
    com.badlogic.gdx.utils.Clipboard getClipboard() -> getClipboard
    void postRunnable(java.lang.Runnable) -> postRunnable
    void exit() -> exit
    void addLifecycleListener(com.badlogic.gdx.LifecycleListener) -> addLifecycleListener
    void removeLifecycleListener(com.badlogic.gdx.LifecycleListener) -> removeLifecycleListener
com.badlogic.gdx.Application$ApplicationType -> com.badlogic.gdx.Application$ApplicationType:
    com.badlogic.gdx.Application$ApplicationType Android -> Android
    com.badlogic.gdx.Application$ApplicationType Desktop -> Desktop
    com.badlogic.gdx.Application$ApplicationType HeadlessDesktop -> HeadlessDesktop
    com.badlogic.gdx.Application$ApplicationType Applet -> Applet
    com.badlogic.gdx.Application$ApplicationType WebGL -> WebGL
    com.badlogic.gdx.Application$ApplicationType iOS -> iOS
    com.badlogic.gdx.Application$ApplicationType[] $VALUES -> $VALUES
    com.badlogic.gdx.Application$ApplicationType[] values() -> values
    com.badlogic.gdx.Application$ApplicationType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.ApplicationAdapter -> com.badlogic.gdx.ApplicationAdapter:
    void create() -> create
    void resize(int,int) -> resize
    void render() -> render
    void pause() -> pause
    void resume() -> resume
    void dispose() -> dispose
com.badlogic.gdx.ApplicationListener -> com.badlogic.gdx.ApplicationListener:
    void create() -> create
    void resize(int,int) -> resize
    void render() -> render
    void pause() -> pause
    void resume() -> resume
    void dispose() -> dispose
com.badlogic.gdx.Audio -> com.badlogic.gdx.Audio:
    com.badlogic.gdx.audio.AudioDevice newAudioDevice(int,boolean) -> newAudioDevice
    com.badlogic.gdx.audio.AudioRecorder newAudioRecorder(int,boolean) -> newAudioRecorder
    com.badlogic.gdx.audio.Sound newSound(com.badlogic.gdx.files.FileHandle) -> newSound
    com.badlogic.gdx.audio.Music newMusic(com.badlogic.gdx.files.FileHandle) -> newMusic
com.badlogic.gdx.Files -> com.badlogic.gdx.Files:
    com.badlogic.gdx.files.FileHandle getFileHandle(java.lang.String,com.badlogic.gdx.Files$FileType) -> getFileHandle
    com.badlogic.gdx.files.FileHandle classpath(java.lang.String) -> classpath
    com.badlogic.gdx.files.FileHandle internal(java.lang.String) -> internal
    com.badlogic.gdx.files.FileHandle external(java.lang.String) -> external
    com.badlogic.gdx.files.FileHandle absolute(java.lang.String) -> absolute
    com.badlogic.gdx.files.FileHandle local(java.lang.String) -> local
    java.lang.String getExternalStoragePath() -> getExternalStoragePath
    boolean isExternalStorageAvailable() -> isExternalStorageAvailable
    java.lang.String getLocalStoragePath() -> getLocalStoragePath
    boolean isLocalStorageAvailable() -> isLocalStorageAvailable
com.badlogic.gdx.Files$FileType -> com.badlogic.gdx.Files$FileType:
    com.badlogic.gdx.Files$FileType Classpath -> Classpath
    com.badlogic.gdx.Files$FileType Internal -> Internal
    com.badlogic.gdx.Files$FileType External -> External
    com.badlogic.gdx.Files$FileType Absolute -> Absolute
    com.badlogic.gdx.Files$FileType Local -> Local
    com.badlogic.gdx.Files$FileType[] $VALUES -> $VALUES
    com.badlogic.gdx.Files$FileType[] values() -> values
    com.badlogic.gdx.Files$FileType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.Game -> com.badlogic.gdx.Game:
    com.badlogic.gdx.Screen screen -> screen
    void dispose() -> dispose
    void pause() -> pause
    void resume() -> resume
    void render() -> render
    void resize(int,int) -> resize
    void setScreen(com.badlogic.gdx.Screen) -> setScreen
    com.badlogic.gdx.Screen getScreen() -> getScreen
com.badlogic.gdx.Gdx -> com.badlogic.gdx.Gdx:
    com.badlogic.gdx.Application app -> app
    com.badlogic.gdx.Graphics graphics -> graphics
    com.badlogic.gdx.Audio audio -> audio
    com.badlogic.gdx.Input input -> input
    com.badlogic.gdx.Files files -> files
    com.badlogic.gdx.Net net -> net
    com.badlogic.gdx.graphics.GL20 gl -> gl
    com.badlogic.gdx.graphics.GL20 gl20 -> gl20
    com.badlogic.gdx.graphics.GL30 gl30 -> gl30
com.badlogic.gdx.Graphics -> com.badlogic.gdx.Graphics:
    boolean isGL30Available() -> isGL30Available
    com.badlogic.gdx.graphics.GL20 getGL20() -> getGL20
    com.badlogic.gdx.graphics.GL30 getGL30() -> getGL30
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    float getDeltaTime() -> getDeltaTime
    float getRawDeltaTime() -> getRawDeltaTime
    int getFramesPerSecond() -> getFramesPerSecond
    com.badlogic.gdx.Graphics$GraphicsType getType() -> getType
    float getPpiX() -> getPpiX
    float getPpiY() -> getPpiY
    float getPpcX() -> getPpcX
    float getPpcY() -> getPpcY
    float getDensity() -> getDensity
    boolean supportsDisplayModeChange() -> supportsDisplayModeChange
    com.badlogic.gdx.Graphics$DisplayMode[] getDisplayModes() -> getDisplayModes
    com.badlogic.gdx.Graphics$DisplayMode getDesktopDisplayMode() -> getDesktopDisplayMode
    boolean setDisplayMode(com.badlogic.gdx.Graphics$DisplayMode) -> setDisplayMode
    boolean setDisplayMode(int,int,boolean) -> setDisplayMode
    void setTitle(java.lang.String) -> setTitle
    void setVSync(boolean) -> setVSync
    com.badlogic.gdx.Graphics$BufferFormat getBufferFormat() -> getBufferFormat
    boolean supportsExtension(java.lang.String) -> supportsExtension
    void setContinuousRendering(boolean) -> setContinuousRendering
    boolean isContinuousRendering() -> isContinuousRendering
    void requestRendering() -> requestRendering
    boolean isFullscreen() -> isFullscreen
com.badlogic.gdx.Graphics$BufferFormat -> com.badlogic.gdx.Graphics$BufferFormat:
    int r -> r
    int g -> g
    int b -> b
    int a -> a
    int depth -> depth
    int stencil -> stencil
    int samples -> samples
    boolean coverageSampling -> coverageSampling
    java.lang.String toString() -> toString
com.badlogic.gdx.Graphics$DisplayMode -> com.badlogic.gdx.Graphics$DisplayMode:
    int width -> width
    int height -> height
    int refreshRate -> refreshRate
    int bitsPerPixel -> bitsPerPixel
    java.lang.String toString() -> toString
com.badlogic.gdx.Graphics$GraphicsType -> com.badlogic.gdx.Graphics$GraphicsType:
    com.badlogic.gdx.Graphics$GraphicsType AndroidGL -> AndroidGL
    com.badlogic.gdx.Graphics$GraphicsType LWJGL -> LWJGL
    com.badlogic.gdx.Graphics$GraphicsType Angle -> Angle
    com.badlogic.gdx.Graphics$GraphicsType WebGL -> WebGL
    com.badlogic.gdx.Graphics$GraphicsType iOSGL -> iOSGL
    com.badlogic.gdx.Graphics$GraphicsType JGLFW -> JGLFW
    com.badlogic.gdx.Graphics$GraphicsType Mock -> Mock
    com.badlogic.gdx.Graphics$GraphicsType[] $VALUES -> $VALUES
    com.badlogic.gdx.Graphics$GraphicsType[] values() -> values
    com.badlogic.gdx.Graphics$GraphicsType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.Input -> com.badlogic.gdx.Input:
    float getAccelerometerX() -> getAccelerometerX
    float getAccelerometerY() -> getAccelerometerY
    float getAccelerometerZ() -> getAccelerometerZ
    int getX() -> getX
    int getX(int) -> getX
    int getDeltaX() -> getDeltaX
    int getDeltaX(int) -> getDeltaX
    int getY() -> getY
    int getY(int) -> getY
    int getDeltaY() -> getDeltaY
    int getDeltaY(int) -> getDeltaY
    boolean isTouched() -> isTouched
    boolean justTouched() -> justTouched
    boolean isTouched(int) -> isTouched
    boolean isButtonPressed(int) -> isButtonPressed
    boolean isKeyPressed(int) -> isKeyPressed
    void getTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String) -> getTextInput
    void getPlaceholderTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String) -> getPlaceholderTextInput
    void setOnscreenKeyboardVisible(boolean) -> setOnscreenKeyboardVisible
    void vibrate(int) -> vibrate
    void vibrate(long[],int) -> vibrate
    void cancelVibrate() -> cancelVibrate
    float getAzimuth() -> getAzimuth
    float getPitch() -> getPitch
    float getRoll() -> getRoll
    void getRotationMatrix(float[]) -> getRotationMatrix
    long getCurrentEventTime() -> getCurrentEventTime
    void setCatchBackKey(boolean) -> setCatchBackKey
    void setCatchMenuKey(boolean) -> setCatchMenuKey
    void setInputProcessor(com.badlogic.gdx.InputProcessor) -> setInputProcessor
    com.badlogic.gdx.InputProcessor getInputProcessor() -> getInputProcessor
    boolean isPeripheralAvailable(com.badlogic.gdx.Input$Peripheral) -> isPeripheralAvailable
    int getRotation() -> getRotation
    com.badlogic.gdx.Input$Orientation getNativeOrientation() -> getNativeOrientation
    void setCursorCatched(boolean) -> setCursorCatched
    boolean isCursorCatched() -> isCursorCatched
    void setCursorPosition(int,int) -> setCursorPosition
    void setCursorImage(com.badlogic.gdx.graphics.Pixmap,int,int) -> setCursorImage
com.badlogic.gdx.Input$Buttons -> com.badlogic.gdx.Input$Buttons:
    int LEFT -> LEFT
    int RIGHT -> RIGHT
    int MIDDLE -> MIDDLE
com.badlogic.gdx.Input$Keys -> com.badlogic.gdx.Input$Keys:
    int ANY_KEY -> ANY_KEY
    int NUM_0 -> NUM_0
    int NUM_1 -> NUM_1
    int NUM_2 -> NUM_2
    int NUM_3 -> NUM_3
    int NUM_4 -> NUM_4
    int NUM_5 -> NUM_5
    int NUM_6 -> NUM_6
    int NUM_7 -> NUM_7
    int NUM_8 -> NUM_8
    int NUM_9 -> NUM_9
    int A -> A
    int ALT_LEFT -> ALT_LEFT
    int ALT_RIGHT -> ALT_RIGHT
    int APOSTROPHE -> APOSTROPHE
    int AT -> AT
    int B -> B
    int BACK -> BACK
    int BACKSLASH -> BACKSLASH
    int C -> C
    int CALL -> CALL
    int CAMERA -> CAMERA
    int CLEAR -> CLEAR
    int COMMA -> COMMA
    int D -> D
    int DEL -> DEL
    int BACKSPACE -> BACKSPACE
    int FORWARD_DEL -> FORWARD_DEL
    int DPAD_CENTER -> DPAD_CENTER
    int DPAD_DOWN -> DPAD_DOWN
    int DPAD_LEFT -> DPAD_LEFT
    int DPAD_RIGHT -> DPAD_RIGHT
    int DPAD_UP -> DPAD_UP
    int CENTER -> CENTER
    int DOWN -> DOWN
    int LEFT -> LEFT
    int RIGHT -> RIGHT
    int UP -> UP
    int E -> E
    int ENDCALL -> ENDCALL
    int ENTER -> ENTER
    int ENVELOPE -> ENVELOPE
    int EQUALS -> EQUALS
    int EXPLORER -> EXPLORER
    int F -> F
    int FOCUS -> FOCUS
    int G -> G
    int GRAVE -> GRAVE
    int H -> H
    int HEADSETHOOK -> HEADSETHOOK
    int HOME -> HOME
    int I -> I
    int J -> J
    int K -> K
    int L -> L
    int LEFT_BRACKET -> LEFT_BRACKET
    int M -> M
    int MEDIA_FAST_FORWARD -> MEDIA_FAST_FORWARD
    int MEDIA_NEXT -> MEDIA_NEXT
    int MEDIA_PLAY_PAUSE -> MEDIA_PLAY_PAUSE
    int MEDIA_PREVIOUS -> MEDIA_PREVIOUS
    int MEDIA_REWIND -> MEDIA_REWIND
    int MEDIA_STOP -> MEDIA_STOP
    int MENU -> MENU
    int MINUS -> MINUS
    int MUTE -> MUTE
    int N -> N
    int NOTIFICATION -> NOTIFICATION
    int NUM -> NUM
    int O -> O
    int P -> P
    int PERIOD -> PERIOD
    int PLUS -> PLUS
    int POUND -> POUND
    int POWER -> POWER
    int Q -> Q
    int R -> R
    int RIGHT_BRACKET -> RIGHT_BRACKET
    int S -> S
    int SEARCH -> SEARCH
    int SEMICOLON -> SEMICOLON
    int SHIFT_LEFT -> SHIFT_LEFT
    int SHIFT_RIGHT -> SHIFT_RIGHT
    int SLASH -> SLASH
    int SOFT_LEFT -> SOFT_LEFT
    int SOFT_RIGHT -> SOFT_RIGHT
    int SPACE -> SPACE
    int STAR -> STAR
    int SYM -> SYM
    int T -> T
    int TAB -> TAB
    int U -> U
    int UNKNOWN -> UNKNOWN
    int V -> V
    int VOLUME_DOWN -> VOLUME_DOWN
    int VOLUME_UP -> VOLUME_UP
    int W -> W
    int X -> X
    int Y -> Y
    int Z -> Z
    int META_ALT_LEFT_ON -> META_ALT_LEFT_ON
    int META_ALT_ON -> META_ALT_ON
    int META_ALT_RIGHT_ON -> META_ALT_RIGHT_ON
    int META_SHIFT_LEFT_ON -> META_SHIFT_LEFT_ON
    int META_SHIFT_ON -> META_SHIFT_ON
    int META_SHIFT_RIGHT_ON -> META_SHIFT_RIGHT_ON
    int META_SYM_ON -> META_SYM_ON
    int CONTROL_LEFT -> CONTROL_LEFT
    int CONTROL_RIGHT -> CONTROL_RIGHT
    int ESCAPE -> ESCAPE
    int END -> END
    int INSERT -> INSERT
    int PAGE_UP -> PAGE_UP
    int PAGE_DOWN -> PAGE_DOWN
    int PICTSYMBOLS -> PICTSYMBOLS
    int SWITCH_CHARSET -> SWITCH_CHARSET
    int BUTTON_CIRCLE -> BUTTON_CIRCLE
    int BUTTON_A -> BUTTON_A
    int BUTTON_B -> BUTTON_B
    int BUTTON_C -> BUTTON_C
    int BUTTON_X -> BUTTON_X
    int BUTTON_Y -> BUTTON_Y
    int BUTTON_Z -> BUTTON_Z
    int BUTTON_L1 -> BUTTON_L1
    int BUTTON_R1 -> BUTTON_R1
    int BUTTON_L2 -> BUTTON_L2
    int BUTTON_R2 -> BUTTON_R2
    int BUTTON_THUMBL -> BUTTON_THUMBL
    int BUTTON_THUMBR -> BUTTON_THUMBR
    int BUTTON_START -> BUTTON_START
    int BUTTON_SELECT -> BUTTON_SELECT
    int BUTTON_MODE -> BUTTON_MODE
    int NUMPAD_0 -> NUMPAD_0
    int NUMPAD_1 -> NUMPAD_1
    int NUMPAD_2 -> NUMPAD_2
    int NUMPAD_3 -> NUMPAD_3
    int NUMPAD_4 -> NUMPAD_4
    int NUMPAD_5 -> NUMPAD_5
    int NUMPAD_6 -> NUMPAD_6
    int NUMPAD_7 -> NUMPAD_7
    int NUMPAD_8 -> NUMPAD_8
    int NUMPAD_9 -> NUMPAD_9
    int COLON -> COLON
    int F1 -> F1
    int F2 -> F2
    int F3 -> F3
    int F4 -> F4
    int F5 -> F5
    int F6 -> F6
    int F7 -> F7
    int F8 -> F8
    int F9 -> F9
    int F10 -> F10
    int F11 -> F11
    int F12 -> F12
    com.badlogic.gdx.utils.ObjectIntMap keyNames -> keyNames
    java.lang.String toString(int) -> toString
    int valueOf(java.lang.String) -> valueOf
    void initializeKeyNames() -> initializeKeyNames
com.badlogic.gdx.Input$Orientation -> com.badlogic.gdx.Input$Orientation:
    com.badlogic.gdx.Input$Orientation Landscape -> Landscape
    com.badlogic.gdx.Input$Orientation Portrait -> Portrait
    com.badlogic.gdx.Input$Orientation[] $VALUES -> $VALUES
    com.badlogic.gdx.Input$Orientation[] values() -> values
    com.badlogic.gdx.Input$Orientation valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.Input$Peripheral -> com.badlogic.gdx.Input$Peripheral:
    com.badlogic.gdx.Input$Peripheral HardwareKeyboard -> HardwareKeyboard
    com.badlogic.gdx.Input$Peripheral OnscreenKeyboard -> OnscreenKeyboard
    com.badlogic.gdx.Input$Peripheral MultitouchScreen -> MultitouchScreen
    com.badlogic.gdx.Input$Peripheral Accelerometer -> Accelerometer
    com.badlogic.gdx.Input$Peripheral Compass -> Compass
    com.badlogic.gdx.Input$Peripheral Vibrator -> Vibrator
    com.badlogic.gdx.Input$Peripheral[] $VALUES -> $VALUES
    com.badlogic.gdx.Input$Peripheral[] values() -> values
    com.badlogic.gdx.Input$Peripheral valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.Input$TextInputListener -> com.badlogic.gdx.Input$TextInputListener:
    void input(java.lang.String) -> input
    void canceled() -> canceled
com.badlogic.gdx.InputAdapter -> com.badlogic.gdx.InputAdapter:
    boolean keyDown(int) -> keyDown
    boolean keyUp(int) -> keyUp
    boolean keyTyped(char) -> keyTyped
    boolean touchDown(int,int,int,int) -> touchDown
    boolean touchUp(int,int,int,int) -> touchUp
    boolean touchDragged(int,int,int) -> touchDragged
    boolean mouseMoved(int,int) -> mouseMoved
    boolean scrolled(int) -> scrolled
com.badlogic.gdx.InputMultiplexer -> com.badlogic.gdx.InputMultiplexer:
    com.badlogic.gdx.utils.Array processors -> processors
    void addProcessor(int,com.badlogic.gdx.InputProcessor) -> addProcessor
    void removeProcessor(int) -> removeProcessor
    void addProcessor(com.badlogic.gdx.InputProcessor) -> addProcessor
    void removeProcessor(com.badlogic.gdx.InputProcessor) -> removeProcessor
    int size() -> size
    void clear() -> clear
    void setProcessors(com.badlogic.gdx.utils.Array) -> setProcessors
    com.badlogic.gdx.utils.Array getProcessors() -> getProcessors
    boolean keyDown(int) -> keyDown
    boolean keyUp(int) -> keyUp
    boolean keyTyped(char) -> keyTyped
    boolean touchDown(int,int,int,int) -> touchDown
    boolean touchUp(int,int,int,int) -> touchUp
    boolean touchDragged(int,int,int) -> touchDragged
    boolean mouseMoved(int,int) -> mouseMoved
    boolean scrolled(int) -> scrolled
com.badlogic.gdx.InputProcessor -> com.badlogic.gdx.InputProcessor:
    boolean keyDown(int) -> keyDown
    boolean keyUp(int) -> keyUp
    boolean keyTyped(char) -> keyTyped
    boolean touchDown(int,int,int,int) -> touchDown
    boolean touchUp(int,int,int,int) -> touchUp
    boolean touchDragged(int,int,int) -> touchDragged
    boolean mouseMoved(int,int) -> mouseMoved
    boolean scrolled(int) -> scrolled
com.badlogic.gdx.InputProcessorQueue -> com.badlogic.gdx.InputProcessorQueue:
    int KEY_DOWN -> KEY_DOWN
    int KEY_UP -> KEY_UP
    int KEY_TYPED -> KEY_TYPED
    int TOUCH_DOWN -> TOUCH_DOWN
    int TOUCH_UP -> TOUCH_UP
    int TOUCH_DRAGGED -> TOUCH_DRAGGED
    int MOUSE_MOVED -> MOUSE_MOVED
    int SCROLLED -> SCROLLED
    com.badlogic.gdx.InputProcessor processor -> processor
    com.badlogic.gdx.utils.IntArray queue -> queue
    com.badlogic.gdx.utils.IntArray processingQueue -> processingQueue
    long currentEventTime -> currentEventTime
    void setProcessor(com.badlogic.gdx.InputProcessor) -> setProcessor
    com.badlogic.gdx.InputProcessor getProcessor() -> getProcessor
    void drain() -> drain
    void queueTime() -> queueTime
    boolean keyDown(int) -> keyDown
    boolean keyUp(int) -> keyUp
    boolean keyTyped(char) -> keyTyped
    boolean touchDown(int,int,int,int) -> touchDown
    boolean touchUp(int,int,int,int) -> touchUp
    boolean touchDragged(int,int,int) -> touchDragged
    boolean mouseMoved(int,int) -> mouseMoved
    boolean scrolled(int) -> scrolled
    long getCurrentEventTime() -> getCurrentEventTime
com.badlogic.gdx.LifecycleListener -> com.badlogic.gdx.LifecycleListener:
    void pause() -> pause
    void resume() -> resume
    void dispose() -> dispose
com.badlogic.gdx.Net -> com.badlogic.gdx.Net:
    void sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener) -> sendHttpRequest
    void cancelHttpRequest(com.badlogic.gdx.Net$HttpRequest) -> cancelHttpRequest
    com.badlogic.gdx.net.ServerSocket newServerSocket(com.badlogic.gdx.Net$Protocol,int,com.badlogic.gdx.net.ServerSocketHints) -> newServerSocket
    com.badlogic.gdx.net.Socket newClientSocket(com.badlogic.gdx.Net$Protocol,java.lang.String,int,com.badlogic.gdx.net.SocketHints) -> newClientSocket
    void openURI(java.lang.String) -> openURI
com.badlogic.gdx.Net$HttpMethods -> com.badlogic.gdx.Net$HttpMethods:
    java.lang.String GET -> GET
    java.lang.String POST -> POST
    java.lang.String PUT -> PUT
    java.lang.String DELETE -> DELETE
com.badlogic.gdx.Net$HttpRequest -> com.badlogic.gdx.Net$HttpRequest:
    java.lang.String httpMethod -> httpMethod
    java.lang.String url -> url
    java.util.Map headers -> headers
    int timeOut -> timeOut
    java.lang.String content -> content
    java.io.InputStream contentStream -> contentStream
    long contentLength -> contentLength
    void setUrl(java.lang.String) -> setUrl
    void setHeader(java.lang.String,java.lang.String) -> setHeader
    void setContent(java.lang.String) -> setContent
    void setContent(java.io.InputStream,long) -> setContent
    void setTimeOut(int) -> setTimeOut
    int getTimeOut() -> getTimeOut
    java.lang.String getMethod() -> getMethod
    java.lang.String getUrl() -> getUrl
    java.lang.String getContent() -> getContent
    java.io.InputStream getContentStream() -> getContentStream
    long getContentLength() -> getContentLength
    java.util.Map getHeaders() -> getHeaders
com.badlogic.gdx.Net$HttpResponse -> com.badlogic.gdx.Net$HttpResponse:
    byte[] getResult() -> getResult
    java.lang.String getResultAsString() -> getResultAsString
    java.io.InputStream getResultAsStream() -> getResultAsStream
    com.badlogic.gdx.net.HttpStatus getStatus() -> getStatus
    java.lang.String getHeader(java.lang.String) -> getHeader
    java.util.Map getHeaders() -> getHeaders
com.badlogic.gdx.Net$HttpResponseListener -> com.badlogic.gdx.Net$HttpResponseListener:
    void handleHttpResponse(com.badlogic.gdx.Net$HttpResponse) -> handleHttpResponse
    void failed(java.lang.Throwable) -> failed
    void cancelled() -> cancelled
com.badlogic.gdx.Net$Protocol -> com.badlogic.gdx.Net$Protocol:
    com.badlogic.gdx.Net$Protocol TCP -> TCP
    com.badlogic.gdx.Net$Protocol[] $VALUES -> $VALUES
    com.badlogic.gdx.Net$Protocol[] values() -> values
    com.badlogic.gdx.Net$Protocol valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.Preferences -> com.badlogic.gdx.Preferences:
    void putBoolean(java.lang.String,boolean) -> putBoolean
    void putInteger(java.lang.String,int) -> putInteger
    void putLong(java.lang.String,long) -> putLong
    void putFloat(java.lang.String,float) -> putFloat
    void putString(java.lang.String,java.lang.String) -> putString
    void put(java.util.Map) -> put
    boolean getBoolean(java.lang.String) -> getBoolean
    int getInteger(java.lang.String) -> getInteger
    long getLong(java.lang.String) -> getLong
    float getFloat(java.lang.String) -> getFloat
    java.lang.String getString(java.lang.String) -> getString
    boolean getBoolean(java.lang.String,boolean) -> getBoolean
    int getInteger(java.lang.String,int) -> getInteger
    long getLong(java.lang.String,long) -> getLong
    float getFloat(java.lang.String,float) -> getFloat
    java.lang.String getString(java.lang.String,java.lang.String) -> getString
    java.util.Map get() -> get
    boolean contains(java.lang.String) -> contains
    void clear() -> clear
    void remove(java.lang.String) -> remove
    void flush() -> flush
com.badlogic.gdx.Screen -> com.badlogic.gdx.Screen:
    void render(float) -> render
    void resize(int,int) -> resize
    void show() -> show
    void hide() -> hide
    void pause() -> pause
    void resume() -> resume
    void dispose() -> dispose
com.badlogic.gdx.ScreenAdapter -> com.badlogic.gdx.ScreenAdapter:
    void render(float) -> render
    void resize(int,int) -> resize
    void show() -> show
    void hide() -> hide
    void pause() -> pause
    void resume() -> resume
    void dispose() -> dispose
com.badlogic.gdx.Version -> com.badlogic.gdx.Version:
    java.lang.String VERSION -> VERSION
    int MAJOR -> MAJOR
    int MINOR -> MINOR
    int REVISION -> REVISION
    boolean isHigher(int,int,int) -> isHigher
    boolean isHigherEqual(int,int,int) -> isHigherEqual
    boolean isLower(int,int,int) -> isLower
    boolean isLowerEqual(int,int,int) -> isLowerEqual
com.badlogic.gdx.assets.AssetDescriptor -> com.badlogic.gdx.assets.AssetDescriptor:
    java.lang.String fileName -> fileName
    java.lang.Class type -> type
    com.badlogic.gdx.assets.AssetLoaderParameters params -> params
    com.badlogic.gdx.files.FileHandle file -> file
    java.lang.String toString() -> toString
com.badlogic.gdx.assets.AssetErrorListener -> com.badlogic.gdx.assets.AssetErrorListener:
    void error(com.badlogic.gdx.assets.AssetDescriptor,java.lang.Throwable) -> error
com.badlogic.gdx.assets.AssetLoaderParameters -> com.badlogic.gdx.assets.AssetLoaderParameters:
    com.badlogic.gdx.assets.AssetLoaderParameters$LoadedCallback loadedCallback -> loadedCallback
com.badlogic.gdx.assets.AssetLoaderParameters$LoadedCallback -> com.badlogic.gdx.assets.AssetLoaderParameters$LoadedCallback:
    void finishedLoading(com.badlogic.gdx.assets.AssetManager,java.lang.String,java.lang.Class) -> finishedLoading
com.badlogic.gdx.assets.AssetLoadingTask -> com.badlogic.gdx.assets.AssetLoadingTask:
    com.badlogic.gdx.assets.AssetManager manager -> manager
    com.badlogic.gdx.assets.AssetDescriptor assetDesc -> assetDesc
    com.badlogic.gdx.assets.loaders.AssetLoader loader -> loader
    com.badlogic.gdx.utils.async.AsyncExecutor executor -> executor
    long startTime -> startTime
    boolean asyncDone -> asyncDone
    boolean dependenciesLoaded -> dependenciesLoaded
    com.badlogic.gdx.utils.Array dependencies -> dependencies
    com.badlogic.gdx.utils.async.AsyncResult depsFuture -> depsFuture
    com.badlogic.gdx.utils.async.AsyncResult loadFuture -> loadFuture
    java.lang.Object asset -> asset
    int ticks -> ticks
    boolean cancel -> cancel
    java.lang.Void call() -> call
    boolean update() -> update
    void handleSyncLoader() -> handleSyncLoader
    void handleAsyncLoader() -> handleAsyncLoader
    com.badlogic.gdx.files.FileHandle resolve(com.badlogic.gdx.assets.loaders.AssetLoader,com.badlogic.gdx.assets.AssetDescriptor) -> resolve
    java.lang.Object getAsset() -> getAsset
    java.lang.Object call() -> call
com.badlogic.gdx.assets.AssetManager -> com.badlogic.gdx.assets.AssetManager:
    com.badlogic.gdx.utils.ObjectMap assets -> assets
    com.badlogic.gdx.utils.ObjectMap assetTypes -> assetTypes
    com.badlogic.gdx.utils.ObjectMap assetDependencies -> assetDependencies
    com.badlogic.gdx.utils.ObjectSet injected -> injected
    com.badlogic.gdx.utils.ObjectMap loaders -> loaders
    com.badlogic.gdx.utils.Array loadQueue -> loadQueue
    com.badlogic.gdx.utils.async.AsyncExecutor executor -> executor
    java.util.Stack tasks -> tasks
    com.badlogic.gdx.assets.AssetErrorListener listener -> listener
    int loaded -> loaded
    int toLoad -> toLoad
    com.badlogic.gdx.utils.Logger log -> log
    java.lang.Object get(java.lang.String) -> get
    java.lang.Object get(java.lang.String,java.lang.Class) -> get
    com.badlogic.gdx.utils.Array getAll(java.lang.Class,com.badlogic.gdx.utils.Array) -> getAll
    java.lang.Object get(com.badlogic.gdx.assets.AssetDescriptor) -> get
    void unload(java.lang.String) -> unload
    boolean containsAsset(java.lang.Object) -> containsAsset
    java.lang.String getAssetFileName(java.lang.Object) -> getAssetFileName
    boolean isLoaded(java.lang.String) -> isLoaded
    boolean isLoaded(java.lang.String,java.lang.Class) -> isLoaded
    com.badlogic.gdx.assets.loaders.AssetLoader getLoader(java.lang.Class) -> getLoader
    com.badlogic.gdx.assets.loaders.AssetLoader getLoader(java.lang.Class,java.lang.String) -> getLoader
    void load(java.lang.String,java.lang.Class) -> load
    void load(java.lang.String,java.lang.Class,com.badlogic.gdx.assets.AssetLoaderParameters) -> load
    void load(com.badlogic.gdx.assets.AssetDescriptor) -> load
    void disposeDependencies(java.lang.String) -> disposeDependencies
    boolean update() -> update
    boolean update(int) -> update
    void finishLoading() -> finishLoading
    void injectDependencies(java.lang.String,com.badlogic.gdx.utils.Array) -> injectDependencies
    void injectDependency(java.lang.String,com.badlogic.gdx.assets.AssetDescriptor) -> injectDependency
    void nextTask() -> nextTask
    void addTask(com.badlogic.gdx.assets.AssetDescriptor) -> addTask
    void addAsset(java.lang.String,java.lang.Class,java.lang.Object) -> addAsset
    boolean updateTask() -> updateTask
    void incrementRefCountedDependencies(java.lang.String) -> incrementRefCountedDependencies
    void handleTaskError(java.lang.Throwable) -> handleTaskError
    void setLoader(java.lang.Class,com.badlogic.gdx.assets.loaders.AssetLoader) -> setLoader
    void setLoader(java.lang.Class,java.lang.String,com.badlogic.gdx.assets.loaders.AssetLoader) -> setLoader
    int getLoadedAssets() -> getLoadedAssets
    int getQueuedAssets() -> getQueuedAssets
    float getProgress() -> getProgress
    void setErrorListener(com.badlogic.gdx.assets.AssetErrorListener) -> setErrorListener
    void dispose() -> dispose
    void clear() -> clear
    com.badlogic.gdx.utils.Logger getLogger() -> getLogger
    void setLogger(com.badlogic.gdx.utils.Logger) -> setLogger
    int getReferenceCount(java.lang.String) -> getReferenceCount
    void setReferenceCount(java.lang.String,int) -> setReferenceCount
    java.lang.String getDiagnostics() -> getDiagnostics
    com.badlogic.gdx.utils.Array getAssetNames() -> getAssetNames
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String) -> getDependencies
    java.lang.Class getAssetType(java.lang.String) -> getAssetType
com.badlogic.gdx.assets.RefCountedContainer -> com.badlogic.gdx.assets.RefCountedContainer:
    java.lang.Object object -> object
    int refCount -> refCount
    void incRefCount() -> incRefCount
    void decRefCount() -> decRefCount
    int getRefCount() -> getRefCount
    void setRefCount(int) -> setRefCount
    java.lang.Object getObject(java.lang.Class) -> getObject
    void setObject(java.lang.Object) -> setObject
com.badlogic.gdx.assets.loaders.AssetLoader -> com.badlogic.gdx.assets.loaders.AssetLoader:
    com.badlogic.gdx.assets.loaders.FileHandleResolver resolver -> resolver
    com.badlogic.gdx.files.FileHandle resolve(java.lang.String) -> resolve
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> getDependencies
com.badlogic.gdx.assets.loaders.AsynchronousAssetLoader -> com.badlogic.gdx.assets.loaders.AsynchronousAssetLoader:
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadAsync
    java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadSync
com.badlogic.gdx.assets.loaders.BitmapFontLoader -> com.badlogic.gdx.assets.loaders.BitmapFontLoader:
    com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData data -> data
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.BitmapFontLoader$BitmapFontParameter) -> getDependencies
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.BitmapFontLoader$BitmapFontParameter) -> loadAsync
    com.badlogic.gdx.graphics.g2d.BitmapFont loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.BitmapFontLoader$BitmapFontParameter) -> loadSync
    java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadSync
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadAsync
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> getDependencies
com.badlogic.gdx.assets.loaders.BitmapFontLoader$BitmapFontParameter -> com.badlogic.gdx.assets.loaders.BitmapFontLoader$BitmapFontParameter:
    boolean flip -> flip
    boolean genMipMaps -> genMipMaps
    com.badlogic.gdx.graphics.Texture$TextureFilter minFilter -> minFilter
    com.badlogic.gdx.graphics.Texture$TextureFilter magFilter -> magFilter
    com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData bitmapFontData -> bitmapFontData
com.badlogic.gdx.assets.loaders.FileHandleResolver -> com.badlogic.gdx.assets.loaders.FileHandleResolver:
    com.badlogic.gdx.files.FileHandle resolve(java.lang.String) -> resolve
com.badlogic.gdx.assets.loaders.I18NBundleLoader -> com.badlogic.gdx.assets.loaders.I18NBundleLoader:
    com.badlogic.gdx.utils.I18NBundle bundle -> bundle
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.I18NBundleLoader$I18NBundleParameter) -> loadAsync
    com.badlogic.gdx.utils.I18NBundle loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.I18NBundleLoader$I18NBundleParameter) -> loadSync
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.I18NBundleLoader$I18NBundleParameter) -> getDependencies
    java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadSync
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadAsync
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> getDependencies
com.badlogic.gdx.assets.loaders.I18NBundleLoader$I18NBundleParameter -> com.badlogic.gdx.assets.loaders.I18NBundleLoader$I18NBundleParameter:
    java.util.Locale locale -> locale
    java.lang.String encoding -> encoding
com.badlogic.gdx.assets.loaders.ModelLoader -> com.badlogic.gdx.assets.loaders.ModelLoader:
    com.badlogic.gdx.utils.Array items -> items
    com.badlogic.gdx.assets.loaders.ModelLoader$ModelParameters defaultParameters -> defaultParameters
    com.badlogic.gdx.graphics.g3d.model.data.ModelData loadModelData(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.ModelLoader$ModelParameters) -> loadModelData
    com.badlogic.gdx.graphics.g3d.model.data.ModelData loadModelData(com.badlogic.gdx.files.FileHandle) -> loadModelData
    com.badlogic.gdx.graphics.g3d.Model loadModel(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.utils.TextureProvider,com.badlogic.gdx.assets.loaders.ModelLoader$ModelParameters) -> loadModel
    com.badlogic.gdx.graphics.g3d.Model loadModel(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.ModelLoader$ModelParameters) -> loadModel
    com.badlogic.gdx.graphics.g3d.Model loadModel(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.utils.TextureProvider) -> loadModel
    com.badlogic.gdx.graphics.g3d.Model loadModel(com.badlogic.gdx.files.FileHandle) -> loadModel
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.ModelLoader$ModelParameters) -> getDependencies
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.ModelLoader$ModelParameters) -> loadAsync
    com.badlogic.gdx.graphics.g3d.Model loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.ModelLoader$ModelParameters) -> loadSync
    java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadSync
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadAsync
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> getDependencies
com.badlogic.gdx.assets.loaders.ModelLoader$ModelParameters -> com.badlogic.gdx.assets.loaders.ModelLoader$ModelParameters:
    com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter textureParameter -> textureParameter
com.badlogic.gdx.assets.loaders.MusicLoader -> com.badlogic.gdx.assets.loaders.MusicLoader:
    com.badlogic.gdx.audio.Music music -> music
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.MusicLoader$MusicParameter) -> loadAsync
    com.badlogic.gdx.audio.Music loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.MusicLoader$MusicParameter) -> loadSync
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.MusicLoader$MusicParameter) -> getDependencies
    java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadSync
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadAsync
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> getDependencies
com.badlogic.gdx.assets.loaders.MusicLoader$MusicParameter -> com.badlogic.gdx.assets.loaders.MusicLoader$MusicParameter:
com.badlogic.gdx.assets.loaders.ParticleEffectLoader -> com.badlogic.gdx.assets.loaders.ParticleEffectLoader:
    com.badlogic.gdx.graphics.g2d.ParticleEffect load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.ParticleEffectLoader$ParticleEffectParameter) -> load
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.ParticleEffectLoader$ParticleEffectParameter) -> getDependencies
    java.lang.Object load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> load
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> getDependencies
com.badlogic.gdx.assets.loaders.ParticleEffectLoader$ParticleEffectParameter -> com.badlogic.gdx.assets.loaders.ParticleEffectLoader$ParticleEffectParameter:
    java.lang.String atlasFile -> atlasFile
    com.badlogic.gdx.files.FileHandle imagesDir -> imagesDir
com.badlogic.gdx.assets.loaders.PixmapLoader -> com.badlogic.gdx.assets.loaders.PixmapLoader:
    com.badlogic.gdx.graphics.Pixmap pixmap -> pixmap
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.PixmapLoader$PixmapParameter) -> loadAsync
    com.badlogic.gdx.graphics.Pixmap loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.PixmapLoader$PixmapParameter) -> loadSync
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.PixmapLoader$PixmapParameter) -> getDependencies
    java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadSync
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadAsync
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> getDependencies
com.badlogic.gdx.assets.loaders.PixmapLoader$PixmapParameter -> com.badlogic.gdx.assets.loaders.PixmapLoader$PixmapParameter:
com.badlogic.gdx.assets.loaders.SkinLoader -> com.badlogic.gdx.assets.loaders.SkinLoader:
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.SkinLoader$SkinParameter) -> getDependencies
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.SkinLoader$SkinParameter) -> loadAsync
    com.badlogic.gdx.scenes.scene2d.ui.Skin loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.SkinLoader$SkinParameter) -> loadSync
    java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadSync
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadAsync
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> getDependencies
com.badlogic.gdx.assets.loaders.SkinLoader$SkinParameter -> com.badlogic.gdx.assets.loaders.SkinLoader$SkinParameter:
    java.lang.String textureAtlasPath -> textureAtlasPath
    com.badlogic.gdx.utils.ObjectMap resources -> resources
com.badlogic.gdx.assets.loaders.SoundLoader -> com.badlogic.gdx.assets.loaders.SoundLoader:
    com.badlogic.gdx.audio.Sound sound -> sound
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.SoundLoader$SoundParameter) -> loadAsync
    com.badlogic.gdx.audio.Sound loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.SoundLoader$SoundParameter) -> loadSync
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.SoundLoader$SoundParameter) -> getDependencies
    java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadSync
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadAsync
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> getDependencies
com.badlogic.gdx.assets.loaders.SoundLoader$SoundParameter -> com.badlogic.gdx.assets.loaders.SoundLoader$SoundParameter:
com.badlogic.gdx.assets.loaders.SynchronousAssetLoader -> com.badlogic.gdx.assets.loaders.SynchronousAssetLoader:
    java.lang.Object load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> load
com.badlogic.gdx.assets.loaders.TextureAtlasLoader -> com.badlogic.gdx.assets.loaders.TextureAtlasLoader:
    com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData data -> data
    com.badlogic.gdx.graphics.g2d.TextureAtlas load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.TextureAtlasLoader$TextureAtlasParameter) -> load
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.TextureAtlasLoader$TextureAtlasParameter) -> getDependencies
    java.lang.Object load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> load
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> getDependencies
com.badlogic.gdx.assets.loaders.TextureAtlasLoader$TextureAtlasParameter -> com.badlogic.gdx.assets.loaders.TextureAtlasLoader$TextureAtlasParameter:
    boolean flip -> flip
com.badlogic.gdx.assets.loaders.TextureLoader -> com.badlogic.gdx.assets.loaders.TextureLoader:
    com.badlogic.gdx.assets.loaders.TextureLoader$TextureLoaderInfo info -> info
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter) -> loadAsync
    com.badlogic.gdx.graphics.Texture loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter) -> loadSync
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter) -> getDependencies
    java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadSync
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadAsync
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> getDependencies
com.badlogic.gdx.assets.loaders.TextureLoader$TextureLoaderInfo -> com.badlogic.gdx.assets.loaders.TextureLoader$TextureLoaderInfo:
    java.lang.String filename -> filename
    com.badlogic.gdx.graphics.TextureData data -> data
    com.badlogic.gdx.graphics.Texture texture -> texture
com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter -> com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter:
    com.badlogic.gdx.graphics.Pixmap$Format format -> format
    boolean genMipMaps -> genMipMaps
    com.badlogic.gdx.graphics.Texture texture -> texture
    com.badlogic.gdx.graphics.TextureData textureData -> textureData
    com.badlogic.gdx.graphics.Texture$TextureFilter minFilter -> minFilter
    com.badlogic.gdx.graphics.Texture$TextureFilter magFilter -> magFilter
    com.badlogic.gdx.graphics.Texture$TextureWrap wrapU -> wrapU
    com.badlogic.gdx.graphics.Texture$TextureWrap wrapV -> wrapV
com.badlogic.gdx.assets.loaders.resolvers.AbsoluteFileHandleResolver -> com.badlogic.gdx.assets.loaders.resolvers.AbsoluteFileHandleResolver:
    com.badlogic.gdx.files.FileHandle resolve(java.lang.String) -> resolve
com.badlogic.gdx.assets.loaders.resolvers.ExternalFileHandleResolver -> com.badlogic.gdx.assets.loaders.resolvers.ExternalFileHandleResolver:
    com.badlogic.gdx.files.FileHandle resolve(java.lang.String) -> resolve
com.badlogic.gdx.assets.loaders.resolvers.InternalFileHandleResolver -> com.badlogic.gdx.assets.loaders.resolvers.InternalFileHandleResolver:
    com.badlogic.gdx.files.FileHandle resolve(java.lang.String) -> resolve
com.badlogic.gdx.assets.loaders.resolvers.LocalFileHandleResolver -> com.badlogic.gdx.assets.loaders.resolvers.LocalFileHandleResolver:
    com.badlogic.gdx.files.FileHandle resolve(java.lang.String) -> resolve
com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver -> com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver:
    com.badlogic.gdx.assets.loaders.FileHandleResolver baseResolver -> baseResolver
    com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver$Resolution[] descriptors -> descriptors
    com.badlogic.gdx.files.FileHandle resolve(java.lang.String) -> resolve
    java.lang.String resolve(com.badlogic.gdx.files.FileHandle,java.lang.String) -> resolve
    com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver$Resolution choose(com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver$Resolution[]) -> choose
com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver$Resolution -> com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver$Resolution:
    int portraitWidth -> portraitWidth
    int portraitHeight -> portraitHeight
    java.lang.String suffix -> suffix
com.badlogic.gdx.audio.AudioDevice -> com.badlogic.gdx.audio.AudioDevice:
    boolean isMono() -> isMono
    void writeSamples(short[],int,int) -> writeSamples
    void writeSamples(float[],int,int) -> writeSamples
    int getLatency() -> getLatency
    void dispose() -> dispose
    void setVolume(float) -> setVolume
com.badlogic.gdx.audio.AudioRecorder -> com.badlogic.gdx.audio.AudioRecorder:
    void read(short[],int,int) -> read
    void dispose() -> dispose
com.badlogic.gdx.audio.Music -> com.badlogic.gdx.audio.Music:
    void play() -> play
    void pause() -> pause
    void stop() -> stop
    boolean isPlaying() -> isPlaying
    void setLooping(boolean) -> setLooping
    boolean isLooping() -> isLooping
    void setVolume(float) -> setVolume
    float getVolume() -> getVolume
    void setPan(float,float) -> setPan
    float getPosition() -> getPosition
    void dispose() -> dispose
    void setOnCompletionListener(com.badlogic.gdx.audio.Music$OnCompletionListener) -> setOnCompletionListener
com.badlogic.gdx.audio.Music$OnCompletionListener -> com.badlogic.gdx.audio.Music$OnCompletionListener:
    void onCompletion(com.badlogic.gdx.audio.Music) -> onCompletion
com.badlogic.gdx.audio.Sound -> com.badlogic.gdx.audio.Sound:
    long play() -> play
    long play(float) -> play
    long play(float,float,float) -> play
    long loop() -> loop
    long loop(float) -> loop
    long loop(float,float,float) -> loop
    void stop() -> stop
    void pause() -> pause
    void resume() -> resume
    void dispose() -> dispose
    void stop(long) -> stop
    void pause(long) -> pause
    void resume(long) -> resume
    void setLooping(long,boolean) -> setLooping
    void setPitch(long,float) -> setPitch
    void setVolume(long,float) -> setVolume
    void setPan(long,float,float) -> setPan
    void setPriority(long,int) -> setPriority
com.badlogic.gdx.backends.android.AndroidApplication -> com.badlogic.gdx.backends.android.AndroidApplication:
    com.badlogic.gdx.backends.android.AndroidGraphics graphics -> graphics
    com.badlogic.gdx.backends.android.AndroidInput input -> input
    com.badlogic.gdx.backends.android.AndroidAudio audio -> audio
    com.badlogic.gdx.backends.android.AndroidFiles files -> files
    com.badlogic.gdx.backends.android.AndroidNet net -> net
    com.badlogic.gdx.ApplicationListener listener -> listener
    android.os.Handler handler -> handler
    boolean firstResume -> firstResume
    com.badlogic.gdx.utils.Array runnables -> runnables
    com.badlogic.gdx.utils.Array executedRunnables -> executedRunnables
    com.badlogic.gdx.utils.Array lifecycleListeners -> lifecycleListeners
    int logLevel -> logLevel
    boolean useImmersiveMode -> useImmersiveMode
    boolean hideStatusBar -> hideStatusBar
    int wasFocusChanged -> wasFocusChanged
    boolean isWaitingForAudio -> isWaitingForAudio
    com.badlogic.gdx.backends.android.AndroidClipboard clipboard -> clipboard
    void initialize(com.badlogic.gdx.ApplicationListener) -> initialize
    void initialize(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> initialize
    android.view.View initializeForView(com.badlogic.gdx.ApplicationListener) -> initializeForView
    android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> initializeForView
    void init(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,boolean) -> init
    android.widget.FrameLayout$LayoutParams createLayoutParams() -> createLayoutParams
    void createWakeLock(boolean) -> createWakeLock
    void hideStatusBar(boolean) -> hideStatusBar
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void useImmersiveMode(boolean) -> useImmersiveMode
    void onPause() -> onPause
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    com.badlogic.gdx.ApplicationListener getApplicationListener() -> getApplicationListener
    com.badlogic.gdx.Audio getAudio() -> getAudio
    com.badlogic.gdx.Files getFiles() -> getFiles
    com.badlogic.gdx.Graphics getGraphics() -> getGraphics
    com.badlogic.gdx.backends.android.AndroidInput getInput() -> getInput
    com.badlogic.gdx.Net getNet() -> getNet
    com.badlogic.gdx.Application$ApplicationType getType() -> getType
    int getVersion() -> getVersion
    long getJavaHeap() -> getJavaHeap
    long getNativeHeap() -> getNativeHeap
    com.badlogic.gdx.Preferences getPreferences(java.lang.String) -> getPreferences
    com.badlogic.gdx.utils.Clipboard getClipboard() -> getClipboard
    void postRunnable(java.lang.Runnable) -> postRunnable
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void exit() -> exit
    void debug(java.lang.String,java.lang.String) -> debug
    void debug(java.lang.String,java.lang.String,java.lang.Throwable) -> debug
    void log(java.lang.String,java.lang.String) -> log
    void log(java.lang.String,java.lang.String,java.lang.Throwable) -> log
    void error(java.lang.String,java.lang.String) -> error
    void error(java.lang.String,java.lang.String,java.lang.Throwable) -> error
    void setLogLevel(int) -> setLogLevel
    int getLogLevel() -> getLogLevel
    void addLifecycleListener(com.badlogic.gdx.LifecycleListener) -> addLifecycleListener
    void removeLifecycleListener(com.badlogic.gdx.LifecycleListener) -> removeLifecycleListener
    android.content.Context getContext() -> getContext
    com.badlogic.gdx.utils.Array getRunnables() -> getRunnables
    com.badlogic.gdx.utils.Array getExecutedRunnables() -> getExecutedRunnables
    com.badlogic.gdx.utils.Array getLifecycleListeners() -> getLifecycleListeners
    android.view.Window getApplicationWindow() -> getApplicationWindow
    android.os.Handler getHandler() -> getHandler
    com.badlogic.gdx.Input getInput() -> getInput
com.badlogic.gdx.backends.android.AndroidApplication$1 -> com.badlogic.gdx.backends.android.AndroidApplication$1:
    com.badlogic.gdx.backends.android.AndroidApplication this$0 -> this$0
    void resume() -> resume
    void pause() -> pause
    void dispose() -> dispose
com.badlogic.gdx.backends.android.AndroidApplication$2 -> com.badlogic.gdx.backends.android.AndroidApplication$2:
    com.badlogic.gdx.backends.android.AndroidApplication this$0 -> this$0
    void run() -> run
com.badlogic.gdx.backends.android.AndroidApplicationBase -> com.badlogic.gdx.backends.android.AndroidApplicationBase:
    int MINIMUM_SDK -> MINIMUM_SDK
    android.content.Context getContext() -> getContext
    com.badlogic.gdx.utils.Array getRunnables() -> getRunnables
    com.badlogic.gdx.utils.Array getExecutedRunnables() -> getExecutedRunnables
    void runOnUiThread(java.lang.Runnable) -> runOnUiThread
    void startActivity(android.content.Intent) -> startActivity
    com.badlogic.gdx.backends.android.AndroidInput getInput() -> getInput
    com.badlogic.gdx.utils.Array getLifecycleListeners() -> getLifecycleListeners
    android.view.Window getApplicationWindow() -> getApplicationWindow
    android.view.WindowManager getWindowManager() -> getWindowManager
    void useImmersiveMode(boolean) -> useImmersiveMode
    android.os.Handler getHandler() -> getHandler
com.badlogic.gdx.backends.android.AndroidApplicationConfiguration -> com.badlogic.gdx.backends.android.AndroidApplicationConfiguration:
    int r -> r
    int g -> g
    int b -> b
    int a -> a
    int depth -> depth
    int stencil -> stencil
    int numSamples -> numSamples
    boolean useAccelerometer -> useAccelerometer
    boolean useCompass -> useCompass
    int touchSleepTime -> touchSleepTime
    boolean useWakelock -> useWakelock
    boolean hideStatusBar -> hideStatusBar
    boolean disableAudio -> disableAudio
    int maxSimultaneousSounds -> maxSimultaneousSounds
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy resolutionStrategy -> resolutionStrategy
    boolean getTouchEventsForLiveWallpaper -> getTouchEventsForLiveWallpaper
    boolean useImmersiveMode -> useImmersiveMode
    boolean useGLSurfaceView20API18 -> useGLSurfaceView20API18
com.badlogic.gdx.backends.android.AndroidAudio -> com.badlogic.gdx.backends.android.AndroidAudio:
    android.media.SoundPool soundPool -> soundPool
    android.media.AudioManager manager -> manager
    java.util.List musics -> musics
    void pause() -> pause
    void resume() -> resume
    com.badlogic.gdx.audio.AudioDevice newAudioDevice(int,boolean) -> newAudioDevice
    com.badlogic.gdx.audio.Music newMusic(com.badlogic.gdx.files.FileHandle) -> newMusic
    com.badlogic.gdx.audio.Sound newSound(com.badlogic.gdx.files.FileHandle) -> newSound
    com.badlogic.gdx.audio.AudioRecorder newAudioRecorder(int,boolean) -> newAudioRecorder
    void dispose() -> dispose
com.badlogic.gdx.backends.android.AndroidAudioDevice -> com.badlogic.gdx.backends.android.AndroidAudioDevice:
    android.media.AudioTrack track -> track
    short[] buffer -> buffer
    boolean isMono -> isMono
    int latency -> latency
    void dispose() -> dispose
    boolean isMono() -> isMono
    void writeSamples(short[],int,int) -> writeSamples
    void writeSamples(float[],int,int) -> writeSamples
    int getLatency() -> getLatency
    void setVolume(float) -> setVolume
com.badlogic.gdx.backends.android.AndroidAudioRecorder -> com.badlogic.gdx.backends.android.AndroidAudioRecorder:
    android.media.AudioRecord recorder -> recorder
    void dispose() -> dispose
    void read(short[],int,int) -> read
com.badlogic.gdx.backends.android.AndroidClipboard -> com.badlogic.gdx.backends.android.AndroidClipboard:
    android.content.Context context -> context
    java.lang.String getContents() -> getContents
    void setContents(java.lang.String) -> setContents
com.badlogic.gdx.backends.android.AndroidClipboard$1 -> com.badlogic.gdx.backends.android.AndroidClipboard$1:
    java.lang.String val$contents -> val$contents
    com.badlogic.gdx.backends.android.AndroidClipboard this$0 -> this$0
    void run() -> run
com.badlogic.gdx.backends.android.AndroidDaydream -> com.badlogic.gdx.backends.android.AndroidDaydream:
    com.badlogic.gdx.backends.android.AndroidGraphics graphics -> graphics
    com.badlogic.gdx.backends.android.AndroidInput input -> input
    com.badlogic.gdx.backends.android.AndroidAudio audio -> audio
    com.badlogic.gdx.backends.android.AndroidFiles files -> files
    com.badlogic.gdx.backends.android.AndroidNet net -> net
    com.badlogic.gdx.ApplicationListener listener -> listener
    android.os.Handler handler -> handler
    boolean firstResume -> firstResume
    com.badlogic.gdx.utils.Array runnables -> runnables
    com.badlogic.gdx.utils.Array executedRunnables -> executedRunnables
    com.badlogic.gdx.utils.Array lifecycleListeners -> lifecycleListeners
    int logLevel -> logLevel
    com.badlogic.gdx.backends.android.AndroidClipboard clipboard -> clipboard
    void initialize(com.badlogic.gdx.ApplicationListener) -> initialize
    void initialize(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> initialize
    android.view.View initializeForView(com.badlogic.gdx.ApplicationListener) -> initializeForView
    android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> initializeForView
    void init(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,boolean) -> init
    android.widget.FrameLayout$LayoutParams createLayoutParams() -> createLayoutParams
    void createWakeLock(boolean) -> createWakeLock
    void hideStatusBar(com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> hideStatusBar
    void onDreamingStopped() -> onDreamingStopped
    void onDreamingStarted() -> onDreamingStarted
    void onDetachedFromWindow() -> onDetachedFromWindow
    com.badlogic.gdx.ApplicationListener getApplicationListener() -> getApplicationListener
    com.badlogic.gdx.Audio getAudio() -> getAudio
    com.badlogic.gdx.Files getFiles() -> getFiles
    com.badlogic.gdx.Graphics getGraphics() -> getGraphics
    com.badlogic.gdx.backends.android.AndroidInput getInput() -> getInput
    com.badlogic.gdx.Net getNet() -> getNet
    com.badlogic.gdx.Application$ApplicationType getType() -> getType
    int getVersion() -> getVersion
    long getJavaHeap() -> getJavaHeap
    long getNativeHeap() -> getNativeHeap
    com.badlogic.gdx.Preferences getPreferences(java.lang.String) -> getPreferences
    com.badlogic.gdx.utils.Clipboard getClipboard() -> getClipboard
    void postRunnable(java.lang.Runnable) -> postRunnable
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void exit() -> exit
    void debug(java.lang.String,java.lang.String) -> debug
    void debug(java.lang.String,java.lang.String,java.lang.Throwable) -> debug
    void log(java.lang.String,java.lang.String) -> log
    void log(java.lang.String,java.lang.String,java.lang.Throwable) -> log
    void error(java.lang.String,java.lang.String) -> error
    void error(java.lang.String,java.lang.String,java.lang.Throwable) -> error
    void setLogLevel(int) -> setLogLevel
    int getLogLevel() -> getLogLevel
    void addLifecycleListener(com.badlogic.gdx.LifecycleListener) -> addLifecycleListener
    void removeLifecycleListener(com.badlogic.gdx.LifecycleListener) -> removeLifecycleListener
    android.content.Context getContext() -> getContext
    com.badlogic.gdx.utils.Array getRunnables() -> getRunnables
    com.badlogic.gdx.utils.Array getExecutedRunnables() -> getExecutedRunnables
    com.badlogic.gdx.utils.Array getLifecycleListeners() -> getLifecycleListeners
    android.view.Window getApplicationWindow() -> getApplicationWindow
    android.os.Handler getHandler() -> getHandler
    void runOnUiThread(java.lang.Runnable) -> runOnUiThread
    void useImmersiveMode(boolean) -> useImmersiveMode
    com.badlogic.gdx.Input getInput() -> getInput
com.badlogic.gdx.backends.android.AndroidDaydream$1 -> com.badlogic.gdx.backends.android.AndroidDaydream$1:
    com.badlogic.gdx.backends.android.AndroidDaydream this$0 -> this$0
    void resume() -> resume
    void pause() -> pause
    void dispose() -> dispose
com.badlogic.gdx.backends.android.AndroidDaydream$2 -> com.badlogic.gdx.backends.android.AndroidDaydream$2:
    com.badlogic.gdx.backends.android.AndroidDaydream this$0 -> this$0
    void run() -> run
com.badlogic.gdx.backends.android.AndroidFileHandle -> com.badlogic.gdx.backends.android.AndroidFileHandle:
    android.content.res.AssetManager assets -> assets
    com.badlogic.gdx.files.FileHandle child(java.lang.String) -> child
    com.badlogic.gdx.files.FileHandle sibling(java.lang.String) -> sibling
    com.badlogic.gdx.files.FileHandle parent() -> parent
    java.io.InputStream read() -> read
    com.badlogic.gdx.files.FileHandle[] list() -> list
    com.badlogic.gdx.files.FileHandle[] list(java.io.FileFilter) -> list
    com.badlogic.gdx.files.FileHandle[] list(java.io.FilenameFilter) -> list
    com.badlogic.gdx.files.FileHandle[] list(java.lang.String) -> list
    boolean isDirectory() -> isDirectory
    boolean exists() -> exists
    long length() -> length
    long lastModified() -> lastModified
    java.io.File file() -> file
com.badlogic.gdx.backends.android.AndroidFiles -> com.badlogic.gdx.backends.android.AndroidFiles:
    java.lang.String sdcard -> sdcard
    java.lang.String localpath -> localpath
    android.content.res.AssetManager assets -> assets
    com.badlogic.gdx.files.FileHandle getFileHandle(java.lang.String,com.badlogic.gdx.Files$FileType) -> getFileHandle
    com.badlogic.gdx.files.FileHandle classpath(java.lang.String) -> classpath
    com.badlogic.gdx.files.FileHandle internal(java.lang.String) -> internal
    com.badlogic.gdx.files.FileHandle external(java.lang.String) -> external
    com.badlogic.gdx.files.FileHandle absolute(java.lang.String) -> absolute
    com.badlogic.gdx.files.FileHandle local(java.lang.String) -> local
    java.lang.String getExternalStoragePath() -> getExternalStoragePath
    boolean isExternalStorageAvailable() -> isExternalStorageAvailable
    java.lang.String getLocalStoragePath() -> getLocalStoragePath
    boolean isLocalStorageAvailable() -> isLocalStorageAvailable
com.badlogic.gdx.backends.android.AndroidFragmentApplication -> com.badlogic.gdx.backends.android.AndroidFragmentApplication:
    com.badlogic.gdx.backends.android.AndroidGraphics graphics -> graphics
    com.badlogic.gdx.backends.android.AndroidInput input -> input
    com.badlogic.gdx.backends.android.AndroidAudio audio -> audio
    com.badlogic.gdx.backends.android.AndroidFiles files -> files
    com.badlogic.gdx.backends.android.AndroidNet net -> net
    com.badlogic.gdx.ApplicationListener listener -> listener
    android.os.Handler handler -> handler
    boolean firstResume -> firstResume
    com.badlogic.gdx.utils.Array runnables -> runnables
    com.badlogic.gdx.utils.Array executedRunnables -> executedRunnables
    com.badlogic.gdx.utils.Array lifecycleListeners -> lifecycleListeners
    int logLevel -> logLevel
    com.badlogic.gdx.backends.android.AndroidFragmentApplication$Callbacks callbacks -> callbacks
    com.badlogic.gdx.backends.android.AndroidClipboard clipboard -> clipboard
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    android.widget.FrameLayout$LayoutParams createLayoutParams() -> createLayoutParams
    void createWakeLock(boolean) -> createWakeLock
    void useImmersiveMode(boolean) -> useImmersiveMode
    android.view.View initializeForView(com.badlogic.gdx.ApplicationListener) -> initializeForView
    android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> initializeForView
    void onPause() -> onPause
    void onResume() -> onResume
    com.badlogic.gdx.ApplicationListener getApplicationListener() -> getApplicationListener
    com.badlogic.gdx.Audio getAudio() -> getAudio
    com.badlogic.gdx.Files getFiles() -> getFiles
    com.badlogic.gdx.Graphics getGraphics() -> getGraphics
    com.badlogic.gdx.backends.android.AndroidInput getInput() -> getInput
    com.badlogic.gdx.Net getNet() -> getNet
    com.badlogic.gdx.Application$ApplicationType getType() -> getType
    int getVersion() -> getVersion
    long getJavaHeap() -> getJavaHeap
    long getNativeHeap() -> getNativeHeap
    com.badlogic.gdx.Preferences getPreferences(java.lang.String) -> getPreferences
    com.badlogic.gdx.utils.Clipboard getClipboard() -> getClipboard
    void postRunnable(java.lang.Runnable) -> postRunnable
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void exit() -> exit
    void debug(java.lang.String,java.lang.String) -> debug
    void debug(java.lang.String,java.lang.String,java.lang.Throwable) -> debug
    void log(java.lang.String,java.lang.String) -> log
    void log(java.lang.String,java.lang.String,java.lang.Throwable) -> log
    void error(java.lang.String,java.lang.String) -> error
    void error(java.lang.String,java.lang.String,java.lang.Throwable) -> error
    void setLogLevel(int) -> setLogLevel
    int getLogLevel() -> getLogLevel
    void addLifecycleListener(com.badlogic.gdx.LifecycleListener) -> addLifecycleListener
    void removeLifecycleListener(com.badlogic.gdx.LifecycleListener) -> removeLifecycleListener
    android.content.Context getContext() -> getContext
    com.badlogic.gdx.utils.Array getRunnables() -> getRunnables
    com.badlogic.gdx.utils.Array getExecutedRunnables() -> getExecutedRunnables
    void runOnUiThread(java.lang.Runnable) -> runOnUiThread
    com.badlogic.gdx.utils.Array getLifecycleListeners() -> getLifecycleListeners
    android.view.Window getApplicationWindow() -> getApplicationWindow
    android.os.Handler getHandler() -> getHandler
    android.view.WindowManager getWindowManager() -> getWindowManager
    com.badlogic.gdx.Input getInput() -> getInput
com.badlogic.gdx.backends.android.AndroidFragmentApplication$1 -> com.badlogic.gdx.backends.android.AndroidFragmentApplication$1:
    com.badlogic.gdx.backends.android.AndroidFragmentApplication this$0 -> this$0
    void resume() -> resume
    void pause() -> pause
    void dispose() -> dispose
com.badlogic.gdx.backends.android.AndroidFragmentApplication$2 -> com.badlogic.gdx.backends.android.AndroidFragmentApplication$2:
    com.badlogic.gdx.backends.android.AndroidFragmentApplication this$0 -> this$0
    void run() -> run
com.badlogic.gdx.backends.android.AndroidFragmentApplication$Callbacks -> com.badlogic.gdx.backends.android.AndroidFragmentApplication$Callbacks:
    void exit() -> exit
com.badlogic.gdx.backends.android.AndroidGL20 -> com.badlogic.gdx.backends.android.AndroidGL20:
    void init() -> init
    void glActiveTexture(int) -> glActiveTexture
    void glAttachShader(int,int) -> glAttachShader
    void glBindAttribLocation(int,int,java.lang.String) -> glBindAttribLocation
    void glBindBuffer(int,int) -> glBindBuffer
    void glBindFramebuffer(int,int) -> glBindFramebuffer
    void glBindRenderbuffer(int,int) -> glBindRenderbuffer
    void glBindTexture(int,int) -> glBindTexture
    void glBlendColor(float,float,float,float) -> glBlendColor
    void glBlendEquation(int) -> glBlendEquation
    void glBlendEquationSeparate(int,int) -> glBlendEquationSeparate
    void glBlendFunc(int,int) -> glBlendFunc
    void glBlendFuncSeparate(int,int,int,int) -> glBlendFuncSeparate
    void glBufferData(int,int,java.nio.Buffer,int) -> glBufferData
    void glBufferSubData(int,int,int,java.nio.Buffer) -> glBufferSubData
    int glCheckFramebufferStatus(int) -> glCheckFramebufferStatus
    void glClear(int) -> glClear
    void glClearColor(float,float,float,float) -> glClearColor
    void glClearDepthf(float) -> glClearDepthf
    void glClearStencil(int) -> glClearStencil
    void glColorMask(boolean,boolean,boolean,boolean) -> glColorMask
    void glCompileShader(int) -> glCompileShader
    void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexImage2D
    void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexSubImage2D
    void glCopyTexImage2D(int,int,int,int,int,int,int,int) -> glCopyTexImage2D
    void glCopyTexSubImage2D(int,int,int,int,int,int,int,int) -> glCopyTexSubImage2D
    int glCreateProgram() -> glCreateProgram
    int glCreateShader(int) -> glCreateShader
    void glCullFace(int) -> glCullFace
    void glDeleteBuffers(int,java.nio.IntBuffer) -> glDeleteBuffers
    void glDeleteFramebuffers(int,java.nio.IntBuffer) -> glDeleteFramebuffers
    void glDeleteProgram(int) -> glDeleteProgram
    void glDeleteRenderbuffers(int,java.nio.IntBuffer) -> glDeleteRenderbuffers
    void glDeleteShader(int) -> glDeleteShader
    void glDeleteTextures(int,java.nio.IntBuffer) -> glDeleteTextures
    void glDepthFunc(int) -> glDepthFunc
    void glDepthMask(boolean) -> glDepthMask
    void glDepthRangef(float,float) -> glDepthRangef
    void glDetachShader(int,int) -> glDetachShader
    void glDisable(int) -> glDisable
    void glDisableVertexAttribArray(int) -> glDisableVertexAttribArray
    void glDrawArrays(int,int,int) -> glDrawArrays
    void glDrawElements(int,int,int,java.nio.Buffer) -> glDrawElements
    void glDrawElements(int,int,int,int) -> glDrawElements
    void glEnable(int) -> glEnable
    void glEnableVertexAttribArray(int) -> glEnableVertexAttribArray
    void glFinish() -> glFinish
    void glFlush() -> glFlush
    void glFramebufferRenderbuffer(int,int,int,int) -> glFramebufferRenderbuffer
    void glFramebufferTexture2D(int,int,int,int,int) -> glFramebufferTexture2D
    void glFrontFace(int) -> glFrontFace
    void glGenBuffers(int,java.nio.IntBuffer) -> glGenBuffers
    void glGenerateMipmap(int) -> glGenerateMipmap
    void glGenFramebuffers(int,java.nio.IntBuffer) -> glGenFramebuffers
    void glGenRenderbuffers(int,java.nio.IntBuffer) -> glGenRenderbuffers
    void glGenTextures(int,java.nio.IntBuffer) -> glGenTextures
    java.lang.String glGetActiveAttrib(int,int,java.nio.IntBuffer,java.nio.Buffer) -> glGetActiveAttrib
    java.lang.String glGetActiveUniform(int,int,java.nio.IntBuffer,java.nio.Buffer) -> glGetActiveUniform
    void glGetAttachedShaders(int,int,java.nio.Buffer,java.nio.IntBuffer) -> glGetAttachedShaders
    int glGetAttribLocation(int,java.lang.String) -> glGetAttribLocation
    void glGetBooleanv(int,java.nio.Buffer) -> glGetBooleanv
    void glGetBufferParameteriv(int,int,java.nio.IntBuffer) -> glGetBufferParameteriv
    int glGetError() -> glGetError
    void glGetFloatv(int,java.nio.FloatBuffer) -> glGetFloatv
    void glGetFramebufferAttachmentParameteriv(int,int,int,java.nio.IntBuffer) -> glGetFramebufferAttachmentParameteriv
    void glGetIntegerv(int,java.nio.IntBuffer) -> glGetIntegerv
    void glGetProgramiv(int,int,java.nio.IntBuffer) -> glGetProgramiv
    java.lang.String glGetProgramInfoLog(int) -> glGetProgramInfoLog
    void glGetRenderbufferParameteriv(int,int,java.nio.IntBuffer) -> glGetRenderbufferParameteriv
    void glGetShaderiv(int,int,java.nio.IntBuffer) -> glGetShaderiv
    java.lang.String glGetShaderInfoLog(int) -> glGetShaderInfoLog
    void glGetShaderPrecisionFormat(int,int,java.nio.IntBuffer,java.nio.IntBuffer) -> glGetShaderPrecisionFormat
    void glGetShaderSource(int,int,java.nio.Buffer,java.lang.String) -> glGetShaderSource
    java.lang.String glGetString(int) -> glGetString
    void glGetTexParameterfv(int,int,java.nio.FloatBuffer) -> glGetTexParameterfv
    void glGetTexParameteriv(int,int,java.nio.IntBuffer) -> glGetTexParameteriv
    void glGetUniformfv(int,int,java.nio.FloatBuffer) -> glGetUniformfv
    void glGetUniformiv(int,int,java.nio.IntBuffer) -> glGetUniformiv
    int glGetUniformLocation(int,java.lang.String) -> glGetUniformLocation
    void glGetVertexAttribfv(int,int,java.nio.FloatBuffer) -> glGetVertexAttribfv
    void glGetVertexAttribiv(int,int,java.nio.IntBuffer) -> glGetVertexAttribiv
    void glGetVertexAttribPointerv(int,int,java.nio.Buffer) -> glGetVertexAttribPointerv
    void glHint(int,int) -> glHint
    boolean glIsBuffer(int) -> glIsBuffer
    boolean glIsEnabled(int) -> glIsEnabled
    boolean glIsFramebuffer(int) -> glIsFramebuffer
    boolean glIsProgram(int) -> glIsProgram
    boolean glIsRenderbuffer(int) -> glIsRenderbuffer
    boolean glIsShader(int) -> glIsShader
    boolean glIsTexture(int) -> glIsTexture
    void glLineWidth(float) -> glLineWidth
    void glLinkProgram(int) -> glLinkProgram
    void glPixelStorei(int,int) -> glPixelStorei
    void glPolygonOffset(float,float) -> glPolygonOffset
    void glReadPixels(int,int,int,int,int,int,java.nio.Buffer) -> glReadPixels
    void glReleaseShaderCompiler() -> glReleaseShaderCompiler
    void glRenderbufferStorage(int,int,int,int) -> glRenderbufferStorage
    void glSampleCoverage(float,boolean) -> glSampleCoverage
    void glScissor(int,int,int,int) -> glScissor
    void glShaderBinary(int,java.nio.IntBuffer,int,java.nio.Buffer,int) -> glShaderBinary
    void glShaderSource(int,java.lang.String) -> glShaderSource
    void glStencilFunc(int,int,int) -> glStencilFunc
    void glStencilFuncSeparate(int,int,int,int) -> glStencilFuncSeparate
    void glStencilMask(int) -> glStencilMask
    void glStencilMaskSeparate(int,int) -> glStencilMaskSeparate
    void glStencilOp(int,int,int) -> glStencilOp
    void glStencilOpSeparate(int,int,int,int) -> glStencilOpSeparate
    void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage2D
    void glTexParameterf(int,int,float) -> glTexParameterf
    void glTexParameterfv(int,int,java.nio.FloatBuffer) -> glTexParameterfv
    void glTexParameteri(int,int,int) -> glTexParameteri
    void glTexParameteriv(int,int,java.nio.IntBuffer) -> glTexParameteriv
    void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexSubImage2D
    void glUniform1f(int,float) -> glUniform1f
    void glUniform1fv(int,int,java.nio.FloatBuffer) -> glUniform1fv
    void glUniform1i(int,int) -> glUniform1i
    void glUniform1iv(int,int,java.nio.IntBuffer) -> glUniform1iv
    void glUniform2f(int,float,float) -> glUniform2f
    void glUniform2fv(int,int,java.nio.FloatBuffer) -> glUniform2fv
    void glUniform2i(int,int,int) -> glUniform2i
    void glUniform2iv(int,int,java.nio.IntBuffer) -> glUniform2iv
    void glUniform3f(int,float,float,float) -> glUniform3f
    void glUniform3fv(int,int,java.nio.FloatBuffer) -> glUniform3fv
    void glUniform3i(int,int,int,int) -> glUniform3i
    void glUniform3iv(int,int,java.nio.IntBuffer) -> glUniform3iv
    void glUniform4f(int,float,float,float,float) -> glUniform4f
    void glUniform4fv(int,int,java.nio.FloatBuffer) -> glUniform4fv
    void glUniform4i(int,int,int,int,int) -> glUniform4i
    void glUniform4iv(int,int,java.nio.IntBuffer) -> glUniform4iv
    void glUniformMatrix2fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix2fv
    void glUniformMatrix3fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix3fv
    void glUniformMatrix4fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix4fv
    void glUseProgram(int) -> glUseProgram
    void glValidateProgram(int) -> glValidateProgram
    void glVertexAttrib1f(int,float) -> glVertexAttrib1f
    void glVertexAttrib1fv(int,java.nio.FloatBuffer) -> glVertexAttrib1fv
    void glVertexAttrib2f(int,float,float) -> glVertexAttrib2f
    void glVertexAttrib2fv(int,java.nio.FloatBuffer) -> glVertexAttrib2fv
    void glVertexAttrib3f(int,float,float,float) -> glVertexAttrib3f
    void glVertexAttrib3fv(int,java.nio.FloatBuffer) -> glVertexAttrib3fv
    void glVertexAttrib4f(int,float,float,float,float) -> glVertexAttrib4f
    void glVertexAttrib4fv(int,java.nio.FloatBuffer) -> glVertexAttrib4fv
    void glVertexAttribPointer(int,int,int,boolean,int,java.nio.Buffer) -> glVertexAttribPointer
    void glVertexAttribPointer(int,int,int,boolean,int,int) -> glVertexAttribPointer
    void glViewport(int,int,int,int) -> glViewport
com.badlogic.gdx.backends.android.AndroidGL30 -> com.badlogic.gdx.backends.android.AndroidGL30:
    void glReadBuffer(int) -> glReadBuffer
    void glDrawRangeElements(int,int,int,int,int,java.nio.Buffer) -> glDrawRangeElements
    void glDrawRangeElements(int,int,int,int,int,int) -> glDrawRangeElements
    void glTexImage3D(int,int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage3D
    void glTexImage3D(int,int,int,int,int,int,int,int,int,int) -> glTexImage3D
    void glTexSubImage3D(int,int,int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexSubImage3D
    void glTexSubImage3D(int,int,int,int,int,int,int,int,int,int,int) -> glTexSubImage3D
    void glCopyTexSubImage3D(int,int,int,int,int,int,int,int,int) -> glCopyTexSubImage3D
    void glGenQueries(int,int[],int) -> glGenQueries
    void glGenQueries(int,java.nio.IntBuffer) -> glGenQueries
    void glDeleteQueries(int,int[],int) -> glDeleteQueries
    void glDeleteQueries(int,java.nio.IntBuffer) -> glDeleteQueries
    boolean glIsQuery(int) -> glIsQuery
    void glBeginQuery(int,int) -> glBeginQuery
    void glEndQuery(int) -> glEndQuery
    void glGetQueryiv(int,int,java.nio.IntBuffer) -> glGetQueryiv
    void glGetQueryObjectuiv(int,int,java.nio.IntBuffer) -> glGetQueryObjectuiv
    boolean glUnmapBuffer(int) -> glUnmapBuffer
    java.nio.Buffer glGetBufferPointerv(int,int) -> glGetBufferPointerv
    void glDrawBuffers(int,java.nio.IntBuffer) -> glDrawBuffers
    void glUniformMatrix2x3fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix2x3fv
    void glUniformMatrix3x2fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix3x2fv
    void glUniformMatrix2x4fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix2x4fv
    void glUniformMatrix4x2fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix4x2fv
    void glUniformMatrix3x4fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix3x4fv
    void glUniformMatrix4x3fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix4x3fv
    void glBlitFramebuffer(int,int,int,int,int,int,int,int,int,int) -> glBlitFramebuffer
    void glRenderbufferStorageMultisample(int,int,int,int,int) -> glRenderbufferStorageMultisample
    void glFramebufferTextureLayer(int,int,int,int,int) -> glFramebufferTextureLayer
    void glFlushMappedBufferRange(int,int,int) -> glFlushMappedBufferRange
    void glBindVertexArray(int) -> glBindVertexArray
    void glDeleteVertexArrays(int,int[],int) -> glDeleteVertexArrays
    void glDeleteVertexArrays(int,java.nio.IntBuffer) -> glDeleteVertexArrays
    void glGenVertexArrays(int,int[],int) -> glGenVertexArrays
    void glGenVertexArrays(int,java.nio.IntBuffer) -> glGenVertexArrays
    boolean glIsVertexArray(int) -> glIsVertexArray
    void glBeginTransformFeedback(int) -> glBeginTransformFeedback
    void glEndTransformFeedback() -> glEndTransformFeedback
    void glBindBufferRange(int,int,int,int,int) -> glBindBufferRange
    void glBindBufferBase(int,int,int) -> glBindBufferBase
    void glTransformFeedbackVaryings(int,java.lang.String[],int) -> glTransformFeedbackVaryings
    void glVertexAttribIPointer(int,int,int,int,int) -> glVertexAttribIPointer
    void glGetVertexAttribIiv(int,int,java.nio.IntBuffer) -> glGetVertexAttribIiv
    void glGetVertexAttribIuiv(int,int,java.nio.IntBuffer) -> glGetVertexAttribIuiv
    void glVertexAttribI4i(int,int,int,int,int) -> glVertexAttribI4i
    void glVertexAttribI4ui(int,int,int,int,int) -> glVertexAttribI4ui
    void glGetUniformuiv(int,int,java.nio.IntBuffer) -> glGetUniformuiv
    int glGetFragDataLocation(int,java.lang.String) -> glGetFragDataLocation
    void glUniform1uiv(int,int,java.nio.IntBuffer) -> glUniform1uiv
    void glUniform3uiv(int,int,java.nio.IntBuffer) -> glUniform3uiv
    void glUniform4uiv(int,int,java.nio.IntBuffer) -> glUniform4uiv
    void glClearBufferiv(int,int,java.nio.IntBuffer) -> glClearBufferiv
    void glClearBufferuiv(int,int,java.nio.IntBuffer) -> glClearBufferuiv
    void glClearBufferfv(int,int,java.nio.FloatBuffer) -> glClearBufferfv
    void glClearBufferfi(int,int,float,int) -> glClearBufferfi
    java.lang.String glGetStringi(int,int) -> glGetStringi
    void glCopyBufferSubData(int,int,int,int,int) -> glCopyBufferSubData
    void glGetUniformIndices(int,java.lang.String[],java.nio.IntBuffer) -> glGetUniformIndices
    void glGetActiveUniformsiv(int,int,java.nio.IntBuffer,int,java.nio.IntBuffer) -> glGetActiveUniformsiv
    int glGetUniformBlockIndex(int,java.lang.String) -> glGetUniformBlockIndex
    void glGetActiveUniformBlockiv(int,int,int,java.nio.IntBuffer) -> glGetActiveUniformBlockiv
    void glGetActiveUniformBlockName(int,int,java.nio.Buffer,java.nio.Buffer) -> glGetActiveUniformBlockName
    java.lang.String glGetActiveUniformBlockName(int,int) -> glGetActiveUniformBlockName
    void glUniformBlockBinding(int,int,int) -> glUniformBlockBinding
    void glDrawArraysInstanced(int,int,int,int) -> glDrawArraysInstanced
    void glDrawElementsInstanced(int,int,int,int,int) -> glDrawElementsInstanced
    void glGetInteger64v(int,java.nio.LongBuffer) -> glGetInteger64v
    void glGetBufferParameteri64v(int,int,java.nio.LongBuffer) -> glGetBufferParameteri64v
    void glGenSamplers(int,int[],int) -> glGenSamplers
    void glGenSamplers(int,java.nio.IntBuffer) -> glGenSamplers
    void glDeleteSamplers(int,int[],int) -> glDeleteSamplers
    void glDeleteSamplers(int,java.nio.IntBuffer) -> glDeleteSamplers
    boolean glIsSampler(int) -> glIsSampler
    void glBindSampler(int,int) -> glBindSampler
    void glSamplerParameteri(int,int,int) -> glSamplerParameteri
    void glSamplerParameteriv(int,int,java.nio.IntBuffer) -> glSamplerParameteriv
    void glSamplerParameterf(int,int,float) -> glSamplerParameterf
    void glSamplerParameterfv(int,int,java.nio.FloatBuffer) -> glSamplerParameterfv
    void glGetSamplerParameteriv(int,int,java.nio.IntBuffer) -> glGetSamplerParameteriv
    void glGetSamplerParameterfv(int,int,java.nio.FloatBuffer) -> glGetSamplerParameterfv
    void glVertexAttribDivisor(int,int) -> glVertexAttribDivisor
    void glBindTransformFeedback(int,int) -> glBindTransformFeedback
    void glDeleteTransformFeedbacks(int,int[],int) -> glDeleteTransformFeedbacks
    void glDeleteTransformFeedbacks(int,java.nio.IntBuffer) -> glDeleteTransformFeedbacks
    void glGenTransformFeedbacks(int,int[],int) -> glGenTransformFeedbacks
    void glGenTransformFeedbacks(int,java.nio.IntBuffer) -> glGenTransformFeedbacks
    boolean glIsTransformFeedback(int) -> glIsTransformFeedback
    void glPauseTransformFeedback() -> glPauseTransformFeedback
    void glResumeTransformFeedback() -> glResumeTransformFeedback
    void glProgramParameteri(int,int,int) -> glProgramParameteri
    void glInvalidateFramebuffer(int,int,java.nio.IntBuffer) -> glInvalidateFramebuffer
    void glInvalidateSubFramebuffer(int,int,java.nio.IntBuffer,int,int,int,int) -> glInvalidateSubFramebuffer
com.badlogic.gdx.backends.android.AndroidGraphics -> com.badlogic.gdx.backends.android.AndroidGraphics:
    java.lang.String LOG_TAG -> LOG_TAG
    android.view.View view -> view
    int width -> width
    int height -> height
    com.badlogic.gdx.backends.android.AndroidApplicationBase app -> app
    com.badlogic.gdx.graphics.GL20 gl20 -> gl20
    com.badlogic.gdx.graphics.GL30 gl30 -> gl30
    javax.microedition.khronos.egl.EGLContext eglContext -> eglContext
    java.lang.String extensions -> extensions
    long lastFrameTime -> lastFrameTime
    float deltaTime -> deltaTime
    long frameStart -> frameStart
    int frames -> frames
    int fps -> fps
    com.badlogic.gdx.math.WindowedMean mean -> mean
    boolean created -> created
    boolean running -> running
    boolean pause -> pause
    boolean resume -> resume
    boolean destroy -> destroy
    float ppiX -> ppiX
    float ppiY -> ppiY
    float ppcX -> ppcX
    float ppcY -> ppcY
    float density -> density
    com.badlogic.gdx.backends.android.AndroidApplicationConfiguration config -> config
    com.badlogic.gdx.Graphics$BufferFormat bufferFormat -> bufferFormat
    boolean isContinuous -> isContinuous
    int[] value -> value
    java.lang.Object synch -> synch
    void preserveEGLContextOnPause() -> preserveEGLContextOnPause
    android.view.View createGLSurfaceView(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy) -> createGLSurfaceView
    void onPauseGLSurfaceView() -> onPauseGLSurfaceView
    void onResumeGLSurfaceView() -> onResumeGLSurfaceView
    android.opengl.GLSurfaceView$EGLConfigChooser getEglConfigChooser() -> getEglConfigChooser
    void updatePpi() -> updatePpi
    boolean checkGL20() -> checkGL20
    com.badlogic.gdx.graphics.GL20 getGL20() -> getGL20
    int getHeight() -> getHeight
    int getWidth() -> getWidth
    void setupGL(javax.microedition.khronos.opengles.GL10) -> setupGL
    void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> onSurfaceChanged
    void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> onSurfaceCreated
    void logConfig(javax.microedition.khronos.egl.EGLConfig) -> logConfig
    int getAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> getAttrib
    void resume() -> resume
    void pause() -> pause
    void destroy() -> destroy
    void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
    float getDeltaTime() -> getDeltaTime
    float getRawDeltaTime() -> getRawDeltaTime
    com.badlogic.gdx.Graphics$GraphicsType getType() -> getType
    int getFramesPerSecond() -> getFramesPerSecond
    void clearManagedCaches() -> clearManagedCaches
    void logManagedCachesStatus() -> logManagedCachesStatus
    android.view.View getView() -> getView
    float getPpiX() -> getPpiX
    float getPpiY() -> getPpiY
    float getPpcX() -> getPpcX
    float getPpcY() -> getPpcY
    float getDensity() -> getDensity
    boolean supportsDisplayModeChange() -> supportsDisplayModeChange
    boolean setDisplayMode(com.badlogic.gdx.Graphics$DisplayMode) -> setDisplayMode
    com.badlogic.gdx.Graphics$DisplayMode[] getDisplayModes() -> getDisplayModes
    boolean setDisplayMode(int,int,boolean) -> setDisplayMode
    void setTitle(java.lang.String) -> setTitle
    com.badlogic.gdx.Graphics$DisplayMode getDesktopDisplayMode() -> getDesktopDisplayMode
    com.badlogic.gdx.Graphics$BufferFormat getBufferFormat() -> getBufferFormat
    void setVSync(boolean) -> setVSync
    boolean supportsExtension(java.lang.String) -> supportsExtension
    void setContinuousRendering(boolean) -> setContinuousRendering
    boolean isContinuousRendering() -> isContinuousRendering
    void requestRendering() -> requestRendering
    boolean isFullscreen() -> isFullscreen
    boolean isGL30Available() -> isGL30Available
    com.badlogic.gdx.graphics.GL30 getGL30() -> getGL30
com.badlogic.gdx.backends.android.AndroidGraphics$AndroidDisplayMode -> com.badlogic.gdx.backends.android.AndroidGraphics$AndroidDisplayMode:
    com.badlogic.gdx.backends.android.AndroidGraphics this$0 -> this$0
com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper -> com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper:
    android.view.SurfaceHolder getSurfaceHolder() -> getSurfaceHolder
    android.view.View createGLSurfaceView(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy) -> createGLSurfaceView
    void onDestroyGLSurfaceView() -> onDestroyGLSurfaceView
    void resume() -> resume
    void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
    void logManagedCachesStatus() -> logManagedCachesStatus
com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper$1 -> com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper$1:
    com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper this$0 -> this$0
    android.view.SurfaceHolder getHolder() -> getHolder
    void onDestroy() -> onDestroy
com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper$2 -> com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper$2:
    com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper this$0 -> this$0
    android.view.SurfaceHolder getHolder() -> getHolder
    void onDestroy() -> onDestroy
com.badlogic.gdx.backends.android.AndroidInput -> com.badlogic.gdx.backends.android.AndroidInput:
    com.badlogic.gdx.utils.Pool usedKeyEvents -> usedKeyEvents
    com.badlogic.gdx.utils.Pool usedTouchEvents -> usedTouchEvents
    int NUM_TOUCHES -> NUM_TOUCHES
    java.util.ArrayList keyListeners -> keyListeners
    java.util.ArrayList keyEvents -> keyEvents
    java.util.ArrayList touchEvents -> touchEvents
    int[] touchX -> touchX
    int[] touchY -> touchY
    int[] deltaX -> deltaX
    int[] deltaY -> deltaY
    boolean[] touched -> touched
    int[] realId -> realId
    boolean hasMultitouch -> hasMultitouch
    com.badlogic.gdx.utils.IntMap keys -> keys
    android.hardware.SensorManager manager -> manager
    boolean accelerometerAvailable -> accelerometerAvailable
    float[] accelerometerValues -> accelerometerValues
    java.lang.String text -> text
    com.badlogic.gdx.Input$TextInputListener textListener -> textListener
    android.os.Handler handle -> handle
    com.badlogic.gdx.Application app -> app
    android.content.Context context -> context
    com.badlogic.gdx.backends.android.AndroidTouchHandler touchHandler -> touchHandler
    int sleepTime -> sleepTime
    boolean catchBack -> catchBack
    boolean catchMenu -> catchMenu
    android.os.Vibrator vibrator -> vibrator
    boolean compassAvailable -> compassAvailable
    boolean keyboardAvailable -> keyboardAvailable
    float[] magneticFieldValues -> magneticFieldValues
    float azimuth -> azimuth
    float pitch -> pitch
    float roll -> roll
    float inclination -> inclination
    boolean justTouched -> justTouched
    com.badlogic.gdx.InputProcessor processor -> processor
    com.badlogic.gdx.backends.android.AndroidApplicationConfiguration config -> config
    com.badlogic.gdx.Input$Orientation nativeOrientation -> nativeOrientation
    long currentEventTimeStamp -> currentEventTimeStamp
    com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard onscreenKeyboard -> onscreenKeyboard
    android.hardware.SensorEventListener accelerometerListener -> accelerometerListener
    android.hardware.SensorEventListener compassListener -> compassListener
    boolean requestFocus -> requestFocus
    float[] R -> R
    float[] orientation -> orientation
    float getAccelerometerX() -> getAccelerometerX
    float getAccelerometerY() -> getAccelerometerY
    float getAccelerometerZ() -> getAccelerometerZ
    void getTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String) -> getTextInput
    void getPlaceholderTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String) -> getPlaceholderTextInput
    int getX() -> getX
    int getY() -> getY
    int getX(int) -> getX
    int getY(int) -> getY
    boolean isTouched(int) -> isTouched
    boolean isKeyPressed(int) -> isKeyPressed
    boolean isTouched() -> isTouched
    void setInputProcessor(com.badlogic.gdx.InputProcessor) -> setInputProcessor
    void processEvents() -> processEvents
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void onTap(int,int) -> onTap
    void onDrop(int,int) -> onDrop
    void postTap(int,int) -> postTap
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    void setOnscreenKeyboardVisible(boolean) -> setOnscreenKeyboardVisible
    void setCatchBackKey(boolean) -> setCatchBackKey
    void setCatchMenuKey(boolean) -> setCatchMenuKey
    void vibrate(int) -> vibrate
    void vibrate(long[],int) -> vibrate
    void cancelVibrate() -> cancelVibrate
    boolean justTouched() -> justTouched
    boolean isButtonPressed(int) -> isButtonPressed
    void updateOrientation() -> updateOrientation
    void getRotationMatrix(float[]) -> getRotationMatrix
    float getAzimuth() -> getAzimuth
    float getPitch() -> getPitch
    float getRoll() -> getRoll
    void registerSensorListeners() -> registerSensorListeners
    void unregisterSensorListeners() -> unregisterSensorListeners
    com.badlogic.gdx.InputProcessor getInputProcessor() -> getInputProcessor
    boolean isPeripheralAvailable(com.badlogic.gdx.Input$Peripheral) -> isPeripheralAvailable
    int getFreePointerIndex() -> getFreePointerIndex
    int[] resize(int[]) -> resize
    boolean[] resize(boolean[]) -> resize
    int lookUpPointerIndex(int) -> lookUpPointerIndex
    int getRotation() -> getRotation
    com.badlogic.gdx.Input$Orientation getNativeOrientation() -> getNativeOrientation
    void setCursorCatched(boolean) -> setCursorCatched
    boolean isCursorCatched() -> isCursorCatched
    int getDeltaX() -> getDeltaX
    int getDeltaX(int) -> getDeltaX
    int getDeltaY() -> getDeltaY
    int getDeltaY(int) -> getDeltaY
    void setCursorPosition(int,int) -> setCursorPosition
    void setCursorImage(com.badlogic.gdx.graphics.Pixmap,int,int) -> setCursorImage
    long getCurrentEventTime() -> getCurrentEventTime
    void addKeyListener(android.view.View$OnKeyListener) -> addKeyListener
com.badlogic.gdx.backends.android.AndroidInput$1 -> com.badlogic.gdx.backends.android.AndroidInput$1:
    com.badlogic.gdx.backends.android.AndroidInput this$0 -> this$0
    com.badlogic.gdx.backends.android.AndroidInput$KeyEvent newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.backends.android.AndroidInput$2 -> com.badlogic.gdx.backends.android.AndroidInput$2:
    com.badlogic.gdx.backends.android.AndroidInput this$0 -> this$0
    com.badlogic.gdx.backends.android.AndroidInput$TouchEvent newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.backends.android.AndroidInput$3 -> com.badlogic.gdx.backends.android.AndroidInput$3:
    java.lang.String val$title -> val$title
    java.lang.String val$text -> val$text
    com.badlogic.gdx.Input$TextInputListener val$listener -> val$listener
    com.badlogic.gdx.backends.android.AndroidInput this$0 -> this$0
    void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$3$1 -> com.badlogic.gdx.backends.android.AndroidInput$3$1:
    android.widget.EditText val$input -> val$input
    com.badlogic.gdx.backends.android.AndroidInput$3 this$1 -> this$1
    void onClick(android.content.DialogInterface,int) -> onClick
com.badlogic.gdx.backends.android.AndroidInput$3$1$1 -> com.badlogic.gdx.backends.android.AndroidInput$3$1$1:
    com.badlogic.gdx.backends.android.AndroidInput$3$1 this$2 -> this$2
    void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$3$2 -> com.badlogic.gdx.backends.android.AndroidInput$3$2:
    com.badlogic.gdx.backends.android.AndroidInput$3 this$1 -> this$1
    void onClick(android.content.DialogInterface,int) -> onClick
com.badlogic.gdx.backends.android.AndroidInput$3$2$1 -> com.badlogic.gdx.backends.android.AndroidInput$3$2$1:
    com.badlogic.gdx.backends.android.AndroidInput$3$2 this$2 -> this$2
    void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$3$3 -> com.badlogic.gdx.backends.android.AndroidInput$3$3:
    com.badlogic.gdx.backends.android.AndroidInput$3 this$1 -> this$1
    void onCancel(android.content.DialogInterface) -> onCancel
com.badlogic.gdx.backends.android.AndroidInput$3$3$1 -> com.badlogic.gdx.backends.android.AndroidInput$3$3$1:
    com.badlogic.gdx.backends.android.AndroidInput$3$3 this$2 -> this$2
    void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$4 -> com.badlogic.gdx.backends.android.AndroidInput$4:
    java.lang.String val$title -> val$title
    java.lang.String val$placeholder -> val$placeholder
    com.badlogic.gdx.Input$TextInputListener val$listener -> val$listener
    com.badlogic.gdx.backends.android.AndroidInput this$0 -> this$0
    void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$4$1 -> com.badlogic.gdx.backends.android.AndroidInput$4$1:
    android.widget.EditText val$input -> val$input
    com.badlogic.gdx.backends.android.AndroidInput$4 this$1 -> this$1
    void onClick(android.content.DialogInterface,int) -> onClick
com.badlogic.gdx.backends.android.AndroidInput$4$1$1 -> com.badlogic.gdx.backends.android.AndroidInput$4$1$1:
    com.badlogic.gdx.backends.android.AndroidInput$4$1 this$2 -> this$2
    void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$4$2 -> com.badlogic.gdx.backends.android.AndroidInput$4$2:
    com.badlogic.gdx.backends.android.AndroidInput$4 this$1 -> this$1
    void onCancel(android.content.DialogInterface) -> onCancel
com.badlogic.gdx.backends.android.AndroidInput$4$2$1 -> com.badlogic.gdx.backends.android.AndroidInput$4$2$1:
    com.badlogic.gdx.backends.android.AndroidInput$4$2 this$2 -> this$2
    void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$5 -> com.badlogic.gdx.backends.android.AndroidInput$5:
    boolean val$visible -> val$visible
    com.badlogic.gdx.backends.android.AndroidInput this$0 -> this$0
    void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$KeyEvent -> com.badlogic.gdx.backends.android.AndroidInput$KeyEvent:
    int KEY_DOWN -> KEY_DOWN
    int KEY_UP -> KEY_UP
    int KEY_TYPED -> KEY_TYPED
    long timeStamp -> timeStamp
    int type -> type
    int keyCode -> keyCode
    char keyChar -> keyChar
com.badlogic.gdx.backends.android.AndroidInput$SensorListener -> com.badlogic.gdx.backends.android.AndroidInput$SensorListener:
    float[] accelerometerValues -> accelerometerValues
    float[] magneticFieldValues -> magneticFieldValues
    com.badlogic.gdx.Input$Orientation nativeOrientation -> nativeOrientation
    com.badlogic.gdx.backends.android.AndroidInput this$0 -> this$0
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
com.badlogic.gdx.backends.android.AndroidInput$TouchEvent -> com.badlogic.gdx.backends.android.AndroidInput$TouchEvent:
    int TOUCH_DOWN -> TOUCH_DOWN
    int TOUCH_UP -> TOUCH_UP
    int TOUCH_DRAGGED -> TOUCH_DRAGGED
    long timeStamp -> timeStamp
    int type -> type
    int x -> x
    int y -> y
    int pointer -> pointer
com.badlogic.gdx.backends.android.AndroidInputFactory -> com.badlogic.gdx.backends.android.AndroidInputFactory:
    com.badlogic.gdx.backends.android.AndroidInput newAndroidInput(com.badlogic.gdx.Application,android.content.Context,java.lang.Object,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> newAndroidInput
com.badlogic.gdx.backends.android.AndroidInputThreePlus -> com.badlogic.gdx.backends.android.AndroidInputThreePlus:
    java.util.ArrayList genericMotionListeners -> genericMotionListeners
    boolean onGenericMotion(android.view.View,android.view.MotionEvent) -> onGenericMotion
    void addGenericMotionListener(android.view.View$OnGenericMotionListener) -> addGenericMotionListener
com.badlogic.gdx.backends.android.AndroidLiveWallpaper -> com.badlogic.gdx.backends.android.AndroidLiveWallpaper:
    com.badlogic.gdx.backends.android.AndroidLiveWallpaperService service -> service
    com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper graphics -> graphics
    com.badlogic.gdx.backends.android.AndroidInput input -> input
    com.badlogic.gdx.backends.android.AndroidAudio audio -> audio
    com.badlogic.gdx.backends.android.AndroidFiles files -> files
    com.badlogic.gdx.backends.android.AndroidNet net -> net
    com.badlogic.gdx.ApplicationListener listener -> listener
    boolean firstResume -> firstResume
    com.badlogic.gdx.utils.Array runnables -> runnables
    com.badlogic.gdx.utils.Array executedRunnables -> executedRunnables
    com.badlogic.gdx.utils.Array lifecycleListeners -> lifecycleListeners
    int logLevel -> logLevel
    com.badlogic.gdx.backends.android.AndroidClipboard clipboard -> clipboard
    void initialize(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> initialize
    void onPause() -> onPause
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    android.view.WindowManager getWindowManager() -> getWindowManager
    com.badlogic.gdx.backends.android.AndroidLiveWallpaperService getService() -> getService
    com.badlogic.gdx.ApplicationListener getApplicationListener() -> getApplicationListener
    void postRunnable(java.lang.Runnable) -> postRunnable
    com.badlogic.gdx.Audio getAudio() -> getAudio
    com.badlogic.gdx.Files getFiles() -> getFiles
    com.badlogic.gdx.Graphics getGraphics() -> getGraphics
    com.badlogic.gdx.backends.android.AndroidInput getInput() -> getInput
    com.badlogic.gdx.Net getNet() -> getNet
    com.badlogic.gdx.Application$ApplicationType getType() -> getType
    int getVersion() -> getVersion
    long getJavaHeap() -> getJavaHeap
    long getNativeHeap() -> getNativeHeap
    com.badlogic.gdx.Preferences getPreferences(java.lang.String) -> getPreferences
    com.badlogic.gdx.utils.Clipboard getClipboard() -> getClipboard
    void debug(java.lang.String,java.lang.String) -> debug
    void debug(java.lang.String,java.lang.String,java.lang.Throwable) -> debug
    void log(java.lang.String,java.lang.String) -> log
    void log(java.lang.String,java.lang.String,java.lang.Throwable) -> log
    void error(java.lang.String,java.lang.String) -> error
    void error(java.lang.String,java.lang.String,java.lang.Throwable) -> error
    void setLogLevel(int) -> setLogLevel
    int getLogLevel() -> getLogLevel
    void exit() -> exit
    void addLifecycleListener(com.badlogic.gdx.LifecycleListener) -> addLifecycleListener
    void removeLifecycleListener(com.badlogic.gdx.LifecycleListener) -> removeLifecycleListener
    android.content.Context getContext() -> getContext
    com.badlogic.gdx.utils.Array getRunnables() -> getRunnables
    com.badlogic.gdx.utils.Array getExecutedRunnables() -> getExecutedRunnables
    com.badlogic.gdx.utils.Array getLifecycleListeners() -> getLifecycleListeners
    void startActivity(android.content.Intent) -> startActivity
    android.view.Window getApplicationWindow() -> getApplicationWindow
    android.os.Handler getHandler() -> getHandler
    void runOnUiThread(java.lang.Runnable) -> runOnUiThread
    void useImmersiveMode(boolean) -> useImmersiveMode
    com.badlogic.gdx.Input getInput() -> getInput
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService -> com.badlogic.gdx.backends.android.AndroidLiveWallpaperService:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    com.badlogic.gdx.backends.android.AndroidLiveWallpaper app -> app
    android.view.SurfaceHolder$Callback view -> view
    int viewFormat -> viewFormat
    int viewWidth -> viewWidth
    int viewHeight -> viewHeight
    int engines -> engines
    int visibleEngines -> visibleEngines
    com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine linkedEngine -> linkedEngine
    boolean isPreviewNotified -> isPreviewNotified
    boolean notifiedPreviewState -> notifiedPreviewState
    int[] sync -> sync
    void setLinkedEngine(com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine) -> setLinkedEngine
    void onCreate() -> onCreate
    android.service.wallpaper.WallpaperService$Engine onCreateEngine() -> onCreateEngine
    void onCreateApplication() -> onCreateApplication
    void initialize(com.badlogic.gdx.ApplicationListener) -> initialize
    void initialize(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> initialize
    android.view.SurfaceHolder getSurfaceHolder() -> getSurfaceHolder
    void onDeepPauseApplication() -> onDeepPauseApplication
    void onDestroy() -> onDestroy
    void finalize() -> finalize
    com.badlogic.gdx.backends.android.AndroidLiveWallpaper getLiveWallpaper() -> getLiveWallpaper
    android.view.WindowManager getWindowManager() -> getWindowManager
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine -> com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine:
    boolean engineIsVisible -> engineIsVisible
    int engineFormat -> engineFormat
    int engineWidth -> engineWidth
    int engineHeight -> engineHeight
    boolean offsetsConsumed -> offsetsConsumed
    float xOffset -> xOffset
    float yOffset -> yOffset
    float xOffsetStep -> xOffsetStep
    float yOffsetStep -> yOffsetStep
    int xPixelOffset -> xPixelOffset
    int yPixelOffset -> yPixelOffset
    com.badlogic.gdx.backends.android.AndroidLiveWallpaperService this$0 -> this$0
    void onCreate(android.view.SurfaceHolder) -> onCreate
    void onSurfaceCreated(android.view.SurfaceHolder) -> onSurfaceCreated
    void onSurfaceChanged(android.view.SurfaceHolder,int,int,int) -> onSurfaceChanged
    void notifySurfaceChanged(int,int,int,boolean) -> notifySurfaceChanged
    void onVisibilityChanged(boolean) -> onVisibilityChanged
    void notifyVisibilityChanged(boolean) -> notifyVisibilityChanged
    void onResume() -> onResume
    void onPause() -> onPause
    void onSurfaceDestroyed(android.view.SurfaceHolder) -> onSurfaceDestroyed
    void onDestroy() -> onDestroy
    android.os.Bundle onCommand(java.lang.String,int,int,int,android.os.Bundle,boolean) -> onCommand
    void onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onOffsetsChanged(float,float,float,float,int,int) -> onOffsetsChanged
    void notifyOffsetsChanged() -> notifyOffsetsChanged
    void notifyPreviewState() -> notifyPreviewState
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine$1 -> com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine$1:
    com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine this$1 -> this$1
    void run() -> run
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine$2 -> com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine$2:
    boolean val$currentPreviewState -> val$currentPreviewState
    com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine this$1 -> this$1
    void run() -> run
com.badlogic.gdx.backends.android.AndroidMultiTouchHandler -> com.badlogic.gdx.backends.android.AndroidMultiTouchHandler:
    void onTouch(android.view.MotionEvent,com.badlogic.gdx.backends.android.AndroidInput) -> onTouch
    void logAction(int,int) -> logAction
    void postTouchEvent(com.badlogic.gdx.backends.android.AndroidInput,int,int,int,int,long) -> postTouchEvent
    boolean supportsMultitouch(android.content.Context) -> supportsMultitouch
com.badlogic.gdx.backends.android.AndroidMusic -> com.badlogic.gdx.backends.android.AndroidMusic:
    com.badlogic.gdx.backends.android.AndroidAudio audio -> audio
    android.media.MediaPlayer player -> player
    boolean isPrepared -> isPrepared
    boolean wasPlaying -> wasPlaying
    float volume -> volume
    com.badlogic.gdx.audio.Music$OnCompletionListener onCompletionListener -> onCompletionListener
    void dispose() -> dispose
    boolean isLooping() -> isLooping
    boolean isPlaying() -> isPlaying
    void pause() -> pause
    void play() -> play
    void setLooping(boolean) -> setLooping
    void setVolume(float) -> setVolume
    float getVolume() -> getVolume
    void setPan(float,float) -> setPan
    void stop() -> stop
    void setPosition(float) -> setPosition
    float getPosition() -> getPosition
    float getDuration() -> getDuration
    void setOnCompletionListener(com.badlogic.gdx.audio.Music$OnCompletionListener) -> setOnCompletionListener
    void onCompletion(android.media.MediaPlayer) -> onCompletion
com.badlogic.gdx.backends.android.AndroidMusic$1 -> com.badlogic.gdx.backends.android.AndroidMusic$1:
    com.badlogic.gdx.backends.android.AndroidMusic this$0 -> this$0
    void run() -> run
com.badlogic.gdx.backends.android.AndroidNet -> com.badlogic.gdx.backends.android.AndroidNet:
    com.badlogic.gdx.backends.android.AndroidApplicationBase app -> app
    com.badlogic.gdx.net.NetJavaImpl netJavaImpl -> netJavaImpl
    void sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener) -> sendHttpRequest
    void cancelHttpRequest(com.badlogic.gdx.Net$HttpRequest) -> cancelHttpRequest
    com.badlogic.gdx.net.ServerSocket newServerSocket(com.badlogic.gdx.Net$Protocol,int,com.badlogic.gdx.net.ServerSocketHints) -> newServerSocket
    com.badlogic.gdx.net.Socket newClientSocket(com.badlogic.gdx.Net$Protocol,java.lang.String,int,com.badlogic.gdx.net.SocketHints) -> newClientSocket
    void openURI(java.lang.String) -> openURI
com.badlogic.gdx.backends.android.AndroidNet$1 -> com.badlogic.gdx.backends.android.AndroidNet$1:
    android.net.Uri val$uri -> val$uri
    com.badlogic.gdx.backends.android.AndroidNet this$0 -> this$0
    void run() -> run
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard -> com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard:
    android.content.Context context -> context
    android.os.Handler handler -> handler
    com.badlogic.gdx.backends.android.AndroidInput input -> input
    android.app.Dialog dialog -> dialog
    android.widget.TextView textView -> textView
    android.app.Dialog createDialog() -> createDialog
    android.widget.TextView createView(android.content.Context) -> createView
    void setVisible(boolean) -> setVisible
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$1 -> com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$1:
    android.text.Editable editable -> editable
    boolean getDefaultEditable() -> getDefaultEditable
    android.text.Editable getEditableText() -> getEditableText
    android.text.method.MovementMethod getDefaultMovementMethod() -> getDefaultMovementMethod
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2 -> com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2:
    com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard this$0 -> this$0
    void run() -> run
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2$1 -> com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2$1:
    com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2 this$1 -> this$1
    void run() -> run
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2$2 -> com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2$2:
    int[] screenloc -> screenloc
    int keyboardHeight -> keyboardHeight
    boolean keyboardShowing -> keyboardShowing
    android.view.View val$content -> val$content
    com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2 this$1 -> this$1
    boolean onPreDraw() -> onPreDraw
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$PassThroughEditable -> com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$PassThroughEditable:
    char charAt(int) -> charAt
    int length() -> length
    java.lang.CharSequence subSequence(int,int) -> subSequence
    void getChars(int,int,char[],int) -> getChars
    void removeSpan(java.lang.Object) -> removeSpan
    void setSpan(java.lang.Object,int,int,int) -> setSpan
    int getSpanEnd(java.lang.Object) -> getSpanEnd
    int getSpanFlags(java.lang.Object) -> getSpanFlags
    int getSpanStart(java.lang.Object) -> getSpanStart
    java.lang.Object[] getSpans(int,int,java.lang.Class) -> getSpans
    int nextSpanTransition(int,int,java.lang.Class) -> nextSpanTransition
    android.text.Editable append(java.lang.CharSequence) -> append
    android.text.Editable append(char) -> append
    android.text.Editable append(java.lang.CharSequence,int,int) -> append
    void clear() -> clear
    void clearSpans() -> clearSpans
    android.text.Editable delete(int,int) -> delete
    android.text.InputFilter[] getFilters() -> getFilters
    android.text.Editable insert(int,java.lang.CharSequence) -> insert
    android.text.Editable insert(int,java.lang.CharSequence,int,int) -> insert
    android.text.Editable replace(int,int,java.lang.CharSequence) -> replace
    android.text.Editable replace(int,int,java.lang.CharSequence,int,int) -> replace
    void setFilters(android.text.InputFilter[]) -> setFilters
    java.lang.Appendable append(char) -> append
    java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    java.lang.Appendable append(java.lang.CharSequence) -> append
com.badlogic.gdx.backends.android.AndroidPreferences -> com.badlogic.gdx.backends.android.AndroidPreferences:
    android.content.SharedPreferences sharedPrefs -> sharedPrefs
    android.content.SharedPreferences$Editor editor -> editor
    void putBoolean(java.lang.String,boolean) -> putBoolean
    void putInteger(java.lang.String,int) -> putInteger
    void putLong(java.lang.String,long) -> putLong
    void putFloat(java.lang.String,float) -> putFloat
    void putString(java.lang.String,java.lang.String) -> putString
    void put(java.util.Map) -> put
    boolean getBoolean(java.lang.String) -> getBoolean
    int getInteger(java.lang.String) -> getInteger
    long getLong(java.lang.String) -> getLong
    float getFloat(java.lang.String) -> getFloat
    java.lang.String getString(java.lang.String) -> getString
    boolean getBoolean(java.lang.String,boolean) -> getBoolean
    int getInteger(java.lang.String,int) -> getInteger
    long getLong(java.lang.String,long) -> getLong
    float getFloat(java.lang.String,float) -> getFloat
    java.lang.String getString(java.lang.String,java.lang.String) -> getString
    java.util.Map get() -> get
    boolean contains(java.lang.String) -> contains
    void clear() -> clear
    void flush() -> flush
    void remove(java.lang.String) -> remove
    void edit() -> edit
com.badlogic.gdx.backends.android.AndroidSound -> com.badlogic.gdx.backends.android.AndroidSound:
    android.media.SoundPool soundPool -> soundPool
    android.media.AudioManager manager -> manager
    int soundId -> soundId
    com.badlogic.gdx.utils.IntArray streamIds -> streamIds
    void dispose() -> dispose
    long play() -> play
    long play(float) -> play
    void stop() -> stop
    void stop(long) -> stop
    void pause() -> pause
    void pause(long) -> pause
    void resume() -> resume
    void resume(long) -> resume
    void setPitch(long,float) -> setPitch
    void setVolume(long,float) -> setVolume
    long loop() -> loop
    long loop(float) -> loop
    void setLooping(long,boolean) -> setLooping
    void setPan(long,float,float) -> setPan
    long play(float,float,float) -> play
    long loop(float,float,float) -> loop
    void setPriority(long,int) -> setPriority
com.badlogic.gdx.backends.android.AndroidTouchHandler -> com.badlogic.gdx.backends.android.AndroidTouchHandler:
    void onTouch(android.view.MotionEvent,com.badlogic.gdx.backends.android.AndroidInput) -> onTouch
    boolean supportsMultitouch(android.content.Context) -> supportsMultitouch
com.badlogic.gdx.backends.android.AndroidVisibilityListener -> com.badlogic.gdx.backends.android.AndroidVisibilityListener:
    void createListener(com.badlogic.gdx.backends.android.AndroidApplicationBase) -> createListener
com.badlogic.gdx.backends.android.AndroidVisibilityListener$1 -> com.badlogic.gdx.backends.android.AndroidVisibilityListener$1:
    com.badlogic.gdx.backends.android.AndroidApplicationBase val$application -> val$application
    com.badlogic.gdx.backends.android.AndroidVisibilityListener this$0 -> this$0
    void onSystemUiVisibilityChange(int) -> onSystemUiVisibilityChange
com.badlogic.gdx.backends.android.AndroidVisibilityListener$1$1 -> com.badlogic.gdx.backends.android.AndroidVisibilityListener$1$1:
    com.badlogic.gdx.backends.android.AndroidVisibilityListener$1 this$1 -> this$1
    void run() -> run
com.badlogic.gdx.backends.android.AndroidWallpaperListener -> com.badlogic.gdx.backends.android.AndroidWallpaperListener:
    void offsetChange(float,float,float,float,int,int) -> offsetChange
    void previewStateChange(boolean) -> previewStateChange
com.badlogic.gdx.backends.android.InputProcessorLW -> com.badlogic.gdx.backends.android.InputProcessorLW:
    void touchDrop(int,int) -> touchDrop
com.badlogic.gdx.backends.android.surfaceview.FillResolutionStrategy -> com.badlogic.gdx.backends.android.surfaceview.FillResolutionStrategy:
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension calcMeasures(int,int) -> calcMeasures
com.badlogic.gdx.backends.android.surfaceview.FixedResolutionStrategy -> com.badlogic.gdx.backends.android.surfaceview.FixedResolutionStrategy:
    int width -> width
    int height -> height
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension calcMeasures(int,int) -> calcMeasures
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20 -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy resolutionStrategy -> resolutionStrategy
    void onMeasure(int,int) -> onMeasure
    android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    void init(boolean,int,int) -> init
    void checkEglError(java.lang.String,javax.microedition.khronos.egl.EGL10) -> checkEglError
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$1 -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$1:
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20 this$0 -> this$0
    boolean deleteSurroundingText(int,int) -> deleteSurroundingText
    void sendDownUpKeyEventForBackwardCompatibility(int) -> sendDownUpKeyEventForBackwardCompatibility
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ConfigChooser:
    int EGL_OPENGL_ES2_BIT -> EGL_OPENGL_ES2_BIT
    int[] s_configAttribs2 -> s_configAttribs2
    int mRedSize -> mRedSize
    int mGreenSize -> mGreenSize
    int mBlueSize -> mBlueSize
    int mAlphaSize -> mAlphaSize
    int mDepthSize -> mDepthSize
    int mStencilSize -> mStencilSize
    int[] mValue -> mValue
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
    int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> findConfigAttrib
    void printConfigs(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> printConfigs
    void printConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> printConfig
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ContextFactory -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ContextFactory:
    int EGL_CONTEXT_CLIENT_VERSION -> EGL_CONTEXT_CLIENT_VERSION
    javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> createContext
    void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> destroyContext
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18 -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy resolutionStrategy -> resolutionStrategy
    void onMeasure(int,int) -> onMeasure
    android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    void init(boolean,int,int) -> init
    void checkEglError(java.lang.String,javax.microedition.khronos.egl.EGL10) -> checkEglError
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18$1 -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18$1:
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18 this$0 -> this$0
    boolean deleteSurroundingText(int,int) -> deleteSurroundingText
    void sendDownUpKeyEventForBackwardCompatibility(int) -> sendDownUpKeyEventForBackwardCompatibility
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18$ConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18$ConfigChooser:
    int EGL_OPENGL_ES2_BIT -> EGL_OPENGL_ES2_BIT
    int[] s_configAttribs2 -> s_configAttribs2
    int mRedSize -> mRedSize
    int mGreenSize -> mGreenSize
    int mBlueSize -> mBlueSize
    int mAlphaSize -> mAlphaSize
    int mDepthSize -> mDepthSize
    int mStencilSize -> mStencilSize
    int[] mValue -> mValue
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
    int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> findConfigAttrib
    void printConfigs(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> printConfigs
    void printConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> printConfig
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18$ContextFactory -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18$ContextFactory:
    int EGL_CONTEXT_CLIENT_VERSION -> EGL_CONTEXT_CLIENT_VERSION
    javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> createContext
    void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> destroyContext
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18 -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18:
    java.lang.String TAG -> TAG
    boolean LOG_ATTACH_DETACH -> LOG_ATTACH_DETACH
    boolean LOG_THREADS -> LOG_THREADS
    boolean LOG_PAUSE_RESUME -> LOG_PAUSE_RESUME
    boolean LOG_SURFACE -> LOG_SURFACE
    boolean LOG_RENDERER -> LOG_RENDERER
    boolean LOG_RENDERER_DRAW_FRAME -> LOG_RENDERER_DRAW_FRAME
    boolean LOG_EGL -> LOG_EGL
    int RENDERMODE_WHEN_DIRTY -> RENDERMODE_WHEN_DIRTY
    int RENDERMODE_CONTINUOUSLY -> RENDERMODE_CONTINUOUSLY
    int DEBUG_CHECK_GL_ERROR -> DEBUG_CHECK_GL_ERROR
    int DEBUG_LOG_GL_CALLS -> DEBUG_LOG_GL_CALLS
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThreadManager sGLThreadManager -> sGLThreadManager
    java.lang.ref.WeakReference mThisWeakRef -> mThisWeakRef
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread mGLThread -> mGLThread
    android.opengl.GLSurfaceView$Renderer mRenderer -> mRenderer
    boolean mDetached -> mDetached
    android.opengl.GLSurfaceView$EGLConfigChooser mEGLConfigChooser -> mEGLConfigChooser
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EGLContextFactory mEGLContextFactory -> mEGLContextFactory
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EGLWindowSurfaceFactory mEGLWindowSurfaceFactory -> mEGLWindowSurfaceFactory
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLWrapper mGLWrapper -> mGLWrapper
    int mDebugFlags -> mDebugFlags
    int mEGLContextClientVersion -> mEGLContextClientVersion
    boolean mPreserveEGLContextOnPause -> mPreserveEGLContextOnPause
    void finalize() -> finalize
    void init() -> init
    void setGLWrapper(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLWrapper) -> setGLWrapper
    void setDebugFlags(int) -> setDebugFlags
    int getDebugFlags() -> getDebugFlags
    void setPreserveEGLContextOnPause(boolean) -> setPreserveEGLContextOnPause
    boolean getPreserveEGLContextOnPause() -> getPreserveEGLContextOnPause
    void setRenderer(android.opengl.GLSurfaceView$Renderer) -> setRenderer
    void setEGLContextFactory(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EGLContextFactory) -> setEGLContextFactory
    void setEGLWindowSurfaceFactory(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EGLWindowSurfaceFactory) -> setEGLWindowSurfaceFactory
    void setEGLConfigChooser(android.opengl.GLSurfaceView$EGLConfigChooser) -> setEGLConfigChooser
    void setEGLConfigChooser(boolean) -> setEGLConfigChooser
    void setEGLConfigChooser(int,int,int,int,int,int) -> setEGLConfigChooser
    void setEGLContextClientVersion(int) -> setEGLContextClientVersion
    void setRenderMode(int) -> setRenderMode
    int getRenderMode() -> getRenderMode
    void requestRender() -> requestRender
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void onPause() -> onPause
    void onResume() -> onResume
    void queueEvent(java.lang.Runnable) -> queueEvent
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void checkRenderThreadState() -> checkRenderThreadState
    int access$200(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18) -> access$200
    android.opengl.GLSurfaceView$EGLConfigChooser access$300(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18) -> access$300
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EGLContextFactory access$400(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18) -> access$400
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EGLWindowSurfaceFactory access$500(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18) -> access$500
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLWrapper access$600(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18) -> access$600
    int access$700(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18) -> access$700
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThreadManager access$800() -> access$800
    boolean access$900(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18) -> access$900
    android.opengl.GLSurfaceView$Renderer access$1000(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18) -> access$1000
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$1 -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$1:
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$BaseConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$BaseConfigChooser:
    int[] mConfigSpec -> mConfigSpec
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18 this$0 -> this$0
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
    int[] filterConfigSpec(int[]) -> filterConfigSpec
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$ComponentSizeChooser -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$ComponentSizeChooser:
    int[] mValue -> mValue
    int mRedSize -> mRedSize
    int mGreenSize -> mGreenSize
    int mBlueSize -> mBlueSize
    int mAlphaSize -> mAlphaSize
    int mDepthSize -> mDepthSize
    int mStencilSize -> mStencilSize
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18 this$0 -> this$0
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
    int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> findConfigAttrib
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$DefaultContextFactory -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$DefaultContextFactory:
    int EGL_CONTEXT_CLIENT_VERSION -> EGL_CONTEXT_CLIENT_VERSION
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18 this$0 -> this$0
    javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> createContext
    void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> destroyContext
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$DefaultWindowSurfaceFactory -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$DefaultWindowSurfaceFactory:
    javax.microedition.khronos.egl.EGLSurface createWindowSurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object) -> createWindowSurface
    void destroySurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> destroySurface
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EGLContextFactory -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EGLContextFactory:
    javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> createContext
    void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> destroyContext
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EGLWindowSurfaceFactory -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EGLWindowSurfaceFactory:
    javax.microedition.khronos.egl.EGLSurface createWindowSurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object) -> createWindowSurface
    void destroySurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> destroySurface
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EglHelper -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EglHelper:
    java.lang.ref.WeakReference mGLSurfaceViewWeakRef -> mGLSurfaceViewWeakRef
    javax.microedition.khronos.egl.EGL10 mEgl -> mEgl
    javax.microedition.khronos.egl.EGLDisplay mEglDisplay -> mEglDisplay
    javax.microedition.khronos.egl.EGLSurface mEglSurface -> mEglSurface
    javax.microedition.khronos.egl.EGLConfig mEglConfig -> mEglConfig
    javax.microedition.khronos.egl.EGLContext mEglContext -> mEglContext
    void start() -> start
    boolean createSurface() -> createSurface
    javax.microedition.khronos.opengles.GL createGL() -> createGL
    int swap() -> swap
    void destroySurface() -> destroySurface
    void destroySurfaceImp() -> destroySurfaceImp
    void finish() -> finish
    void throwEglException(java.lang.String) -> throwEglException
    void throwEglException(java.lang.String,int) -> throwEglException
    void logEglErrorAsWarning(java.lang.String,java.lang.String,int) -> logEglErrorAsWarning
    java.lang.String getErrorString(int) -> getErrorString
    java.lang.String formatEglError(java.lang.String,int) -> formatEglError
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread:
    boolean mShouldExit -> mShouldExit
    boolean mExited -> mExited
    boolean mRequestPaused -> mRequestPaused
    boolean mPaused -> mPaused
    boolean mHasSurface -> mHasSurface
    boolean mSurfaceIsBad -> mSurfaceIsBad
    boolean mWaitingForSurface -> mWaitingForSurface
    boolean mHaveEglContext -> mHaveEglContext
    boolean mHaveEglSurface -> mHaveEglSurface
    boolean mFinishedCreatingEglSurface -> mFinishedCreatingEglSurface
    boolean mShouldReleaseEglContext -> mShouldReleaseEglContext
    int mWidth -> mWidth
    int mHeight -> mHeight
    int mRenderMode -> mRenderMode
    boolean mRequestRender -> mRequestRender
    boolean mRenderComplete -> mRenderComplete
    java.util.ArrayList mEventQueue -> mEventQueue
    boolean mSizeChanged -> mSizeChanged
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EglHelper mEglHelper -> mEglHelper
    java.lang.ref.WeakReference mGLSurfaceViewWeakRef -> mGLSurfaceViewWeakRef
    void run() -> run
    void stopEglSurfaceLocked() -> stopEglSurfaceLocked
    void stopEglContextLocked() -> stopEglContextLocked
    void guardedRun() -> guardedRun
    boolean ableToDraw() -> ableToDraw
    boolean readyToDraw() -> readyToDraw
    void setRenderMode(int) -> setRenderMode
    int getRenderMode() -> getRenderMode
    void requestRender() -> requestRender
    void surfaceCreated() -> surfaceCreated
    void surfaceDestroyed() -> surfaceDestroyed
    void onPause() -> onPause
    void onResume() -> onResume
    void onWindowResize(int,int) -> onWindowResize
    void requestExitAndWait() -> requestExitAndWait
    void requestReleaseEglContextLocked() -> requestReleaseEglContextLocked
    void queueEvent(java.lang.Runnable) -> queueEvent
    boolean access$1102(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread,boolean) -> access$1102
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThreadManager -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThreadManager:
    java.lang.String TAG -> TAG
    boolean mGLESVersionCheckComplete -> mGLESVersionCheckComplete
    int mGLESVersion -> mGLESVersion
    boolean mGLESDriverCheckComplete -> mGLESDriverCheckComplete
    boolean mMultipleGLESContextsAllowed -> mMultipleGLESContextsAllowed
    boolean mLimitedGLESContexts -> mLimitedGLESContexts
    int kGLES_20 -> kGLES_20
    java.lang.String kMSM7K_RENDERER_PREFIX -> kMSM7K_RENDERER_PREFIX
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread mEglOwner -> mEglOwner
    void threadExiting(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread) -> threadExiting
    boolean tryAcquireEglContextLocked(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread) -> tryAcquireEglContextLocked
    void releaseEglContextLocked(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread) -> releaseEglContextLocked
    boolean shouldReleaseEGLContextWhenPausing() -> shouldReleaseEGLContextWhenPausing
    boolean shouldTerminateEGLWhenPausing() -> shouldTerminateEGLWhenPausing
    void checkGLDriver(javax.microedition.khronos.opengles.GL10) -> checkGLDriver
    void checkGLESVersion() -> checkGLESVersion
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLWrapper -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLWrapper:
    javax.microedition.khronos.opengles.GL wrap(javax.microedition.khronos.opengles.GL) -> wrap
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$LogWriter -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$LogWriter:
    java.lang.StringBuilder mBuilder -> mBuilder
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> flushBuilder
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$SimpleEGLConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$SimpleEGLConfigChooser:
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18 this$0 -> this$0
com.badlogic.gdx.backends.android.surfaceview.GdxEglConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GdxEglConfigChooser:
    int EGL_OPENGL_ES2_BIT -> EGL_OPENGL_ES2_BIT
    int EGL_COVERAGE_BUFFERS_NV -> EGL_COVERAGE_BUFFERS_NV
    int EGL_COVERAGE_SAMPLES_NV -> EGL_COVERAGE_SAMPLES_NV
    java.lang.String TAG -> TAG
    int mRedSize -> mRedSize
    int mGreenSize -> mGreenSize
    int mBlueSize -> mBlueSize
    int mAlphaSize -> mAlphaSize
    int mDepthSize -> mDepthSize
    int mStencilSize -> mStencilSize
    int mNumSamples -> mNumSamples
    int[] mConfigAttribs -> mConfigAttribs
    int[] mValue -> mValue
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
    int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> findConfigAttrib
    void printConfigs(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> printConfigs
    void printConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> printConfig
com.badlogic.gdx.backends.android.surfaceview.RatioResolutionStrategy -> com.badlogic.gdx.backends.android.surfaceview.RatioResolutionStrategy:
    float ratio -> ratio
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension calcMeasures(int,int) -> calcMeasures
com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy -> com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy:
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension calcMeasures(int,int) -> calcMeasures
com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension -> com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension:
    int width -> width
    int height -> height
com.badlogic.gdx.files.FileHandle -> com.badlogic.gdx.files.FileHandle:
    java.io.File file -> file
    com.badlogic.gdx.Files$FileType type -> type
    java.lang.String path() -> path
    java.lang.String name() -> name
    java.lang.String extension() -> extension
    java.lang.String nameWithoutExtension() -> nameWithoutExtension
    java.lang.String pathWithoutExtension() -> pathWithoutExtension
    com.badlogic.gdx.Files$FileType type() -> type
    java.io.File file() -> file
    java.io.InputStream read() -> read
    java.io.BufferedInputStream read(int) -> read
    java.io.Reader reader() -> reader
    java.io.Reader reader(java.lang.String) -> reader
    java.io.BufferedReader reader(int) -> reader
    java.io.BufferedReader reader(int,java.lang.String) -> reader
    java.lang.String readString() -> readString
    java.lang.String readString(java.lang.String) -> readString
    byte[] readBytes() -> readBytes
    int estimateLength() -> estimateLength
    int readBytes(byte[],int,int) -> readBytes
    java.io.OutputStream write(boolean) -> write
    java.io.OutputStream write(boolean,int) -> write
    void write(java.io.InputStream,boolean) -> write
    java.io.Writer writer(boolean) -> writer
    java.io.Writer writer(boolean,java.lang.String) -> writer
    void writeString(java.lang.String,boolean) -> writeString
    void writeString(java.lang.String,boolean,java.lang.String) -> writeString
    void writeBytes(byte[],boolean) -> writeBytes
    void writeBytes(byte[],int,int,boolean) -> writeBytes
    com.badlogic.gdx.files.FileHandle[] list() -> list
    com.badlogic.gdx.files.FileHandle[] list(java.io.FileFilter) -> list
    com.badlogic.gdx.files.FileHandle[] list(java.io.FilenameFilter) -> list
    com.badlogic.gdx.files.FileHandle[] list(java.lang.String) -> list
    boolean isDirectory() -> isDirectory
    com.badlogic.gdx.files.FileHandle child(java.lang.String) -> child
    com.badlogic.gdx.files.FileHandle sibling(java.lang.String) -> sibling
    com.badlogic.gdx.files.FileHandle parent() -> parent
    void mkdirs() -> mkdirs
    boolean exists() -> exists
    boolean delete() -> delete
    boolean deleteDirectory() -> deleteDirectory
    void emptyDirectory() -> emptyDirectory
    void emptyDirectory(boolean) -> emptyDirectory
    void copyTo(com.badlogic.gdx.files.FileHandle) -> copyTo
    void moveTo(com.badlogic.gdx.files.FileHandle) -> moveTo
    long length() -> length
    long lastModified() -> lastModified
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    com.badlogic.gdx.files.FileHandle tempFile(java.lang.String) -> tempFile
    com.badlogic.gdx.files.FileHandle tempDirectory(java.lang.String) -> tempDirectory
    void emptyDirectory(java.io.File,boolean) -> emptyDirectory
    boolean deleteDirectory(java.io.File) -> deleteDirectory
    void copyFile(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle) -> copyFile
    void copyDirectory(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle) -> copyDirectory
com.badlogic.gdx.files.FileHandle$1 -> com.badlogic.gdx.files.FileHandle$1:
    int[] $SwitchMap$com$badlogic$gdx$Files$FileType -> $SwitchMap$com$badlogic$gdx$Files$FileType
com.badlogic.gdx.files.FileHandleStream -> com.badlogic.gdx.files.FileHandleStream:
    boolean isDirectory() -> isDirectory
    long length() -> length
    boolean exists() -> exists
    com.badlogic.gdx.files.FileHandle child(java.lang.String) -> child
    com.badlogic.gdx.files.FileHandle sibling(java.lang.String) -> sibling
    com.badlogic.gdx.files.FileHandle parent() -> parent
    java.io.InputStream read() -> read
    java.io.OutputStream write(boolean) -> write
    com.badlogic.gdx.files.FileHandle[] list() -> list
    void mkdirs() -> mkdirs
    boolean delete() -> delete
    boolean deleteDirectory() -> deleteDirectory
    void copyTo(com.badlogic.gdx.files.FileHandle) -> copyTo
    void moveTo(com.badlogic.gdx.files.FileHandle) -> moveTo
com.badlogic.gdx.graphics.Camera -> com.badlogic.gdx.graphics.Camera:
    com.badlogic.gdx.math.Vector3 position -> position
    com.badlogic.gdx.math.Vector3 direction -> direction
    com.badlogic.gdx.math.Vector3 up -> up
    com.badlogic.gdx.math.Matrix4 projection -> projection
    com.badlogic.gdx.math.Matrix4 view -> view
    com.badlogic.gdx.math.Matrix4 combined -> combined
    com.badlogic.gdx.math.Matrix4 invProjectionView -> invProjectionView
    float near -> near
    float far -> far
    float viewportWidth -> viewportWidth
    float viewportHeight -> viewportHeight
    com.badlogic.gdx.math.Frustum frustum -> frustum
    com.badlogic.gdx.math.Vector3 tmpVec -> tmpVec
    com.badlogic.gdx.math.collision.Ray ray -> ray
    void update() -> update
    void update(boolean) -> update
    void lookAt(float,float,float) -> lookAt
    void lookAt(com.badlogic.gdx.math.Vector3) -> lookAt
    void normalizeUp() -> normalizeUp
    void rotate(float,float,float,float) -> rotate
    void rotate(com.badlogic.gdx.math.Vector3,float) -> rotate
    void rotate(com.badlogic.gdx.math.Matrix4) -> rotate
    void rotate(com.badlogic.gdx.math.Quaternion) -> rotate
    void rotateAround(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float) -> rotateAround
    void transform(com.badlogic.gdx.math.Matrix4) -> transform
    void translate(float,float,float) -> translate
    void translate(com.badlogic.gdx.math.Vector3) -> translate
    com.badlogic.gdx.math.Vector3 unproject(com.badlogic.gdx.math.Vector3,float,float,float,float) -> unproject
    com.badlogic.gdx.math.Vector3 unproject(com.badlogic.gdx.math.Vector3) -> unproject
    com.badlogic.gdx.math.Vector3 project(com.badlogic.gdx.math.Vector3) -> project
    com.badlogic.gdx.math.Vector3 project(com.badlogic.gdx.math.Vector3,float,float,float,float) -> project
    com.badlogic.gdx.math.collision.Ray getPickRay(float,float,float,float,float,float) -> getPickRay
    com.badlogic.gdx.math.collision.Ray getPickRay(float,float) -> getPickRay
com.badlogic.gdx.graphics.Color -> com.badlogic.gdx.graphics.Color:
    com.badlogic.gdx.graphics.Color CLEAR -> CLEAR
    com.badlogic.gdx.graphics.Color WHITE -> WHITE
    com.badlogic.gdx.graphics.Color BLACK -> BLACK
    com.badlogic.gdx.graphics.Color RED -> RED
    com.badlogic.gdx.graphics.Color GREEN -> GREEN
    com.badlogic.gdx.graphics.Color BLUE -> BLUE
    com.badlogic.gdx.graphics.Color LIGHT_GRAY -> LIGHT_GRAY
    com.badlogic.gdx.graphics.Color GRAY -> GRAY
    com.badlogic.gdx.graphics.Color DARK_GRAY -> DARK_GRAY
    com.badlogic.gdx.graphics.Color PINK -> PINK
    com.badlogic.gdx.graphics.Color ORANGE -> ORANGE
    com.badlogic.gdx.graphics.Color YELLOW -> YELLOW
    com.badlogic.gdx.graphics.Color MAGENTA -> MAGENTA
    com.badlogic.gdx.graphics.Color CYAN -> CYAN
    com.badlogic.gdx.graphics.Color OLIVE -> OLIVE
    com.badlogic.gdx.graphics.Color PURPLE -> PURPLE
    com.badlogic.gdx.graphics.Color MAROON -> MAROON
    com.badlogic.gdx.graphics.Color TEAL -> TEAL
    com.badlogic.gdx.graphics.Color NAVY -> NAVY
    com.badlogic.gdx.graphics.Color tmp -> tmp
    float r -> r
    float g -> g
    float b -> b
    float a -> a
    com.badlogic.gdx.graphics.Color set(com.badlogic.gdx.graphics.Color) -> set
    com.badlogic.gdx.graphics.Color mul(com.badlogic.gdx.graphics.Color) -> mul
    com.badlogic.gdx.graphics.Color mul(float) -> mul
    com.badlogic.gdx.graphics.Color add(com.badlogic.gdx.graphics.Color) -> add
    com.badlogic.gdx.graphics.Color sub(com.badlogic.gdx.graphics.Color) -> sub
    com.badlogic.gdx.graphics.Color clamp() -> clamp
    com.badlogic.gdx.graphics.Color set(float,float,float,float) -> set
    com.badlogic.gdx.graphics.Color set(int) -> set
    com.badlogic.gdx.graphics.Color add(float,float,float,float) -> add
    com.badlogic.gdx.graphics.Color sub(float,float,float,float) -> sub
    com.badlogic.gdx.graphics.Color mul(float,float,float,float) -> mul
    com.badlogic.gdx.graphics.Color lerp(com.badlogic.gdx.graphics.Color,float) -> lerp
    com.badlogic.gdx.graphics.Color lerp(float,float,float,float,float) -> lerp
    com.badlogic.gdx.graphics.Color premultiplyAlpha() -> premultiplyAlpha
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    float toFloatBits() -> toFloatBits
    int toIntBits() -> toIntBits
    java.lang.String toString() -> toString
    com.badlogic.gdx.graphics.Color valueOf(java.lang.String) -> valueOf
    float toFloatBits(int,int,int,int) -> toFloatBits
    float toFloatBits(float,float,float,float) -> toFloatBits
    int toIntBits(int,int,int,int) -> toIntBits
    int alpha(float) -> alpha
    int luminanceAlpha(float,float) -> luminanceAlpha
    int rgb565(float,float,float) -> rgb565
    int rgba4444(float,float,float,float) -> rgba4444
    int rgb888(float,float,float) -> rgb888
    int rgba8888(float,float,float,float) -> rgba8888
    int rgb565(com.badlogic.gdx.graphics.Color) -> rgb565
    int rgba4444(com.badlogic.gdx.graphics.Color) -> rgba4444
    int rgb888(com.badlogic.gdx.graphics.Color) -> rgb888
    int rgba8888(com.badlogic.gdx.graphics.Color) -> rgba8888
    void rgb565ToColor(com.badlogic.gdx.graphics.Color,int) -> rgb565ToColor
    void rgba4444ToColor(com.badlogic.gdx.graphics.Color,int) -> rgba4444ToColor
    void rgb888ToColor(com.badlogic.gdx.graphics.Color,int) -> rgb888ToColor
    void rgba8888ToColor(com.badlogic.gdx.graphics.Color,int) -> rgba8888ToColor
    com.badlogic.gdx.graphics.Color tmp() -> tmp
    com.badlogic.gdx.graphics.Color cpy() -> cpy
com.badlogic.gdx.graphics.Colors -> com.badlogic.gdx.graphics.Colors:
    com.badlogic.gdx.utils.ObjectMap map -> map
    com.badlogic.gdx.utils.ObjectMap getColors() -> getColors
    com.badlogic.gdx.graphics.Color get(java.lang.String) -> get
    com.badlogic.gdx.graphics.Color put(java.lang.String,com.badlogic.gdx.graphics.Color) -> put
    void reset() -> reset
com.badlogic.gdx.graphics.Cubemap -> com.badlogic.gdx.graphics.Cubemap:
    com.badlogic.gdx.graphics.TextureData[] data -> data
    void load(com.badlogic.gdx.graphics.TextureData,com.badlogic.gdx.graphics.TextureData,com.badlogic.gdx.graphics.TextureData,com.badlogic.gdx.graphics.TextureData,com.badlogic.gdx.graphics.TextureData,com.badlogic.gdx.graphics.TextureData) -> load
    boolean isManaged() -> isManaged
    void reload() -> reload
    void load(com.badlogic.gdx.graphics.Cubemap$CubemapSide,com.badlogic.gdx.files.FileHandle) -> load
    void load(com.badlogic.gdx.graphics.Cubemap$CubemapSide,com.badlogic.gdx.files.FileHandle,boolean) -> load
    void load(com.badlogic.gdx.graphics.Cubemap$CubemapSide,com.badlogic.gdx.graphics.Pixmap) -> load
    void load(com.badlogic.gdx.graphics.Cubemap$CubemapSide,com.badlogic.gdx.graphics.Pixmap,boolean) -> load
    void load(com.badlogic.gdx.graphics.Cubemap$CubemapSide,com.badlogic.gdx.graphics.TextureData) -> load
    void unsafeLoad(com.badlogic.gdx.graphics.Cubemap$CubemapSide,com.badlogic.gdx.graphics.TextureData) -> unsafeLoad
    boolean isComplete() -> isComplete
    com.badlogic.gdx.graphics.TextureData getTextureData(com.badlogic.gdx.graphics.Cubemap$CubemapSide) -> getTextureData
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    int getDepth() -> getDepth
com.badlogic.gdx.graphics.Cubemap$CubemapSide -> com.badlogic.gdx.graphics.Cubemap$CubemapSide:
    com.badlogic.gdx.graphics.Cubemap$CubemapSide PositiveX -> PositiveX
    com.badlogic.gdx.graphics.Cubemap$CubemapSide NegativeX -> NegativeX
    com.badlogic.gdx.graphics.Cubemap$CubemapSide PositiveY -> PositiveY
    com.badlogic.gdx.graphics.Cubemap$CubemapSide NegativeY -> NegativeY
    com.badlogic.gdx.graphics.Cubemap$CubemapSide PositiveZ -> PositiveZ
    com.badlogic.gdx.graphics.Cubemap$CubemapSide NegativeZ -> NegativeZ
    int index -> index
    int glEnum -> glEnum
    com.badlogic.gdx.graphics.Cubemap$CubemapSide[] $VALUES -> $VALUES
    com.badlogic.gdx.graphics.Cubemap$CubemapSide[] values() -> values
    com.badlogic.gdx.graphics.Cubemap$CubemapSide valueOf(java.lang.String) -> valueOf
    int getGLEnum() -> getGLEnum
com.badlogic.gdx.graphics.FPSLogger -> com.badlogic.gdx.graphics.FPSLogger:
    long startTime -> startTime
    void log() -> log
com.badlogic.gdx.graphics.GL20 -> com.badlogic.gdx.graphics.GL20:
    int GL_ES_VERSION_2_0 -> GL_ES_VERSION_2_0
    int GL_DEPTH_BUFFER_BIT -> GL_DEPTH_BUFFER_BIT
    int GL_STENCIL_BUFFER_BIT -> GL_STENCIL_BUFFER_BIT
    int GL_COLOR_BUFFER_BIT -> GL_COLOR_BUFFER_BIT
    int GL_FALSE -> GL_FALSE
    int GL_TRUE -> GL_TRUE
    int GL_POINTS -> GL_POINTS
    int GL_LINES -> GL_LINES
    int GL_LINE_LOOP -> GL_LINE_LOOP
    int GL_LINE_STRIP -> GL_LINE_STRIP
    int GL_TRIANGLES -> GL_TRIANGLES
    int GL_TRIANGLE_STRIP -> GL_TRIANGLE_STRIP
    int GL_TRIANGLE_FAN -> GL_TRIANGLE_FAN
    int GL_ZERO -> GL_ZERO
    int GL_ONE -> GL_ONE
    int GL_SRC_COLOR -> GL_SRC_COLOR
    int GL_ONE_MINUS_SRC_COLOR -> GL_ONE_MINUS_SRC_COLOR
    int GL_SRC_ALPHA -> GL_SRC_ALPHA
    int GL_ONE_MINUS_SRC_ALPHA -> GL_ONE_MINUS_SRC_ALPHA
    int GL_DST_ALPHA -> GL_DST_ALPHA
    int GL_ONE_MINUS_DST_ALPHA -> GL_ONE_MINUS_DST_ALPHA
    int GL_DST_COLOR -> GL_DST_COLOR
    int GL_ONE_MINUS_DST_COLOR -> GL_ONE_MINUS_DST_COLOR
    int GL_SRC_ALPHA_SATURATE -> GL_SRC_ALPHA_SATURATE
    int GL_FUNC_ADD -> GL_FUNC_ADD
    int GL_BLEND_EQUATION -> GL_BLEND_EQUATION
    int GL_BLEND_EQUATION_RGB -> GL_BLEND_EQUATION_RGB
    int GL_BLEND_EQUATION_ALPHA -> GL_BLEND_EQUATION_ALPHA
    int GL_FUNC_SUBTRACT -> GL_FUNC_SUBTRACT
    int GL_FUNC_REVERSE_SUBTRACT -> GL_FUNC_REVERSE_SUBTRACT
    int GL_BLEND_DST_RGB -> GL_BLEND_DST_RGB
    int GL_BLEND_SRC_RGB -> GL_BLEND_SRC_RGB
    int GL_BLEND_DST_ALPHA -> GL_BLEND_DST_ALPHA
    int GL_BLEND_SRC_ALPHA -> GL_BLEND_SRC_ALPHA
    int GL_CONSTANT_COLOR -> GL_CONSTANT_COLOR
    int GL_ONE_MINUS_CONSTANT_COLOR -> GL_ONE_MINUS_CONSTANT_COLOR
    int GL_CONSTANT_ALPHA -> GL_CONSTANT_ALPHA
    int GL_ONE_MINUS_CONSTANT_ALPHA -> GL_ONE_MINUS_CONSTANT_ALPHA
    int GL_BLEND_COLOR -> GL_BLEND_COLOR
    int GL_ARRAY_BUFFER -> GL_ARRAY_BUFFER
    int GL_ELEMENT_ARRAY_BUFFER -> GL_ELEMENT_ARRAY_BUFFER
    int GL_ARRAY_BUFFER_BINDING -> GL_ARRAY_BUFFER_BINDING
    int GL_ELEMENT_ARRAY_BUFFER_BINDING -> GL_ELEMENT_ARRAY_BUFFER_BINDING
    int GL_STREAM_DRAW -> GL_STREAM_DRAW
    int GL_STATIC_DRAW -> GL_STATIC_DRAW
    int GL_DYNAMIC_DRAW -> GL_DYNAMIC_DRAW
    int GL_BUFFER_SIZE -> GL_BUFFER_SIZE
    int GL_BUFFER_USAGE -> GL_BUFFER_USAGE
    int GL_CURRENT_VERTEX_ATTRIB -> GL_CURRENT_VERTEX_ATTRIB
    int GL_FRONT -> GL_FRONT
    int GL_BACK -> GL_BACK
    int GL_FRONT_AND_BACK -> GL_FRONT_AND_BACK
    int GL_TEXTURE_2D -> GL_TEXTURE_2D
    int GL_CULL_FACE -> GL_CULL_FACE
    int GL_BLEND -> GL_BLEND
    int GL_DITHER -> GL_DITHER
    int GL_STENCIL_TEST -> GL_STENCIL_TEST
    int GL_DEPTH_TEST -> GL_DEPTH_TEST
    int GL_SCISSOR_TEST -> GL_SCISSOR_TEST
    int GL_POLYGON_OFFSET_FILL -> GL_POLYGON_OFFSET_FILL
    int GL_SAMPLE_ALPHA_TO_COVERAGE -> GL_SAMPLE_ALPHA_TO_COVERAGE
    int GL_SAMPLE_COVERAGE -> GL_SAMPLE_COVERAGE
    int GL_NO_ERROR -> GL_NO_ERROR
    int GL_INVALID_ENUM -> GL_INVALID_ENUM
    int GL_INVALID_VALUE -> GL_INVALID_VALUE
    int GL_INVALID_OPERATION -> GL_INVALID_OPERATION
    int GL_OUT_OF_MEMORY -> GL_OUT_OF_MEMORY
    int GL_CW -> GL_CW
    int GL_CCW -> GL_CCW
    int GL_LINE_WIDTH -> GL_LINE_WIDTH
    int GL_ALIASED_POINT_SIZE_RANGE -> GL_ALIASED_POINT_SIZE_RANGE
    int GL_ALIASED_LINE_WIDTH_RANGE -> GL_ALIASED_LINE_WIDTH_RANGE
    int GL_CULL_FACE_MODE -> GL_CULL_FACE_MODE
    int GL_FRONT_FACE -> GL_FRONT_FACE
    int GL_DEPTH_RANGE -> GL_DEPTH_RANGE
    int GL_DEPTH_WRITEMASK -> GL_DEPTH_WRITEMASK
    int GL_DEPTH_CLEAR_VALUE -> GL_DEPTH_CLEAR_VALUE
    int GL_DEPTH_FUNC -> GL_DEPTH_FUNC
    int GL_STENCIL_CLEAR_VALUE -> GL_STENCIL_CLEAR_VALUE
    int GL_STENCIL_FUNC -> GL_STENCIL_FUNC
    int GL_STENCIL_FAIL -> GL_STENCIL_FAIL
    int GL_STENCIL_PASS_DEPTH_FAIL -> GL_STENCIL_PASS_DEPTH_FAIL
    int GL_STENCIL_PASS_DEPTH_PASS -> GL_STENCIL_PASS_DEPTH_PASS
    int GL_STENCIL_REF -> GL_STENCIL_REF
    int GL_STENCIL_VALUE_MASK -> GL_STENCIL_VALUE_MASK
    int GL_STENCIL_WRITEMASK -> GL_STENCIL_WRITEMASK
    int GL_STENCIL_BACK_FUNC -> GL_STENCIL_BACK_FUNC
    int GL_STENCIL_BACK_FAIL -> GL_STENCIL_BACK_FAIL
    int GL_STENCIL_BACK_PASS_DEPTH_FAIL -> GL_STENCIL_BACK_PASS_DEPTH_FAIL
    int GL_STENCIL_BACK_PASS_DEPTH_PASS -> GL_STENCIL_BACK_PASS_DEPTH_PASS
    int GL_STENCIL_BACK_REF -> GL_STENCIL_BACK_REF
    int GL_STENCIL_BACK_VALUE_MASK -> GL_STENCIL_BACK_VALUE_MASK
    int GL_STENCIL_BACK_WRITEMASK -> GL_STENCIL_BACK_WRITEMASK
    int GL_VIEWPORT -> GL_VIEWPORT
    int GL_SCISSOR_BOX -> GL_SCISSOR_BOX
    int GL_COLOR_CLEAR_VALUE -> GL_COLOR_CLEAR_VALUE
    int GL_COLOR_WRITEMASK -> GL_COLOR_WRITEMASK
    int GL_UNPACK_ALIGNMENT -> GL_UNPACK_ALIGNMENT
    int GL_PACK_ALIGNMENT -> GL_PACK_ALIGNMENT
    int GL_MAX_TEXTURE_SIZE -> GL_MAX_TEXTURE_SIZE
    int GL_MAX_TEXTURE_UNITS -> GL_MAX_TEXTURE_UNITS
    int GL_MAX_VIEWPORT_DIMS -> GL_MAX_VIEWPORT_DIMS
    int GL_SUBPIXEL_BITS -> GL_SUBPIXEL_BITS
    int GL_RED_BITS -> GL_RED_BITS
    int GL_GREEN_BITS -> GL_GREEN_BITS
    int GL_BLUE_BITS -> GL_BLUE_BITS
    int GL_ALPHA_BITS -> GL_ALPHA_BITS
    int GL_DEPTH_BITS -> GL_DEPTH_BITS
    int GL_STENCIL_BITS -> GL_STENCIL_BITS
    int GL_POLYGON_OFFSET_UNITS -> GL_POLYGON_OFFSET_UNITS
    int GL_POLYGON_OFFSET_FACTOR -> GL_POLYGON_OFFSET_FACTOR
    int GL_TEXTURE_BINDING_2D -> GL_TEXTURE_BINDING_2D
    int GL_SAMPLE_BUFFERS -> GL_SAMPLE_BUFFERS
    int GL_SAMPLES -> GL_SAMPLES
    int GL_SAMPLE_COVERAGE_VALUE -> GL_SAMPLE_COVERAGE_VALUE
    int GL_SAMPLE_COVERAGE_INVERT -> GL_SAMPLE_COVERAGE_INVERT
    int GL_NUM_COMPRESSED_TEXTURE_FORMATS -> GL_NUM_COMPRESSED_TEXTURE_FORMATS
    int GL_COMPRESSED_TEXTURE_FORMATS -> GL_COMPRESSED_TEXTURE_FORMATS
    int GL_DONT_CARE -> GL_DONT_CARE
    int GL_FASTEST -> GL_FASTEST
    int GL_NICEST -> GL_NICEST
    int GL_GENERATE_MIPMAP -> GL_GENERATE_MIPMAP
    int GL_GENERATE_MIPMAP_HINT -> GL_GENERATE_MIPMAP_HINT
    int GL_BYTE -> GL_BYTE
    int GL_UNSIGNED_BYTE -> GL_UNSIGNED_BYTE
    int GL_SHORT -> GL_SHORT
    int GL_UNSIGNED_SHORT -> GL_UNSIGNED_SHORT
    int GL_INT -> GL_INT
    int GL_UNSIGNED_INT -> GL_UNSIGNED_INT
    int GL_FLOAT -> GL_FLOAT
    int GL_FIXED -> GL_FIXED
    int GL_DEPTH_COMPONENT -> GL_DEPTH_COMPONENT
    int GL_ALPHA -> GL_ALPHA
    int GL_RGB -> GL_RGB
    int GL_RGBA -> GL_RGBA
    int GL_LUMINANCE -> GL_LUMINANCE
    int GL_LUMINANCE_ALPHA -> GL_LUMINANCE_ALPHA
    int GL_UNSIGNED_SHORT_4_4_4_4 -> GL_UNSIGNED_SHORT_4_4_4_4
    int GL_UNSIGNED_SHORT_5_5_5_1 -> GL_UNSIGNED_SHORT_5_5_5_1
    int GL_UNSIGNED_SHORT_5_6_5 -> GL_UNSIGNED_SHORT_5_6_5
    int GL_FRAGMENT_SHADER -> GL_FRAGMENT_SHADER
    int GL_VERTEX_SHADER -> GL_VERTEX_SHADER
    int GL_MAX_VERTEX_ATTRIBS -> GL_MAX_VERTEX_ATTRIBS
    int GL_MAX_VERTEX_UNIFORM_VECTORS -> GL_MAX_VERTEX_UNIFORM_VECTORS
    int GL_MAX_VARYING_VECTORS -> GL_MAX_VARYING_VECTORS
    int GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS -> GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS
    int GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS -> GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS
    int GL_MAX_TEXTURE_IMAGE_UNITS -> GL_MAX_TEXTURE_IMAGE_UNITS
    int GL_MAX_FRAGMENT_UNIFORM_VECTORS -> GL_MAX_FRAGMENT_UNIFORM_VECTORS
    int GL_SHADER_TYPE -> GL_SHADER_TYPE
    int GL_DELETE_STATUS -> GL_DELETE_STATUS
    int GL_LINK_STATUS -> GL_LINK_STATUS
    int GL_VALIDATE_STATUS -> GL_VALIDATE_STATUS
    int GL_ATTACHED_SHADERS -> GL_ATTACHED_SHADERS
    int GL_ACTIVE_UNIFORMS -> GL_ACTIVE_UNIFORMS
    int GL_ACTIVE_UNIFORM_MAX_LENGTH -> GL_ACTIVE_UNIFORM_MAX_LENGTH
    int GL_ACTIVE_ATTRIBUTES -> GL_ACTIVE_ATTRIBUTES
    int GL_ACTIVE_ATTRIBUTE_MAX_LENGTH -> GL_ACTIVE_ATTRIBUTE_MAX_LENGTH
    int GL_SHADING_LANGUAGE_VERSION -> GL_SHADING_LANGUAGE_VERSION
    int GL_CURRENT_PROGRAM -> GL_CURRENT_PROGRAM
    int GL_NEVER -> GL_NEVER
    int GL_LESS -> GL_LESS
    int GL_EQUAL -> GL_EQUAL
    int GL_LEQUAL -> GL_LEQUAL
    int GL_GREATER -> GL_GREATER
    int GL_NOTEQUAL -> GL_NOTEQUAL
    int GL_GEQUAL -> GL_GEQUAL
    int GL_ALWAYS -> GL_ALWAYS
    int GL_KEEP -> GL_KEEP
    int GL_REPLACE -> GL_REPLACE
    int GL_INCR -> GL_INCR
    int GL_DECR -> GL_DECR
    int GL_INVERT -> GL_INVERT
    int GL_INCR_WRAP -> GL_INCR_WRAP
    int GL_DECR_WRAP -> GL_DECR_WRAP
    int GL_VENDOR -> GL_VENDOR
    int GL_RENDERER -> GL_RENDERER
    int GL_VERSION -> GL_VERSION
    int GL_EXTENSIONS -> GL_EXTENSIONS
    int GL_NEAREST -> GL_NEAREST
    int GL_LINEAR -> GL_LINEAR
    int GL_NEAREST_MIPMAP_NEAREST -> GL_NEAREST_MIPMAP_NEAREST
    int GL_LINEAR_MIPMAP_NEAREST -> GL_LINEAR_MIPMAP_NEAREST
    int GL_NEAREST_MIPMAP_LINEAR -> GL_NEAREST_MIPMAP_LINEAR
    int GL_LINEAR_MIPMAP_LINEAR -> GL_LINEAR_MIPMAP_LINEAR
    int GL_TEXTURE_MAG_FILTER -> GL_TEXTURE_MAG_FILTER
    int GL_TEXTURE_MIN_FILTER -> GL_TEXTURE_MIN_FILTER
    int GL_TEXTURE_WRAP_S -> GL_TEXTURE_WRAP_S
    int GL_TEXTURE_WRAP_T -> GL_TEXTURE_WRAP_T
    int GL_TEXTURE -> GL_TEXTURE
    int GL_TEXTURE_CUBE_MAP -> GL_TEXTURE_CUBE_MAP
    int GL_TEXTURE_BINDING_CUBE_MAP -> GL_TEXTURE_BINDING_CUBE_MAP
    int GL_TEXTURE_CUBE_MAP_POSITIVE_X -> GL_TEXTURE_CUBE_MAP_POSITIVE_X
    int GL_TEXTURE_CUBE_MAP_NEGATIVE_X -> GL_TEXTURE_CUBE_MAP_NEGATIVE_X
    int GL_TEXTURE_CUBE_MAP_POSITIVE_Y -> GL_TEXTURE_CUBE_MAP_POSITIVE_Y
    int GL_TEXTURE_CUBE_MAP_NEGATIVE_Y -> GL_TEXTURE_CUBE_MAP_NEGATIVE_Y
    int GL_TEXTURE_CUBE_MAP_POSITIVE_Z -> GL_TEXTURE_CUBE_MAP_POSITIVE_Z
    int GL_TEXTURE_CUBE_MAP_NEGATIVE_Z -> GL_TEXTURE_CUBE_MAP_NEGATIVE_Z
    int GL_MAX_CUBE_MAP_TEXTURE_SIZE -> GL_MAX_CUBE_MAP_TEXTURE_SIZE
    int GL_TEXTURE0 -> GL_TEXTURE0
    int GL_TEXTURE1 -> GL_TEXTURE1
    int GL_TEXTURE2 -> GL_TEXTURE2
    int GL_TEXTURE3 -> GL_TEXTURE3
    int GL_TEXTURE4 -> GL_TEXTURE4
    int GL_TEXTURE5 -> GL_TEXTURE5
    int GL_TEXTURE6 -> GL_TEXTURE6
    int GL_TEXTURE7 -> GL_TEXTURE7
    int GL_TEXTURE8 -> GL_TEXTURE8
    int GL_TEXTURE9 -> GL_TEXTURE9
    int GL_TEXTURE10 -> GL_TEXTURE10
    int GL_TEXTURE11 -> GL_TEXTURE11
    int GL_TEXTURE12 -> GL_TEXTURE12
    int GL_TEXTURE13 -> GL_TEXTURE13
    int GL_TEXTURE14 -> GL_TEXTURE14
    int GL_TEXTURE15 -> GL_TEXTURE15
    int GL_TEXTURE16 -> GL_TEXTURE16
    int GL_TEXTURE17 -> GL_TEXTURE17
    int GL_TEXTURE18 -> GL_TEXTURE18
    int GL_TEXTURE19 -> GL_TEXTURE19
    int GL_TEXTURE20 -> GL_TEXTURE20
    int GL_TEXTURE21 -> GL_TEXTURE21
    int GL_TEXTURE22 -> GL_TEXTURE22
    int GL_TEXTURE23 -> GL_TEXTURE23
    int GL_TEXTURE24 -> GL_TEXTURE24
    int GL_TEXTURE25 -> GL_TEXTURE25
    int GL_TEXTURE26 -> GL_TEXTURE26
    int GL_TEXTURE27 -> GL_TEXTURE27
    int GL_TEXTURE28 -> GL_TEXTURE28
    int GL_TEXTURE29 -> GL_TEXTURE29
    int GL_TEXTURE30 -> GL_TEXTURE30
    int GL_TEXTURE31 -> GL_TEXTURE31
    int GL_ACTIVE_TEXTURE -> GL_ACTIVE_TEXTURE
    int GL_REPEAT -> GL_REPEAT
    int GL_CLAMP_TO_EDGE -> GL_CLAMP_TO_EDGE
    int GL_MIRRORED_REPEAT -> GL_MIRRORED_REPEAT
    int GL_FLOAT_VEC2 -> GL_FLOAT_VEC2
    int GL_FLOAT_VEC3 -> GL_FLOAT_VEC3
    int GL_FLOAT_VEC4 -> GL_FLOAT_VEC4
    int GL_INT_VEC2 -> GL_INT_VEC2
    int GL_INT_VEC3 -> GL_INT_VEC3
    int GL_INT_VEC4 -> GL_INT_VEC4
    int GL_BOOL -> GL_BOOL
    int GL_BOOL_VEC2 -> GL_BOOL_VEC2
    int GL_BOOL_VEC3 -> GL_BOOL_VEC3
    int GL_BOOL_VEC4 -> GL_BOOL_VEC4
    int GL_FLOAT_MAT2 -> GL_FLOAT_MAT2
    int GL_FLOAT_MAT3 -> GL_FLOAT_MAT3
    int GL_FLOAT_MAT4 -> GL_FLOAT_MAT4
    int GL_SAMPLER_2D -> GL_SAMPLER_2D
    int GL_SAMPLER_CUBE -> GL_SAMPLER_CUBE
    int GL_VERTEX_ATTRIB_ARRAY_ENABLED -> GL_VERTEX_ATTRIB_ARRAY_ENABLED
    int GL_VERTEX_ATTRIB_ARRAY_SIZE -> GL_VERTEX_ATTRIB_ARRAY_SIZE
    int GL_VERTEX_ATTRIB_ARRAY_STRIDE -> GL_VERTEX_ATTRIB_ARRAY_STRIDE
    int GL_VERTEX_ATTRIB_ARRAY_TYPE -> GL_VERTEX_ATTRIB_ARRAY_TYPE
    int GL_VERTEX_ATTRIB_ARRAY_NORMALIZED -> GL_VERTEX_ATTRIB_ARRAY_NORMALIZED
    int GL_VERTEX_ATTRIB_ARRAY_POINTER -> GL_VERTEX_ATTRIB_ARRAY_POINTER
    int GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING -> GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING
    int GL_IMPLEMENTATION_COLOR_READ_TYPE -> GL_IMPLEMENTATION_COLOR_READ_TYPE
    int GL_IMPLEMENTATION_COLOR_READ_FORMAT -> GL_IMPLEMENTATION_COLOR_READ_FORMAT
    int GL_COMPILE_STATUS -> GL_COMPILE_STATUS
    int GL_INFO_LOG_LENGTH -> GL_INFO_LOG_LENGTH
    int GL_SHADER_SOURCE_LENGTH -> GL_SHADER_SOURCE_LENGTH
    int GL_SHADER_COMPILER -> GL_SHADER_COMPILER
    int GL_SHADER_BINARY_FORMATS -> GL_SHADER_BINARY_FORMATS
    int GL_NUM_SHADER_BINARY_FORMATS -> GL_NUM_SHADER_BINARY_FORMATS
    int GL_LOW_FLOAT -> GL_LOW_FLOAT
    int GL_MEDIUM_FLOAT -> GL_MEDIUM_FLOAT
    int GL_HIGH_FLOAT -> GL_HIGH_FLOAT
    int GL_LOW_INT -> GL_LOW_INT
    int GL_MEDIUM_INT -> GL_MEDIUM_INT
    int GL_HIGH_INT -> GL_HIGH_INT
    int GL_FRAMEBUFFER -> GL_FRAMEBUFFER
    int GL_RENDERBUFFER -> GL_RENDERBUFFER
    int GL_RGBA4 -> GL_RGBA4
    int GL_RGB5_A1 -> GL_RGB5_A1
    int GL_RGB565 -> GL_RGB565
    int GL_DEPTH_COMPONENT16 -> GL_DEPTH_COMPONENT16
    int GL_STENCIL_INDEX -> GL_STENCIL_INDEX
    int GL_STENCIL_INDEX8 -> GL_STENCIL_INDEX8
    int GL_RENDERBUFFER_WIDTH -> GL_RENDERBUFFER_WIDTH
    int GL_RENDERBUFFER_HEIGHT -> GL_RENDERBUFFER_HEIGHT
    int GL_RENDERBUFFER_INTERNAL_FORMAT -> GL_RENDERBUFFER_INTERNAL_FORMAT
    int GL_RENDERBUFFER_RED_SIZE -> GL_RENDERBUFFER_RED_SIZE
    int GL_RENDERBUFFER_GREEN_SIZE -> GL_RENDERBUFFER_GREEN_SIZE
    int GL_RENDERBUFFER_BLUE_SIZE -> GL_RENDERBUFFER_BLUE_SIZE
    int GL_RENDERBUFFER_ALPHA_SIZE -> GL_RENDERBUFFER_ALPHA_SIZE
    int GL_RENDERBUFFER_DEPTH_SIZE -> GL_RENDERBUFFER_DEPTH_SIZE
    int GL_RENDERBUFFER_STENCIL_SIZE -> GL_RENDERBUFFER_STENCIL_SIZE
    int GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE -> GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE
    int GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME -> GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME
    int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL -> GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL
    int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE -> GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE
    int GL_COLOR_ATTACHMENT0 -> GL_COLOR_ATTACHMENT0
    int GL_DEPTH_ATTACHMENT -> GL_DEPTH_ATTACHMENT
    int GL_STENCIL_ATTACHMENT -> GL_STENCIL_ATTACHMENT
    int GL_NONE -> GL_NONE
    int GL_FRAMEBUFFER_COMPLETE -> GL_FRAMEBUFFER_COMPLETE
    int GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT -> GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT
    int GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT -> GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT
    int GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS -> GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS
    int GL_FRAMEBUFFER_UNSUPPORTED -> GL_FRAMEBUFFER_UNSUPPORTED
    int GL_FRAMEBUFFER_BINDING -> GL_FRAMEBUFFER_BINDING
    int GL_RENDERBUFFER_BINDING -> GL_RENDERBUFFER_BINDING
    int GL_MAX_RENDERBUFFER_SIZE -> GL_MAX_RENDERBUFFER_SIZE
    int GL_INVALID_FRAMEBUFFER_OPERATION -> GL_INVALID_FRAMEBUFFER_OPERATION
    int GL_VERTEX_PROGRAM_POINT_SIZE -> GL_VERTEX_PROGRAM_POINT_SIZE
    int GL_COVERAGE_BUFFER_BIT_NV -> GL_COVERAGE_BUFFER_BIT_NV
    int GL_TEXTURE_MAX_ANISOTROPY_EXT -> GL_TEXTURE_MAX_ANISOTROPY_EXT
    int GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT -> GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT
    void glActiveTexture(int) -> glActiveTexture
    void glBindTexture(int,int) -> glBindTexture
    void glBlendFunc(int,int) -> glBlendFunc
    void glClear(int) -> glClear
    void glClearColor(float,float,float,float) -> glClearColor
    void glClearDepthf(float) -> glClearDepthf
    void glClearStencil(int) -> glClearStencil
    void glColorMask(boolean,boolean,boolean,boolean) -> glColorMask
    void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexImage2D
    void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexSubImage2D
    void glCopyTexImage2D(int,int,int,int,int,int,int,int) -> glCopyTexImage2D
    void glCopyTexSubImage2D(int,int,int,int,int,int,int,int) -> glCopyTexSubImage2D
    void glCullFace(int) -> glCullFace
    void glDeleteTextures(int,java.nio.IntBuffer) -> glDeleteTextures
    void glDepthFunc(int) -> glDepthFunc
    void glDepthMask(boolean) -> glDepthMask
    void glDepthRangef(float,float) -> glDepthRangef
    void glDisable(int) -> glDisable
    void glDrawArrays(int,int,int) -> glDrawArrays
    void glDrawElements(int,int,int,java.nio.Buffer) -> glDrawElements
    void glEnable(int) -> glEnable
    void glFinish() -> glFinish
    void glFlush() -> glFlush
    void glFrontFace(int) -> glFrontFace
    void glGenTextures(int,java.nio.IntBuffer) -> glGenTextures
    int glGetError() -> glGetError
    void glGetIntegerv(int,java.nio.IntBuffer) -> glGetIntegerv
    java.lang.String glGetString(int) -> glGetString
    void glHint(int,int) -> glHint
    void glLineWidth(float) -> glLineWidth
    void glPixelStorei(int,int) -> glPixelStorei
    void glPolygonOffset(float,float) -> glPolygonOffset
    void glReadPixels(int,int,int,int,int,int,java.nio.Buffer) -> glReadPixels
    void glScissor(int,int,int,int) -> glScissor
    void glStencilFunc(int,int,int) -> glStencilFunc
    void glStencilMask(int) -> glStencilMask
    void glStencilOp(int,int,int) -> glStencilOp
    void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage2D
    void glTexParameterf(int,int,float) -> glTexParameterf
    void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexSubImage2D
    void glViewport(int,int,int,int) -> glViewport
    void glAttachShader(int,int) -> glAttachShader
    void glBindAttribLocation(int,int,java.lang.String) -> glBindAttribLocation
    void glBindBuffer(int,int) -> glBindBuffer
    void glBindFramebuffer(int,int) -> glBindFramebuffer
    void glBindRenderbuffer(int,int) -> glBindRenderbuffer
    void glBlendColor(float,float,float,float) -> glBlendColor
    void glBlendEquation(int) -> glBlendEquation
    void glBlendEquationSeparate(int,int) -> glBlendEquationSeparate
    void glBlendFuncSeparate(int,int,int,int) -> glBlendFuncSeparate
    void glBufferData(int,int,java.nio.Buffer,int) -> glBufferData
    void glBufferSubData(int,int,int,java.nio.Buffer) -> glBufferSubData
    int glCheckFramebufferStatus(int) -> glCheckFramebufferStatus
    void glCompileShader(int) -> glCompileShader
    int glCreateProgram() -> glCreateProgram
    int glCreateShader(int) -> glCreateShader
    void glDeleteBuffers(int,java.nio.IntBuffer) -> glDeleteBuffers
    void glDeleteFramebuffers(int,java.nio.IntBuffer) -> glDeleteFramebuffers
    void glDeleteProgram(int) -> glDeleteProgram
    void glDeleteRenderbuffers(int,java.nio.IntBuffer) -> glDeleteRenderbuffers
    void glDeleteShader(int) -> glDeleteShader
    void glDetachShader(int,int) -> glDetachShader
    void glDisableVertexAttribArray(int) -> glDisableVertexAttribArray
    void glDrawElements(int,int,int,int) -> glDrawElements
    void glEnableVertexAttribArray(int) -> glEnableVertexAttribArray
    void glFramebufferRenderbuffer(int,int,int,int) -> glFramebufferRenderbuffer
    void glFramebufferTexture2D(int,int,int,int,int) -> glFramebufferTexture2D
    void glGenBuffers(int,java.nio.IntBuffer) -> glGenBuffers
    void glGenerateMipmap(int) -> glGenerateMipmap
    void glGenFramebuffers(int,java.nio.IntBuffer) -> glGenFramebuffers
    void glGenRenderbuffers(int,java.nio.IntBuffer) -> glGenRenderbuffers
    java.lang.String glGetActiveAttrib(int,int,java.nio.IntBuffer,java.nio.Buffer) -> glGetActiveAttrib
    java.lang.String glGetActiveUniform(int,int,java.nio.IntBuffer,java.nio.Buffer) -> glGetActiveUniform
    void glGetAttachedShaders(int,int,java.nio.Buffer,java.nio.IntBuffer) -> glGetAttachedShaders
    int glGetAttribLocation(int,java.lang.String) -> glGetAttribLocation
    void glGetBooleanv(int,java.nio.Buffer) -> glGetBooleanv
    void glGetBufferParameteriv(int,int,java.nio.IntBuffer) -> glGetBufferParameteriv
    void glGetFloatv(int,java.nio.FloatBuffer) -> glGetFloatv
    void glGetFramebufferAttachmentParameteriv(int,int,int,java.nio.IntBuffer) -> glGetFramebufferAttachmentParameteriv
    void glGetProgramiv(int,int,java.nio.IntBuffer) -> glGetProgramiv
    java.lang.String glGetProgramInfoLog(int) -> glGetProgramInfoLog
    void glGetRenderbufferParameteriv(int,int,java.nio.IntBuffer) -> glGetRenderbufferParameteriv
    void glGetShaderiv(int,int,java.nio.IntBuffer) -> glGetShaderiv
    java.lang.String glGetShaderInfoLog(int) -> glGetShaderInfoLog
    void glGetShaderPrecisionFormat(int,int,java.nio.IntBuffer,java.nio.IntBuffer) -> glGetShaderPrecisionFormat
    void glGetTexParameterfv(int,int,java.nio.FloatBuffer) -> glGetTexParameterfv
    void glGetTexParameteriv(int,int,java.nio.IntBuffer) -> glGetTexParameteriv
    void glGetUniformfv(int,int,java.nio.FloatBuffer) -> glGetUniformfv
    void glGetUniformiv(int,int,java.nio.IntBuffer) -> glGetUniformiv
    int glGetUniformLocation(int,java.lang.String) -> glGetUniformLocation
    void glGetVertexAttribfv(int,int,java.nio.FloatBuffer) -> glGetVertexAttribfv
    void glGetVertexAttribiv(int,int,java.nio.IntBuffer) -> glGetVertexAttribiv
    void glGetVertexAttribPointerv(int,int,java.nio.Buffer) -> glGetVertexAttribPointerv
    boolean glIsBuffer(int) -> glIsBuffer
    boolean glIsEnabled(int) -> glIsEnabled
    boolean glIsFramebuffer(int) -> glIsFramebuffer
    boolean glIsProgram(int) -> glIsProgram
    boolean glIsRenderbuffer(int) -> glIsRenderbuffer
    boolean glIsShader(int) -> glIsShader
    boolean glIsTexture(int) -> glIsTexture
    void glLinkProgram(int) -> glLinkProgram
    void glReleaseShaderCompiler() -> glReleaseShaderCompiler
    void glRenderbufferStorage(int,int,int,int) -> glRenderbufferStorage
    void glSampleCoverage(float,boolean) -> glSampleCoverage
    void glShaderBinary(int,java.nio.IntBuffer,int,java.nio.Buffer,int) -> glShaderBinary
    void glShaderSource(int,java.lang.String) -> glShaderSource
    void glStencilFuncSeparate(int,int,int,int) -> glStencilFuncSeparate
    void glStencilMaskSeparate(int,int) -> glStencilMaskSeparate
    void glStencilOpSeparate(int,int,int,int) -> glStencilOpSeparate
    void glTexParameterfv(int,int,java.nio.FloatBuffer) -> glTexParameterfv
    void glTexParameteri(int,int,int) -> glTexParameteri
    void glTexParameteriv(int,int,java.nio.IntBuffer) -> glTexParameteriv
    void glUniform1f(int,float) -> glUniform1f
    void glUniform1fv(int,int,java.nio.FloatBuffer) -> glUniform1fv
    void glUniform1i(int,int) -> glUniform1i
    void glUniform1iv(int,int,java.nio.IntBuffer) -> glUniform1iv
    void glUniform2f(int,float,float) -> glUniform2f
    void glUniform2fv(int,int,java.nio.FloatBuffer) -> glUniform2fv
    void glUniform2i(int,int,int) -> glUniform2i
    void glUniform2iv(int,int,java.nio.IntBuffer) -> glUniform2iv
    void glUniform3f(int,float,float,float) -> glUniform3f
    void glUniform3fv(int,int,java.nio.FloatBuffer) -> glUniform3fv
    void glUniform3i(int,int,int,int) -> glUniform3i
    void glUniform3iv(int,int,java.nio.IntBuffer) -> glUniform3iv
    void glUniform4f(int,float,float,float,float) -> glUniform4f
    void glUniform4fv(int,int,java.nio.FloatBuffer) -> glUniform4fv
    void glUniform4i(int,int,int,int,int) -> glUniform4i
    void glUniform4iv(int,int,java.nio.IntBuffer) -> glUniform4iv
    void glUniformMatrix2fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix2fv
    void glUniformMatrix3fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix3fv
    void glUniformMatrix4fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix4fv
    void glUseProgram(int) -> glUseProgram
    void glValidateProgram(int) -> glValidateProgram
    void glVertexAttrib1f(int,float) -> glVertexAttrib1f
    void glVertexAttrib1fv(int,java.nio.FloatBuffer) -> glVertexAttrib1fv
    void glVertexAttrib2f(int,float,float) -> glVertexAttrib2f
    void glVertexAttrib2fv(int,java.nio.FloatBuffer) -> glVertexAttrib2fv
    void glVertexAttrib3f(int,float,float,float) -> glVertexAttrib3f
    void glVertexAttrib3fv(int,java.nio.FloatBuffer) -> glVertexAttrib3fv
    void glVertexAttrib4f(int,float,float,float,float) -> glVertexAttrib4f
    void glVertexAttrib4fv(int,java.nio.FloatBuffer) -> glVertexAttrib4fv
    void glVertexAttribPointer(int,int,int,boolean,int,java.nio.Buffer) -> glVertexAttribPointer
    void glVertexAttribPointer(int,int,int,boolean,int,int) -> glVertexAttribPointer
com.badlogic.gdx.graphics.GL30 -> com.badlogic.gdx.graphics.GL30:
    int GL_READ_BUFFER -> GL_READ_BUFFER
    int GL_UNPACK_ROW_LENGTH -> GL_UNPACK_ROW_LENGTH
    int GL_UNPACK_SKIP_ROWS -> GL_UNPACK_SKIP_ROWS
    int GL_UNPACK_SKIP_PIXELS -> GL_UNPACK_SKIP_PIXELS
    int GL_PACK_ROW_LENGTH -> GL_PACK_ROW_LENGTH
    int GL_PACK_SKIP_ROWS -> GL_PACK_SKIP_ROWS
    int GL_PACK_SKIP_PIXELS -> GL_PACK_SKIP_PIXELS
    int GL_COLOR -> GL_COLOR
    int GL_DEPTH -> GL_DEPTH
    int GL_STENCIL -> GL_STENCIL
    int GL_RED -> GL_RED
    int GL_RGB8 -> GL_RGB8
    int GL_RGBA8 -> GL_RGBA8
    int GL_RGB10_A2 -> GL_RGB10_A2
    int GL_TEXTURE_BINDING_3D -> GL_TEXTURE_BINDING_3D
    int GL_UNPACK_SKIP_IMAGES -> GL_UNPACK_SKIP_IMAGES
    int GL_UNPACK_IMAGE_HEIGHT -> GL_UNPACK_IMAGE_HEIGHT
    int GL_TEXTURE_3D -> GL_TEXTURE_3D
    int GL_TEXTURE_WRAP_R -> GL_TEXTURE_WRAP_R
    int GL_MAX_3D_TEXTURE_SIZE -> GL_MAX_3D_TEXTURE_SIZE
    int GL_UNSIGNED_INT_2_10_10_10_REV -> GL_UNSIGNED_INT_2_10_10_10_REV
    int GL_MAX_ELEMENTS_VERTICES -> GL_MAX_ELEMENTS_VERTICES
    int GL_MAX_ELEMENTS_INDICES -> GL_MAX_ELEMENTS_INDICES
    int GL_TEXTURE_MIN_LOD -> GL_TEXTURE_MIN_LOD
    int GL_TEXTURE_MAX_LOD -> GL_TEXTURE_MAX_LOD
    int GL_TEXTURE_BASE_LEVEL -> GL_TEXTURE_BASE_LEVEL
    int GL_TEXTURE_MAX_LEVEL -> GL_TEXTURE_MAX_LEVEL
    int GL_MIN -> GL_MIN
    int GL_MAX -> GL_MAX
    int GL_DEPTH_COMPONENT24 -> GL_DEPTH_COMPONENT24
    int GL_MAX_TEXTURE_LOD_BIAS -> GL_MAX_TEXTURE_LOD_BIAS
    int GL_TEXTURE_COMPARE_MODE -> GL_TEXTURE_COMPARE_MODE
    int GL_TEXTURE_COMPARE_FUNC -> GL_TEXTURE_COMPARE_FUNC
    int GL_CURRENT_QUERY -> GL_CURRENT_QUERY
    int GL_QUERY_RESULT -> GL_QUERY_RESULT
    int GL_QUERY_RESULT_AVAILABLE -> GL_QUERY_RESULT_AVAILABLE
    int GL_BUFFER_MAPPED -> GL_BUFFER_MAPPED
    int GL_BUFFER_MAP_POINTER -> GL_BUFFER_MAP_POINTER
    int GL_STREAM_READ -> GL_STREAM_READ
    int GL_STREAM_COPY -> GL_STREAM_COPY
    int GL_STATIC_READ -> GL_STATIC_READ
    int GL_STATIC_COPY -> GL_STATIC_COPY
    int GL_DYNAMIC_READ -> GL_DYNAMIC_READ
    int GL_DYNAMIC_COPY -> GL_DYNAMIC_COPY
    int GL_MAX_DRAW_BUFFERS -> GL_MAX_DRAW_BUFFERS
    int GL_DRAW_BUFFER0 -> GL_DRAW_BUFFER0
    int GL_DRAW_BUFFER1 -> GL_DRAW_BUFFER1
    int GL_DRAW_BUFFER2 -> GL_DRAW_BUFFER2
    int GL_DRAW_BUFFER3 -> GL_DRAW_BUFFER3
    int GL_DRAW_BUFFER4 -> GL_DRAW_BUFFER4
    int GL_DRAW_BUFFER5 -> GL_DRAW_BUFFER5
    int GL_DRAW_BUFFER6 -> GL_DRAW_BUFFER6
    int GL_DRAW_BUFFER7 -> GL_DRAW_BUFFER7
    int GL_DRAW_BUFFER8 -> GL_DRAW_BUFFER8
    int GL_DRAW_BUFFER9 -> GL_DRAW_BUFFER9
    int GL_DRAW_BUFFER10 -> GL_DRAW_BUFFER10
    int GL_DRAW_BUFFER11 -> GL_DRAW_BUFFER11
    int GL_DRAW_BUFFER12 -> GL_DRAW_BUFFER12
    int GL_DRAW_BUFFER13 -> GL_DRAW_BUFFER13
    int GL_DRAW_BUFFER14 -> GL_DRAW_BUFFER14
    int GL_DRAW_BUFFER15 -> GL_DRAW_BUFFER15
    int GL_MAX_FRAGMENT_UNIFORM_COMPONENTS -> GL_MAX_FRAGMENT_UNIFORM_COMPONENTS
    int GL_MAX_VERTEX_UNIFORM_COMPONENTS -> GL_MAX_VERTEX_UNIFORM_COMPONENTS
    int GL_SAMPLER_3D -> GL_SAMPLER_3D
    int GL_SAMPLER_2D_SHADOW -> GL_SAMPLER_2D_SHADOW
    int GL_FRAGMENT_SHADER_DERIVATIVE_HINT -> GL_FRAGMENT_SHADER_DERIVATIVE_HINT
    int GL_PIXEL_PACK_BUFFER -> GL_PIXEL_PACK_BUFFER
    int GL_PIXEL_UNPACK_BUFFER -> GL_PIXEL_UNPACK_BUFFER
    int GL_PIXEL_PACK_BUFFER_BINDING -> GL_PIXEL_PACK_BUFFER_BINDING
    int GL_PIXEL_UNPACK_BUFFER_BINDING -> GL_PIXEL_UNPACK_BUFFER_BINDING
    int GL_FLOAT_MAT2x3 -> GL_FLOAT_MAT2x3
    int GL_FLOAT_MAT2x4 -> GL_FLOAT_MAT2x4
    int GL_FLOAT_MAT3x2 -> GL_FLOAT_MAT3x2
    int GL_FLOAT_MAT3x4 -> GL_FLOAT_MAT3x4
    int GL_FLOAT_MAT4x2 -> GL_FLOAT_MAT4x2
    int GL_FLOAT_MAT4x3 -> GL_FLOAT_MAT4x3
    int GL_SRGB -> GL_SRGB
    int GL_SRGB8 -> GL_SRGB8
    int GL_SRGB8_ALPHA8 -> GL_SRGB8_ALPHA8
    int GL_COMPARE_REF_TO_TEXTURE -> GL_COMPARE_REF_TO_TEXTURE
    int GL_MAJOR_VERSION -> GL_MAJOR_VERSION
    int GL_MINOR_VERSION -> GL_MINOR_VERSION
    int GL_NUM_EXTENSIONS -> GL_NUM_EXTENSIONS
    int GL_RGBA32F -> GL_RGBA32F
    int GL_RGB32F -> GL_RGB32F
    int GL_RGBA16F -> GL_RGBA16F
    int GL_RGB16F -> GL_RGB16F
    int GL_VERTEX_ATTRIB_ARRAY_INTEGER -> GL_VERTEX_ATTRIB_ARRAY_INTEGER
    int GL_MAX_ARRAY_TEXTURE_LAYERS -> GL_MAX_ARRAY_TEXTURE_LAYERS
    int GL_MIN_PROGRAM_TEXEL_OFFSET -> GL_MIN_PROGRAM_TEXEL_OFFSET
    int GL_MAX_PROGRAM_TEXEL_OFFSET -> GL_MAX_PROGRAM_TEXEL_OFFSET
    int GL_MAX_VARYING_COMPONENTS -> GL_MAX_VARYING_COMPONENTS
    int GL_TEXTURE_2D_ARRAY -> GL_TEXTURE_2D_ARRAY
    int GL_TEXTURE_BINDING_2D_ARRAY -> GL_TEXTURE_BINDING_2D_ARRAY
    int GL_R11F_G11F_B10F -> GL_R11F_G11F_B10F
    int GL_UNSIGNED_INT_10F_11F_11F_REV -> GL_UNSIGNED_INT_10F_11F_11F_REV
    int GL_RGB9_E5 -> GL_RGB9_E5
    int GL_UNSIGNED_INT_5_9_9_9_REV -> GL_UNSIGNED_INT_5_9_9_9_REV
    int GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH -> GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH
    int GL_TRANSFORM_FEEDBACK_BUFFER_MODE -> GL_TRANSFORM_FEEDBACK_BUFFER_MODE
    int GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS -> GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS
    int GL_TRANSFORM_FEEDBACK_VARYINGS -> GL_TRANSFORM_FEEDBACK_VARYINGS
    int GL_TRANSFORM_FEEDBACK_BUFFER_START -> GL_TRANSFORM_FEEDBACK_BUFFER_START
    int GL_TRANSFORM_FEEDBACK_BUFFER_SIZE -> GL_TRANSFORM_FEEDBACK_BUFFER_SIZE
    int GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN -> GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN
    int GL_RASTERIZER_DISCARD -> GL_RASTERIZER_DISCARD
    int GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS -> GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS
    int GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS -> GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS
    int GL_INTERLEAVED_ATTRIBS -> GL_INTERLEAVED_ATTRIBS
    int GL_SEPARATE_ATTRIBS -> GL_SEPARATE_ATTRIBS
    int GL_TRANSFORM_FEEDBACK_BUFFER -> GL_TRANSFORM_FEEDBACK_BUFFER
    int GL_TRANSFORM_FEEDBACK_BUFFER_BINDING -> GL_TRANSFORM_FEEDBACK_BUFFER_BINDING
    int GL_RGBA32UI -> GL_RGBA32UI
    int GL_RGB32UI -> GL_RGB32UI
    int GL_RGBA16UI -> GL_RGBA16UI
    int GL_RGB16UI -> GL_RGB16UI
    int GL_RGBA8UI -> GL_RGBA8UI
    int GL_RGB8UI -> GL_RGB8UI
    int GL_RGBA32I -> GL_RGBA32I
    int GL_RGB32I -> GL_RGB32I
    int GL_RGBA16I -> GL_RGBA16I
    int GL_RGB16I -> GL_RGB16I
    int GL_RGBA8I -> GL_RGBA8I
    int GL_RGB8I -> GL_RGB8I
    int GL_RED_INTEGER -> GL_RED_INTEGER
    int GL_RGB_INTEGER -> GL_RGB_INTEGER
    int GL_RGBA_INTEGER -> GL_RGBA_INTEGER
    int GL_SAMPLER_2D_ARRAY -> GL_SAMPLER_2D_ARRAY
    int GL_SAMPLER_2D_ARRAY_SHADOW -> GL_SAMPLER_2D_ARRAY_SHADOW
    int GL_SAMPLER_CUBE_SHADOW -> GL_SAMPLER_CUBE_SHADOW
    int GL_UNSIGNED_INT_VEC2 -> GL_UNSIGNED_INT_VEC2
    int GL_UNSIGNED_INT_VEC3 -> GL_UNSIGNED_INT_VEC3
    int GL_UNSIGNED_INT_VEC4 -> GL_UNSIGNED_INT_VEC4
    int GL_INT_SAMPLER_2D -> GL_INT_SAMPLER_2D
    int GL_INT_SAMPLER_3D -> GL_INT_SAMPLER_3D
    int GL_INT_SAMPLER_CUBE -> GL_INT_SAMPLER_CUBE
    int GL_INT_SAMPLER_2D_ARRAY -> GL_INT_SAMPLER_2D_ARRAY
    int GL_UNSIGNED_INT_SAMPLER_2D -> GL_UNSIGNED_INT_SAMPLER_2D
    int GL_UNSIGNED_INT_SAMPLER_3D -> GL_UNSIGNED_INT_SAMPLER_3D
    int GL_UNSIGNED_INT_SAMPLER_CUBE -> GL_UNSIGNED_INT_SAMPLER_CUBE
    int GL_UNSIGNED_INT_SAMPLER_2D_ARRAY -> GL_UNSIGNED_INT_SAMPLER_2D_ARRAY
    int GL_BUFFER_ACCESS_FLAGS -> GL_BUFFER_ACCESS_FLAGS
    int GL_BUFFER_MAP_LENGTH -> GL_BUFFER_MAP_LENGTH
    int GL_BUFFER_MAP_OFFSET -> GL_BUFFER_MAP_OFFSET
    int GL_DEPTH_COMPONENT32F -> GL_DEPTH_COMPONENT32F
    int GL_DEPTH32F_STENCIL8 -> GL_DEPTH32F_STENCIL8
    int GL_FLOAT_32_UNSIGNED_INT_24_8_REV -> GL_FLOAT_32_UNSIGNED_INT_24_8_REV
    int GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING -> GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING
    int GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE -> GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE
    int GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE -> GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE
    int GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE -> GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE
    int GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE -> GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE
    int GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE -> GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE
    int GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE -> GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE
    int GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE -> GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE
    int GL_FRAMEBUFFER_DEFAULT -> GL_FRAMEBUFFER_DEFAULT
    int GL_FRAMEBUFFER_UNDEFINED -> GL_FRAMEBUFFER_UNDEFINED
    int GL_DEPTH_STENCIL_ATTACHMENT -> GL_DEPTH_STENCIL_ATTACHMENT
    int GL_DEPTH_STENCIL -> GL_DEPTH_STENCIL
    int GL_UNSIGNED_INT_24_8 -> GL_UNSIGNED_INT_24_8
    int GL_DEPTH24_STENCIL8 -> GL_DEPTH24_STENCIL8
    int GL_UNSIGNED_NORMALIZED -> GL_UNSIGNED_NORMALIZED
    int GL_DRAW_FRAMEBUFFER_BINDING -> GL_DRAW_FRAMEBUFFER_BINDING
    int GL_READ_FRAMEBUFFER -> GL_READ_FRAMEBUFFER
    int GL_DRAW_FRAMEBUFFER -> GL_DRAW_FRAMEBUFFER
    int GL_READ_FRAMEBUFFER_BINDING -> GL_READ_FRAMEBUFFER_BINDING
    int GL_RENDERBUFFER_SAMPLES -> GL_RENDERBUFFER_SAMPLES
    int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER -> GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER
    int GL_MAX_COLOR_ATTACHMENTS -> GL_MAX_COLOR_ATTACHMENTS
    int GL_COLOR_ATTACHMENT1 -> GL_COLOR_ATTACHMENT1
    int GL_COLOR_ATTACHMENT2 -> GL_COLOR_ATTACHMENT2
    int GL_COLOR_ATTACHMENT3 -> GL_COLOR_ATTACHMENT3
    int GL_COLOR_ATTACHMENT4 -> GL_COLOR_ATTACHMENT4
    int GL_COLOR_ATTACHMENT5 -> GL_COLOR_ATTACHMENT5
    int GL_COLOR_ATTACHMENT6 -> GL_COLOR_ATTACHMENT6
    int GL_COLOR_ATTACHMENT7 -> GL_COLOR_ATTACHMENT7
    int GL_COLOR_ATTACHMENT8 -> GL_COLOR_ATTACHMENT8
    int GL_COLOR_ATTACHMENT9 -> GL_COLOR_ATTACHMENT9
    int GL_COLOR_ATTACHMENT10 -> GL_COLOR_ATTACHMENT10
    int GL_COLOR_ATTACHMENT11 -> GL_COLOR_ATTACHMENT11
    int GL_COLOR_ATTACHMENT12 -> GL_COLOR_ATTACHMENT12
    int GL_COLOR_ATTACHMENT13 -> GL_COLOR_ATTACHMENT13
    int GL_COLOR_ATTACHMENT14 -> GL_COLOR_ATTACHMENT14
    int GL_COLOR_ATTACHMENT15 -> GL_COLOR_ATTACHMENT15
    int GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE -> GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE
    int GL_MAX_SAMPLES -> GL_MAX_SAMPLES
    int GL_HALF_FLOAT -> GL_HALF_FLOAT
    int GL_MAP_READ_BIT -> GL_MAP_READ_BIT
    int GL_MAP_WRITE_BIT -> GL_MAP_WRITE_BIT
    int GL_MAP_INVALIDATE_RANGE_BIT -> GL_MAP_INVALIDATE_RANGE_BIT
    int GL_MAP_INVALIDATE_BUFFER_BIT -> GL_MAP_INVALIDATE_BUFFER_BIT
    int GL_MAP_FLUSH_EXPLICIT_BIT -> GL_MAP_FLUSH_EXPLICIT_BIT
    int GL_MAP_UNSYNCHRONIZED_BIT -> GL_MAP_UNSYNCHRONIZED_BIT
    int GL_RG -> GL_RG
    int GL_RG_INTEGER -> GL_RG_INTEGER
    int GL_R8 -> GL_R8
    int GL_RG8 -> GL_RG8
    int GL_R16F -> GL_R16F
    int GL_R32F -> GL_R32F
    int GL_RG16F -> GL_RG16F
    int GL_RG32F -> GL_RG32F
    int GL_R8I -> GL_R8I
    int GL_R8UI -> GL_R8UI
    int GL_R16I -> GL_R16I
    int GL_R16UI -> GL_R16UI
    int GL_R32I -> GL_R32I
    int GL_R32UI -> GL_R32UI
    int GL_RG8I -> GL_RG8I
    int GL_RG8UI -> GL_RG8UI
    int GL_RG16I -> GL_RG16I
    int GL_RG16UI -> GL_RG16UI
    int GL_RG32I -> GL_RG32I
    int GL_RG32UI -> GL_RG32UI
    int GL_VERTEX_ARRAY_BINDING -> GL_VERTEX_ARRAY_BINDING
    int GL_R8_SNORM -> GL_R8_SNORM
    int GL_RG8_SNORM -> GL_RG8_SNORM
    int GL_RGB8_SNORM -> GL_RGB8_SNORM
    int GL_RGBA8_SNORM -> GL_RGBA8_SNORM
    int GL_SIGNED_NORMALIZED -> GL_SIGNED_NORMALIZED
    int GL_PRIMITIVE_RESTART_FIXED_INDEX -> GL_PRIMITIVE_RESTART_FIXED_INDEX
    int GL_COPY_READ_BUFFER -> GL_COPY_READ_BUFFER
    int GL_COPY_WRITE_BUFFER -> GL_COPY_WRITE_BUFFER
    int GL_COPY_READ_BUFFER_BINDING -> GL_COPY_READ_BUFFER_BINDING
    int GL_COPY_WRITE_BUFFER_BINDING -> GL_COPY_WRITE_BUFFER_BINDING
    int GL_UNIFORM_BUFFER -> GL_UNIFORM_BUFFER
    int GL_UNIFORM_BUFFER_BINDING -> GL_UNIFORM_BUFFER_BINDING
    int GL_UNIFORM_BUFFER_START -> GL_UNIFORM_BUFFER_START
    int GL_UNIFORM_BUFFER_SIZE -> GL_UNIFORM_BUFFER_SIZE
    int GL_MAX_VERTEX_UNIFORM_BLOCKS -> GL_MAX_VERTEX_UNIFORM_BLOCKS
    int GL_MAX_FRAGMENT_UNIFORM_BLOCKS -> GL_MAX_FRAGMENT_UNIFORM_BLOCKS
    int GL_MAX_COMBINED_UNIFORM_BLOCKS -> GL_MAX_COMBINED_UNIFORM_BLOCKS
    int GL_MAX_UNIFORM_BUFFER_BINDINGS -> GL_MAX_UNIFORM_BUFFER_BINDINGS
    int GL_MAX_UNIFORM_BLOCK_SIZE -> GL_MAX_UNIFORM_BLOCK_SIZE
    int GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS -> GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS
    int GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS -> GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS
    int GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT -> GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT
    int GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH -> GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH
    int GL_ACTIVE_UNIFORM_BLOCKS -> GL_ACTIVE_UNIFORM_BLOCKS
    int GL_UNIFORM_TYPE -> GL_UNIFORM_TYPE
    int GL_UNIFORM_SIZE -> GL_UNIFORM_SIZE
    int GL_UNIFORM_NAME_LENGTH -> GL_UNIFORM_NAME_LENGTH
    int GL_UNIFORM_BLOCK_INDEX -> GL_UNIFORM_BLOCK_INDEX
    int GL_UNIFORM_OFFSET -> GL_UNIFORM_OFFSET
    int GL_UNIFORM_ARRAY_STRIDE -> GL_UNIFORM_ARRAY_STRIDE
    int GL_UNIFORM_MATRIX_STRIDE -> GL_UNIFORM_MATRIX_STRIDE
    int GL_UNIFORM_IS_ROW_MAJOR -> GL_UNIFORM_IS_ROW_MAJOR
    int GL_UNIFORM_BLOCK_BINDING -> GL_UNIFORM_BLOCK_BINDING
    int GL_UNIFORM_BLOCK_DATA_SIZE -> GL_UNIFORM_BLOCK_DATA_SIZE
    int GL_UNIFORM_BLOCK_NAME_LENGTH -> GL_UNIFORM_BLOCK_NAME_LENGTH
    int GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS -> GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS
    int GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES -> GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES
    int GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER -> GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER
    int GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER -> GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER
    int GL_INVALID_INDEX -> GL_INVALID_INDEX
    int GL_MAX_VERTEX_OUTPUT_COMPONENTS -> GL_MAX_VERTEX_OUTPUT_COMPONENTS
    int GL_MAX_FRAGMENT_INPUT_COMPONENTS -> GL_MAX_FRAGMENT_INPUT_COMPONENTS
    int GL_MAX_SERVER_WAIT_TIMEOUT -> GL_MAX_SERVER_WAIT_TIMEOUT
    int GL_OBJECT_TYPE -> GL_OBJECT_TYPE
    int GL_SYNC_CONDITION -> GL_SYNC_CONDITION
    int GL_SYNC_STATUS -> GL_SYNC_STATUS
    int GL_SYNC_FLAGS -> GL_SYNC_FLAGS
    int GL_SYNC_FENCE -> GL_SYNC_FENCE
    int GL_SYNC_GPU_COMMANDS_COMPLETE -> GL_SYNC_GPU_COMMANDS_COMPLETE
    int GL_UNSIGNALED -> GL_UNSIGNALED
    int GL_SIGNALED -> GL_SIGNALED
    int GL_ALREADY_SIGNALED -> GL_ALREADY_SIGNALED
    int GL_TIMEOUT_EXPIRED -> GL_TIMEOUT_EXPIRED
    int GL_CONDITION_SATISFIED -> GL_CONDITION_SATISFIED
    int GL_WAIT_FAILED -> GL_WAIT_FAILED
    int GL_SYNC_FLUSH_COMMANDS_BIT -> GL_SYNC_FLUSH_COMMANDS_BIT
    long GL_TIMEOUT_IGNORED -> GL_TIMEOUT_IGNORED
    int GL_VERTEX_ATTRIB_ARRAY_DIVISOR -> GL_VERTEX_ATTRIB_ARRAY_DIVISOR
    int GL_ANY_SAMPLES_PASSED -> GL_ANY_SAMPLES_PASSED
    int GL_ANY_SAMPLES_PASSED_CONSERVATIVE -> GL_ANY_SAMPLES_PASSED_CONSERVATIVE
    int GL_SAMPLER_BINDING -> GL_SAMPLER_BINDING
    int GL_RGB10_A2UI -> GL_RGB10_A2UI
    int GL_TEXTURE_SWIZZLE_R -> GL_TEXTURE_SWIZZLE_R
    int GL_TEXTURE_SWIZZLE_G -> GL_TEXTURE_SWIZZLE_G
    int GL_TEXTURE_SWIZZLE_B -> GL_TEXTURE_SWIZZLE_B
    int GL_TEXTURE_SWIZZLE_A -> GL_TEXTURE_SWIZZLE_A
    int GL_GREEN -> GL_GREEN
    int GL_BLUE -> GL_BLUE
    int GL_INT_2_10_10_10_REV -> GL_INT_2_10_10_10_REV
    int GL_TRANSFORM_FEEDBACK -> GL_TRANSFORM_FEEDBACK
    int GL_TRANSFORM_FEEDBACK_PAUSED -> GL_TRANSFORM_FEEDBACK_PAUSED
    int GL_TRANSFORM_FEEDBACK_ACTIVE -> GL_TRANSFORM_FEEDBACK_ACTIVE
    int GL_TRANSFORM_FEEDBACK_BINDING -> GL_TRANSFORM_FEEDBACK_BINDING
    int GL_PROGRAM_BINARY_RETRIEVABLE_HINT -> GL_PROGRAM_BINARY_RETRIEVABLE_HINT
    int GL_PROGRAM_BINARY_LENGTH -> GL_PROGRAM_BINARY_LENGTH
    int GL_NUM_PROGRAM_BINARY_FORMATS -> GL_NUM_PROGRAM_BINARY_FORMATS
    int GL_PROGRAM_BINARY_FORMATS -> GL_PROGRAM_BINARY_FORMATS
    int GL_COMPRESSED_R11_EAC -> GL_COMPRESSED_R11_EAC
    int GL_COMPRESSED_SIGNED_R11_EAC -> GL_COMPRESSED_SIGNED_R11_EAC
    int GL_COMPRESSED_RG11_EAC -> GL_COMPRESSED_RG11_EAC
    int GL_COMPRESSED_SIGNED_RG11_EAC -> GL_COMPRESSED_SIGNED_RG11_EAC
    int GL_COMPRESSED_RGB8_ETC2 -> GL_COMPRESSED_RGB8_ETC2
    int GL_COMPRESSED_SRGB8_ETC2 -> GL_COMPRESSED_SRGB8_ETC2
    int GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 -> GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2
    int GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 -> GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2
    int GL_COMPRESSED_RGBA8_ETC2_EAC -> GL_COMPRESSED_RGBA8_ETC2_EAC
    int GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC -> GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC
    int GL_TEXTURE_IMMUTABLE_FORMAT -> GL_TEXTURE_IMMUTABLE_FORMAT
    int GL_MAX_ELEMENT_INDEX -> GL_MAX_ELEMENT_INDEX
    int GL_NUM_SAMPLE_COUNTS -> GL_NUM_SAMPLE_COUNTS
    int GL_TEXTURE_IMMUTABLE_LEVELS -> GL_TEXTURE_IMMUTABLE_LEVELS
    void glReadBuffer(int) -> glReadBuffer
    void glDrawRangeElements(int,int,int,int,int,java.nio.Buffer) -> glDrawRangeElements
    void glDrawRangeElements(int,int,int,int,int,int) -> glDrawRangeElements
    void glTexImage3D(int,int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage3D
    void glTexImage3D(int,int,int,int,int,int,int,int,int,int) -> glTexImage3D
    void glTexSubImage3D(int,int,int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexSubImage3D
    void glTexSubImage3D(int,int,int,int,int,int,int,int,int,int,int) -> glTexSubImage3D
    void glCopyTexSubImage3D(int,int,int,int,int,int,int,int,int) -> glCopyTexSubImage3D
    void glGenQueries(int,int[],int) -> glGenQueries
    void glGenQueries(int,java.nio.IntBuffer) -> glGenQueries
    void glDeleteQueries(int,int[],int) -> glDeleteQueries
    void glDeleteQueries(int,java.nio.IntBuffer) -> glDeleteQueries
    boolean glIsQuery(int) -> glIsQuery
    void glBeginQuery(int,int) -> glBeginQuery
    void glEndQuery(int) -> glEndQuery
    void glGetQueryiv(int,int,java.nio.IntBuffer) -> glGetQueryiv
    void glGetQueryObjectuiv(int,int,java.nio.IntBuffer) -> glGetQueryObjectuiv
    boolean glUnmapBuffer(int) -> glUnmapBuffer
    java.nio.Buffer glGetBufferPointerv(int,int) -> glGetBufferPointerv
    void glDrawBuffers(int,java.nio.IntBuffer) -> glDrawBuffers
    void glUniformMatrix2x3fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix2x3fv
    void glUniformMatrix3x2fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix3x2fv
    void glUniformMatrix2x4fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix2x4fv
    void glUniformMatrix4x2fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix4x2fv
    void glUniformMatrix3x4fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix3x4fv
    void glUniformMatrix4x3fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix4x3fv
    void glBlitFramebuffer(int,int,int,int,int,int,int,int,int,int) -> glBlitFramebuffer
    void glRenderbufferStorageMultisample(int,int,int,int,int) -> glRenderbufferStorageMultisample
    void glFramebufferTextureLayer(int,int,int,int,int) -> glFramebufferTextureLayer
    void glFlushMappedBufferRange(int,int,int) -> glFlushMappedBufferRange
    void glBindVertexArray(int) -> glBindVertexArray
    void glDeleteVertexArrays(int,int[],int) -> glDeleteVertexArrays
    void glDeleteVertexArrays(int,java.nio.IntBuffer) -> glDeleteVertexArrays
    void glGenVertexArrays(int,int[],int) -> glGenVertexArrays
    void glGenVertexArrays(int,java.nio.IntBuffer) -> glGenVertexArrays
    boolean glIsVertexArray(int) -> glIsVertexArray
    void glBeginTransformFeedback(int) -> glBeginTransformFeedback
    void glEndTransformFeedback() -> glEndTransformFeedback
    void glBindBufferRange(int,int,int,int,int) -> glBindBufferRange
    void glBindBufferBase(int,int,int) -> glBindBufferBase
    void glTransformFeedbackVaryings(int,java.lang.String[],int) -> glTransformFeedbackVaryings
    void glVertexAttribIPointer(int,int,int,int,int) -> glVertexAttribIPointer
    void glGetVertexAttribIiv(int,int,java.nio.IntBuffer) -> glGetVertexAttribIiv
    void glGetVertexAttribIuiv(int,int,java.nio.IntBuffer) -> glGetVertexAttribIuiv
    void glVertexAttribI4i(int,int,int,int,int) -> glVertexAttribI4i
    void glVertexAttribI4ui(int,int,int,int,int) -> glVertexAttribI4ui
    void glGetUniformuiv(int,int,java.nio.IntBuffer) -> glGetUniformuiv
    int glGetFragDataLocation(int,java.lang.String) -> glGetFragDataLocation
    void glUniform1uiv(int,int,java.nio.IntBuffer) -> glUniform1uiv
    void glUniform3uiv(int,int,java.nio.IntBuffer) -> glUniform3uiv
    void glUniform4uiv(int,int,java.nio.IntBuffer) -> glUniform4uiv
    void glClearBufferiv(int,int,java.nio.IntBuffer) -> glClearBufferiv
    void glClearBufferuiv(int,int,java.nio.IntBuffer) -> glClearBufferuiv
    void glClearBufferfv(int,int,java.nio.FloatBuffer) -> glClearBufferfv
    void glClearBufferfi(int,int,float,int) -> glClearBufferfi
    java.lang.String glGetStringi(int,int) -> glGetStringi
    void glCopyBufferSubData(int,int,int,int,int) -> glCopyBufferSubData
    void glGetUniformIndices(int,java.lang.String[],java.nio.IntBuffer) -> glGetUniformIndices
    void glGetActiveUniformsiv(int,int,java.nio.IntBuffer,int,java.nio.IntBuffer) -> glGetActiveUniformsiv
    int glGetUniformBlockIndex(int,java.lang.String) -> glGetUniformBlockIndex
    void glGetActiveUniformBlockiv(int,int,int,java.nio.IntBuffer) -> glGetActiveUniformBlockiv
    void glGetActiveUniformBlockName(int,int,java.nio.Buffer,java.nio.Buffer) -> glGetActiveUniformBlockName
    java.lang.String glGetActiveUniformBlockName(int,int) -> glGetActiveUniformBlockName
    void glUniformBlockBinding(int,int,int) -> glUniformBlockBinding
    void glDrawArraysInstanced(int,int,int,int) -> glDrawArraysInstanced
    void glDrawElementsInstanced(int,int,int,int,int) -> glDrawElementsInstanced
    void glGetInteger64v(int,java.nio.LongBuffer) -> glGetInteger64v
    void glGetBufferParameteri64v(int,int,java.nio.LongBuffer) -> glGetBufferParameteri64v
    void glGenSamplers(int,int[],int) -> glGenSamplers
    void glGenSamplers(int,java.nio.IntBuffer) -> glGenSamplers
    void glDeleteSamplers(int,int[],int) -> glDeleteSamplers
    void glDeleteSamplers(int,java.nio.IntBuffer) -> glDeleteSamplers
    boolean glIsSampler(int) -> glIsSampler
    void glBindSampler(int,int) -> glBindSampler
    void glSamplerParameteri(int,int,int) -> glSamplerParameteri
    void glSamplerParameteriv(int,int,java.nio.IntBuffer) -> glSamplerParameteriv
    void glSamplerParameterf(int,int,float) -> glSamplerParameterf
    void glSamplerParameterfv(int,int,java.nio.FloatBuffer) -> glSamplerParameterfv
    void glGetSamplerParameteriv(int,int,java.nio.IntBuffer) -> glGetSamplerParameteriv
    void glGetSamplerParameterfv(int,int,java.nio.FloatBuffer) -> glGetSamplerParameterfv
    void glVertexAttribDivisor(int,int) -> glVertexAttribDivisor
    void glBindTransformFeedback(int,int) -> glBindTransformFeedback
    void glDeleteTransformFeedbacks(int,int[],int) -> glDeleteTransformFeedbacks
    void glDeleteTransformFeedbacks(int,java.nio.IntBuffer) -> glDeleteTransformFeedbacks
    void glGenTransformFeedbacks(int,int[],int) -> glGenTransformFeedbacks
    void glGenTransformFeedbacks(int,java.nio.IntBuffer) -> glGenTransformFeedbacks
    boolean glIsTransformFeedback(int) -> glIsTransformFeedback
    void glPauseTransformFeedback() -> glPauseTransformFeedback
    void glResumeTransformFeedback() -> glResumeTransformFeedback
    void glProgramParameteri(int,int,int) -> glProgramParameteri
    void glInvalidateFramebuffer(int,int,java.nio.IntBuffer) -> glInvalidateFramebuffer
    void glInvalidateSubFramebuffer(int,int,java.nio.IntBuffer,int,int,int,int) -> glInvalidateSubFramebuffer
com.badlogic.gdx.graphics.GLTexture -> com.badlogic.gdx.graphics.GLTexture:
    java.nio.IntBuffer buffer -> buffer
    int glTarget -> glTarget
    int glHandle -> glHandle
    com.badlogic.gdx.graphics.Texture$TextureFilter minFilter -> minFilter
    com.badlogic.gdx.graphics.Texture$TextureFilter magFilter -> magFilter
    com.badlogic.gdx.graphics.Texture$TextureWrap uWrap -> uWrap
    com.badlogic.gdx.graphics.Texture$TextureWrap vWrap -> vWrap
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    int getDepth() -> getDepth
    boolean isManaged() -> isManaged
    void reload() -> reload
    void bind() -> bind
    void bind(int) -> bind
    com.badlogic.gdx.graphics.Texture$TextureFilter getMinFilter() -> getMinFilter
    com.badlogic.gdx.graphics.Texture$TextureFilter getMagFilter() -> getMagFilter
    com.badlogic.gdx.graphics.Texture$TextureWrap getUWrap() -> getUWrap
    com.badlogic.gdx.graphics.Texture$TextureWrap getVWrap() -> getVWrap
    int getTextureObjectHandle() -> getTextureObjectHandle
    void unsafeSetWrap(com.badlogic.gdx.graphics.Texture$TextureWrap,com.badlogic.gdx.graphics.Texture$TextureWrap) -> unsafeSetWrap
    void unsafeSetWrap(com.badlogic.gdx.graphics.Texture$TextureWrap,com.badlogic.gdx.graphics.Texture$TextureWrap,boolean) -> unsafeSetWrap
    void setWrap(com.badlogic.gdx.graphics.Texture$TextureWrap,com.badlogic.gdx.graphics.Texture$TextureWrap) -> setWrap
    void unsafeSetFilter(com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter) -> unsafeSetFilter
    void unsafeSetFilter(com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter,boolean) -> unsafeSetFilter
    void setFilter(com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter) -> setFilter
    void delete() -> delete
    void dispose() -> dispose
    com.badlogic.gdx.graphics.TextureData createTextureData(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap$Format,boolean) -> createTextureData
    com.badlogic.gdx.graphics.TextureData createTextureData(com.badlogic.gdx.files.FileHandle,boolean) -> createTextureData
    int createGLHandle() -> createGLHandle
    void uploadImageData(int,com.badlogic.gdx.graphics.TextureData) -> uploadImageData
    void uploadImageData(int,com.badlogic.gdx.graphics.TextureData,int) -> uploadImageData
com.badlogic.gdx.graphics.Mesh -> com.badlogic.gdx.graphics.Mesh:
    java.util.Map meshes -> meshes
    com.badlogic.gdx.graphics.glutils.VertexData vertices -> vertices
    com.badlogic.gdx.graphics.glutils.IndexData indices -> indices
    boolean autoBind -> autoBind
    boolean isVertexArray -> isVertexArray
    com.badlogic.gdx.math.Vector3 tmpV -> tmpV
    com.badlogic.gdx.graphics.Mesh create(boolean,com.badlogic.gdx.graphics.Mesh,com.badlogic.gdx.math.Matrix4[]) -> create
    com.badlogic.gdx.graphics.Mesh create(boolean,com.badlogic.gdx.graphics.Mesh[]) -> create
    com.badlogic.gdx.graphics.Mesh create(boolean,com.badlogic.gdx.graphics.Mesh[],com.badlogic.gdx.math.Matrix4[]) -> create
    com.badlogic.gdx.graphics.Mesh setVertices(float[]) -> setVertices
    com.badlogic.gdx.graphics.Mesh setVertices(float[],int,int) -> setVertices
    com.badlogic.gdx.graphics.Mesh updateVertices(int,float[]) -> updateVertices
    com.badlogic.gdx.graphics.Mesh updateVertices(int,float[],int,int) -> updateVertices
    float[] getVertices(float[]) -> getVertices
    float[] getVertices(int,float[]) -> getVertices
    float[] getVertices(int,int,float[]) -> getVertices
    float[] getVertices(int,int,float[],int) -> getVertices
    com.badlogic.gdx.graphics.Mesh setIndices(short[]) -> setIndices
    com.badlogic.gdx.graphics.Mesh setIndices(short[],int,int) -> setIndices
    void getIndices(short[]) -> getIndices
    void getIndices(short[],int) -> getIndices
    int getNumIndices() -> getNumIndices
    int getNumVertices() -> getNumVertices
    int getMaxVertices() -> getMaxVertices
    int getMaxIndices() -> getMaxIndices
    int getVertexSize() -> getVertexSize
    void setAutoBind(boolean) -> setAutoBind
    void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> bind
    void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[]) -> bind
    void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> unbind
    void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[]) -> unbind
    void render(com.badlogic.gdx.graphics.glutils.ShaderProgram,int) -> render
    void render(com.badlogic.gdx.graphics.glutils.ShaderProgram,int,int,int) -> render
    void render(com.badlogic.gdx.graphics.glutils.ShaderProgram,int,int,int,boolean) -> render
    void dispose() -> dispose
    com.badlogic.gdx.graphics.VertexAttribute getVertexAttribute(int) -> getVertexAttribute
    com.badlogic.gdx.graphics.VertexAttributes getVertexAttributes() -> getVertexAttributes
    java.nio.FloatBuffer getVerticesBuffer() -> getVerticesBuffer
    com.badlogic.gdx.math.collision.BoundingBox calculateBoundingBox() -> calculateBoundingBox
    void calculateBoundingBox(com.badlogic.gdx.math.collision.BoundingBox) -> calculateBoundingBox
    com.badlogic.gdx.math.collision.BoundingBox calculateBoundingBox(com.badlogic.gdx.math.collision.BoundingBox,int,int) -> calculateBoundingBox
    com.badlogic.gdx.math.collision.BoundingBox calculateBoundingBox(com.badlogic.gdx.math.collision.BoundingBox,int,int,com.badlogic.gdx.math.Matrix4) -> calculateBoundingBox
    com.badlogic.gdx.math.collision.BoundingBox extendBoundingBox(com.badlogic.gdx.math.collision.BoundingBox,int,int) -> extendBoundingBox
    com.badlogic.gdx.math.collision.BoundingBox extendBoundingBox(com.badlogic.gdx.math.collision.BoundingBox,int,int,com.badlogic.gdx.math.Matrix4) -> extendBoundingBox
    float calculateRadiusSquared(float,float,float,int,int,com.badlogic.gdx.math.Matrix4) -> calculateRadiusSquared
    float calculateRadius(float,float,float,int,int,com.badlogic.gdx.math.Matrix4) -> calculateRadius
    float calculateRadius(com.badlogic.gdx.math.Vector3,int,int,com.badlogic.gdx.math.Matrix4) -> calculateRadius
    float calculateRadius(float,float,float,int,int) -> calculateRadius
    float calculateRadius(com.badlogic.gdx.math.Vector3,int,int) -> calculateRadius
    float calculateRadius(float,float,float) -> calculateRadius
    float calculateRadius(com.badlogic.gdx.math.Vector3) -> calculateRadius
    java.nio.ShortBuffer getIndicesBuffer() -> getIndicesBuffer
    void addManagedMesh(com.badlogic.gdx.Application,com.badlogic.gdx.graphics.Mesh) -> addManagedMesh
    void invalidateAllMeshes(com.badlogic.gdx.Application) -> invalidateAllMeshes
    void clearAllMeshes(com.badlogic.gdx.Application) -> clearAllMeshes
    java.lang.String getManagedStatus() -> getManagedStatus
    void scale(float,float,float) -> scale
    void transform(com.badlogic.gdx.math.Matrix4) -> transform
    void transform(com.badlogic.gdx.math.Matrix4,int,int) -> transform
    void transform(com.badlogic.gdx.math.Matrix4,float[],int,int,int,int,int) -> transform
    void transformUV(com.badlogic.gdx.math.Matrix3) -> transformUV
    void transformUV(com.badlogic.gdx.math.Matrix3,int,int) -> transformUV
    void transformUV(com.badlogic.gdx.math.Matrix3,float[],int,int,int,int) -> transformUV
    com.badlogic.gdx.graphics.Mesh copy(boolean,boolean,int[]) -> copy
    com.badlogic.gdx.graphics.Mesh copy(boolean) -> copy
com.badlogic.gdx.graphics.Mesh$VertexDataType -> com.badlogic.gdx.graphics.Mesh$VertexDataType:
    com.badlogic.gdx.graphics.Mesh$VertexDataType VertexArray -> VertexArray
    com.badlogic.gdx.graphics.Mesh$VertexDataType VertexBufferObject -> VertexBufferObject
    com.badlogic.gdx.graphics.Mesh$VertexDataType VertexBufferObjectSubData -> VertexBufferObjectSubData
    com.badlogic.gdx.graphics.Mesh$VertexDataType[] $VALUES -> $VALUES
    com.badlogic.gdx.graphics.Mesh$VertexDataType[] values() -> values
    com.badlogic.gdx.graphics.Mesh$VertexDataType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.OrthographicCamera -> com.badlogic.gdx.graphics.OrthographicCamera:
    float zoom -> zoom
    com.badlogic.gdx.math.Vector3 tmp -> tmp
    void update() -> update
    void update(boolean) -> update
    void setToOrtho(boolean) -> setToOrtho
    void setToOrtho(boolean,float,float) -> setToOrtho
    void rotate(float) -> rotate
    void translate(float,float) -> translate
    void translate(com.badlogic.gdx.math.Vector2) -> translate
com.badlogic.gdx.graphics.PerspectiveCamera -> com.badlogic.gdx.graphics.PerspectiveCamera:
    float fieldOfView -> fieldOfView
    com.badlogic.gdx.math.Vector3 tmp -> tmp
    void update() -> update
    void update(boolean) -> update
com.badlogic.gdx.graphics.Pixmap -> com.badlogic.gdx.graphics.Pixmap:
    com.badlogic.gdx.graphics.Pixmap$Blending blending -> blending
    com.badlogic.gdx.graphics.g2d.Gdx2DPixmap pixmap -> pixmap
    int color -> color
    boolean disposed -> disposed
    void setBlending(com.badlogic.gdx.graphics.Pixmap$Blending) -> setBlending
    void setFilter(com.badlogic.gdx.graphics.Pixmap$Filter) -> setFilter
    void setColor(int) -> setColor
    void setColor(float,float,float,float) -> setColor
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    void fill() -> fill
    void drawLine(int,int,int,int) -> drawLine
    void drawRectangle(int,int,int,int) -> drawRectangle
    void drawPixmap(com.badlogic.gdx.graphics.Pixmap,int,int) -> drawPixmap
    void drawPixmap(com.badlogic.gdx.graphics.Pixmap,int,int,int,int,int,int) -> drawPixmap
    void drawPixmap(com.badlogic.gdx.graphics.Pixmap,int,int,int,int,int,int,int,int) -> drawPixmap
    void fillRectangle(int,int,int,int) -> fillRectangle
    void drawCircle(int,int,int) -> drawCircle
    void fillCircle(int,int,int) -> fillCircle
    void fillTriangle(int,int,int,int,int,int) -> fillTriangle
    int getPixel(int,int) -> getPixel
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    void dispose() -> dispose
    void drawPixel(int,int) -> drawPixel
    void drawPixel(int,int,int) -> drawPixel
    int getGLFormat() -> getGLFormat
    int getGLInternalFormat() -> getGLInternalFormat
    int getGLType() -> getGLType
    java.nio.ByteBuffer getPixels() -> getPixels
    com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> getFormat
    com.badlogic.gdx.graphics.Pixmap$Blending getBlending() -> getBlending
com.badlogic.gdx.graphics.Pixmap$Blending -> com.badlogic.gdx.graphics.Pixmap$Blending:
    com.badlogic.gdx.graphics.Pixmap$Blending None -> None
    com.badlogic.gdx.graphics.Pixmap$Blending SourceOver -> SourceOver
    com.badlogic.gdx.graphics.Pixmap$Blending[] $VALUES -> $VALUES
    com.badlogic.gdx.graphics.Pixmap$Blending[] values() -> values
    com.badlogic.gdx.graphics.Pixmap$Blending valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.Pixmap$Filter -> com.badlogic.gdx.graphics.Pixmap$Filter:
    com.badlogic.gdx.graphics.Pixmap$Filter NearestNeighbour -> NearestNeighbour
    com.badlogic.gdx.graphics.Pixmap$Filter BiLinear -> BiLinear
    com.badlogic.gdx.graphics.Pixmap$Filter[] $VALUES -> $VALUES
    com.badlogic.gdx.graphics.Pixmap$Filter[] values() -> values
    com.badlogic.gdx.graphics.Pixmap$Filter valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.Pixmap$Format -> com.badlogic.gdx.graphics.Pixmap$Format:
    com.badlogic.gdx.graphics.Pixmap$Format Alpha -> Alpha
    com.badlogic.gdx.graphics.Pixmap$Format Intensity -> Intensity
    com.badlogic.gdx.graphics.Pixmap$Format LuminanceAlpha -> LuminanceAlpha
    com.badlogic.gdx.graphics.Pixmap$Format RGB565 -> RGB565
    com.badlogic.gdx.graphics.Pixmap$Format RGBA4444 -> RGBA4444
    com.badlogic.gdx.graphics.Pixmap$Format RGB888 -> RGB888
    com.badlogic.gdx.graphics.Pixmap$Format RGBA8888 -> RGBA8888
    com.badlogic.gdx.graphics.Pixmap$Format[] $VALUES -> $VALUES
    com.badlogic.gdx.graphics.Pixmap$Format[] values() -> values
    com.badlogic.gdx.graphics.Pixmap$Format valueOf(java.lang.String) -> valueOf
    int toGdx2DPixmapFormat(com.badlogic.gdx.graphics.Pixmap$Format) -> toGdx2DPixmapFormat
    com.badlogic.gdx.graphics.Pixmap$Format fromGdx2DPixmapFormat(int) -> fromGdx2DPixmapFormat
com.badlogic.gdx.graphics.PixmapIO -> com.badlogic.gdx.graphics.PixmapIO:
    void writeCIM(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap) -> writeCIM
    com.badlogic.gdx.graphics.Pixmap readCIM(com.badlogic.gdx.files.FileHandle) -> readCIM
    void writePNG(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap) -> writePNG
com.badlogic.gdx.graphics.PixmapIO$CIM -> com.badlogic.gdx.graphics.PixmapIO$CIM:
    int BUFFER_SIZE -> BUFFER_SIZE
    byte[] writeBuffer -> writeBuffer
    byte[] readBuffer -> readBuffer
    void write(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap) -> write
    com.badlogic.gdx.graphics.Pixmap read(com.badlogic.gdx.files.FileHandle) -> read
com.badlogic.gdx.graphics.PixmapIO$PNG -> com.badlogic.gdx.graphics.PixmapIO$PNG:
    int[] crcTable -> crcTable
    int ZLIB_BLOCK_SIZE -> ZLIB_BLOCK_SIZE
    byte[] write(com.badlogic.gdx.graphics.Pixmap) -> write
    byte[] createHeaderChunk(int,int) -> createHeaderChunk
    byte[] createDataChunk(com.badlogic.gdx.graphics.Pixmap) -> createDataChunk
    byte[] createTrailerChunk() -> createTrailerChunk
    byte[] toChunk(java.lang.String,byte[]) -> toChunk
    void createCRCTable() -> createCRCTable
    int updateCRC(int,byte[]) -> updateCRC
    byte[] toZLIB(byte[]) -> toZLIB
    void writeUncompressedDeflateBlock(java.io.DataOutputStream,boolean,byte[],int,char) -> writeUncompressedDeflateBlock
    int calcADLER32(byte[]) -> calcADLER32
com.badlogic.gdx.graphics.Texture -> com.badlogic.gdx.graphics.Texture:
    com.badlogic.gdx.assets.AssetManager assetManager -> assetManager
    java.util.Map managedTextures -> managedTextures
    com.badlogic.gdx.graphics.TextureData data -> data
    void load(com.badlogic.gdx.graphics.TextureData) -> load
    void reload() -> reload
    void draw(com.badlogic.gdx.graphics.Pixmap,int,int) -> draw
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    int getDepth() -> getDepth
    com.badlogic.gdx.graphics.TextureData getTextureData() -> getTextureData
    boolean isManaged() -> isManaged
    void dispose() -> dispose
    void addManagedTexture(com.badlogic.gdx.Application,com.badlogic.gdx.graphics.Texture) -> addManagedTexture
    void clearAllTextures(com.badlogic.gdx.Application) -> clearAllTextures
    void invalidateAllTextures(com.badlogic.gdx.Application) -> invalidateAllTextures
    void setAssetManager(com.badlogic.gdx.assets.AssetManager) -> setAssetManager
    java.lang.String getManagedStatus() -> getManagedStatus
    int getNumManagedTextures() -> getNumManagedTextures
com.badlogic.gdx.graphics.Texture$1 -> com.badlogic.gdx.graphics.Texture$1:
    int val$refCount -> val$refCount
    void finishedLoading(com.badlogic.gdx.assets.AssetManager,java.lang.String,java.lang.Class) -> finishedLoading
com.badlogic.gdx.graphics.Texture$TextureFilter -> com.badlogic.gdx.graphics.Texture$TextureFilter:
    com.badlogic.gdx.graphics.Texture$TextureFilter Nearest -> Nearest
    com.badlogic.gdx.graphics.Texture$TextureFilter Linear -> Linear
    com.badlogic.gdx.graphics.Texture$TextureFilter MipMap -> MipMap
    com.badlogic.gdx.graphics.Texture$TextureFilter MipMapNearestNearest -> MipMapNearestNearest
    com.badlogic.gdx.graphics.Texture$TextureFilter MipMapLinearNearest -> MipMapLinearNearest
    com.badlogic.gdx.graphics.Texture$TextureFilter MipMapNearestLinear -> MipMapNearestLinear
    com.badlogic.gdx.graphics.Texture$TextureFilter MipMapLinearLinear -> MipMapLinearLinear
    int glEnum -> glEnum
    com.badlogic.gdx.graphics.Texture$TextureFilter[] $VALUES -> $VALUES
    com.badlogic.gdx.graphics.Texture$TextureFilter[] values() -> values
    com.badlogic.gdx.graphics.Texture$TextureFilter valueOf(java.lang.String) -> valueOf
    boolean isMipMap() -> isMipMap
    int getGLEnum() -> getGLEnum
com.badlogic.gdx.graphics.Texture$TextureWrap -> com.badlogic.gdx.graphics.Texture$TextureWrap:
    com.badlogic.gdx.graphics.Texture$TextureWrap MirroredRepeat -> MirroredRepeat
    com.badlogic.gdx.graphics.Texture$TextureWrap ClampToEdge -> ClampToEdge
    com.badlogic.gdx.graphics.Texture$TextureWrap Repeat -> Repeat
    int glEnum -> glEnum
    com.badlogic.gdx.graphics.Texture$TextureWrap[] $VALUES -> $VALUES
    com.badlogic.gdx.graphics.Texture$TextureWrap[] values() -> values
    com.badlogic.gdx.graphics.Texture$TextureWrap valueOf(java.lang.String) -> valueOf
    int getGLEnum() -> getGLEnum
com.badlogic.gdx.graphics.TextureData -> com.badlogic.gdx.graphics.TextureData:
    com.badlogic.gdx.graphics.TextureData$TextureDataType getType() -> getType
    boolean isPrepared() -> isPrepared
    void prepare() -> prepare
    com.badlogic.gdx.graphics.Pixmap consumePixmap() -> consumePixmap
    boolean disposePixmap() -> disposePixmap
    void consumeCustomData(int) -> consumeCustomData
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> getFormat
    boolean useMipMaps() -> useMipMaps
    boolean isManaged() -> isManaged
com.badlogic.gdx.graphics.TextureData$TextureDataType -> com.badlogic.gdx.graphics.TextureData$TextureDataType:
    com.badlogic.gdx.graphics.TextureData$TextureDataType Pixmap -> Pixmap
    com.badlogic.gdx.graphics.TextureData$TextureDataType Custom -> Custom
    com.badlogic.gdx.graphics.TextureData$TextureDataType[] $VALUES -> $VALUES
    com.badlogic.gdx.graphics.TextureData$TextureDataType[] values() -> values
    com.badlogic.gdx.graphics.TextureData$TextureDataType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.VertexAttribute -> com.badlogic.gdx.graphics.VertexAttribute:
    int usage -> usage
    int numComponents -> numComponents
    int offset -> offset
    java.lang.String alias -> alias
    int unit -> unit
    int usageIndex -> usageIndex
    com.badlogic.gdx.graphics.VertexAttribute Position() -> Position
    com.badlogic.gdx.graphics.VertexAttribute TexCoords(int) -> TexCoords
    com.badlogic.gdx.graphics.VertexAttribute Normal() -> Normal
    com.badlogic.gdx.graphics.VertexAttribute Color() -> Color
    com.badlogic.gdx.graphics.VertexAttribute ColorUnpacked() -> ColorUnpacked
    com.badlogic.gdx.graphics.VertexAttribute Tangent() -> Tangent
    com.badlogic.gdx.graphics.VertexAttribute Binormal() -> Binormal
    com.badlogic.gdx.graphics.VertexAttribute BoneWeight(int) -> BoneWeight
    boolean equals(java.lang.Object) -> equals
    boolean equals(com.badlogic.gdx.graphics.VertexAttribute) -> equals
    int getKey() -> getKey
com.badlogic.gdx.graphics.VertexAttributes -> com.badlogic.gdx.graphics.VertexAttributes:
    com.badlogic.gdx.graphics.VertexAttribute[] attributes -> attributes
    int vertexSize -> vertexSize
    long mask -> mask
    com.badlogic.gdx.graphics.VertexAttributes$ReadonlyIterable iterable -> iterable
    int getOffset(int) -> getOffset
    com.badlogic.gdx.graphics.VertexAttribute findByUsage(int) -> findByUsage
    int calculateOffsets() -> calculateOffsets
    int size() -> size
    com.badlogic.gdx.graphics.VertexAttribute get(int) -> get
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    long getMask() -> getMask
    java.util.Iterator iterator() -> iterator
com.badlogic.gdx.graphics.VertexAttributes$ReadonlyIterable -> com.badlogic.gdx.graphics.VertexAttributes$ReadonlyIterable:
    java.lang.Object[] array -> array
    com.badlogic.gdx.graphics.VertexAttributes$ReadonlyIterator iterator1 -> iterator1
    com.badlogic.gdx.graphics.VertexAttributes$ReadonlyIterator iterator2 -> iterator2
    java.util.Iterator iterator() -> iterator
com.badlogic.gdx.graphics.VertexAttributes$ReadonlyIterator -> com.badlogic.gdx.graphics.VertexAttributes$ReadonlyIterator:
    java.lang.Object[] array -> array
    int index -> index
    boolean valid -> valid
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
    void reset() -> reset
    java.util.Iterator iterator() -> iterator
com.badlogic.gdx.graphics.VertexAttributes$Usage -> com.badlogic.gdx.graphics.VertexAttributes$Usage:
    int Position -> Position
    int Color -> Color
    int ColorPacked -> ColorPacked
    int Normal -> Normal
    int TextureCoordinates -> TextureCoordinates
    int Generic -> Generic
    int BoneWeight -> BoneWeight
    int Tangent -> Tangent
    int BiNormal -> BiNormal
com.badlogic.gdx.graphics.g2d.Animation -> com.badlogic.gdx.graphics.g2d.Animation:
    com.badlogic.gdx.graphics.g2d.TextureRegion[] keyFrames -> keyFrames
    float frameDuration -> frameDuration
    float animationDuration -> animationDuration
    com.badlogic.gdx.graphics.g2d.Animation$PlayMode playMode -> playMode
    com.badlogic.gdx.graphics.g2d.TextureRegion getKeyFrame(float,boolean) -> getKeyFrame
    com.badlogic.gdx.graphics.g2d.TextureRegion getKeyFrame(float) -> getKeyFrame
    int getKeyFrameIndex(float) -> getKeyFrameIndex
    com.badlogic.gdx.graphics.g2d.TextureRegion[] getKeyFrames() -> getKeyFrames
    com.badlogic.gdx.graphics.g2d.Animation$PlayMode getPlayMode() -> getPlayMode
    void setPlayMode(com.badlogic.gdx.graphics.g2d.Animation$PlayMode) -> setPlayMode
    boolean isAnimationFinished(float) -> isAnimationFinished
com.badlogic.gdx.graphics.g2d.Animation$1 -> com.badlogic.gdx.graphics.g2d.Animation$1:
    int[] $SwitchMap$com$badlogic$gdx$graphics$g2d$Animation$PlayMode -> $SwitchMap$com$badlogic$gdx$graphics$g2d$Animation$PlayMode
com.badlogic.gdx.graphics.g2d.Animation$PlayMode -> com.badlogic.gdx.graphics.g2d.Animation$PlayMode:
    com.badlogic.gdx.graphics.g2d.Animation$PlayMode NORMAL -> NORMAL
    com.badlogic.gdx.graphics.g2d.Animation$PlayMode REVERSED -> REVERSED
    com.badlogic.gdx.graphics.g2d.Animation$PlayMode LOOP -> LOOP
    com.badlogic.gdx.graphics.g2d.Animation$PlayMode LOOP_REVERSED -> LOOP_REVERSED
    com.badlogic.gdx.graphics.g2d.Animation$PlayMode LOOP_PINGPONG -> LOOP_PINGPONG
    com.badlogic.gdx.graphics.g2d.Animation$PlayMode LOOP_RANDOM -> LOOP_RANDOM
    com.badlogic.gdx.graphics.g2d.Animation$PlayMode[] $VALUES -> $VALUES
    com.badlogic.gdx.graphics.g2d.Animation$PlayMode[] values() -> values
    com.badlogic.gdx.graphics.g2d.Animation$PlayMode valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.g2d.Batch -> com.badlogic.gdx.graphics.g2d.Batch:
    int X1 -> X1
    int Y1 -> Y1
    int C1 -> C1
    int U1 -> U1
    int V1 -> V1
    int X2 -> X2
    int Y2 -> Y2
    int C2 -> C2
    int U2 -> U2
    int V2 -> V2
    int X3 -> X3
    int Y3 -> Y3
    int C3 -> C3
    int U3 -> U3
    int V3 -> V3
    int X4 -> X4
    int Y4 -> Y4
    int C4 -> C4
    int U4 -> U4
    int V4 -> V4
    void begin() -> begin
    void end() -> end
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    void setColor(float,float,float,float) -> setColor
    void setColor(float) -> setColor
    com.badlogic.gdx.graphics.Color getColor() -> getColor
    void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,float,float,float,float,float,int,int,int,int,boolean,boolean) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,int,int,int,int,boolean,boolean) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float,float,int,int,int,int) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,float,float,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float[],int,int) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float,float,float,float,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float,float,float,float,float,float,boolean) -> draw
    void flush() -> flush
    void disableBlending() -> disableBlending
    void enableBlending() -> enableBlending
    void setBlendFunction(int,int) -> setBlendFunction
    int getBlendSrcFunc() -> getBlendSrcFunc
    int getBlendDstFunc() -> getBlendDstFunc
    com.badlogic.gdx.math.Matrix4 getProjectionMatrix() -> getProjectionMatrix
    com.badlogic.gdx.math.Matrix4 getTransformMatrix() -> getTransformMatrix
    void setProjectionMatrix(com.badlogic.gdx.math.Matrix4) -> setProjectionMatrix
    void setTransformMatrix(com.badlogic.gdx.math.Matrix4) -> setTransformMatrix
    void setShader(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> setShader
    boolean isBlendingEnabled() -> isBlendingEnabled
com.badlogic.gdx.graphics.g2d.BitmapFont -> com.badlogic.gdx.graphics.g2d.BitmapFont:
    int LOG2_PAGE_SIZE -> LOG2_PAGE_SIZE
    int PAGE_SIZE -> PAGE_SIZE
    int PAGES -> PAGES
    char[] xChars -> xChars
    char[] capChars -> capChars
    com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData data -> data
    com.badlogic.gdx.graphics.g2d.TextureRegion[] regions -> regions
    com.badlogic.gdx.graphics.g2d.BitmapFontCache cache -> cache
    boolean flipped -> flipped
    boolean integer -> integer
    boolean ownsTexture -> ownsTexture
    boolean markupEnabled -> markupEnabled
    void load(com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData) -> load
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds draw(com.badlogic.gdx.graphics.g2d.Batch,java.lang.CharSequence,float,float) -> draw
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds draw(com.badlogic.gdx.graphics.g2d.Batch,java.lang.CharSequence,float,float,int,int) -> draw
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds drawMultiLine(com.badlogic.gdx.graphics.g2d.Batch,java.lang.CharSequence,float,float) -> drawMultiLine
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds drawMultiLine(com.badlogic.gdx.graphics.g2d.Batch,java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment) -> drawMultiLine
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds drawWrapped(com.badlogic.gdx.graphics.g2d.Batch,java.lang.CharSequence,float,float,float) -> drawWrapped
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds drawWrapped(com.badlogic.gdx.graphics.g2d.Batch,java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment) -> drawWrapped
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getBounds(java.lang.CharSequence) -> getBounds
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getBounds(java.lang.CharSequence,com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds) -> getBounds
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getBounds(java.lang.CharSequence,int,int) -> getBounds
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getBounds(java.lang.CharSequence,int,int,com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds) -> getBounds
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getMultiLineBounds(java.lang.CharSequence) -> getMultiLineBounds
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getMultiLineBounds(java.lang.CharSequence,com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds) -> getMultiLineBounds
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getWrappedBounds(java.lang.CharSequence,float) -> getWrappedBounds
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getWrappedBounds(java.lang.CharSequence,float,com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds) -> getWrappedBounds
    void computeGlyphAdvancesAndPositions(java.lang.CharSequence,com.badlogic.gdx.utils.FloatArray,com.badlogic.gdx.utils.FloatArray) -> computeGlyphAdvancesAndPositions
    int computeVisibleGlyphs(java.lang.CharSequence,int,int,float) -> computeVisibleGlyphs
    void setColor(float) -> setColor
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    void setColor(float,float,float,float) -> setColor
    com.badlogic.gdx.graphics.Color getColor() -> getColor
    void setScale(float,float) -> setScale
    void setScale(float) -> setScale
    void scale(float) -> scale
    float getScaleX() -> getScaleX
    float getScaleY() -> getScaleY
    com.badlogic.gdx.graphics.g2d.TextureRegion getRegion() -> getRegion
    com.badlogic.gdx.graphics.g2d.TextureRegion[] getRegions() -> getRegions
    com.badlogic.gdx.graphics.g2d.TextureRegion getRegion(int) -> getRegion
    float getLineHeight() -> getLineHeight
    float getSpaceWidth() -> getSpaceWidth
    float getXHeight() -> getXHeight
    float getCapHeight() -> getCapHeight
    float getAscent() -> getAscent
    float getDescent() -> getDescent
    boolean isFlipped() -> isFlipped
    boolean isMarkupEnabled() -> isMarkupEnabled
    void setMarkupEnabled(boolean) -> setMarkupEnabled
    void dispose() -> dispose
    void setFixedWidthGlyphs(java.lang.CharSequence) -> setFixedWidthGlyphs
    boolean containsCharacter(char) -> containsCharacter
    void setUseIntegerPositions(boolean) -> setUseIntegerPositions
    boolean usesIntegerPositions() -> usesIntegerPositions
    com.badlogic.gdx.graphics.g2d.BitmapFontCache getCache() -> getCache
    com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData getData() -> getData
    boolean ownsTexture() -> ownsTexture
    void setOwnsTexture(boolean) -> setOwnsTexture
    int indexOf(java.lang.CharSequence,char,int) -> indexOf
    boolean isWhitespace(char) -> isWhitespace
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData -> com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData:
    java.lang.String imagePath -> imagePath
    java.lang.String[] imagePaths -> imagePaths
    com.badlogic.gdx.files.FileHandle fontFile -> fontFile
    boolean flipped -> flipped
    float lineHeight -> lineHeight
    float capHeight -> capHeight
    float ascent -> ascent
    float descent -> descent
    float down -> down
    float scaleX -> scaleX
    float scaleY -> scaleY
    com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph[][] glyphs -> glyphs
    float spaceWidth -> spaceWidth
    float xHeight -> xHeight
    void setGlyph(int,com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph) -> setGlyph
    com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph getFirstGlyph() -> getFirstGlyph
    com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph getGlyph(char) -> getGlyph
    java.lang.String getImagePath() -> getImagePath
    java.lang.String getImagePath(int) -> getImagePath
    java.lang.String[] getImagePaths() -> getImagePaths
    com.badlogic.gdx.files.FileHandle getFontFile() -> getFontFile
com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph -> com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph:
    int id -> id
    int srcX -> srcX
    int srcY -> srcY
    int width -> width
    int height -> height
    float u -> u
    float v -> v
    float u2 -> u2
    float v2 -> v2
    int xoffset -> xoffset
    int yoffset -> yoffset
    int xadvance -> xadvance
    byte[][] kerning -> kerning
    int page -> page
    int getKerning(char) -> getKerning
    void setKerning(int,int) -> setKerning
com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment -> com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment:
    com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment LEFT -> LEFT
    com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment CENTER -> CENTER
    com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment RIGHT -> RIGHT
    com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment[] $VALUES -> $VALUES
    com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment[] values() -> values
    com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds -> com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds:
    float width -> width
    float height -> height
    void set(com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds) -> set
com.badlogic.gdx.graphics.g2d.BitmapFontCache -> com.badlogic.gdx.graphics.g2d.BitmapFontCache:
    com.badlogic.gdx.graphics.g2d.BitmapFont font -> font
    float[][] vertexData -> vertexData
    int[] idx -> idx
    int[] tmpGlyphCount -> tmpGlyphCount
    float x -> x
    float y -> y
    float color -> color
    float previousColor -> previousColor
    com.badlogic.gdx.graphics.Color tempColor -> tempColor
    com.badlogic.gdx.graphics.Color hexColor -> hexColor
    com.badlogic.gdx.utils.StringBuilder colorBuffer -> colorBuffer
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds textBounds -> textBounds
    boolean integer -> integer
    int glyphCount -> glyphCount
    com.badlogic.gdx.utils.IntArray[] glyphIndices -> glyphIndices
    void setPosition(float,float) -> setPosition
    void translate(float,float) -> translate
    void setColors(float) -> setColors
    void setColors(com.badlogic.gdx.graphics.Color) -> setColors
    void setColors(float,float,float,float) -> setColors
    void setColors(com.badlogic.gdx.graphics.Color,int,int) -> setColors
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    void setColor(float,float,float,float) -> setColor
    void setColor(float) -> setColor
    com.badlogic.gdx.graphics.Color getColor() -> getColor
    void draw(com.badlogic.gdx.graphics.g2d.Batch) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.Batch,int,int) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    void clear() -> clear
    int countGlyphs(java.lang.CharSequence,int,int) -> countGlyphs
    void requireSequence(java.lang.CharSequence,int,int) -> requireSequence
    void require(int,int) -> require
    int parseAndSetColor(java.lang.CharSequence,int,int) -> parseAndSetColor
    float addToCache(java.lang.CharSequence,float,float,int,int) -> addToCache
    void addGlyph(com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph,float,float,float,float) -> addGlyph
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setText(java.lang.CharSequence,float,float) -> setText
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setText(java.lang.CharSequence,float,float,int,int) -> setText
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addText(java.lang.CharSequence,float,float) -> addText
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addText(java.lang.CharSequence,float,float,int,int) -> addText
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setMultiLineText(java.lang.CharSequence,float,float) -> setMultiLineText
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setMultiLineText(java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment) -> setMultiLineText
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addMultiLineText(java.lang.CharSequence,float,float) -> addMultiLineText
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addMultiLineText(java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment) -> addMultiLineText
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setWrappedText(java.lang.CharSequence,float,float,float) -> setWrappedText
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setWrappedText(java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment) -> setWrappedText
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addWrappedText(java.lang.CharSequence,float,float,float) -> addWrappedText
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addWrappedText(java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment) -> addWrappedText
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getBounds() -> getBounds
    float getX() -> getX
    float getY() -> getY
    com.badlogic.gdx.graphics.g2d.BitmapFont getFont() -> getFont
    void setUseIntegerPositions(boolean) -> setUseIntegerPositions
    boolean usesIntegerPositions() -> usesIntegerPositions
    float[] getVertices() -> getVertices
    float[] getVertices(int) -> getVertices
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap -> com.badlogic.gdx.graphics.g2d.Gdx2DPixmap:
    int GDX2D_FORMAT_ALPHA -> GDX2D_FORMAT_ALPHA
    int GDX2D_FORMAT_LUMINANCE_ALPHA -> GDX2D_FORMAT_LUMINANCE_ALPHA
    int GDX2D_FORMAT_RGB888 -> GDX2D_FORMAT_RGB888
    int GDX2D_FORMAT_RGBA8888 -> GDX2D_FORMAT_RGBA8888
    int GDX2D_FORMAT_RGB565 -> GDX2D_FORMAT_RGB565
    int GDX2D_FORMAT_RGBA4444 -> GDX2D_FORMAT_RGBA4444
    int GDX2D_SCALE_NEAREST -> GDX2D_SCALE_NEAREST
    int GDX2D_SCALE_LINEAR -> GDX2D_SCALE_LINEAR
    int GDX2D_BLEND_NONE -> GDX2D_BLEND_NONE
    int GDX2D_BLEND_SRC_OVER -> GDX2D_BLEND_SRC_OVER
    long basePtr -> basePtr
    int width -> width
    int height -> height
    int format -> format
    java.nio.ByteBuffer pixelPtr -> pixelPtr
    long[] nativeData -> nativeData
    void convert(int) -> convert
    void dispose() -> dispose
    void clear(int) -> clear
    void setPixel(int,int,int) -> setPixel
    int getPixel(int,int) -> getPixel
    void drawLine(int,int,int,int,int) -> drawLine
    void drawRect(int,int,int,int,int) -> drawRect
    void drawCircle(int,int,int,int) -> drawCircle
    void fillRect(int,int,int,int,int) -> fillRect
    void fillCircle(int,int,int,int) -> fillCircle
    void fillTriangle(int,int,int,int,int,int,int) -> fillTriangle
    void drawPixmap(com.badlogic.gdx.graphics.g2d.Gdx2DPixmap,int,int,int,int,int,int) -> drawPixmap
    void drawPixmap(com.badlogic.gdx.graphics.g2d.Gdx2DPixmap,int,int,int,int,int,int,int,int) -> drawPixmap
    com.badlogic.gdx.graphics.g2d.Gdx2DPixmap newPixmap(java.io.InputStream,int) -> newPixmap
    com.badlogic.gdx.graphics.g2d.Gdx2DPixmap newPixmap(int,int,int) -> newPixmap
    java.nio.ByteBuffer getPixels() -> getPixels
    int getHeight() -> getHeight
    int getWidth() -> getWidth
    int getFormat() -> getFormat
    int getGLInternalFormat() -> getGLInternalFormat
    int getGLFormat() -> getGLFormat
    int getGLType() -> getGLType
    java.lang.String getFormatString() -> getFormatString
    java.nio.ByteBuffer load(long[],byte[],int,int) -> load
    java.nio.ByteBuffer newPixmap(long[],int,int,int) -> newPixmap
    void free(long) -> free
    void clear(long,int) -> clear
    void setPixel(long,int,int,int) -> setPixel
    int getPixel(long,int,int) -> getPixel
    void drawLine(long,int,int,int,int,int) -> drawLine
    void drawRect(long,int,int,int,int,int) -> drawRect
    void drawCircle(long,int,int,int,int) -> drawCircle
    void fillRect(long,int,int,int,int,int) -> fillRect
    void fillCircle(long,int,int,int,int) -> fillCircle
    void fillTriangle(long,int,int,int,int,int,int,int) -> fillTriangle
    void drawPixmap(long,long,int,int,int,int,int,int,int,int) -> drawPixmap
    void setBlend(int) -> setBlend
    void setScale(int) -> setScale
    java.lang.String getFailureReason() -> getFailureReason
com.badlogic.gdx.graphics.g2d.NinePatch -> com.badlogic.gdx.graphics.g2d.NinePatch:
    int TOP_LEFT -> TOP_LEFT
    int TOP_CENTER -> TOP_CENTER
    int TOP_RIGHT -> TOP_RIGHT
    int MIDDLE_LEFT -> MIDDLE_LEFT
    int MIDDLE_CENTER -> MIDDLE_CENTER
    int MIDDLE_RIGHT -> MIDDLE_RIGHT
    int BOTTOM_LEFT -> BOTTOM_LEFT
    int BOTTOM_CENTER -> BOTTOM_CENTER
    int BOTTOM_RIGHT -> BOTTOM_RIGHT
    com.badlogic.gdx.graphics.Color tmpDrawColor -> tmpDrawColor
    com.badlogic.gdx.graphics.Texture texture -> texture
    int bottomLeft -> bottomLeft
    int bottomCenter -> bottomCenter
    int bottomRight -> bottomRight
    int middleLeft -> middleLeft
    int middleCenter -> middleCenter
    int middleRight -> middleRight
    int topLeft -> topLeft
    int topCenter -> topCenter
    int topRight -> topRight
    float leftWidth -> leftWidth
    float rightWidth -> rightWidth
    float middleWidth -> middleWidth
    float middleHeight -> middleHeight
    float topHeight -> topHeight
    float bottomHeight -> bottomHeight
    float[] vertices -> vertices
    int idx -> idx
    com.badlogic.gdx.graphics.Color color -> color
    int padLeft -> padLeft
    int padRight -> padRight
    int padTop -> padTop
    int padBottom -> padBottom
    void load(com.badlogic.gdx.graphics.g2d.TextureRegion[]) -> load
    int add(com.badlogic.gdx.graphics.g2d.TextureRegion,float,boolean,boolean) -> add
    void set(int,float,float,float,float,float) -> set
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float,float,float,float) -> draw
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    com.badlogic.gdx.graphics.Color getColor() -> getColor
    float getLeftWidth() -> getLeftWidth
    void setLeftWidth(float) -> setLeftWidth
    float getRightWidth() -> getRightWidth
    void setRightWidth(float) -> setRightWidth
    float getTopHeight() -> getTopHeight
    void setTopHeight(float) -> setTopHeight
    float getBottomHeight() -> getBottomHeight
    void setBottomHeight(float) -> setBottomHeight
    float getMiddleWidth() -> getMiddleWidth
    void setMiddleWidth(float) -> setMiddleWidth
    float getMiddleHeight() -> getMiddleHeight
    void setMiddleHeight(float) -> setMiddleHeight
    float getTotalWidth() -> getTotalWidth
    float getTotalHeight() -> getTotalHeight
    void setPadding(int,int,int,int) -> setPadding
    float getPadLeft() -> getPadLeft
    void setPadLeft(int) -> setPadLeft
    float getPadRight() -> getPadRight
    void setPadRight(int) -> setPadRight
    float getPadTop() -> getPadTop
    void setPadTop(int) -> setPadTop
    float getPadBottom() -> getPadBottom
    void setPadBottom(int) -> setPadBottom
    void scale(float,float) -> scale
    com.badlogic.gdx.graphics.Texture getTexture() -> getTexture
com.badlogic.gdx.graphics.g2d.ParticleEffect -> com.badlogic.gdx.graphics.g2d.ParticleEffect:
    com.badlogic.gdx.utils.Array emitters -> emitters
    com.badlogic.gdx.math.collision.BoundingBox bounds -> bounds
    boolean ownsTexture -> ownsTexture
    void start() -> start
    void reset() -> reset
    void update(float) -> update
    void draw(com.badlogic.gdx.graphics.g2d.Batch) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    void allowCompletion() -> allowCompletion
    boolean isComplete() -> isComplete
    void setDuration(int) -> setDuration
    void setPosition(float,float) -> setPosition
    void setFlip(boolean,boolean) -> setFlip
    void flipY() -> flipY
    com.badlogic.gdx.utils.Array getEmitters() -> getEmitters
    com.badlogic.gdx.graphics.g2d.ParticleEmitter findEmitter(java.lang.String) -> findEmitter
    void save(java.io.Writer) -> save
    void load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle) -> load
    void load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.TextureAtlas) -> load
    void loadEmitters(com.badlogic.gdx.files.FileHandle) -> loadEmitters
    void loadEmitterImages(com.badlogic.gdx.graphics.g2d.TextureAtlas) -> loadEmitterImages
    void loadEmitterImages(com.badlogic.gdx.files.FileHandle) -> loadEmitterImages
    com.badlogic.gdx.graphics.Texture loadTexture(com.badlogic.gdx.files.FileHandle) -> loadTexture
    void dispose() -> dispose
    com.badlogic.gdx.math.collision.BoundingBox getBoundingBox() -> getBoundingBox
com.badlogic.gdx.graphics.g2d.ParticleEffectPool -> com.badlogic.gdx.graphics.g2d.ParticleEffectPool:
    com.badlogic.gdx.graphics.g2d.ParticleEffect effect -> effect
    com.badlogic.gdx.graphics.g2d.ParticleEffectPool$PooledEffect newObject() -> newObject
    com.badlogic.gdx.graphics.g2d.ParticleEffectPool$PooledEffect obtain() -> obtain
    java.lang.Object obtain() -> obtain
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.graphics.g2d.ParticleEffectPool$PooledEffect -> com.badlogic.gdx.graphics.g2d.ParticleEffectPool$PooledEffect:
    com.badlogic.gdx.graphics.g2d.ParticleEffectPool this$0 -> this$0
    void reset() -> reset
    void free() -> free
com.badlogic.gdx.graphics.g2d.ParticleEmitter -> com.badlogic.gdx.graphics.g2d.ParticleEmitter:
    int UPDATE_SCALE -> UPDATE_SCALE
    int UPDATE_ANGLE -> UPDATE_ANGLE
    int UPDATE_ROTATION -> UPDATE_ROTATION
    int UPDATE_VELOCITY -> UPDATE_VELOCITY
    int UPDATE_WIND -> UPDATE_WIND
    int UPDATE_GRAVITY -> UPDATE_GRAVITY
    int UPDATE_TINT -> UPDATE_TINT
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue delayValue -> delayValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue lifeOffsetValue -> lifeOffsetValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue durationValue -> durationValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue lifeValue -> lifeValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue emissionValue -> emissionValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue scaleValue -> scaleValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue rotationValue -> rotationValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue velocityValue -> velocityValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue angleValue -> angleValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue windValue -> windValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue gravityValue -> gravityValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue transparencyValue -> transparencyValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$GradientColorValue tintValue -> tintValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue xOffsetValue -> xOffsetValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue yOffsetValue -> yOffsetValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue spawnWidthValue -> spawnWidthValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue spawnHeightValue -> spawnHeightValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShapeValue spawnShapeValue -> spawnShapeValue
    float accumulator -> accumulator
    com.badlogic.gdx.graphics.g2d.Sprite sprite -> sprite
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle[] particles -> particles
    int minParticleCount -> minParticleCount
    int maxParticleCount -> maxParticleCount
    float x -> x
    float y -> y
    java.lang.String name -> name
    java.lang.String imagePath -> imagePath
    int activeCount -> activeCount
    boolean[] active -> active
    boolean firstUpdate -> firstUpdate
    boolean flipX -> flipX
    boolean flipY -> flipY
    int updateFlags -> updateFlags
    boolean allowCompletion -> allowCompletion
    com.badlogic.gdx.math.collision.BoundingBox bounds -> bounds
    int emission -> emission
    int emissionDiff -> emissionDiff
    int emissionDelta -> emissionDelta
    int lifeOffset -> lifeOffset
    int lifeOffsetDiff -> lifeOffsetDiff
    int life -> life
    int lifeDiff -> lifeDiff
    float spawnWidth -> spawnWidth
    float spawnWidthDiff -> spawnWidthDiff
    float spawnHeight -> spawnHeight
    float spawnHeightDiff -> spawnHeightDiff
    float duration -> duration
    float durationTimer -> durationTimer
    float delay -> delay
    float delayTimer -> delayTimer
    boolean attached -> attached
    boolean continuous -> continuous
    boolean aligned -> aligned
    boolean behind -> behind
    boolean additive -> additive
    void initialize() -> initialize
    void setMaxParticleCount(int) -> setMaxParticleCount
    void addParticle() -> addParticle
    void addParticles(int) -> addParticles
    void update(float) -> update
    void draw(com.badlogic.gdx.graphics.g2d.Batch) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    void start() -> start
    void reset() -> reset
    void restart() -> restart
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle newParticle(com.badlogic.gdx.graphics.g2d.Sprite) -> newParticle
    void activateParticle(int) -> activateParticle
    boolean updateParticle(com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle,float,int) -> updateParticle
    void setPosition(float,float) -> setPosition
    void setSprite(com.badlogic.gdx.graphics.g2d.Sprite) -> setSprite
    void allowCompletion() -> allowCompletion
    com.badlogic.gdx.graphics.g2d.Sprite getSprite() -> getSprite
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getLife() -> getLife
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getScale() -> getScale
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getRotation() -> getRotation
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$GradientColorValue getTint() -> getTint
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getVelocity() -> getVelocity
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getWind() -> getWind
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getGravity() -> getGravity
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getAngle() -> getAngle
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getEmission() -> getEmission
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getTransparency() -> getTransparency
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue getDuration() -> getDuration
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue getDelay() -> getDelay
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getLifeOffset() -> getLifeOffset
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue getXOffsetValue() -> getXOffsetValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue getYOffsetValue() -> getYOffsetValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getSpawnWidth() -> getSpawnWidth
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getSpawnHeight() -> getSpawnHeight
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShapeValue getSpawnShape() -> getSpawnShape
    boolean isAttached() -> isAttached
    void setAttached(boolean) -> setAttached
    boolean isContinuous() -> isContinuous
    void setContinuous(boolean) -> setContinuous
    boolean isAligned() -> isAligned
    void setAligned(boolean) -> setAligned
    boolean isAdditive() -> isAdditive
    void setAdditive(boolean) -> setAdditive
    boolean isBehind() -> isBehind
    void setBehind(boolean) -> setBehind
    int getMinParticleCount() -> getMinParticleCount
    void setMinParticleCount(int) -> setMinParticleCount
    int getMaxParticleCount() -> getMaxParticleCount
    boolean isComplete() -> isComplete
    float getPercentComplete() -> getPercentComplete
    float getX() -> getX
    float getY() -> getY
    int getActiveCount() -> getActiveCount
    java.lang.String getImagePath() -> getImagePath
    void setImagePath(java.lang.String) -> setImagePath
    void setFlip(boolean,boolean) -> setFlip
    void flipY() -> flipY
    com.badlogic.gdx.math.collision.BoundingBox getBoundingBox() -> getBoundingBox
    void save(java.io.Writer) -> save
    void load(java.io.BufferedReader) -> load
    java.lang.String readString(java.io.BufferedReader,java.lang.String) -> readString
    boolean readBoolean(java.io.BufferedReader,java.lang.String) -> readBoolean
    int readInt(java.io.BufferedReader,java.lang.String) -> readInt
    float readFloat(java.io.BufferedReader,java.lang.String) -> readFloat
com.badlogic.gdx.graphics.g2d.ParticleEmitter$1 -> com.badlogic.gdx.graphics.g2d.ParticleEmitter$1:
    int[] $SwitchMap$com$badlogic$gdx$graphics$g2d$ParticleEmitter$SpawnEllipseSide -> $SwitchMap$com$badlogic$gdx$graphics$g2d$ParticleEmitter$SpawnEllipseSide
    int[] $SwitchMap$com$badlogic$gdx$graphics$g2d$ParticleEmitter$SpawnShape -> $SwitchMap$com$badlogic$gdx$graphics$g2d$ParticleEmitter$SpawnShape
com.badlogic.gdx.graphics.g2d.ParticleEmitter$GradientColorValue -> com.badlogic.gdx.graphics.g2d.ParticleEmitter$GradientColorValue:
    float[] temp -> temp
    float[] colors -> colors
    float[] timeline -> timeline
    float[] getTimeline() -> getTimeline
    void setTimeline(float[]) -> setTimeline
    float[] getColors() -> getColors
    void setColors(float[]) -> setColors
    float[] getColor(float) -> getColor
    void save(java.io.Writer) -> save
    void load(java.io.BufferedReader) -> load
    void load(com.badlogic.gdx.graphics.g2d.ParticleEmitter$GradientColorValue) -> load
com.badlogic.gdx.graphics.g2d.ParticleEmitter$NumericValue -> com.badlogic.gdx.graphics.g2d.ParticleEmitter$NumericValue:
    float value -> value
    float getValue() -> getValue
    void setValue(float) -> setValue
    void save(java.io.Writer) -> save
    void load(java.io.BufferedReader) -> load
    void load(com.badlogic.gdx.graphics.g2d.ParticleEmitter$NumericValue) -> load
com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle -> com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle:
    int life -> life
    int currentLife -> currentLife
    float scale -> scale
    float scaleDiff -> scaleDiff
    float rotation -> rotation
    float rotationDiff -> rotationDiff
    float velocity -> velocity
    float velocityDiff -> velocityDiff
    float angle -> angle
    float angleDiff -> angleDiff
    float angleCos -> angleCos
    float angleSin -> angleSin
    float transparency -> transparency
    float transparencyDiff -> transparencyDiff
    float wind -> wind
    float windDiff -> windDiff
    float gravity -> gravity
    float gravityDiff -> gravityDiff
    float[] tint -> tint
com.badlogic.gdx.graphics.g2d.ParticleEmitter$ParticleValue -> com.badlogic.gdx.graphics.g2d.ParticleEmitter$ParticleValue:
    boolean active -> active
    boolean alwaysActive -> alwaysActive
    void setAlwaysActive(boolean) -> setAlwaysActive
    boolean isAlwaysActive() -> isAlwaysActive
    boolean isActive() -> isActive
    void setActive(boolean) -> setActive
    void save(java.io.Writer) -> save
    void load(java.io.BufferedReader) -> load
    void load(com.badlogic.gdx.graphics.g2d.ParticleEmitter$ParticleValue) -> load
com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue -> com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue:
    float lowMin -> lowMin
    float lowMax -> lowMax
    float newLowValue() -> newLowValue
    void setLow(float) -> setLow
    void setLow(float,float) -> setLow
    float getLowMin() -> getLowMin
    void setLowMin(float) -> setLowMin
    float getLowMax() -> getLowMax
    void setLowMax(float) -> setLowMax
    void save(java.io.Writer) -> save
    void load(java.io.BufferedReader) -> load
    void load(com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue) -> load
com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue -> com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue:
    float[] scaling -> scaling
    float[] timeline -> timeline
    float highMin -> highMin
    float highMax -> highMax
    boolean relative -> relative
    float newHighValue() -> newHighValue
    void setHigh(float) -> setHigh
    void setHigh(float,float) -> setHigh
    float getHighMin() -> getHighMin
    void setHighMin(float) -> setHighMin
    float getHighMax() -> getHighMax
    void setHighMax(float) -> setHighMax
    float[] getScaling() -> getScaling
    void setScaling(float[]) -> setScaling
    float[] getTimeline() -> getTimeline
    void setTimeline(float[]) -> setTimeline
    boolean isRelative() -> isRelative
    void setRelative(boolean) -> setRelative
    float getScale(float) -> getScale
    void save(java.io.Writer) -> save
    void load(java.io.BufferedReader) -> load
    void load(com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue) -> load
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide -> com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide:
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide both -> both
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide top -> top
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide bottom -> bottom
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide[] $VALUES -> $VALUES
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide[] values() -> values
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape -> com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape:
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape point -> point
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape line -> line
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape square -> square
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape ellipse -> ellipse
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape[] $VALUES -> $VALUES
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape[] values() -> values
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShapeValue -> com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShapeValue:
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape shape -> shape
    boolean edges -> edges
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide side -> side
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape getShape() -> getShape
    void setShape(com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape) -> setShape
    boolean isEdges() -> isEdges
    void setEdges(boolean) -> setEdges
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide getSide() -> getSide
    void setSide(com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide) -> setSide
    void save(java.io.Writer) -> save
    void load(java.io.BufferedReader) -> load
    void load(com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShapeValue) -> load
com.badlogic.gdx.graphics.g2d.PixmapPacker -> com.badlogic.gdx.graphics.g2d.PixmapPacker:
    int pageWidth -> pageWidth
    int pageHeight -> pageHeight
    com.badlogic.gdx.graphics.Pixmap$Format pageFormat -> pageFormat
    int padding -> padding
    boolean duplicateBorder -> duplicateBorder
    com.badlogic.gdx.utils.Array pages -> pages
    com.badlogic.gdx.graphics.g2d.PixmapPacker$Page currPage -> currPage
    boolean disposed -> disposed
    com.badlogic.gdx.math.Rectangle pack(java.lang.String,com.badlogic.gdx.graphics.Pixmap) -> pack
    void newPage() -> newPage
    com.badlogic.gdx.graphics.g2d.PixmapPacker$Node insert(com.badlogic.gdx.graphics.g2d.PixmapPacker$Node,com.badlogic.gdx.math.Rectangle) -> insert
    com.badlogic.gdx.utils.Array getPages() -> getPages
    com.badlogic.gdx.math.Rectangle getRect(java.lang.String) -> getRect
    com.badlogic.gdx.graphics.g2d.PixmapPacker$Page getPage(java.lang.String) -> getPage
    int getPageIndex(java.lang.String) -> getPageIndex
    void dispose() -> dispose
    com.badlogic.gdx.graphics.g2d.TextureAtlas generateTextureAtlas(com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter,boolean) -> generateTextureAtlas
    void updateTextureAtlas(com.badlogic.gdx.graphics.g2d.TextureAtlas,com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter,boolean) -> updateTextureAtlas
    int getPageWidth() -> getPageWidth
    int getPageHeight() -> getPageHeight
    int getPadding() -> getPadding
    boolean duplicateBorder() -> duplicateBorder
com.badlogic.gdx.graphics.g2d.PixmapPacker$1 -> com.badlogic.gdx.graphics.g2d.PixmapPacker$1:
    com.badlogic.gdx.graphics.g2d.PixmapPacker this$0 -> this$0
    void dispose() -> dispose
com.badlogic.gdx.graphics.g2d.PixmapPacker$2 -> com.badlogic.gdx.graphics.g2d.PixmapPacker$2:
    com.badlogic.gdx.graphics.g2d.PixmapPacker this$0 -> this$0
    void dispose() -> dispose
com.badlogic.gdx.graphics.g2d.PixmapPacker$Node -> com.badlogic.gdx.graphics.g2d.PixmapPacker$Node:
    com.badlogic.gdx.graphics.g2d.PixmapPacker$Node leftChild -> leftChild
    com.badlogic.gdx.graphics.g2d.PixmapPacker$Node rightChild -> rightChild
    com.badlogic.gdx.math.Rectangle rect -> rect
    java.lang.String leaveName -> leaveName
com.badlogic.gdx.graphics.g2d.PixmapPacker$Page -> com.badlogic.gdx.graphics.g2d.PixmapPacker$Page:
    com.badlogic.gdx.graphics.g2d.PixmapPacker$Node root -> root
    com.badlogic.gdx.utils.OrderedMap rects -> rects
    com.badlogic.gdx.graphics.Pixmap image -> image
    com.badlogic.gdx.graphics.Texture texture -> texture
    com.badlogic.gdx.utils.Array addedRects -> addedRects
    com.badlogic.gdx.graphics.g2d.PixmapPacker this$0 -> this$0
    com.badlogic.gdx.graphics.Pixmap getPixmap() -> getPixmap
    com.badlogic.gdx.utils.OrderedMap getRects() -> getRects
com.badlogic.gdx.graphics.g2d.PolygonRegion -> com.badlogic.gdx.graphics.g2d.PolygonRegion:
    float[] textureCoords -> textureCoords
    float[] vertices -> vertices
    short[] triangles -> triangles
    com.badlogic.gdx.graphics.g2d.TextureRegion region -> region
    float[] getVertices() -> getVertices
    short[] getTriangles() -> getTriangles
    float[] getTextureCoords() -> getTextureCoords
    com.badlogic.gdx.graphics.g2d.TextureRegion getRegion() -> getRegion
com.badlogic.gdx.graphics.g2d.PolygonRegionLoader -> com.badlogic.gdx.graphics.g2d.PolygonRegionLoader:
    com.badlogic.gdx.graphics.g2d.PolygonRegionLoader$PolygonRegionParameters defaultParameters -> defaultParameters
    com.badlogic.gdx.math.EarClippingTriangulator triangulator -> triangulator
    com.badlogic.gdx.graphics.g2d.PolygonRegion load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.PolygonRegionLoader$PolygonRegionParameters) -> load
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.PolygonRegionLoader$PolygonRegionParameters) -> getDependencies
    com.badlogic.gdx.graphics.g2d.PolygonRegion load(com.badlogic.gdx.graphics.g2d.TextureRegion,com.badlogic.gdx.files.FileHandle) -> load
    java.lang.Object load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> load
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> getDependencies
com.badlogic.gdx.graphics.g2d.PolygonRegionLoader$PolygonRegionParameters -> com.badlogic.gdx.graphics.g2d.PolygonRegionLoader$PolygonRegionParameters:
    java.lang.String texturePrefix -> texturePrefix
    int readerBuffer -> readerBuffer
    java.lang.String[] textureExtensions -> textureExtensions
com.badlogic.gdx.graphics.g2d.PolygonSprite -> com.badlogic.gdx.graphics.g2d.PolygonSprite:
    com.badlogic.gdx.graphics.g2d.PolygonRegion region -> region
    float x -> x
    float y -> y
    float width -> width
    float height -> height
    float scaleX -> scaleX
    float scaleY -> scaleY
    float rotation -> rotation
    float originX -> originX
    float originY -> originY
    float[] vertices -> vertices
    boolean dirty -> dirty
    com.badlogic.gdx.math.Rectangle bounds -> bounds
    com.badlogic.gdx.graphics.Color color -> color
    void set(com.badlogic.gdx.graphics.g2d.PolygonSprite) -> set
    void setBounds(float,float,float,float) -> setBounds
    void setSize(float,float) -> setSize
    void setPosition(float,float) -> setPosition
    void setX(float) -> setX
    void setY(float) -> setY
    void translateX(float) -> translateX
    void translateY(float) -> translateY
    void translate(float,float) -> translate
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    void setColor(float,float,float,float) -> setColor
    void setOrigin(float,float) -> setOrigin
    void setRotation(float) -> setRotation
    void rotate(float) -> rotate
    void setScale(float) -> setScale
    void setScale(float,float) -> setScale
    void scale(float) -> scale
    float[] getVertices() -> getVertices
    com.badlogic.gdx.math.Rectangle getBoundingRectangle() -> getBoundingRectangle
    void draw(com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch,float) -> draw
    float getX() -> getX
    float getY() -> getY
    float getWidth() -> getWidth
    float getHeight() -> getHeight
    float getOriginX() -> getOriginX
    float getOriginY() -> getOriginY
    float getRotation() -> getRotation
    float getScaleX() -> getScaleX
    float getScaleY() -> getScaleY
    com.badlogic.gdx.graphics.Color getColor() -> getColor
    void setRegion(com.badlogic.gdx.graphics.g2d.PolygonRegion) -> setRegion
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch -> com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch:
    com.badlogic.gdx.graphics.Mesh mesh -> mesh
    float[] vertices -> vertices
    short[] triangles -> triangles
    int vertexIndex -> vertexIndex
    int triangleIndex -> triangleIndex
    com.badlogic.gdx.graphics.Texture lastTexture -> lastTexture
    float invTexWidth -> invTexWidth
    float invTexHeight -> invTexHeight
    boolean drawing -> drawing
    com.badlogic.gdx.math.Matrix4 transformMatrix -> transformMatrix
    com.badlogic.gdx.math.Matrix4 projectionMatrix -> projectionMatrix
    com.badlogic.gdx.math.Matrix4 combinedMatrix -> combinedMatrix
    boolean blendingDisabled -> blendingDisabled
    int blendSrcFunc -> blendSrcFunc
    int blendDstFunc -> blendDstFunc
    com.badlogic.gdx.graphics.glutils.ShaderProgram shader -> shader
    com.badlogic.gdx.graphics.glutils.ShaderProgram customShader -> customShader
    boolean ownsShader -> ownsShader
    float color -> color
    com.badlogic.gdx.graphics.Color tempColor -> tempColor
    int renderCalls -> renderCalls
    int totalRenderCalls -> totalRenderCalls
    int maxTrianglesInBatch -> maxTrianglesInBatch
    void begin() -> begin
    void end() -> end
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    void setColor(float,float,float,float) -> setColor
    void setColor(float) -> setColor
    com.badlogic.gdx.graphics.Color getColor() -> getColor
    void draw(com.badlogic.gdx.graphics.g2d.PolygonRegion,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.PolygonRegion,float,float,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.PolygonRegion,float,float,float,float,float,float,float,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float[],int,int,short[],int,int) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,float,float,float,float,float,int,int,int,int,boolean,boolean) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,int,int,int,int,boolean,boolean) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float,float,int,int,int,int) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,float,float,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float[],int,int) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float,float,float,float,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float,float,float,float,float,float,boolean) -> draw
    void flush() -> flush
    void disableBlending() -> disableBlending
    void enableBlending() -> enableBlending
    void setBlendFunction(int,int) -> setBlendFunction
    int getBlendSrcFunc() -> getBlendSrcFunc
    int getBlendDstFunc() -> getBlendDstFunc
    void dispose() -> dispose
    com.badlogic.gdx.math.Matrix4 getProjectionMatrix() -> getProjectionMatrix
    com.badlogic.gdx.math.Matrix4 getTransformMatrix() -> getTransformMatrix
    void setProjectionMatrix(com.badlogic.gdx.math.Matrix4) -> setProjectionMatrix
    void setTransformMatrix(com.badlogic.gdx.math.Matrix4) -> setTransformMatrix
    void setupMatrices() -> setupMatrices
    void switchTexture(com.badlogic.gdx.graphics.Texture) -> switchTexture
    void setShader(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> setShader
    boolean isBlendingEnabled() -> isBlendingEnabled
com.badlogic.gdx.graphics.g2d.Sprite -> com.badlogic.gdx.graphics.g2d.Sprite:
    int VERTEX_SIZE -> VERTEX_SIZE
    int SPRITE_SIZE -> SPRITE_SIZE
    float[] vertices -> vertices
    com.badlogic.gdx.graphics.Color color -> color
    float x -> x
    float y -> y
    float width -> width
    float height -> height
    float originX -> originX
    float originY -> originY
    float rotation -> rotation
    float scaleX -> scaleX
    float scaleY -> scaleY
    boolean dirty -> dirty
    com.badlogic.gdx.math.Rectangle bounds -> bounds
    void set(com.badlogic.gdx.graphics.g2d.Sprite) -> set
    void setBounds(float,float,float,float) -> setBounds
    void setSize(float,float) -> setSize
    void setPosition(float,float) -> setPosition
    void setX(float) -> setX
    void setY(float) -> setY
    void setCenterX(float) -> setCenterX
    void setCenterY(float) -> setCenterY
    void setCenter(float,float) -> setCenter
    void translateX(float) -> translateX
    void translateY(float) -> translateY
    void translate(float,float) -> translate
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    void setAlpha(float) -> setAlpha
    void setColor(float,float,float,float) -> setColor
    void setColor(float) -> setColor
    void setOrigin(float,float) -> setOrigin
    void setOriginCenter() -> setOriginCenter
    void setRotation(float) -> setRotation
    float getRotation() -> getRotation
    void rotate(float) -> rotate
    void rotate90(boolean) -> rotate90
    void setScale(float) -> setScale
    void setScale(float,float) -> setScale
    void scale(float) -> scale
    float[] getVertices() -> getVertices
    com.badlogic.gdx.math.Rectangle getBoundingRectangle() -> getBoundingRectangle
    void draw(com.badlogic.gdx.graphics.g2d.Batch) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    float getX() -> getX
    float getY() -> getY
    float getWidth() -> getWidth
    float getHeight() -> getHeight
    float getOriginX() -> getOriginX
    float getOriginY() -> getOriginY
    float getScaleX() -> getScaleX
    float getScaleY() -> getScaleY
    com.badlogic.gdx.graphics.Color getColor() -> getColor
    void setRegion(float,float,float,float) -> setRegion
    void setU(float) -> setU
    void setV(float) -> setV
    void setU2(float) -> setU2
    void setV2(float) -> setV2
    void setFlip(boolean,boolean) -> setFlip
    void flip(boolean,boolean) -> flip
    void scroll(float,float) -> scroll
com.badlogic.gdx.graphics.g2d.SpriteBatch -> com.badlogic.gdx.graphics.g2d.SpriteBatch:
    com.badlogic.gdx.graphics.Mesh mesh -> mesh
    float[] vertices -> vertices
    int idx -> idx
    com.badlogic.gdx.graphics.Texture lastTexture -> lastTexture
    float invTexWidth -> invTexWidth
    float invTexHeight -> invTexHeight
    boolean drawing -> drawing
    com.badlogic.gdx.math.Matrix4 transformMatrix -> transformMatrix
    com.badlogic.gdx.math.Matrix4 projectionMatrix -> projectionMatrix
    com.badlogic.gdx.math.Matrix4 combinedMatrix -> combinedMatrix
    boolean blendingDisabled -> blendingDisabled
    int blendSrcFunc -> blendSrcFunc
    int blendDstFunc -> blendDstFunc
    com.badlogic.gdx.graphics.glutils.ShaderProgram shader -> shader
    com.badlogic.gdx.graphics.glutils.ShaderProgram customShader -> customShader
    boolean ownsShader -> ownsShader
    float color -> color
    com.badlogic.gdx.graphics.Color tempColor -> tempColor
    int renderCalls -> renderCalls
    int totalRenderCalls -> totalRenderCalls
    int maxSpritesInBatch -> maxSpritesInBatch
    com.badlogic.gdx.graphics.glutils.ShaderProgram createDefaultShader() -> createDefaultShader
    void begin() -> begin
    void end() -> end
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    void setColor(float,float,float,float) -> setColor
    void setColor(float) -> setColor
    com.badlogic.gdx.graphics.Color getColor() -> getColor
    void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,float,float,float,float,float,int,int,int,int,boolean,boolean) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,int,int,int,int,boolean,boolean) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float,float,int,int,int,int) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,float,float,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float[],int,int) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float,float,float,float,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float,float,float,float,float,float,boolean) -> draw
    void flush() -> flush
    void disableBlending() -> disableBlending
    void enableBlending() -> enableBlending
    void setBlendFunction(int,int) -> setBlendFunction
    int getBlendSrcFunc() -> getBlendSrcFunc
    int getBlendDstFunc() -> getBlendDstFunc
    void dispose() -> dispose
    com.badlogic.gdx.math.Matrix4 getProjectionMatrix() -> getProjectionMatrix
    com.badlogic.gdx.math.Matrix4 getTransformMatrix() -> getTransformMatrix
    void setProjectionMatrix(com.badlogic.gdx.math.Matrix4) -> setProjectionMatrix
    void setTransformMatrix(com.badlogic.gdx.math.Matrix4) -> setTransformMatrix
    void setupMatrices() -> setupMatrices
    void switchTexture(com.badlogic.gdx.graphics.Texture) -> switchTexture
    void setShader(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> setShader
    boolean isBlendingEnabled() -> isBlendingEnabled
    boolean isDrawing() -> isDrawing
com.badlogic.gdx.graphics.g2d.SpriteCache -> com.badlogic.gdx.graphics.g2d.SpriteCache:
    float[] tempVertices -> tempVertices
    com.badlogic.gdx.graphics.Mesh mesh -> mesh
    boolean drawing -> drawing
    com.badlogic.gdx.math.Matrix4 transformMatrix -> transformMatrix
    com.badlogic.gdx.math.Matrix4 projectionMatrix -> projectionMatrix
    com.badlogic.gdx.utils.Array caches -> caches
    com.badlogic.gdx.math.Matrix4 combinedMatrix -> combinedMatrix
    com.badlogic.gdx.graphics.glutils.ShaderProgram shader -> shader
    com.badlogic.gdx.graphics.g2d.SpriteCache$Cache currentCache -> currentCache
    com.badlogic.gdx.utils.Array textures -> textures
    com.badlogic.gdx.utils.IntArray counts -> counts
    float color -> color
    com.badlogic.gdx.graphics.Color tempColor -> tempColor
    com.badlogic.gdx.graphics.glutils.ShaderProgram customShader -> customShader
    int renderCalls -> renderCalls
    int totalRenderCalls -> totalRenderCalls
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    void setColor(float,float,float,float) -> setColor
    void setColor(float) -> setColor
    com.badlogic.gdx.graphics.Color getColor() -> getColor
    void beginCache() -> beginCache
    void beginCache(int) -> beginCache
    int endCache() -> endCache
    void clear() -> clear
    void add(com.badlogic.gdx.graphics.Texture,float[],int,int) -> add
    void add(com.badlogic.gdx.graphics.Texture,float,float) -> add
    void add(com.badlogic.gdx.graphics.Texture,float,float,int,int,float,float,float,float,float) -> add
    void add(com.badlogic.gdx.graphics.Texture,float,float,int,int,int,int) -> add
    void add(com.badlogic.gdx.graphics.Texture,float,float,float,float,int,int,int,int,boolean,boolean) -> add
    void add(com.badlogic.gdx.graphics.Texture,float,float,float,float,float,float,float,float,float,int,int,int,int,boolean,boolean) -> add
    void add(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float) -> add
    void add(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float) -> add
    void add(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float,float,float,float,float,float) -> add
    void add(com.badlogic.gdx.graphics.g2d.Sprite) -> add
    void begin() -> begin
    void end() -> end
    void draw(int) -> draw
    void draw(int,int,int) -> draw
    void dispose() -> dispose
    com.badlogic.gdx.math.Matrix4 getProjectionMatrix() -> getProjectionMatrix
    void setProjectionMatrix(com.badlogic.gdx.math.Matrix4) -> setProjectionMatrix
    com.badlogic.gdx.math.Matrix4 getTransformMatrix() -> getTransformMatrix
    void setTransformMatrix(com.badlogic.gdx.math.Matrix4) -> setTransformMatrix
    com.badlogic.gdx.graphics.glutils.ShaderProgram createDefaultShader() -> createDefaultShader
    void setShader(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> setShader
com.badlogic.gdx.graphics.g2d.SpriteCache$Cache -> com.badlogic.gdx.graphics.g2d.SpriteCache$Cache:
    int id -> id
    int offset -> offset
    int maxCount -> maxCount
    int textureCount -> textureCount
    com.badlogic.gdx.graphics.Texture[] textures -> textures
    int[] counts -> counts
com.badlogic.gdx.graphics.g2d.TextureAtlas -> com.badlogic.gdx.graphics.g2d.TextureAtlas:
    java.lang.String[] tuple -> tuple
    com.badlogic.gdx.utils.ObjectSet textures -> textures
    com.badlogic.gdx.utils.Array regions -> regions
    java.util.Comparator indexComparator -> indexComparator
    void load(com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData) -> load
    com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion addRegion(java.lang.String,com.badlogic.gdx.graphics.Texture,int,int,int,int) -> addRegion
    com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion addRegion(java.lang.String,com.badlogic.gdx.graphics.g2d.TextureRegion) -> addRegion
    com.badlogic.gdx.utils.Array getRegions() -> getRegions
    com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion findRegion(java.lang.String) -> findRegion
    com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion findRegion(java.lang.String,int) -> findRegion
    com.badlogic.gdx.utils.Array findRegions(java.lang.String) -> findRegions
    com.badlogic.gdx.utils.Array createSprites() -> createSprites
    com.badlogic.gdx.graphics.g2d.Sprite createSprite(java.lang.String) -> createSprite
    com.badlogic.gdx.graphics.g2d.Sprite createSprite(java.lang.String,int) -> createSprite
    com.badlogic.gdx.utils.Array createSprites(java.lang.String) -> createSprites
    com.badlogic.gdx.graphics.g2d.Sprite newSprite(com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion) -> newSprite
    com.badlogic.gdx.graphics.g2d.NinePatch createPatch(java.lang.String) -> createPatch
    com.badlogic.gdx.utils.ObjectSet getTextures() -> getTextures
    void dispose() -> dispose
    java.lang.String readValue(java.io.BufferedReader) -> readValue
    int readTuple(java.io.BufferedReader) -> readTuple
com.badlogic.gdx.graphics.g2d.TextureAtlas$1 -> com.badlogic.gdx.graphics.g2d.TextureAtlas$1:
    int compare(com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Region,com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Region) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion -> com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion:
    int index -> index
    java.lang.String name -> name
    float offsetX -> offsetX
    float offsetY -> offsetY
    int packedWidth -> packedWidth
    int packedHeight -> packedHeight
    int originalWidth -> originalWidth
    int originalHeight -> originalHeight
    boolean rotate -> rotate
    int[] splits -> splits
    int[] pads -> pads
    void flip(boolean,boolean) -> flip
    float getRotatedPackedWidth() -> getRotatedPackedWidth
    float getRotatedPackedHeight() -> getRotatedPackedHeight
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasSprite -> com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasSprite:
    com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion region -> region
    float originalOffsetX -> originalOffsetX
    float originalOffsetY -> originalOffsetY
    void setPosition(float,float) -> setPosition
    void setX(float) -> setX
    void setY(float) -> setY
    void setBounds(float,float,float,float) -> setBounds
    void setSize(float,float) -> setSize
    void setOrigin(float,float) -> setOrigin
    void setOriginCenter() -> setOriginCenter
    void flip(boolean,boolean) -> flip
    void rotate90(boolean) -> rotate90
    float getX() -> getX
    float getY() -> getY
    float getOriginX() -> getOriginX
    float getOriginY() -> getOriginY
    float getWidth() -> getWidth
    float getHeight() -> getHeight
    float getWidthRatio() -> getWidthRatio
    float getHeightRatio() -> getHeightRatio
    com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion getAtlasRegion() -> getAtlasRegion
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData -> com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData:
    com.badlogic.gdx.utils.Array pages -> pages
    com.badlogic.gdx.utils.Array regions -> regions
    com.badlogic.gdx.utils.Array getPages() -> getPages
    com.badlogic.gdx.utils.Array getRegions() -> getRegions
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Page -> com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Page:
    com.badlogic.gdx.files.FileHandle textureFile -> textureFile
    com.badlogic.gdx.graphics.Texture texture -> texture
    float width -> width
    float height -> height
    boolean useMipMaps -> useMipMaps
    com.badlogic.gdx.graphics.Pixmap$Format format -> format
    com.badlogic.gdx.graphics.Texture$TextureFilter minFilter -> minFilter
    com.badlogic.gdx.graphics.Texture$TextureFilter magFilter -> magFilter
    com.badlogic.gdx.graphics.Texture$TextureWrap uWrap -> uWrap
    com.badlogic.gdx.graphics.Texture$TextureWrap vWrap -> vWrap
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Region -> com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Region:
    com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Page page -> page
    int index -> index
    java.lang.String name -> name
    float offsetX -> offsetX
    float offsetY -> offsetY
    int originalWidth -> originalWidth
    int originalHeight -> originalHeight
    boolean rotate -> rotate
    int left -> left
    int top -> top
    int width -> width
    int height -> height
    boolean flip -> flip
    int[] splits -> splits
    int[] pads -> pads
com.badlogic.gdx.graphics.g2d.TextureRegion -> com.badlogic.gdx.graphics.g2d.TextureRegion:
    com.badlogic.gdx.graphics.Texture texture -> texture
    float u -> u
    float v -> v
    float u2 -> u2
    float v2 -> v2
    int regionWidth -> regionWidth
    int regionHeight -> regionHeight
    void setRegion(com.badlogic.gdx.graphics.Texture) -> setRegion
    void setRegion(int,int,int,int) -> setRegion
    void setRegion(float,float,float,float) -> setRegion
    void setRegion(com.badlogic.gdx.graphics.g2d.TextureRegion) -> setRegion
    void setRegion(com.badlogic.gdx.graphics.g2d.TextureRegion,int,int,int,int) -> setRegion
    com.badlogic.gdx.graphics.Texture getTexture() -> getTexture
    void setTexture(com.badlogic.gdx.graphics.Texture) -> setTexture
    float getU() -> getU
    void setU(float) -> setU
    float getV() -> getV
    void setV(float) -> setV
    float getU2() -> getU2
    void setU2(float) -> setU2
    float getV2() -> getV2
    void setV2(float) -> setV2
    int getRegionX() -> getRegionX
    void setRegionX(int) -> setRegionX
    int getRegionY() -> getRegionY
    void setRegionY(int) -> setRegionY
    int getRegionWidth() -> getRegionWidth
    void setRegionWidth(int) -> setRegionWidth
    int getRegionHeight() -> getRegionHeight
    void setRegionHeight(int) -> setRegionHeight
    void flip(boolean,boolean) -> flip
    boolean isFlipX() -> isFlipX
    boolean isFlipY() -> isFlipY
    void scroll(float,float) -> scroll
    com.badlogic.gdx.graphics.g2d.TextureRegion[][] split(int,int) -> split
    com.badlogic.gdx.graphics.g2d.TextureRegion[][] split(com.badlogic.gdx.graphics.Texture,int,int) -> split
com.badlogic.gdx.graphics.g3d.Attribute -> com.badlogic.gdx.graphics.g3d.Attribute:
    com.badlogic.gdx.utils.Array types -> types
    long type -> type
    long getAttributeType(java.lang.String) -> getAttributeType
    java.lang.String getAttributeAlias(long) -> getAttributeAlias
    long register(java.lang.String) -> register
    com.badlogic.gdx.graphics.g3d.Attribute copy() -> copy
    boolean equals(com.badlogic.gdx.graphics.g3d.Attribute) -> equals
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.badlogic.gdx.graphics.g3d.Attributes -> com.badlogic.gdx.graphics.g3d.Attributes:
    long mask -> mask
    com.badlogic.gdx.utils.Array attributes -> attributes
    boolean sorted -> sorted
    void sort() -> sort
    long getMask() -> getMask
    com.badlogic.gdx.graphics.g3d.Attribute get(long) -> get
    com.badlogic.gdx.graphics.g3d.Attribute get(java.lang.Class,long) -> get
    com.badlogic.gdx.utils.Array get(com.badlogic.gdx.utils.Array,long) -> get
    void clear() -> clear
    int size() -> size
    void enable(long) -> enable
    void disable(long) -> disable
    void set(com.badlogic.gdx.graphics.g3d.Attribute) -> set
    void set(com.badlogic.gdx.graphics.g3d.Attribute,com.badlogic.gdx.graphics.g3d.Attribute) -> set
    void set(com.badlogic.gdx.graphics.g3d.Attribute,com.badlogic.gdx.graphics.g3d.Attribute,com.badlogic.gdx.graphics.g3d.Attribute) -> set
    void set(com.badlogic.gdx.graphics.g3d.Attribute,com.badlogic.gdx.graphics.g3d.Attribute,com.badlogic.gdx.graphics.g3d.Attribute,com.badlogic.gdx.graphics.g3d.Attribute) -> set
    void set(com.badlogic.gdx.graphics.g3d.Attribute[]) -> set
    void set(java.lang.Iterable) -> set
    void remove(long) -> remove
    boolean has(long) -> has
    int indexOf(long) -> indexOf
    boolean same(com.badlogic.gdx.graphics.g3d.Attributes,boolean) -> same
    boolean same(com.badlogic.gdx.graphics.g3d.Attributes) -> same
    int compare(com.badlogic.gdx.graphics.g3d.Attribute,com.badlogic.gdx.graphics.g3d.Attribute) -> compare
    java.util.Iterator iterator() -> iterator
    int compare(java.lang.Object,java.lang.Object) -> compare
com.badlogic.gdx.graphics.g3d.Environment -> com.badlogic.gdx.graphics.g3d.Environment:
    com.badlogic.gdx.graphics.g3d.environment.ShadowMap shadowMap -> shadowMap
    com.badlogic.gdx.utils.Array directionalLights -> directionalLights
    com.badlogic.gdx.utils.Array pointLights -> pointLights
    com.badlogic.gdx.graphics.g3d.Environment add(com.badlogic.gdx.graphics.g3d.environment.BaseLight[]) -> add
    com.badlogic.gdx.graphics.g3d.Environment add(com.badlogic.gdx.utils.Array) -> add
    com.badlogic.gdx.graphics.g3d.Environment add(com.badlogic.gdx.graphics.g3d.environment.BaseLight) -> add
    void clear() -> clear
com.badlogic.gdx.graphics.g3d.Material -> com.badlogic.gdx.graphics.g3d.Material:
    int counter -> counter
    java.lang.String id -> id
    com.badlogic.gdx.graphics.g3d.Material copy() -> copy
    boolean equals(com.badlogic.gdx.graphics.g3d.Material) -> equals
    boolean equals(java.lang.Object) -> equals
com.badlogic.gdx.graphics.g3d.Model -> com.badlogic.gdx.graphics.g3d.Model:
    com.badlogic.gdx.utils.Array materials -> materials
    com.badlogic.gdx.utils.Array nodes -> nodes
    com.badlogic.gdx.utils.Array animations -> animations
    com.badlogic.gdx.utils.Array meshes -> meshes
    com.badlogic.gdx.utils.Array meshParts -> meshParts
    com.badlogic.gdx.utils.Array disposables -> disposables
    com.badlogic.gdx.utils.ObjectMap nodePartBones -> nodePartBones
    void load(com.badlogic.gdx.graphics.g3d.model.data.ModelData,com.badlogic.gdx.graphics.g3d.utils.TextureProvider) -> load
    void loadAnimations(java.lang.Iterable) -> loadAnimations
    void loadNodes(java.lang.Iterable) -> loadNodes
    com.badlogic.gdx.graphics.g3d.model.Node loadNode(com.badlogic.gdx.graphics.g3d.model.Node,com.badlogic.gdx.graphics.g3d.model.data.ModelNode) -> loadNode
    void loadMeshes(java.lang.Iterable) -> loadMeshes
    void convertMesh(com.badlogic.gdx.graphics.g3d.model.data.ModelMesh) -> convertMesh
    void loadMaterials(java.lang.Iterable,com.badlogic.gdx.graphics.g3d.utils.TextureProvider) -> loadMaterials
    com.badlogic.gdx.graphics.g3d.Material convertMaterial(com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial,com.badlogic.gdx.graphics.g3d.utils.TextureProvider) -> convertMaterial
    void manageDisposable(com.badlogic.gdx.utils.Disposable) -> manageDisposable
    java.lang.Iterable getManagedDisposables() -> getManagedDisposables
    void dispose() -> dispose
    void calculateTransforms() -> calculateTransforms
    com.badlogic.gdx.math.collision.BoundingBox calculateBoundingBox(com.badlogic.gdx.math.collision.BoundingBox) -> calculateBoundingBox
    com.badlogic.gdx.math.collision.BoundingBox extendBoundingBox(com.badlogic.gdx.math.collision.BoundingBox) -> extendBoundingBox
    com.badlogic.gdx.graphics.g3d.model.Animation getAnimation(java.lang.String) -> getAnimation
    com.badlogic.gdx.graphics.g3d.model.Animation getAnimation(java.lang.String,boolean) -> getAnimation
    com.badlogic.gdx.graphics.g3d.Material getMaterial(java.lang.String) -> getMaterial
    com.badlogic.gdx.graphics.g3d.Material getMaterial(java.lang.String,boolean) -> getMaterial
    com.badlogic.gdx.graphics.g3d.model.Node getNode(java.lang.String) -> getNode
    com.badlogic.gdx.graphics.g3d.model.Node getNode(java.lang.String,boolean) -> getNode
    com.badlogic.gdx.graphics.g3d.model.Node getNode(java.lang.String,boolean,boolean) -> getNode
com.badlogic.gdx.graphics.g3d.ModelBatch -> com.badlogic.gdx.graphics.g3d.ModelBatch:
    com.badlogic.gdx.graphics.Camera camera -> camera
    com.badlogic.gdx.graphics.g3d.ModelBatch$RenderablePool renderablesPool -> renderablesPool
    com.badlogic.gdx.utils.Array renderables -> renderables
    com.badlogic.gdx.graphics.g3d.utils.RenderContext context -> context
    boolean ownContext -> ownContext
    com.badlogic.gdx.graphics.g3d.utils.ShaderProvider shaderProvider -> shaderProvider
    com.badlogic.gdx.graphics.g3d.utils.RenderableSorter sorter -> sorter
    void begin(com.badlogic.gdx.graphics.Camera) -> begin
    void setCamera(com.badlogic.gdx.graphics.Camera) -> setCamera
    com.badlogic.gdx.graphics.Camera getCamera() -> getCamera
    boolean ownsRenderContext() -> ownsRenderContext
    com.badlogic.gdx.graphics.g3d.utils.RenderContext getRenderContext() -> getRenderContext
    com.badlogic.gdx.graphics.g3d.utils.ShaderProvider getShaderProvider() -> getShaderProvider
    com.badlogic.gdx.graphics.g3d.utils.RenderableSorter getRenderableSorter() -> getRenderableSorter
    void flush() -> flush
    void end() -> end
    void render(com.badlogic.gdx.graphics.g3d.Renderable) -> render
    void render(com.badlogic.gdx.graphics.g3d.RenderableProvider) -> render
    void render(java.lang.Iterable) -> render
    void render(com.badlogic.gdx.graphics.g3d.RenderableProvider,com.badlogic.gdx.graphics.g3d.Environment) -> render
    void render(java.lang.Iterable,com.badlogic.gdx.graphics.g3d.Environment) -> render
    void render(com.badlogic.gdx.graphics.g3d.RenderableProvider,com.badlogic.gdx.graphics.g3d.Shader) -> render
    void render(java.lang.Iterable,com.badlogic.gdx.graphics.g3d.Shader) -> render
    void render(com.badlogic.gdx.graphics.g3d.RenderableProvider,com.badlogic.gdx.graphics.g3d.Environment,com.badlogic.gdx.graphics.g3d.Shader) -> render
    void render(java.lang.Iterable,com.badlogic.gdx.graphics.g3d.Environment,com.badlogic.gdx.graphics.g3d.Shader) -> render
    void dispose() -> dispose
com.badlogic.gdx.graphics.g3d.ModelBatch$RenderablePool -> com.badlogic.gdx.graphics.g3d.ModelBatch$RenderablePool:
    com.badlogic.gdx.utils.Array obtained -> obtained
    com.badlogic.gdx.graphics.g3d.Renderable newObject() -> newObject
    com.badlogic.gdx.graphics.g3d.Renderable obtain() -> obtain
    void flush() -> flush
    java.lang.Object obtain() -> obtain
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.graphics.g3d.ModelInstance -> com.badlogic.gdx.graphics.g3d.ModelInstance:
    com.badlogic.gdx.utils.Array materials -> materials
    com.badlogic.gdx.utils.Array nodes -> nodes
    com.badlogic.gdx.utils.Array animations -> animations
    com.badlogic.gdx.graphics.g3d.Model model -> model
    com.badlogic.gdx.math.Matrix4 transform -> transform
    java.lang.Object userData -> userData
    com.badlogic.gdx.utils.ObjectMap nodePartBones -> nodePartBones
    com.badlogic.gdx.graphics.g3d.ModelInstance copy() -> copy
    void copyNodes(com.badlogic.gdx.utils.Array) -> copyNodes
    void copyNodes(com.badlogic.gdx.utils.Array,java.lang.String[]) -> copyNodes
    void copyNodes(com.badlogic.gdx.utils.Array,com.badlogic.gdx.utils.Array) -> copyNodes
    void setBones() -> setBones
    com.badlogic.gdx.graphics.g3d.model.Node copyNode(com.badlogic.gdx.graphics.g3d.model.Node,com.badlogic.gdx.graphics.g3d.model.Node) -> copyNode
    com.badlogic.gdx.graphics.g3d.model.NodePart copyNodePart(com.badlogic.gdx.graphics.g3d.model.NodePart) -> copyNodePart
    void copyAnimations(java.lang.Iterable) -> copyAnimations
    void getRenderables(com.badlogic.gdx.utils.Array,com.badlogic.gdx.utils.Pool) -> getRenderables
    com.badlogic.gdx.graphics.g3d.Renderable getRenderable(com.badlogic.gdx.graphics.g3d.Renderable) -> getRenderable
    com.badlogic.gdx.graphics.g3d.Renderable getRenderable(com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.model.Node) -> getRenderable
    com.badlogic.gdx.graphics.g3d.Renderable getRenderable(com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.model.Node,com.badlogic.gdx.graphics.g3d.model.NodePart) -> getRenderable
    void getRenderables(com.badlogic.gdx.graphics.g3d.model.Node,com.badlogic.gdx.utils.Array,com.badlogic.gdx.utils.Pool) -> getRenderables
    void calculateTransforms() -> calculateTransforms
    com.badlogic.gdx.math.collision.BoundingBox calculateBoundingBox(com.badlogic.gdx.math.collision.BoundingBox) -> calculateBoundingBox
    com.badlogic.gdx.math.collision.BoundingBox extendBoundingBox(com.badlogic.gdx.math.collision.BoundingBox) -> extendBoundingBox
    com.badlogic.gdx.graphics.g3d.model.Animation getAnimation(java.lang.String) -> getAnimation
    com.badlogic.gdx.graphics.g3d.model.Animation getAnimation(java.lang.String,boolean) -> getAnimation
    com.badlogic.gdx.graphics.g3d.Material getMaterial(java.lang.String) -> getMaterial
    com.badlogic.gdx.graphics.g3d.Material getMaterial(java.lang.String,boolean) -> getMaterial
    com.badlogic.gdx.graphics.g3d.model.Node getNode(java.lang.String) -> getNode
    com.badlogic.gdx.graphics.g3d.model.Node getNode(java.lang.String,boolean) -> getNode
    com.badlogic.gdx.graphics.g3d.model.Node getNode(java.lang.String,boolean,boolean) -> getNode
com.badlogic.gdx.graphics.g3d.Renderable -> com.badlogic.gdx.graphics.g3d.Renderable:
    com.badlogic.gdx.math.Matrix4 worldTransform -> worldTransform
    com.badlogic.gdx.graphics.Mesh mesh -> mesh
    int meshPartOffset -> meshPartOffset
    int meshPartSize -> meshPartSize
    int primitiveType -> primitiveType
    com.badlogic.gdx.graphics.g3d.Material material -> material
    com.badlogic.gdx.graphics.g3d.Environment environment -> environment
    com.badlogic.gdx.math.Matrix4[] bones -> bones
    com.badlogic.gdx.graphics.g3d.Shader shader -> shader
    java.lang.Object userData -> userData
com.badlogic.gdx.graphics.g3d.RenderableProvider -> com.badlogic.gdx.graphics.g3d.RenderableProvider:
    void getRenderables(com.badlogic.gdx.utils.Array,com.badlogic.gdx.utils.Pool) -> getRenderables
com.badlogic.gdx.graphics.g3d.Shader -> com.badlogic.gdx.graphics.g3d.Shader:
    void init() -> init
    int compareTo(com.badlogic.gdx.graphics.g3d.Shader) -> compareTo
    boolean canRender(com.badlogic.gdx.graphics.g3d.Renderable) -> canRender
    void begin(com.badlogic.gdx.graphics.Camera,com.badlogic.gdx.graphics.g3d.utils.RenderContext) -> begin
    void render(com.badlogic.gdx.graphics.g3d.Renderable) -> render
    void end() -> end
com.badlogic.gdx.graphics.g3d.attributes.BlendingAttribute -> com.badlogic.gdx.graphics.g3d.attributes.BlendingAttribute:
    java.lang.String Alias -> Alias
    long Type -> Type
    boolean blended -> blended
    int sourceFunction -> sourceFunction
    int destFunction -> destFunction
    float opacity -> opacity
    boolean is(long) -> is
    com.badlogic.gdx.graphics.g3d.attributes.BlendingAttribute copy() -> copy
    boolean equals(com.badlogic.gdx.graphics.g3d.Attribute) -> equals
    com.badlogic.gdx.graphics.g3d.Attribute copy() -> copy
com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute -> com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute:
    java.lang.String DiffuseAlias -> DiffuseAlias
    long Diffuse -> Diffuse
    java.lang.String SpecularAlias -> SpecularAlias
    long Specular -> Specular
    java.lang.String AmbientAlias -> AmbientAlias
    long Ambient -> Ambient
    java.lang.String EmissiveAlias -> EmissiveAlias
    long Emissive -> Emissive
    java.lang.String ReflectionAlias -> ReflectionAlias
    long Reflection -> Reflection
    java.lang.String AmbientLightAlias -> AmbientLightAlias
    long AmbientLight -> AmbientLight
    java.lang.String FogAlias -> FogAlias
    long Fog -> Fog
    long Mask -> Mask
    com.badlogic.gdx.graphics.Color color -> color
    boolean is(long) -> is
    com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute createAmbient(com.badlogic.gdx.graphics.Color) -> createAmbient
    com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute createAmbient(float,float,float,float) -> createAmbient
    com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute createDiffuse(com.badlogic.gdx.graphics.Color) -> createDiffuse
    com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute createDiffuse(float,float,float,float) -> createDiffuse
    com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute createSpecular(com.badlogic.gdx.graphics.Color) -> createSpecular
    com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute createSpecular(float,float,float,float) -> createSpecular
    com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute createReflection(com.badlogic.gdx.graphics.Color) -> createReflection
    com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute createReflection(float,float,float,float) -> createReflection
    com.badlogic.gdx.graphics.g3d.Attribute copy() -> copy
    boolean equals(com.badlogic.gdx.graphics.g3d.Attribute) -> equals
com.badlogic.gdx.graphics.g3d.attributes.CubemapAttribute -> com.badlogic.gdx.graphics.g3d.attributes.CubemapAttribute:
    java.lang.String EnvironmentMapAlias -> EnvironmentMapAlias
    long EnvironmentMap -> EnvironmentMap
    long Mask -> Mask
    com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor textureDescription -> textureDescription
    boolean is(long) -> is
    com.badlogic.gdx.graphics.g3d.Attribute copy() -> copy
    boolean equals(com.badlogic.gdx.graphics.g3d.Attribute) -> equals
com.badlogic.gdx.graphics.g3d.attributes.DepthTestAttribute -> com.badlogic.gdx.graphics.g3d.attributes.DepthTestAttribute:
    java.lang.String Alias -> Alias
    long Type -> Type
    long Mask -> Mask
    int depthFunc -> depthFunc
    float depthRangeNear -> depthRangeNear
    float depthRangeFar -> depthRangeFar
    boolean depthMask -> depthMask
    boolean is(long) -> is
    com.badlogic.gdx.graphics.g3d.Attribute copy() -> copy
    boolean equals(com.badlogic.gdx.graphics.g3d.Attribute) -> equals
com.badlogic.gdx.graphics.g3d.attributes.FloatAttribute -> com.badlogic.gdx.graphics.g3d.attributes.FloatAttribute:
    java.lang.String ShininessAlias -> ShininessAlias
    long Shininess -> Shininess
    java.lang.String AlphaTestAlias -> AlphaTestAlias
    long AlphaTest -> AlphaTest
    float value -> value
    com.badlogic.gdx.graphics.g3d.attributes.FloatAttribute createShininess(float) -> createShininess
    com.badlogic.gdx.graphics.g3d.attributes.FloatAttribute createAlphaTest(float) -> createAlphaTest
    com.badlogic.gdx.graphics.g3d.Attribute copy() -> copy
    boolean equals(com.badlogic.gdx.graphics.g3d.Attribute) -> equals
com.badlogic.gdx.graphics.g3d.attributes.IntAttribute -> com.badlogic.gdx.graphics.g3d.attributes.IntAttribute:
    java.lang.String CullFaceAlias -> CullFaceAlias
    long CullFace -> CullFace
    int value -> value
    com.badlogic.gdx.graphics.g3d.attributes.IntAttribute createCullFace(int) -> createCullFace
    com.badlogic.gdx.graphics.g3d.Attribute copy() -> copy
    boolean equals(com.badlogic.gdx.graphics.g3d.Attribute) -> equals
com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute -> com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute:
    java.lang.String DiffuseAlias -> DiffuseAlias
    long Diffuse -> Diffuse
    java.lang.String SpecularAlias -> SpecularAlias
    long Specular -> Specular
    java.lang.String BumpAlias -> BumpAlias
    long Bump -> Bump
    java.lang.String NormalAlias -> NormalAlias
    long Normal -> Normal
    long Mask -> Mask
    com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor textureDescription -> textureDescription
    boolean is(long) -> is
    com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute createDiffuse(com.badlogic.gdx.graphics.Texture) -> createDiffuse
    com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute createSpecular(com.badlogic.gdx.graphics.Texture) -> createSpecular
    com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute createNormal(com.badlogic.gdx.graphics.Texture) -> createNormal
    com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute createBump(com.badlogic.gdx.graphics.Texture) -> createBump
    com.badlogic.gdx.graphics.g3d.Attribute copy() -> copy
    boolean equals(com.badlogic.gdx.graphics.g3d.Attribute) -> equals
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy -> com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy:
    int GROUP_OPAQUE -> GROUP_OPAQUE
    int GROUP_BLEND -> GROUP_BLEND
    com.badlogic.gdx.utils.Pool arrayPool -> arrayPool
    com.badlogic.gdx.utils.Array usedArrays -> usedArrays
    com.badlogic.gdx.utils.ObjectMap materialGroups -> materialGroups
    com.badlogic.gdx.graphics.Camera camera -> camera
    com.badlogic.gdx.graphics.glutils.ShaderProgram shader -> shader
    java.util.Comparator cameraSorter -> cameraSorter
    void setCamera(com.badlogic.gdx.graphics.Camera) -> setCamera
    com.badlogic.gdx.graphics.Camera getCamera() -> getCamera
    int decideGroup(com.badlogic.gdx.graphics.g3d.decals.Decal) -> decideGroup
    void beforeGroup(int,com.badlogic.gdx.utils.Array) -> beforeGroup
    void afterGroup(int) -> afterGroup
    void beforeGroups() -> beforeGroups
    void afterGroups() -> afterGroups
    void createDefaultShader() -> createDefaultShader
    com.badlogic.gdx.graphics.glutils.ShaderProgram getGroupShader(int) -> getGroupShader
    void dispose() -> dispose
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy$1 -> com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy$1:
    com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy this$0 -> this$0
    com.badlogic.gdx.utils.Array newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy$2 -> com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy$2:
    com.badlogic.gdx.graphics.Camera val$camera -> val$camera
    int compare(com.badlogic.gdx.graphics.g3d.decals.Decal,com.badlogic.gdx.graphics.g3d.decals.Decal) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.badlogic.gdx.graphics.g3d.decals.Decal -> com.badlogic.gdx.graphics.g3d.decals.Decal:
    int VERTEX_SIZE -> VERTEX_SIZE
    int SIZE -> SIZE
    com.badlogic.gdx.math.Vector3 tmp -> tmp
    com.badlogic.gdx.math.Vector3 tmp2 -> tmp2
    int value -> value
    float[] vertices -> vertices
    com.badlogic.gdx.math.Vector3 position -> position
    com.badlogic.gdx.math.Quaternion rotation -> rotation
    com.badlogic.gdx.math.Vector2 scale -> scale
    com.badlogic.gdx.math.Vector2 transformationOffset -> transformationOffset
    com.badlogic.gdx.math.Vector2 dimensions -> dimensions
    com.badlogic.gdx.graphics.g3d.decals.DecalMaterial material -> material
    boolean updated -> updated
    com.badlogic.gdx.math.Vector3 dir -> dir
    int X1 -> X1
    int Y1 -> Y1
    int Z1 -> Z1
    int C1 -> C1
    int U1 -> U1
    int V1 -> V1
    int X2 -> X2
    int Y2 -> Y2
    int Z2 -> Z2
    int C2 -> C2
    int U2 -> U2
    int V2 -> V2
    int X3 -> X3
    int Y3 -> Y3
    int Z3 -> Z3
    int C3 -> C3
    int U3 -> U3
    int V3 -> V3
    int X4 -> X4
    int Y4 -> Y4
    int Z4 -> Z4
    int C4 -> C4
    int U4 -> U4
    int V4 -> V4
    com.badlogic.gdx.math.Quaternion rotator -> rotator
    com.badlogic.gdx.math.Vector3 X_AXIS -> X_AXIS
    com.badlogic.gdx.math.Vector3 Y_AXIS -> Y_AXIS
    com.badlogic.gdx.math.Vector3 Z_AXIS -> Z_AXIS
    void setColor(float,float,float,float) -> setColor
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    void setColor(float) -> setColor
    void setRotationX(float) -> setRotationX
    void setRotationY(float) -> setRotationY
    void setRotationZ(float) -> setRotationZ
    void rotateX(float) -> rotateX
    void rotateY(float) -> rotateY
    void rotateZ(float) -> rotateZ
    void setRotation(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> setRotation
    com.badlogic.gdx.math.Quaternion getRotation() -> getRotation
    void translateX(float) -> translateX
    void setX(float) -> setX
    float getX() -> getX
    void translateY(float) -> translateY
    void setY(float) -> setY
    float getY() -> getY
    void translateZ(float) -> translateZ
    void setZ(float) -> setZ
    float getZ() -> getZ
    void translate(float,float,float) -> translate
    void setPosition(float,float,float) -> setPosition
    com.badlogic.gdx.math.Vector3 getPosition() -> getPosition
    void setScaleX(float) -> setScaleX
    float getScaleX() -> getScaleX
    void setScaleY(float) -> setScaleY
    float getScaleY() -> getScaleY
    void setScale(float,float) -> setScale
    void setScale(float) -> setScale
    void setWidth(float) -> setWidth
    float getWidth() -> getWidth
    void setHeight(float) -> setHeight
    float getHeight() -> getHeight
    void setDimensions(float,float) -> setDimensions
    float[] getVertices() -> getVertices
    void update() -> update
    void transformVertices() -> transformVertices
    void resetVertices() -> resetVertices
    void updateUVs() -> updateUVs
    void setTextureRegion(com.badlogic.gdx.graphics.g2d.TextureRegion) -> setTextureRegion
    com.badlogic.gdx.graphics.g2d.TextureRegion getTextureRegion() -> getTextureRegion
    void setBlending(int,int) -> setBlending
    com.badlogic.gdx.graphics.g3d.decals.DecalMaterial getMaterial() -> getMaterial
    void lookAt(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> lookAt
    com.badlogic.gdx.graphics.g3d.decals.Decal newDecal(com.badlogic.gdx.graphics.g2d.TextureRegion) -> newDecal
    com.badlogic.gdx.graphics.g3d.decals.Decal newDecal(com.badlogic.gdx.graphics.g2d.TextureRegion,boolean) -> newDecal
    com.badlogic.gdx.graphics.g3d.decals.Decal newDecal(float,float,com.badlogic.gdx.graphics.g2d.TextureRegion) -> newDecal
    com.badlogic.gdx.graphics.g3d.decals.Decal newDecal(float,float,com.badlogic.gdx.graphics.g2d.TextureRegion,boolean) -> newDecal
    com.badlogic.gdx.graphics.g3d.decals.Decal newDecal(float,float,com.badlogic.gdx.graphics.g2d.TextureRegion,int,int) -> newDecal
com.badlogic.gdx.graphics.g3d.decals.DecalBatch -> com.badlogic.gdx.graphics.g3d.decals.DecalBatch:
    int DEFAULT_SIZE -> DEFAULT_SIZE
    float[] vertices -> vertices
    com.badlogic.gdx.graphics.Mesh mesh -> mesh
    com.badlogic.gdx.utils.SortedIntList groupList -> groupList
    com.badlogic.gdx.graphics.g3d.decals.GroupStrategy groupStrategy -> groupStrategy
    com.badlogic.gdx.utils.Pool groupPool -> groupPool
    com.badlogic.gdx.utils.Array usedGroups -> usedGroups
    void setGroupStrategy(com.badlogic.gdx.graphics.g3d.decals.GroupStrategy) -> setGroupStrategy
    void initialize(int) -> initialize
    int getSize() -> getSize
    void add(com.badlogic.gdx.graphics.g3d.decals.Decal) -> add
    void flush() -> flush
    void render() -> render
    void render(com.badlogic.gdx.graphics.glutils.ShaderProgram,com.badlogic.gdx.utils.Array) -> render
    void flush(com.badlogic.gdx.graphics.glutils.ShaderProgram,int) -> flush
    void clear() -> clear
    void dispose() -> dispose
com.badlogic.gdx.graphics.g3d.decals.DecalBatch$1 -> com.badlogic.gdx.graphics.g3d.decals.DecalBatch$1:
    com.badlogic.gdx.graphics.g3d.decals.DecalBatch this$0 -> this$0
    com.badlogic.gdx.utils.Array newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.graphics.g3d.decals.DecalMaterial -> com.badlogic.gdx.graphics.g3d.decals.DecalMaterial:
    int NO_BLEND -> NO_BLEND
    com.badlogic.gdx.graphics.g2d.TextureRegion textureRegion -> textureRegion
    int srcBlendFactor -> srcBlendFactor
    int dstBlendFactor -> dstBlendFactor
    void set() -> set
    boolean isOpaque() -> isOpaque
    int getSrcBlendFactor() -> getSrcBlendFactor
    int getDstBlendFactor() -> getDstBlendFactor
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.badlogic.gdx.graphics.g3d.decals.DefaultGroupStrategy -> com.badlogic.gdx.graphics.g3d.decals.DefaultGroupStrategy:
    int GROUP_OPAQUE -> GROUP_OPAQUE
    int GROUP_BLEND -> GROUP_BLEND
    int decideGroup(com.badlogic.gdx.graphics.g3d.decals.Decal) -> decideGroup
    void beforeGroup(int,com.badlogic.gdx.utils.Array) -> beforeGroup
    void afterGroup(int) -> afterGroup
    void beforeGroups() -> beforeGroups
    void afterGroups() -> afterGroups
    com.badlogic.gdx.graphics.glutils.ShaderProgram getGroupShader(int) -> getGroupShader
com.badlogic.gdx.graphics.g3d.decals.GroupPlug -> com.badlogic.gdx.graphics.g3d.decals.GroupPlug:
    void beforeGroup(com.badlogic.gdx.utils.Array) -> beforeGroup
    void afterGroup() -> afterGroup
com.badlogic.gdx.graphics.g3d.decals.GroupStrategy -> com.badlogic.gdx.graphics.g3d.decals.GroupStrategy:
    com.badlogic.gdx.graphics.glutils.ShaderProgram getGroupShader(int) -> getGroupShader
    int decideGroup(com.badlogic.gdx.graphics.g3d.decals.Decal) -> decideGroup
    void beforeGroup(int,com.badlogic.gdx.utils.Array) -> beforeGroup
    void afterGroup(int) -> afterGroup
    void beforeGroups() -> beforeGroups
    void afterGroups() -> afterGroups
com.badlogic.gdx.graphics.g3d.decals.PluggableGroupStrategy -> com.badlogic.gdx.graphics.g3d.decals.PluggableGroupStrategy:
    com.badlogic.gdx.utils.IntMap plugs -> plugs
    void beforeGroup(int,com.badlogic.gdx.utils.Array) -> beforeGroup
    void afterGroup(int) -> afterGroup
    void plugIn(com.badlogic.gdx.graphics.g3d.decals.GroupPlug,int) -> plugIn
    com.badlogic.gdx.graphics.g3d.decals.GroupPlug unPlug(int) -> unPlug
com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy -> com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy:
    com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy$Comparator comparator -> comparator
    int GROUP_OPAQUE -> GROUP_OPAQUE
    int GROUP_BLEND -> GROUP_BLEND
    int decideGroup(com.badlogic.gdx.graphics.g3d.decals.Decal) -> decideGroup
    void beforeGroup(int,com.badlogic.gdx.utils.Array) -> beforeGroup
    void afterGroup(int) -> afterGroup
    void beforeGroups() -> beforeGroups
    void afterGroups() -> afterGroups
    com.badlogic.gdx.graphics.glutils.ShaderProgram getGroupShader(int) -> getGroupShader
com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy$Comparator -> com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy$Comparator:
    com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy this$0 -> this$0
    int compare(com.badlogic.gdx.graphics.g3d.decals.Decal,com.badlogic.gdx.graphics.g3d.decals.Decal) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap -> com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap:
    float[] data -> data
    float clamp(float) -> clamp
    com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap set(float[]) -> set
    com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap set(com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap) -> set
    com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap set(com.badlogic.gdx.graphics.Color) -> set
    com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap set(float,float,float) -> set
    com.badlogic.gdx.graphics.Color getColor(com.badlogic.gdx.graphics.Color,int) -> getColor
    com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap clear() -> clear
    com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap clamp() -> clamp
    com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap add(float,float,float) -> add
    com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap add(com.badlogic.gdx.graphics.Color) -> add
    com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap add(float,float,float,float,float,float) -> add
    com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap add(com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector3) -> add
    com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap add(float,float,float,com.badlogic.gdx.math.Vector3) -> add
    com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap add(com.badlogic.gdx.graphics.Color,float,float,float) -> add
    com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap add(com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> add
    com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap add(com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float) -> add
    java.lang.String toString() -> toString
com.badlogic.gdx.graphics.g3d.environment.BaseLight -> com.badlogic.gdx.graphics.g3d.environment.BaseLight:
    com.badlogic.gdx.graphics.Color color -> color
com.badlogic.gdx.graphics.g3d.environment.DirectionalLight -> com.badlogic.gdx.graphics.g3d.environment.DirectionalLight:
    com.badlogic.gdx.math.Vector3 direction -> direction
    com.badlogic.gdx.graphics.g3d.environment.DirectionalLight set(com.badlogic.gdx.graphics.g3d.environment.DirectionalLight) -> set
    com.badlogic.gdx.graphics.g3d.environment.DirectionalLight set(com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector3) -> set
    com.badlogic.gdx.graphics.g3d.environment.DirectionalLight set(float,float,float,com.badlogic.gdx.math.Vector3) -> set
    com.badlogic.gdx.graphics.g3d.environment.DirectionalLight set(com.badlogic.gdx.graphics.Color,float,float,float) -> set
    com.badlogic.gdx.graphics.g3d.environment.DirectionalLight set(float,float,float,float,float,float) -> set
    boolean equals(java.lang.Object) -> equals
    boolean equals(com.badlogic.gdx.graphics.g3d.environment.DirectionalLight) -> equals
com.badlogic.gdx.graphics.g3d.environment.DirectionalShadowLight -> com.badlogic.gdx.graphics.g3d.environment.DirectionalShadowLight:
    com.badlogic.gdx.graphics.glutils.FrameBuffer fbo -> fbo
    com.badlogic.gdx.graphics.Camera cam -> cam
    float halfDepth -> halfDepth
    float halfHeight -> halfHeight
    com.badlogic.gdx.math.Vector3 tmpV -> tmpV
    com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor textureDesc -> textureDesc
    void update(com.badlogic.gdx.graphics.Camera) -> update
    void update(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> update
    void begin(com.badlogic.gdx.graphics.Camera) -> begin
    void begin(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> begin
    void begin() -> begin
    void end() -> end
    com.badlogic.gdx.graphics.glutils.FrameBuffer getFrameBuffer() -> getFrameBuffer
    com.badlogic.gdx.graphics.Camera getCamera() -> getCamera
    com.badlogic.gdx.math.Matrix4 getProjViewTrans() -> getProjViewTrans
    com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor getDepthMap() -> getDepthMap
    void dispose() -> dispose
com.badlogic.gdx.graphics.g3d.environment.PointLight -> com.badlogic.gdx.graphics.g3d.environment.PointLight:
    com.badlogic.gdx.math.Vector3 position -> position
    float intensity -> intensity
    com.badlogic.gdx.graphics.g3d.environment.PointLight set(com.badlogic.gdx.graphics.g3d.environment.PointLight) -> set
    com.badlogic.gdx.graphics.g3d.environment.PointLight set(com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector3,float) -> set
    com.badlogic.gdx.graphics.g3d.environment.PointLight set(float,float,float,com.badlogic.gdx.math.Vector3,float) -> set
    com.badlogic.gdx.graphics.g3d.environment.PointLight set(com.badlogic.gdx.graphics.Color,float,float,float,float) -> set
    com.badlogic.gdx.graphics.g3d.environment.PointLight set(float,float,float,float,float,float,float) -> set
    boolean equals(java.lang.Object) -> equals
    boolean equals(com.badlogic.gdx.graphics.g3d.environment.PointLight) -> equals
com.badlogic.gdx.graphics.g3d.environment.ShadowMap -> com.badlogic.gdx.graphics.g3d.environment.ShadowMap:
    com.badlogic.gdx.math.Matrix4 getProjViewTrans() -> getProjViewTrans
    com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor getDepthMap() -> getDepthMap
com.badlogic.gdx.graphics.g3d.environment.SphericalHarmonics -> com.badlogic.gdx.graphics.g3d.environment.SphericalHarmonics:
    float[] coeff -> coeff
    float[] data -> data
    float clamp(float) -> clamp
    com.badlogic.gdx.graphics.g3d.environment.SphericalHarmonics set(float[]) -> set
    com.badlogic.gdx.graphics.g3d.environment.SphericalHarmonics set(com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap) -> set
    com.badlogic.gdx.graphics.g3d.environment.SphericalHarmonics set(com.badlogic.gdx.graphics.Color) -> set
    com.badlogic.gdx.graphics.g3d.environment.SphericalHarmonics set(float,float,float) -> set
com.badlogic.gdx.graphics.g3d.loader.G3dModelLoader -> com.badlogic.gdx.graphics.g3d.loader.G3dModelLoader:
    short VERSION_HI -> VERSION_HI
    short VERSION_LO -> VERSION_LO
    com.badlogic.gdx.utils.BaseJsonReader reader -> reader
    com.badlogic.gdx.math.Quaternion tempQ -> tempQ
    com.badlogic.gdx.graphics.g3d.model.data.ModelData loadModelData(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.ModelLoader$ModelParameters) -> loadModelData
    com.badlogic.gdx.graphics.g3d.model.data.ModelData parseModel(com.badlogic.gdx.files.FileHandle) -> parseModel
    void parseMeshes(com.badlogic.gdx.graphics.g3d.model.data.ModelData,com.badlogic.gdx.utils.JsonValue) -> parseMeshes
    int parseType(java.lang.String) -> parseType
    com.badlogic.gdx.graphics.VertexAttribute[] parseAttributes(com.badlogic.gdx.utils.JsonValue) -> parseAttributes
    void parseMaterials(com.badlogic.gdx.graphics.g3d.model.data.ModelData,com.badlogic.gdx.utils.JsonValue,java.lang.String) -> parseMaterials
    int parseTextureUsage(java.lang.String) -> parseTextureUsage
    com.badlogic.gdx.graphics.Color parseColor(com.badlogic.gdx.utils.JsonValue) -> parseColor
    com.badlogic.gdx.math.Vector2 readVector2(com.badlogic.gdx.utils.JsonValue,float,float) -> readVector2
    com.badlogic.gdx.utils.Array parseNodes(com.badlogic.gdx.graphics.g3d.model.data.ModelData,com.badlogic.gdx.utils.JsonValue) -> parseNodes
    com.badlogic.gdx.graphics.g3d.model.data.ModelNode parseNodesRecursively(com.badlogic.gdx.utils.JsonValue) -> parseNodesRecursively
    void parseAnimations(com.badlogic.gdx.graphics.g3d.model.data.ModelData,com.badlogic.gdx.utils.JsonValue) -> parseAnimations
com.badlogic.gdx.graphics.g3d.loader.MtlLoader -> com.badlogic.gdx.graphics.g3d.loader.MtlLoader:
    com.badlogic.gdx.utils.Array materials -> materials
    void load(com.badlogic.gdx.files.FileHandle) -> load
    com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial getMaterial(java.lang.String) -> getMaterial
com.badlogic.gdx.graphics.g3d.loader.ObjLoader -> com.badlogic.gdx.graphics.g3d.loader.ObjLoader:
    boolean logWarning -> logWarning
    com.badlogic.gdx.utils.FloatArray verts -> verts
    com.badlogic.gdx.utils.FloatArray norms -> norms
    com.badlogic.gdx.utils.FloatArray uvs -> uvs
    com.badlogic.gdx.utils.Array groups -> groups
    com.badlogic.gdx.graphics.g3d.Model loadObj(com.badlogic.gdx.files.FileHandle) -> loadObj
    com.badlogic.gdx.graphics.g3d.Model loadObj(com.badlogic.gdx.files.FileHandle,boolean) -> loadObj
    com.badlogic.gdx.graphics.g3d.Model loadModel(com.badlogic.gdx.files.FileHandle,boolean) -> loadModel
    com.badlogic.gdx.graphics.g3d.model.data.ModelData loadModelData(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.loader.ObjLoader$ObjLoaderParameters) -> loadModelData
    com.badlogic.gdx.graphics.g3d.model.data.ModelData loadModelData(com.badlogic.gdx.files.FileHandle,boolean) -> loadModelData
    com.badlogic.gdx.graphics.g3d.loader.ObjLoader$Group setActiveGroup(java.lang.String) -> setActiveGroup
    int getIndex(java.lang.String,int) -> getIndex
    com.badlogic.gdx.graphics.g3d.model.data.ModelData loadModelData(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.ModelLoader$ModelParameters) -> loadModelData
com.badlogic.gdx.graphics.g3d.loader.ObjLoader$Group -> com.badlogic.gdx.graphics.g3d.loader.ObjLoader$Group:
    java.lang.String name -> name
    java.lang.String materialName -> materialName
    com.badlogic.gdx.utils.Array faces -> faces
    int numFaces -> numFaces
    boolean hasNorms -> hasNorms
    boolean hasUVs -> hasUVs
    com.badlogic.gdx.graphics.g3d.Material mat -> mat
    com.badlogic.gdx.graphics.g3d.loader.ObjLoader this$0 -> this$0
com.badlogic.gdx.graphics.g3d.loader.ObjLoader$ObjLoaderParameters -> com.badlogic.gdx.graphics.g3d.loader.ObjLoader$ObjLoaderParameters:
    boolean flipV -> flipV
com.badlogic.gdx.graphics.g3d.model.Animation -> com.badlogic.gdx.graphics.g3d.model.Animation:
    java.lang.String id -> id
    float duration -> duration
    com.badlogic.gdx.utils.Array nodeAnimations -> nodeAnimations
com.badlogic.gdx.graphics.g3d.model.MeshPart -> com.badlogic.gdx.graphics.g3d.model.MeshPart:
    java.lang.String id -> id
    int primitiveType -> primitiveType
    int indexOffset -> indexOffset
    int numVertices -> numVertices
    com.badlogic.gdx.graphics.Mesh mesh -> mesh
    boolean equals(com.badlogic.gdx.graphics.g3d.model.MeshPart) -> equals
    boolean equals(java.lang.Object) -> equals
com.badlogic.gdx.graphics.g3d.model.Node -> com.badlogic.gdx.graphics.g3d.model.Node:
    java.lang.String id -> id
    com.badlogic.gdx.graphics.g3d.model.Node parent -> parent
    com.badlogic.gdx.utils.Array children -> children
    boolean isAnimated -> isAnimated
    com.badlogic.gdx.math.Vector3 translation -> translation
    com.badlogic.gdx.math.Quaternion rotation -> rotation
    com.badlogic.gdx.math.Vector3 scale -> scale
    com.badlogic.gdx.math.Matrix4 localTransform -> localTransform
    com.badlogic.gdx.math.Matrix4 globalTransform -> globalTransform
    com.badlogic.gdx.utils.Array parts -> parts
    com.badlogic.gdx.math.Matrix4 calculateLocalTransform() -> calculateLocalTransform
    com.badlogic.gdx.math.Matrix4 calculateWorldTransform() -> calculateWorldTransform
    void calculateTransforms(boolean) -> calculateTransforms
    void calculateBoneTransforms(boolean) -> calculateBoneTransforms
    com.badlogic.gdx.math.collision.BoundingBox calculateBoundingBox(com.badlogic.gdx.math.collision.BoundingBox) -> calculateBoundingBox
    com.badlogic.gdx.math.collision.BoundingBox calculateBoundingBox(com.badlogic.gdx.math.collision.BoundingBox,boolean) -> calculateBoundingBox
    com.badlogic.gdx.math.collision.BoundingBox extendBoundingBox(com.badlogic.gdx.math.collision.BoundingBox) -> extendBoundingBox
    com.badlogic.gdx.math.collision.BoundingBox extendBoundingBox(com.badlogic.gdx.math.collision.BoundingBox,boolean) -> extendBoundingBox
    com.badlogic.gdx.graphics.g3d.model.Node getChild(java.lang.String,boolean,boolean) -> getChild
    com.badlogic.gdx.graphics.g3d.model.Node getNode(com.badlogic.gdx.utils.Array,java.lang.String,boolean,boolean) -> getNode
com.badlogic.gdx.graphics.g3d.model.NodeAnimation -> com.badlogic.gdx.graphics.g3d.model.NodeAnimation:
    com.badlogic.gdx.graphics.g3d.model.Node node -> node
    com.badlogic.gdx.utils.Array keyframes -> keyframes
com.badlogic.gdx.graphics.g3d.model.NodeKeyframe -> com.badlogic.gdx.graphics.g3d.model.NodeKeyframe:
    float keytime -> keytime
    com.badlogic.gdx.math.Vector3 translation -> translation
    com.badlogic.gdx.math.Vector3 scale -> scale
    com.badlogic.gdx.math.Quaternion rotation -> rotation
com.badlogic.gdx.graphics.g3d.model.NodePart -> com.badlogic.gdx.graphics.g3d.model.NodePart:
    com.badlogic.gdx.graphics.g3d.model.MeshPart meshPart -> meshPart
    com.badlogic.gdx.graphics.g3d.Material material -> material
    com.badlogic.gdx.utils.ArrayMap invBoneBindTransforms -> invBoneBindTransforms
    com.badlogic.gdx.math.Matrix4[] bones -> bones
    boolean enabled -> enabled
    com.badlogic.gdx.graphics.g3d.Renderable setRenderable(com.badlogic.gdx.graphics.g3d.Renderable) -> setRenderable
com.badlogic.gdx.graphics.g3d.model.data.ModelAnimation -> com.badlogic.gdx.graphics.g3d.model.data.ModelAnimation:
    java.lang.String id -> id
    com.badlogic.gdx.utils.Array nodeAnimations -> nodeAnimations
com.badlogic.gdx.graphics.g3d.model.data.ModelData -> com.badlogic.gdx.graphics.g3d.model.data.ModelData:
    java.lang.String id -> id
    short[] version -> version
    com.badlogic.gdx.utils.Array meshes -> meshes
    com.badlogic.gdx.utils.Array materials -> materials
    com.badlogic.gdx.utils.Array nodes -> nodes
    com.badlogic.gdx.utils.Array animations -> animations
    void addMesh(com.badlogic.gdx.graphics.g3d.model.data.ModelMesh) -> addMesh
com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial -> com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial:
    java.lang.String id -> id
    com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial$MaterialType type -> type
    com.badlogic.gdx.graphics.Color ambient -> ambient
    com.badlogic.gdx.graphics.Color diffuse -> diffuse
    com.badlogic.gdx.graphics.Color specular -> specular
    com.badlogic.gdx.graphics.Color emissive -> emissive
    com.badlogic.gdx.graphics.Color reflection -> reflection
    float shininess -> shininess
    float opacity -> opacity
    com.badlogic.gdx.utils.Array textures -> textures
com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial$MaterialType -> com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial$MaterialType:
    com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial$MaterialType Lambert -> Lambert
    com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial$MaterialType Phong -> Phong
    com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial$MaterialType[] $VALUES -> $VALUES
    com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial$MaterialType[] values() -> values
    com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial$MaterialType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.g3d.model.data.ModelMesh -> com.badlogic.gdx.graphics.g3d.model.data.ModelMesh:
    java.lang.String id -> id
    com.badlogic.gdx.graphics.VertexAttribute[] attributes -> attributes
    float[] vertices -> vertices
    com.badlogic.gdx.graphics.g3d.model.data.ModelMeshPart[] parts -> parts
com.badlogic.gdx.graphics.g3d.model.data.ModelMeshPart -> com.badlogic.gdx.graphics.g3d.model.data.ModelMeshPart:
    java.lang.String id -> id
    short[] indices -> indices
    int primitiveType -> primitiveType
com.badlogic.gdx.graphics.g3d.model.data.ModelNode -> com.badlogic.gdx.graphics.g3d.model.data.ModelNode:
    java.lang.String id -> id
    int boneId -> boneId
    com.badlogic.gdx.math.Vector3 translation -> translation
    com.badlogic.gdx.math.Quaternion rotation -> rotation
    com.badlogic.gdx.math.Vector3 scale -> scale
    java.lang.String meshId -> meshId
    com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart[] parts -> parts
    com.badlogic.gdx.graphics.g3d.model.data.ModelNode[] children -> children
com.badlogic.gdx.graphics.g3d.model.data.ModelNodeAnimation -> com.badlogic.gdx.graphics.g3d.model.data.ModelNodeAnimation:
    java.lang.String nodeId -> nodeId
    com.badlogic.gdx.utils.Array keyframes -> keyframes
com.badlogic.gdx.graphics.g3d.model.data.ModelNodeKeyframe -> com.badlogic.gdx.graphics.g3d.model.data.ModelNodeKeyframe:
    float keytime -> keytime
    com.badlogic.gdx.math.Vector3 translation -> translation
    com.badlogic.gdx.math.Vector3 scale -> scale
    com.badlogic.gdx.math.Quaternion rotation -> rotation
com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart -> com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart:
    java.lang.String materialId -> materialId
    java.lang.String meshPartId -> meshPartId
    com.badlogic.gdx.utils.ArrayMap bones -> bones
    int[][] uvMapping -> uvMapping
com.badlogic.gdx.graphics.g3d.model.data.ModelTexture -> com.badlogic.gdx.graphics.g3d.model.data.ModelTexture:
    int USAGE_UNKNOWN -> USAGE_UNKNOWN
    int USAGE_NONE -> USAGE_NONE
    int USAGE_DIFFUSE -> USAGE_DIFFUSE
    int USAGE_EMISSIVE -> USAGE_EMISSIVE
    int USAGE_AMBIENT -> USAGE_AMBIENT
    int USAGE_SPECULAR -> USAGE_SPECULAR
    int USAGE_SHININESS -> USAGE_SHININESS
    int USAGE_NORMAL -> USAGE_NORMAL
    int USAGE_BUMP -> USAGE_BUMP
    int USAGE_TRANSPARENCY -> USAGE_TRANSPARENCY
    int USAGE_REFLECTION -> USAGE_REFLECTION
    java.lang.String id -> id
    java.lang.String fileName -> fileName
    com.badlogic.gdx.math.Vector2 uvTranslation -> uvTranslation
    com.badlogic.gdx.math.Vector2 uvScaling -> uvScaling
    int usage -> usage
com.badlogic.gdx.graphics.g3d.shaders.BaseShader -> com.badlogic.gdx.graphics.g3d.shaders.BaseShader:
    com.badlogic.gdx.utils.Array uniforms -> uniforms
    com.badlogic.gdx.utils.Array validators -> validators
    com.badlogic.gdx.utils.Array setters -> setters
    int[] locations -> locations
    com.badlogic.gdx.utils.IntArray globalUniforms -> globalUniforms
    com.badlogic.gdx.utils.IntArray localUniforms -> localUniforms
    com.badlogic.gdx.utils.IntIntMap attributes -> attributes
    com.badlogic.gdx.graphics.glutils.ShaderProgram program -> program
    com.badlogic.gdx.graphics.g3d.utils.RenderContext context -> context
    com.badlogic.gdx.graphics.Camera camera -> camera
    com.badlogic.gdx.graphics.Mesh currentMesh -> currentMesh
    com.badlogic.gdx.utils.IntArray tempArray -> tempArray
    com.badlogic.gdx.graphics.g3d.Attributes combinedAttributes -> combinedAttributes
    int register(java.lang.String,com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Validator,com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter) -> register
    int register(java.lang.String,com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Validator) -> register
    int register(java.lang.String,com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter) -> register
    int register(java.lang.String) -> register
    int register(com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform,com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter) -> register
    int register(com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform) -> register
    int getUniformID(java.lang.String) -> getUniformID
    java.lang.String getUniformAlias(int) -> getUniformAlias
    void init(com.badlogic.gdx.graphics.glutils.ShaderProgram,com.badlogic.gdx.graphics.g3d.Renderable) -> init
    void begin(com.badlogic.gdx.graphics.Camera,com.badlogic.gdx.graphics.g3d.utils.RenderContext) -> begin
    int[] getAttributeLocations(com.badlogic.gdx.graphics.VertexAttributes) -> getAttributeLocations
    void render(com.badlogic.gdx.graphics.g3d.Renderable) -> render
    void render(com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> render
    void end() -> end
    void dispose() -> dispose
    boolean has(int) -> has
    int loc(int) -> loc
    boolean set(int,com.badlogic.gdx.math.Matrix4) -> set
    boolean set(int,com.badlogic.gdx.math.Matrix3) -> set
    boolean set(int,com.badlogic.gdx.math.Vector3) -> set
    boolean set(int,com.badlogic.gdx.math.Vector2) -> set
    boolean set(int,com.badlogic.gdx.graphics.Color) -> set
    boolean set(int,float) -> set
    boolean set(int,float,float) -> set
    boolean set(int,float,float,float) -> set
    boolean set(int,float,float,float,float) -> set
    boolean set(int,int) -> set
    boolean set(int,int,int) -> set
    boolean set(int,int,int,int) -> set
    boolean set(int,int,int,int,int) -> set
    boolean set(int,com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor) -> set
    boolean set(int,com.badlogic.gdx.graphics.GLTexture) -> set
com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter -> com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter:
    boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int) -> isGlobal
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform -> com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform:
    java.lang.String alias -> alias
    long materialMask -> materialMask
    long environmentMask -> environmentMask
    long overallMask -> overallMask
    boolean validate(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable) -> validate
com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Validator -> com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Validator:
    boolean validate(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable) -> validate
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader:
    java.lang.String defaultVertexShader -> defaultVertexShader
    java.lang.String defaultFragmentShader -> defaultFragmentShader
    long implementedFlags -> implementedFlags
    int defaultCullFace -> defaultCullFace
    int defaultDepthFunc -> defaultDepthFunc
    int u_projTrans -> u_projTrans
    int u_viewTrans -> u_viewTrans
    int u_projViewTrans -> u_projViewTrans
    int u_cameraPosition -> u_cameraPosition
    int u_cameraDirection -> u_cameraDirection
    int u_cameraUp -> u_cameraUp
    int u_time -> u_time
    int u_worldTrans -> u_worldTrans
    int u_viewWorldTrans -> u_viewWorldTrans
    int u_projViewWorldTrans -> u_projViewWorldTrans
    int u_normalMatrix -> u_normalMatrix
    int u_bones -> u_bones
    int u_shininess -> u_shininess
    int u_opacity -> u_opacity
    int u_diffuseColor -> u_diffuseColor
    int u_diffuseTexture -> u_diffuseTexture
    int u_specularColor -> u_specularColor
    int u_specularTexture -> u_specularTexture
    int u_emissiveColor -> u_emissiveColor
    int u_reflectionColor -> u_reflectionColor
    int u_normalTexture -> u_normalTexture
    int u_alphaTest -> u_alphaTest
    int u_ambientCubemap -> u_ambientCubemap
    int u_environmentCubemap -> u_environmentCubemap
    int u_dirLights0color -> u_dirLights0color
    int u_dirLights0direction -> u_dirLights0direction
    int u_dirLights1color -> u_dirLights1color
    int u_pointLights0color -> u_pointLights0color
    int u_pointLights0position -> u_pointLights0position
    int u_pointLights0intensity -> u_pointLights0intensity
    int u_pointLights1color -> u_pointLights1color
    int u_fogColor -> u_fogColor
    int u_shadowMapProjViewTrans -> u_shadowMapProjViewTrans
    int u_shadowTexture -> u_shadowTexture
    int u_shadowPCFOffset -> u_shadowPCFOffset
    int dirLightsLoc -> dirLightsLoc
    int dirLightsColorOffset -> dirLightsColorOffset
    int dirLightsDirectionOffset -> dirLightsDirectionOffset
    int dirLightsSize -> dirLightsSize
    int pointLightsLoc -> pointLightsLoc
    int pointLightsColorOffset -> pointLightsColorOffset
    int pointLightsPositionOffset -> pointLightsPositionOffset
    int pointLightsSize -> pointLightsSize
    boolean lighting -> lighting
    boolean environmentCubemap -> environmentCubemap
    boolean shadowMap -> shadowMap
    boolean fog -> fog
    com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap ambientCubemap -> ambientCubemap
    com.badlogic.gdx.graphics.g3d.environment.DirectionalLight[] directionalLights -> directionalLights
    com.badlogic.gdx.graphics.g3d.environment.PointLight[] pointLights -> pointLights
    com.badlogic.gdx.graphics.g3d.Renderable renderable -> renderable
    long materialMask -> materialMask
    long vertexMask -> vertexMask
    com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Config config -> config
    long optionalAttributes -> optionalAttributes
    com.badlogic.gdx.math.Matrix3 normalMatrix -> normalMatrix
    com.badlogic.gdx.graphics.Camera camera -> camera
    float time -> time
    boolean lightsSet -> lightsSet
    com.badlogic.gdx.graphics.g3d.Material currentMaterial -> currentMaterial
    com.badlogic.gdx.math.Vector3 tmpV1 -> tmpV1
    java.lang.String getDefaultVertexShader() -> getDefaultVertexShader
    java.lang.String getDefaultFragmentShader() -> getDefaultFragmentShader
    void init() -> init
    boolean and(long,long) -> and
    boolean or(long,long) -> or
    java.lang.String createPrefix(com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Config) -> createPrefix
    boolean canRender(com.badlogic.gdx.graphics.g3d.Renderable) -> canRender
    int compareTo(com.badlogic.gdx.graphics.g3d.Shader) -> compareTo
    boolean equals(java.lang.Object) -> equals
    boolean equals(com.badlogic.gdx.graphics.g3d.shaders.DefaultShader) -> equals
    void begin(com.badlogic.gdx.graphics.Camera,com.badlogic.gdx.graphics.g3d.utils.RenderContext) -> begin
    void render(com.badlogic.gdx.graphics.g3d.Renderable) -> render
    void end() -> end
    void bindMaterial(com.badlogic.gdx.graphics.g3d.Renderable) -> bindMaterial
    void bindLights(com.badlogic.gdx.graphics.g3d.Renderable) -> bindLights
    void dispose() -> dispose
    int getDefaultCullFace() -> getDefaultCullFace
    void setDefaultCullFace(int) -> setDefaultCullFace
    int getDefaultDepthFunc() -> getDefaultDepthFunc
    void setDefaultDepthFunc(int) -> setDefaultDepthFunc
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Config -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Config:
    java.lang.String vertexShader -> vertexShader
    java.lang.String fragmentShader -> fragmentShader
    int numDirectionalLights -> numDirectionalLights
    int numPointLights -> numPointLights
    int numSpotLights -> numSpotLights
    int numBones -> numBones
    boolean ignoreUnimplemented -> ignoreUnimplemented
    int defaultCullFace -> defaultCullFace
    int defaultDepthFunc -> defaultDepthFunc
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Inputs -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Inputs:
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform projTrans -> projTrans
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform viewTrans -> viewTrans
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform projViewTrans -> projViewTrans
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform cameraPosition -> cameraPosition
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform cameraDirection -> cameraDirection
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform cameraUp -> cameraUp
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform worldTrans -> worldTrans
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform viewWorldTrans -> viewWorldTrans
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform projViewWorldTrans -> projViewWorldTrans
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform normalMatrix -> normalMatrix
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform bones -> bones
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform shininess -> shininess
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform opacity -> opacity
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform diffuseColor -> diffuseColor
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform diffuseTexture -> diffuseTexture
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform specularColor -> specularColor
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform specularTexture -> specularTexture
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform emissiveColor -> emissiveColor
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform reflectionColor -> reflectionColor
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform normalTexture -> normalTexture
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform alphaTest -> alphaTest
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform ambientCube -> ambientCube
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform dirLights -> dirLights
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform pointLights -> pointLights
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform environmentCubemap -> environmentCubemap
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters:
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter projTrans -> projTrans
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter viewTrans -> viewTrans
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter projViewTrans -> projViewTrans
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter cameraPosition -> cameraPosition
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter cameraDirection -> cameraDirection
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter cameraUp -> cameraUp
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter worldTrans -> worldTrans
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter viewWorldTrans -> viewWorldTrans
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter projViewWorldTrans -> projViewWorldTrans
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter normalMatrix -> normalMatrix
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter shininess -> shininess
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter diffuseColor -> diffuseColor
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter diffuseTexture -> diffuseTexture
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter specularColor -> specularColor
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter specularTexture -> specularTexture
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter emissiveColor -> emissiveColor
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter reflectionColor -> reflectionColor
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter normalTexture -> normalTexture
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter environmentCubemap -> environmentCubemap
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$1 -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$1:
    boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int) -> isGlobal
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$10 -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$10:
    com.badlogic.gdx.math.Matrix3 tmpM -> tmpM
    boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int) -> isGlobal
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$11 -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$11:
    boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int) -> isGlobal
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$12 -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$12:
    boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int) -> isGlobal
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$13 -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$13:
    boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int) -> isGlobal
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$14 -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$14:
    boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int) -> isGlobal
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$15 -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$15:
    boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int) -> isGlobal
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$16 -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$16:
    boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int) -> isGlobal
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$17 -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$17:
    boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int) -> isGlobal
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$18 -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$18:
    boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int) -> isGlobal
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$19 -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$19:
    boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int) -> isGlobal
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$2 -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$2:
    boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int) -> isGlobal
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$3 -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$3:
    boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int) -> isGlobal
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$4 -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$4:
    boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int) -> isGlobal
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$5 -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$5:
    boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int) -> isGlobal
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$6 -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$6:
    boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int) -> isGlobal
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$7 -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$7:
    boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int) -> isGlobal
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$8 -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$8:
    com.badlogic.gdx.math.Matrix4 temp -> temp
    boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int) -> isGlobal
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$9 -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$9:
    com.badlogic.gdx.math.Matrix4 temp -> temp
    boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int) -> isGlobal
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$ACubemap -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$ACubemap:
    float[] ones -> ones
    com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap cacheAmbientCubemap -> cacheAmbientCubemap
    com.badlogic.gdx.math.Vector3 tmpV1 -> tmpV1
    int dirLightsOffset -> dirLightsOffset
    int pointLightsOffset -> pointLightsOffset
    boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int) -> isGlobal
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$Bones -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$Bones:
    com.badlogic.gdx.math.Matrix4 idtMatrix -> idtMatrix
    float[] bones -> bones
    boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int) -> isGlobal
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DepthShader -> com.badlogic.gdx.graphics.g3d.shaders.DepthShader:
    java.lang.String defaultVertexShader -> defaultVertexShader
    java.lang.String defaultFragmentShader -> defaultFragmentShader
    int numBones -> numBones
    int weights -> weights
    java.lang.String getDefaultVertexShader() -> getDefaultVertexShader
    java.lang.String getDefaultFragmentShader() -> getDefaultFragmentShader
    java.lang.String createPrefix(com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.shaders.DepthShader$Config) -> createPrefix
    void begin(com.badlogic.gdx.graphics.Camera,com.badlogic.gdx.graphics.g3d.utils.RenderContext) -> begin
    void end() -> end
    boolean canRender(com.badlogic.gdx.graphics.g3d.Renderable) -> canRender
com.badlogic.gdx.graphics.g3d.shaders.DepthShader$Config -> com.badlogic.gdx.graphics.g3d.shaders.DepthShader$Config:
    boolean depthBufferOnly -> depthBufferOnly
com.badlogic.gdx.graphics.g3d.utils.AnimationController -> com.badlogic.gdx.graphics.g3d.utils.AnimationController:
    com.badlogic.gdx.utils.Pool animationPool -> animationPool
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc current -> current
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc queued -> queued
    float queuedTransitionTime -> queuedTransitionTime
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc previous -> previous
    float transitionCurrentTime -> transitionCurrentTime
    float transitionTargetTime -> transitionTargetTime
    boolean inAction -> inAction
    boolean paused -> paused
    boolean allowSameAnimation -> allowSameAnimation
    boolean justChangedAnimation -> justChangedAnimation
    boolean updating -> updating
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc obtain(com.badlogic.gdx.graphics.g3d.model.Animation,float,float,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener) -> obtain
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc obtain(java.lang.String,float,float,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener) -> obtain
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc obtain(com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc) -> obtain
    void update(float) -> update
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc setAnimation(java.lang.String) -> setAnimation
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc setAnimation(java.lang.String,int) -> setAnimation
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc setAnimation(java.lang.String,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener) -> setAnimation
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc setAnimation(java.lang.String,int,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener) -> setAnimation
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc setAnimation(java.lang.String,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener) -> setAnimation
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc setAnimation(java.lang.String,float,float,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener) -> setAnimation
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc setAnimation(com.badlogic.gdx.graphics.g3d.model.Animation,float,float,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener) -> setAnimation
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc setAnimation(com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc) -> setAnimation
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc animate(java.lang.String,float) -> animate
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc animate(java.lang.String,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener,float) -> animate
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc animate(java.lang.String,int,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener,float) -> animate
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc animate(java.lang.String,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener,float) -> animate
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc animate(java.lang.String,float,float,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener,float) -> animate
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc animate(com.badlogic.gdx.graphics.g3d.model.Animation,float,float,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener,float) -> animate
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc animate(com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc,float) -> animate
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc queue(java.lang.String,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener,float) -> queue
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc queue(java.lang.String,float,float,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener,float) -> queue
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc queue(com.badlogic.gdx.graphics.g3d.model.Animation,float,float,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener,float) -> queue
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc queue(com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc,float) -> queue
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc action(java.lang.String,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener,float) -> action
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc action(java.lang.String,float,float,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener,float) -> action
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc action(com.badlogic.gdx.graphics.g3d.model.Animation,float,float,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener,float) -> action
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc action(com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc,float) -> action
com.badlogic.gdx.graphics.g3d.utils.AnimationController$1 -> com.badlogic.gdx.graphics.g3d.utils.AnimationController$1:
    com.badlogic.gdx.graphics.g3d.utils.AnimationController this$0 -> this$0
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc -> com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc:
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener listener -> listener
    com.badlogic.gdx.graphics.g3d.model.Animation animation -> animation
    float speed -> speed
    float time -> time
    float offset -> offset
    float duration -> duration
    int loopCount -> loopCount
    float update(float) -> update
com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener -> com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener:
    void onEnd(com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc) -> onEnd
    void onLoop(com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc) -> onLoop
com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController -> com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController:
    com.badlogic.gdx.utils.Pool transformPool -> transformPool
    com.badlogic.gdx.utils.ObjectMap transforms -> transforms
    boolean applying -> applying
    com.badlogic.gdx.graphics.g3d.ModelInstance target -> target
    com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$Transform tmpT -> tmpT
    void begin() -> begin
    void apply(com.badlogic.gdx.graphics.g3d.model.Animation,float,float) -> apply
    void end() -> end
    void applyAnimation(com.badlogic.gdx.graphics.g3d.model.Animation,float) -> applyAnimation
    void applyAnimations(com.badlogic.gdx.graphics.g3d.model.Animation,float,com.badlogic.gdx.graphics.g3d.model.Animation,float,float) -> applyAnimations
    void applyAnimation(com.badlogic.gdx.utils.ObjectMap,com.badlogic.gdx.utils.Pool,float,com.badlogic.gdx.graphics.g3d.model.Animation,float) -> applyAnimation
    void removeAnimation(com.badlogic.gdx.graphics.g3d.model.Animation) -> removeAnimation
com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$1 -> com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$1:
    com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController this$0 -> this$0
    com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$Transform newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$Transform -> com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$Transform:
    com.badlogic.gdx.math.Vector3 translation -> translation
    com.badlogic.gdx.math.Quaternion rotation -> rotation
    com.badlogic.gdx.math.Vector3 scale -> scale
    com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$Transform idt() -> idt
    com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$Transform set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Quaternion,com.badlogic.gdx.math.Vector3) -> set
    com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$Transform set(com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$Transform) -> set
    com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$Transform lerp(com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$Transform,float) -> lerp
    com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$Transform lerp(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Quaternion,com.badlogic.gdx.math.Vector3,float) -> lerp
    com.badlogic.gdx.math.Matrix4 toMatrix4(com.badlogic.gdx.math.Matrix4) -> toMatrix4
    void reset() -> reset
com.badlogic.gdx.graphics.g3d.utils.BaseShaderProvider -> com.badlogic.gdx.graphics.g3d.utils.BaseShaderProvider:
    com.badlogic.gdx.utils.Array shaders -> shaders
    com.badlogic.gdx.graphics.g3d.Shader getShader(com.badlogic.gdx.graphics.g3d.Renderable) -> getShader
    com.badlogic.gdx.graphics.g3d.Shader createShader(com.badlogic.gdx.graphics.g3d.Renderable) -> createShader
    void dispose() -> dispose
com.badlogic.gdx.graphics.g3d.utils.CameraInputController -> com.badlogic.gdx.graphics.g3d.utils.CameraInputController:
    int rotateButton -> rotateButton
    float rotateAngle -> rotateAngle
    int translateButton -> translateButton
    float translateUnits -> translateUnits
    int forwardButton -> forwardButton
    int activateKey -> activateKey
    boolean activatePressed -> activatePressed
    boolean alwaysScroll -> alwaysScroll
    float scrollFactor -> scrollFactor
    float pinchZoomFactor -> pinchZoomFactor
    boolean autoUpdate -> autoUpdate
    com.badlogic.gdx.math.Vector3 target -> target
    boolean translateTarget -> translateTarget
    boolean forwardTarget -> forwardTarget
    boolean scrollTarget -> scrollTarget
    int forwardKey -> forwardKey
    boolean forwardPressed -> forwardPressed
    int backwardKey -> backwardKey
    boolean backwardPressed -> backwardPressed
    int rotateRightKey -> rotateRightKey
    boolean rotateRightPressed -> rotateRightPressed
    int rotateLeftKey -> rotateLeftKey
    boolean rotateLeftPressed -> rotateLeftPressed
    com.badlogic.gdx.graphics.Camera camera -> camera
    int button -> button
    float startX -> startX
    float startY -> startY
    com.badlogic.gdx.math.Vector3 tmpV1 -> tmpV1
    com.badlogic.gdx.math.Vector3 tmpV2 -> tmpV2
    com.badlogic.gdx.graphics.g3d.utils.CameraInputController$CameraGestureListener gestureListener -> gestureListener
    int touched -> touched
    boolean multiTouch -> multiTouch
    void update() -> update
    boolean touchDown(int,int,int,int) -> touchDown
    boolean touchUp(int,int,int,int) -> touchUp
    boolean process(float,float,int) -> process
    boolean touchDragged(int,int,int) -> touchDragged
    boolean scrolled(int) -> scrolled
    boolean zoom(float) -> zoom
    boolean pinchZoom(float) -> pinchZoom
    boolean keyDown(int) -> keyDown
    boolean keyUp(int) -> keyUp
com.badlogic.gdx.graphics.g3d.utils.CameraInputController$CameraGestureListener -> com.badlogic.gdx.graphics.g3d.utils.CameraInputController$CameraGestureListener:
    com.badlogic.gdx.graphics.g3d.utils.CameraInputController controller -> controller
    float previousZoom -> previousZoom
    boolean touchDown(float,float,int,int) -> touchDown
    boolean tap(float,float,int,int) -> tap
    boolean longPress(float,float) -> longPress
    boolean fling(float,float,int) -> fling
    boolean pan(float,float,float,float) -> pan
    boolean zoom(float,float) -> zoom
    boolean pinch(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> pinch
com.badlogic.gdx.graphics.g3d.utils.DefaultRenderableSorter -> com.badlogic.gdx.graphics.g3d.utils.DefaultRenderableSorter:
    com.badlogic.gdx.graphics.Camera camera -> camera
    com.badlogic.gdx.math.Vector3 tmpV1 -> tmpV1
    com.badlogic.gdx.math.Vector3 tmpV2 -> tmpV2
    void sort(com.badlogic.gdx.graphics.Camera,com.badlogic.gdx.utils.Array) -> sort
    int compare(com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Renderable) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.badlogic.gdx.graphics.g3d.utils.DefaultShaderProvider -> com.badlogic.gdx.graphics.g3d.utils.DefaultShaderProvider:
    com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Config config -> config
    com.badlogic.gdx.graphics.g3d.Shader createShader(com.badlogic.gdx.graphics.g3d.Renderable) -> createShader
com.badlogic.gdx.graphics.g3d.utils.DefaultTextureBinder -> com.badlogic.gdx.graphics.g3d.utils.DefaultTextureBinder:
    int ROUNDROBIN -> ROUNDROBIN
    int WEIGHTED -> WEIGHTED
    int MAX_GLES_UNITS -> MAX_GLES_UNITS
    int offset -> offset
    int count -> count
    int reuseWeight -> reuseWeight
    com.badlogic.gdx.graphics.GLTexture[] textures -> textures
    int[] weights -> weights
    int method -> method
    boolean reused -> reused
    int reuseCount -> reuseCount
    int bindCount -> bindCount
    com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor tempDesc -> tempDesc
    int currentTexture -> currentTexture
    int getMaxTextureUnits() -> getMaxTextureUnits
    void begin() -> begin
    void end() -> end
    int bind(com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor) -> bind
    int bind(com.badlogic.gdx.graphics.GLTexture) -> bind
    int bindTexture(com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor,boolean) -> bindTexture
    int bindTextureRoundRobin(com.badlogic.gdx.graphics.GLTexture) -> bindTextureRoundRobin
    int bindTextureWeighted(com.badlogic.gdx.graphics.GLTexture) -> bindTextureWeighted
    int getBindCount() -> getBindCount
    int getReuseCount() -> getReuseCount
    void resetCounts() -> resetCounts
com.badlogic.gdx.graphics.g3d.utils.DepthShaderProvider -> com.badlogic.gdx.graphics.g3d.utils.DepthShaderProvider:
    com.badlogic.gdx.graphics.g3d.shaders.DepthShader$Config config -> config
    com.badlogic.gdx.graphics.g3d.Shader createShader(com.badlogic.gdx.graphics.g3d.Renderable) -> createShader
com.badlogic.gdx.graphics.g3d.utils.FirstPersonCameraController -> com.badlogic.gdx.graphics.g3d.utils.FirstPersonCameraController:
    com.badlogic.gdx.graphics.Camera camera -> camera
    com.badlogic.gdx.utils.IntIntMap keys -> keys
    int STRAFE_LEFT -> STRAFE_LEFT
    int STRAFE_RIGHT -> STRAFE_RIGHT
    int FORWARD -> FORWARD
    int BACKWARD -> BACKWARD
    int UP -> UP
    int DOWN -> DOWN
    float velocity -> velocity
    float degreesPerPixel -> degreesPerPixel
    com.badlogic.gdx.math.Vector3 tmp -> tmp
    boolean keyDown(int) -> keyDown
    boolean keyUp(int) -> keyUp
    void setVelocity(float) -> setVelocity
    void setDegreesPerPixel(float) -> setDegreesPerPixel
    boolean touchDragged(int,int,int) -> touchDragged
    void update() -> update
    void update(float) -> update
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder -> com.badlogic.gdx.graphics.g3d.utils.MeshBuilder:
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo vertTmp1 -> vertTmp1
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo vertTmp2 -> vertTmp2
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo vertTmp3 -> vertTmp3
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo vertTmp4 -> vertTmp4
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo vertTmp5 -> vertTmp5
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo vertTmp6 -> vertTmp6
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo vertTmp7 -> vertTmp7
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo vertTmp8 -> vertTmp8
    com.badlogic.gdx.math.Matrix4 matTmp1 -> matTmp1
    com.badlogic.gdx.math.Vector3 tempV1 -> tempV1
    com.badlogic.gdx.math.Vector3 tempV2 -> tempV2
    com.badlogic.gdx.math.Vector3 tempV3 -> tempV3
    com.badlogic.gdx.math.Vector3 tempV4 -> tempV4
    com.badlogic.gdx.math.Vector3 tempV5 -> tempV5
    com.badlogic.gdx.math.Vector3 tempV6 -> tempV6
    com.badlogic.gdx.math.Vector3 tempV7 -> tempV7
    com.badlogic.gdx.math.Vector3 tempV8 -> tempV8
    com.badlogic.gdx.graphics.VertexAttributes attributes -> attributes
    com.badlogic.gdx.utils.FloatArray vertices -> vertices
    com.badlogic.gdx.utils.ShortArray indices -> indices
    int stride -> stride
    short vindex -> vindex
    int istart -> istart
    int posOffset -> posOffset
    int posSize -> posSize
    int norOffset -> norOffset
    int colOffset -> colOffset
    int colSize -> colSize
    int cpOffset -> cpOffset
    int uvOffset -> uvOffset
    com.badlogic.gdx.graphics.g3d.model.MeshPart part -> part
    com.badlogic.gdx.utils.Array parts -> parts
    com.badlogic.gdx.graphics.Color color -> color
    boolean colorSet -> colorSet
    int primitiveType -> primitiveType
    float uMin -> uMin
    float uMax -> uMax
    float vMin -> vMin
    float vMax -> vMax
    float[] vertex -> vertex
    boolean vertexTransformationEnabled -> vertexTransformationEnabled
    com.badlogic.gdx.math.Matrix4 positionTransform -> positionTransform
    com.badlogic.gdx.math.Matrix4 normalTransform -> normalTransform
    com.badlogic.gdx.math.Vector3 tempVTransformed -> tempVTransformed
    com.badlogic.gdx.utils.Pool vectorPool -> vectorPool
    com.badlogic.gdx.utils.Array vectorArray -> vectorArray
    com.badlogic.gdx.utils.Pool matrices4Pool -> matrices4Pool
    com.badlogic.gdx.utils.Array matrices4Array -> matrices4Array
    short lastIndex -> lastIndex
    com.badlogic.gdx.utils.ShortArray tmpIndices -> tmpIndices
    com.badlogic.gdx.graphics.VertexAttributes createAttributes(long) -> createAttributes
    void begin(long) -> begin
    void begin(com.badlogic.gdx.graphics.VertexAttributes) -> begin
    void begin(long,int) -> begin
    void begin(com.badlogic.gdx.graphics.VertexAttributes,int) -> begin
    void endpart() -> endpart
    com.badlogic.gdx.graphics.g3d.model.MeshPart part(java.lang.String,int) -> part
    com.badlogic.gdx.graphics.Mesh end() -> end
    com.badlogic.gdx.graphics.VertexAttributes getAttributes() -> getAttributes
    com.badlogic.gdx.graphics.g3d.model.MeshPart getMeshPart() -> getMeshPart
    com.badlogic.gdx.math.Vector3 tmp(float,float,float) -> tmp
    com.badlogic.gdx.math.Vector3 tmp(com.badlogic.gdx.math.Vector3) -> tmp
    com.badlogic.gdx.math.Matrix4 tmp() -> tmp
    com.badlogic.gdx.math.Matrix4 tmp(com.badlogic.gdx.math.Matrix4) -> tmp
    void cleanup() -> cleanup
    void setColor(float,float,float,float) -> setColor
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    void setUVRange(float,float,float,float) -> setUVRange
    void setUVRange(com.badlogic.gdx.graphics.g2d.TextureRegion) -> setUVRange
    void ensureVertices(int) -> ensureVertices
    void ensureIndices(int) -> ensureIndices
    void ensureCapacity(int,int) -> ensureCapacity
    void ensureTriangleIndices(int) -> ensureTriangleIndices
    void ensureTriangles(int,int) -> ensureTriangles
    void ensureTriangles(int) -> ensureTriangles
    void ensureRectangleIndices(int) -> ensureRectangleIndices
    void ensureRectangles(int,int) -> ensureRectangles
    void ensureRectangles(int) -> ensureRectangles
    short lastIndex() -> lastIndex
    void addVertex(float[],int) -> addVertex
    short vertex(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector2) -> vertex
    short vertex(float[]) -> vertex
    short vertex(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo) -> vertex
    void index(short) -> index
    void index(short,short) -> index
    void index(short,short,short) -> index
    void index(short,short,short,short) -> index
    void index(short,short,short,short,short,short) -> index
    void index(short,short,short,short,short,short,short,short) -> index
    void line(short,short) -> line
    void line(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo) -> line
    void line(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> line
    void line(float,float,float,float,float,float) -> line
    void line(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color) -> line
    void triangle(short,short,short) -> triangle
    void triangle(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo) -> triangle
    void triangle(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> triangle
    void triangle(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color) -> triangle
    void rect(short,short,short,short) -> rect
    void rect(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo) -> rect
    void rect(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> rect
    void rect(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float) -> rect
    void patch(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,int,int) -> patch
    void patch(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int,int) -> patch
    void patch(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,int,int) -> patch
    void box(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo) -> box
    void box(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> box
    void box(com.badlogic.gdx.math.Matrix4) -> box
    void box(float,float,float) -> box
    void box(float,float,float,float,float,float) -> box
    void circle(float,int,float,float,float,float,float,float) -> circle
    void circle(float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> circle
    void circle(float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> circle
    void circle(float,int,float,float,float,float,float,float,float,float,float,float,float,float) -> circle
    void circle(float,int,float,float,float,float,float,float,float,float) -> circle
    void circle(float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,float) -> circle
    void circle(float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,float) -> circle
    void circle(float,int,float,float,float,float,float,float,float,float,float,float,float,float,float,float) -> circle
    void ellipse(float,float,int,float,float,float,float,float,float) -> ellipse
    void ellipse(float,float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> ellipse
    void ellipse(float,float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> ellipse
    void ellipse(float,float,int,float,float,float,float,float,float,float,float,float,float,float,float) -> ellipse
    void ellipse(float,float,int,float,float,float,float,float,float,float,float) -> ellipse
    void ellipse(float,float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,float) -> ellipse
    void ellipse(float,float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,float) -> ellipse
    void ellipse(float,float,int,float,float,float,float,float,float,float,float,float,float,float,float,float,float) -> ellipse
    void ellipse(float,float,float,float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> ellipse
    void ellipse(float,float,float,float,int,float,float,float,float,float,float) -> ellipse
    void ellipse(float,float,float,float,int,float,float,float,float,float,float,float,float) -> ellipse
    void ellipse(float,float,float,float,int,float,float,float,float,float,float,float,float,float,float,float,float,float,float) -> ellipse
    void cylinder(float,float,float,int) -> cylinder
    void cylinder(float,float,float,int,float,float) -> cylinder
    void cylinder(float,float,float,int,float,float,boolean) -> cylinder
    void cone(float,float,float,int) -> cone
    void cone(float,float,float,int,float,float) -> cone
    void sphere(float,float,float,int,int) -> sphere
    void sphere(com.badlogic.gdx.math.Matrix4,float,float,float,int,int) -> sphere
    void sphere(float,float,float,int,int,float,float,float,float) -> sphere
    void sphere(com.badlogic.gdx.math.Matrix4,float,float,float,int,int,float,float,float,float) -> sphere
    void capsule(float,float,int) -> capsule
    void arrow(float,float,float,float,float,float,float,float,int) -> arrow
    com.badlogic.gdx.math.Matrix4 getVertexTransform(com.badlogic.gdx.math.Matrix4) -> getVertexTransform
    void setVertexTransform(com.badlogic.gdx.math.Matrix4) -> setVertexTransform
    boolean isVertexTransformationEnabled() -> isVertexTransformationEnabled
    void setVertexTransformationEnabled(boolean) -> setVertexTransformationEnabled
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder$1 -> com.badlogic.gdx.graphics.g3d.utils.MeshBuilder$1:
    com.badlogic.gdx.math.Vector3 newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder$2 -> com.badlogic.gdx.graphics.g3d.utils.MeshBuilder$2:
    com.badlogic.gdx.math.Matrix4 newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder -> com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder:
    com.badlogic.gdx.graphics.g3d.model.MeshPart getMeshPart() -> getMeshPart
    com.badlogic.gdx.graphics.VertexAttributes getAttributes() -> getAttributes
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    void setColor(float,float,float,float) -> setColor
    void setUVRange(float,float,float,float) -> setUVRange
    void setUVRange(com.badlogic.gdx.graphics.g2d.TextureRegion) -> setUVRange
    short vertex(float[]) -> vertex
    short vertex(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector2) -> vertex
    short vertex(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo) -> vertex
    short lastIndex() -> lastIndex
    void index(short) -> index
    void index(short,short) -> index
    void index(short,short,short) -> index
    void index(short,short,short,short) -> index
    void index(short,short,short,short,short,short) -> index
    void index(short,short,short,short,short,short,short,short) -> index
    void line(short,short) -> line
    void line(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo) -> line
    void line(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> line
    void line(float,float,float,float,float,float) -> line
    void line(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color) -> line
    void triangle(short,short,short) -> triangle
    void triangle(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo) -> triangle
    void triangle(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> triangle
    void triangle(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color) -> triangle
    void rect(short,short,short,short) -> rect
    void rect(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo) -> rect
    void rect(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> rect
    void rect(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float) -> rect
    void patch(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,int,int) -> patch
    void patch(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int,int) -> patch
    void patch(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,int,int) -> patch
    void box(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo) -> box
    void box(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> box
    void box(com.badlogic.gdx.math.Matrix4) -> box
    void box(float,float,float) -> box
    void box(float,float,float,float,float,float) -> box
    void circle(float,int,float,float,float,float,float,float) -> circle
    void circle(float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> circle
    void circle(float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> circle
    void circle(float,int,float,float,float,float,float,float,float,float,float,float,float,float) -> circle
    void circle(float,int,float,float,float,float,float,float,float,float) -> circle
    void circle(float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,float) -> circle
    void circle(float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,float) -> circle
    void circle(float,int,float,float,float,float,float,float,float,float,float,float,float,float,float,float) -> circle
    void ellipse(float,float,int,float,float,float,float,float,float) -> ellipse
    void ellipse(float,float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> ellipse
    void ellipse(float,float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> ellipse
    void ellipse(float,float,int,float,float,float,float,float,float,float,float,float,float,float,float) -> ellipse
    void ellipse(float,float,int,float,float,float,float,float,float,float,float) -> ellipse
    void ellipse(float,float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,float) -> ellipse
    void ellipse(float,float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,float) -> ellipse
    void ellipse(float,float,int,float,float,float,float,float,float,float,float,float,float,float,float,float,float) -> ellipse
    void ellipse(float,float,float,float,int,float,float,float,float,float,float,float,float,float,float,float,float,float,float) -> ellipse
    void ellipse(float,float,float,float,int,float,float,float,float,float,float,float,float) -> ellipse
    void ellipse(float,float,float,float,int,float,float,float,float,float,float) -> ellipse
    void ellipse(float,float,float,float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> ellipse
    void cylinder(float,float,float,int) -> cylinder
    void cylinder(float,float,float,int,float,float) -> cylinder
    void cylinder(float,float,float,int,float,float,boolean) -> cylinder
    void cone(float,float,float,int) -> cone
    void cone(float,float,float,int,float,float) -> cone
    void sphere(float,float,float,int,int) -> sphere
    void sphere(com.badlogic.gdx.math.Matrix4,float,float,float,int,int) -> sphere
    void sphere(float,float,float,int,int,float,float,float,float) -> sphere
    void sphere(com.badlogic.gdx.math.Matrix4,float,float,float,int,int,float,float,float,float) -> sphere
    void capsule(float,float,int) -> capsule
    void arrow(float,float,float,float,float,float,float,float,int) -> arrow
    com.badlogic.gdx.math.Matrix4 getVertexTransform(com.badlogic.gdx.math.Matrix4) -> getVertexTransform
    void setVertexTransform(com.badlogic.gdx.math.Matrix4) -> setVertexTransform
    boolean isVertexTransformationEnabled() -> isVertexTransformationEnabled
    void setVertexTransformationEnabled(boolean) -> setVertexTransformationEnabled
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo -> com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo:
    com.badlogic.gdx.math.Vector3 position -> position
    boolean hasPosition -> hasPosition
    com.badlogic.gdx.math.Vector3 normal -> normal
    boolean hasNormal -> hasNormal
    com.badlogic.gdx.graphics.Color color -> color
    boolean hasColor -> hasColor
    com.badlogic.gdx.math.Vector2 uv -> uv
    boolean hasUV -> hasUV
    void reset() -> reset
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector2) -> set
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo set(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo) -> set
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo setPos(float,float,float) -> setPos
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo setPos(com.badlogic.gdx.math.Vector3) -> setPos
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo setNor(float,float,float) -> setNor
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo setNor(com.badlogic.gdx.math.Vector3) -> setNor
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo setCol(float,float,float,float) -> setCol
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo setCol(com.badlogic.gdx.graphics.Color) -> setCol
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo setUV(float,float) -> setUV
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo setUV(com.badlogic.gdx.math.Vector2) -> setUV
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo lerp(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,float) -> lerp
com.badlogic.gdx.graphics.g3d.utils.ModelBuilder -> com.badlogic.gdx.graphics.g3d.utils.ModelBuilder:
    com.badlogic.gdx.graphics.g3d.Model model -> model
    com.badlogic.gdx.graphics.g3d.model.Node node -> node
    com.badlogic.gdx.utils.Array builders -> builders
    com.badlogic.gdx.math.Matrix4 tmpTransform -> tmpTransform
    com.badlogic.gdx.graphics.g3d.utils.MeshBuilder getBuilder(com.badlogic.gdx.graphics.VertexAttributes) -> getBuilder
    void begin() -> begin
    com.badlogic.gdx.graphics.g3d.Model end() -> end
    void endnode() -> endnode
    com.badlogic.gdx.graphics.g3d.model.Node node(com.badlogic.gdx.graphics.g3d.model.Node) -> node
    com.badlogic.gdx.graphics.g3d.model.Node node() -> node
    com.badlogic.gdx.graphics.g3d.model.Node node(java.lang.String,com.badlogic.gdx.graphics.g3d.Model) -> node
    void manage(com.badlogic.gdx.utils.Disposable) -> manage
    void part(com.badlogic.gdx.graphics.g3d.model.MeshPart,com.badlogic.gdx.graphics.g3d.Material) -> part
    com.badlogic.gdx.graphics.g3d.model.MeshPart part(java.lang.String,com.badlogic.gdx.graphics.Mesh,int,int,int,com.badlogic.gdx.graphics.g3d.Material) -> part
    com.badlogic.gdx.graphics.g3d.model.MeshPart part(java.lang.String,com.badlogic.gdx.graphics.Mesh,int,com.badlogic.gdx.graphics.g3d.Material) -> part
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder part(java.lang.String,int,com.badlogic.gdx.graphics.VertexAttributes,com.badlogic.gdx.graphics.g3d.Material) -> part
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder part(java.lang.String,int,long,com.badlogic.gdx.graphics.g3d.Material) -> part
    com.badlogic.gdx.graphics.g3d.Model createBox(float,float,float,com.badlogic.gdx.graphics.g3d.Material,long) -> createBox
    com.badlogic.gdx.graphics.g3d.Model createBox(float,float,float,int,com.badlogic.gdx.graphics.g3d.Material,long) -> createBox
    com.badlogic.gdx.graphics.g3d.Model createRect(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,com.badlogic.gdx.graphics.g3d.Material,long) -> createRect
    com.badlogic.gdx.graphics.g3d.Model createRect(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,int,com.badlogic.gdx.graphics.g3d.Material,long) -> createRect
    com.badlogic.gdx.graphics.g3d.Model createCylinder(float,float,float,int,com.badlogic.gdx.graphics.g3d.Material,long) -> createCylinder
    com.badlogic.gdx.graphics.g3d.Model createCylinder(float,float,float,int,int,com.badlogic.gdx.graphics.g3d.Material,long) -> createCylinder
    com.badlogic.gdx.graphics.g3d.Model createCylinder(float,float,float,int,com.badlogic.gdx.graphics.g3d.Material,long,float,float) -> createCylinder
    com.badlogic.gdx.graphics.g3d.Model createCylinder(float,float,float,int,int,com.badlogic.gdx.graphics.g3d.Material,long,float,float) -> createCylinder
    com.badlogic.gdx.graphics.g3d.Model createCone(float,float,float,int,com.badlogic.gdx.graphics.g3d.Material,long) -> createCone
    com.badlogic.gdx.graphics.g3d.Model createCone(float,float,float,int,int,com.badlogic.gdx.graphics.g3d.Material,long) -> createCone
    com.badlogic.gdx.graphics.g3d.Model createCone(float,float,float,int,com.badlogic.gdx.graphics.g3d.Material,long,float,float) -> createCone
    com.badlogic.gdx.graphics.g3d.Model createCone(float,float,float,int,int,com.badlogic.gdx.graphics.g3d.Material,long,float,float) -> createCone
    com.badlogic.gdx.graphics.g3d.Model createSphere(float,float,float,int,int,com.badlogic.gdx.graphics.g3d.Material,long) -> createSphere
    com.badlogic.gdx.graphics.g3d.Model createSphere(float,float,float,int,int,int,com.badlogic.gdx.graphics.g3d.Material,long) -> createSphere
    com.badlogic.gdx.graphics.g3d.Model createSphere(float,float,float,int,int,com.badlogic.gdx.graphics.g3d.Material,long,float,float,float,float) -> createSphere
    com.badlogic.gdx.graphics.g3d.Model createSphere(float,float,float,int,int,int,com.badlogic.gdx.graphics.g3d.Material,long,float,float,float,float) -> createSphere
    com.badlogic.gdx.graphics.g3d.Model createCapsule(float,float,int,com.badlogic.gdx.graphics.g3d.Material,long) -> createCapsule
    com.badlogic.gdx.graphics.g3d.Model createCapsule(float,float,int,int,com.badlogic.gdx.graphics.g3d.Material,long) -> createCapsule
    void rebuildReferences(com.badlogic.gdx.graphics.g3d.Model) -> rebuildReferences
    void rebuildReferences(com.badlogic.gdx.graphics.g3d.Model,com.badlogic.gdx.graphics.g3d.model.Node) -> rebuildReferences
    com.badlogic.gdx.graphics.g3d.Model createFromMesh(com.badlogic.gdx.graphics.Mesh,int,com.badlogic.gdx.graphics.g3d.Material) -> createFromMesh
    com.badlogic.gdx.graphics.g3d.Model createFromMesh(com.badlogic.gdx.graphics.Mesh,int,int,int,com.badlogic.gdx.graphics.g3d.Material) -> createFromMesh
    com.badlogic.gdx.graphics.g3d.Model createFromMesh(float[],com.badlogic.gdx.graphics.VertexAttribute[],short[],int,com.badlogic.gdx.graphics.g3d.Material) -> createFromMesh
    com.badlogic.gdx.graphics.g3d.Model createXYZCoordinates(float,float,float,int,int,com.badlogic.gdx.graphics.g3d.Material,long) -> createXYZCoordinates
    com.badlogic.gdx.graphics.g3d.Model createXYZCoordinates(float,com.badlogic.gdx.graphics.g3d.Material,long) -> createXYZCoordinates
    com.badlogic.gdx.graphics.g3d.Model createArrow(float,float,float,float,float,float,float,float,int,int,com.badlogic.gdx.graphics.g3d.Material,long) -> createArrow
    com.badlogic.gdx.graphics.g3d.Model createArrow(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.g3d.Material,long) -> createArrow
    com.badlogic.gdx.graphics.g3d.Model createLineGrid(int,int,float,float,com.badlogic.gdx.graphics.g3d.Material,long) -> createLineGrid
com.badlogic.gdx.graphics.g3d.utils.RenderContext -> com.badlogic.gdx.graphics.g3d.utils.RenderContext:
    com.badlogic.gdx.graphics.g3d.utils.TextureBinder textureBinder -> textureBinder
    boolean blending -> blending
    int blendSFactor -> blendSFactor
    int blendDFactor -> blendDFactor
    int depthFunc -> depthFunc
    float depthRangeNear -> depthRangeNear
    float depthRangeFar -> depthRangeFar
    boolean depthMask -> depthMask
    int cullFace -> cullFace
    void begin() -> begin
    void end() -> end
    void setDepthMask(boolean) -> setDepthMask
    void setDepthTest(int) -> setDepthTest
    void setDepthTest(int,float,float) -> setDepthTest
    void setBlending(boolean,int,int) -> setBlending
    void setCullFace(int) -> setCullFace
com.badlogic.gdx.graphics.g3d.utils.RenderableSorter -> com.badlogic.gdx.graphics.g3d.utils.RenderableSorter:
    void sort(com.badlogic.gdx.graphics.Camera,com.badlogic.gdx.utils.Array) -> sort
com.badlogic.gdx.graphics.g3d.utils.ShaderProvider -> com.badlogic.gdx.graphics.g3d.utils.ShaderProvider:
    com.badlogic.gdx.graphics.g3d.Shader getShader(com.badlogic.gdx.graphics.g3d.Renderable) -> getShader
    void dispose() -> dispose
com.badlogic.gdx.graphics.g3d.utils.TextureBinder -> com.badlogic.gdx.graphics.g3d.utils.TextureBinder:
    void begin() -> begin
    void end() -> end
    int bind(com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor) -> bind
    int bind(com.badlogic.gdx.graphics.GLTexture) -> bind
    int getBindCount() -> getBindCount
    int getReuseCount() -> getReuseCount
    void resetCounts() -> resetCounts
com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor -> com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor:
    com.badlogic.gdx.graphics.GLTexture texture -> texture
    com.badlogic.gdx.graphics.Texture$TextureFilter minFilter -> minFilter
    com.badlogic.gdx.graphics.Texture$TextureFilter magFilter -> magFilter
    com.badlogic.gdx.graphics.Texture$TextureWrap uWrap -> uWrap
    com.badlogic.gdx.graphics.Texture$TextureWrap vWrap -> vWrap
    void set(com.badlogic.gdx.graphics.GLTexture,com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureWrap,com.badlogic.gdx.graphics.Texture$TextureWrap) -> set
    void set(com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor) -> set
    boolean equals(java.lang.Object) -> equals
com.badlogic.gdx.graphics.g3d.utils.TextureProvider -> com.badlogic.gdx.graphics.g3d.utils.TextureProvider:
    com.badlogic.gdx.graphics.Texture load(java.lang.String) -> load
com.badlogic.gdx.graphics.g3d.utils.TextureProvider$AssetTextureProvider -> com.badlogic.gdx.graphics.g3d.utils.TextureProvider$AssetTextureProvider:
    com.badlogic.gdx.assets.AssetManager assetManager -> assetManager
    com.badlogic.gdx.graphics.Texture load(java.lang.String) -> load
com.badlogic.gdx.graphics.g3d.utils.TextureProvider$FileTextureProvider -> com.badlogic.gdx.graphics.g3d.utils.TextureProvider$FileTextureProvider:
    com.badlogic.gdx.graphics.Texture load(java.lang.String) -> load
com.badlogic.gdx.graphics.glutils.ETC1 -> com.badlogic.gdx.graphics.glutils.ETC1:
    int PKM_HEADER_SIZE -> PKM_HEADER_SIZE
    int ETC1_RGB8_OES -> ETC1_RGB8_OES
    int getPixelSize(com.badlogic.gdx.graphics.Pixmap$Format) -> getPixelSize
    com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data encodeImage(com.badlogic.gdx.graphics.Pixmap) -> encodeImage
    com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data encodeImagePKM(com.badlogic.gdx.graphics.Pixmap) -> encodeImagePKM
    com.badlogic.gdx.graphics.Pixmap decodeImage(com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data,com.badlogic.gdx.graphics.Pixmap$Format) -> decodeImage
    int getCompressedDataSize(int,int) -> getCompressedDataSize
    void formatHeader(java.nio.ByteBuffer,int,int,int) -> formatHeader
    int getWidthPKM(java.nio.ByteBuffer,int) -> getWidthPKM
    int getHeightPKM(java.nio.ByteBuffer,int) -> getHeightPKM
    boolean isValidPKM(java.nio.ByteBuffer,int) -> isValidPKM
    void decodeImage(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,int,int,int) -> decodeImage
    java.nio.ByteBuffer encodeImage(java.nio.ByteBuffer,int,int,int,int) -> encodeImage
    java.nio.ByteBuffer encodeImagePKM(java.nio.ByteBuffer,int,int,int,int) -> encodeImagePKM
com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data -> com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data:
    int width -> width
    int height -> height
    java.nio.ByteBuffer compressedData -> compressedData
    int dataOffset -> dataOffset
    void checkNPOT() -> checkNPOT
    boolean hasPKMHeader() -> hasPKMHeader
    void write(com.badlogic.gdx.files.FileHandle) -> write
    void dispose() -> dispose
    java.lang.String toString() -> toString
com.badlogic.gdx.graphics.glutils.ETC1TextureData -> com.badlogic.gdx.graphics.glutils.ETC1TextureData:
    com.badlogic.gdx.files.FileHandle file -> file
    com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data data -> data
    boolean useMipMaps -> useMipMaps
    int width -> width
    int height -> height
    boolean isPrepared -> isPrepared
    com.badlogic.gdx.graphics.TextureData$TextureDataType getType() -> getType
    boolean isPrepared() -> isPrepared
    void prepare() -> prepare
    void consumeCustomData(int) -> consumeCustomData
    com.badlogic.gdx.graphics.Pixmap consumePixmap() -> consumePixmap
    boolean disposePixmap() -> disposePixmap
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> getFormat
    boolean useMipMaps() -> useMipMaps
    boolean isManaged() -> isManaged
com.badlogic.gdx.graphics.glutils.FileTextureData -> com.badlogic.gdx.graphics.glutils.FileTextureData:
    boolean copyToPOT -> copyToPOT
    com.badlogic.gdx.files.FileHandle file -> file
    int width -> width
    int height -> height
    com.badlogic.gdx.graphics.Pixmap$Format format -> format
    com.badlogic.gdx.graphics.Pixmap pixmap -> pixmap
    boolean useMipMaps -> useMipMaps
    boolean isPrepared -> isPrepared
    boolean isPrepared() -> isPrepared
    void prepare() -> prepare
    com.badlogic.gdx.graphics.Pixmap ensurePot(com.badlogic.gdx.graphics.Pixmap) -> ensurePot
    com.badlogic.gdx.graphics.Pixmap consumePixmap() -> consumePixmap
    boolean disposePixmap() -> disposePixmap
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> getFormat
    boolean useMipMaps() -> useMipMaps
    boolean isManaged() -> isManaged
    com.badlogic.gdx.files.FileHandle getFileHandle() -> getFileHandle
    com.badlogic.gdx.graphics.TextureData$TextureDataType getType() -> getType
    void consumeCustomData(int) -> consumeCustomData
com.badlogic.gdx.graphics.glutils.FloatFrameBuffer -> com.badlogic.gdx.graphics.glutils.FloatFrameBuffer:
    void setupTexture() -> setupTexture
com.badlogic.gdx.graphics.glutils.FloatTextureData -> com.badlogic.gdx.graphics.glutils.FloatTextureData:
    int width -> width
    int height -> height
    boolean isPrepared -> isPrepared
    java.nio.FloatBuffer buffer -> buffer
    com.badlogic.gdx.graphics.TextureData$TextureDataType getType() -> getType
    boolean isPrepared() -> isPrepared
    void prepare() -> prepare
    void consumeCustomData(int) -> consumeCustomData
    com.badlogic.gdx.graphics.Pixmap consumePixmap() -> consumePixmap
    boolean disposePixmap() -> disposePixmap
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> getFormat
    boolean useMipMaps() -> useMipMaps
    boolean isManaged() -> isManaged
com.badlogic.gdx.graphics.glutils.FrameBuffer -> com.badlogic.gdx.graphics.glutils.FrameBuffer:
    java.util.Map buffers -> buffers
    com.badlogic.gdx.graphics.Texture colorTexture -> colorTexture
    int defaultFramebufferHandle -> defaultFramebufferHandle
    boolean defaultFramebufferHandleInitialized -> defaultFramebufferHandleInitialized
    int framebufferHandle -> framebufferHandle
    int depthbufferHandle -> depthbufferHandle
    int width -> width
    int height -> height
    boolean hasDepth -> hasDepth
    com.badlogic.gdx.graphics.Pixmap$Format format -> format
    void setupTexture() -> setupTexture
    void build() -> build
    void dispose() -> dispose
    void bind() -> bind
    void unbind() -> unbind
    void begin() -> begin
    void setFrameBufferViewport() -> setFrameBufferViewport
    void end() -> end
    void setDefaultFrameBufferViewport() -> setDefaultFrameBufferViewport
    void end(int,int,int,int) -> end
    com.badlogic.gdx.graphics.Texture getColorBufferTexture() -> getColorBufferTexture
    int getHeight() -> getHeight
    int getWidth() -> getWidth
    void addManagedFrameBuffer(com.badlogic.gdx.Application,com.badlogic.gdx.graphics.glutils.FrameBuffer) -> addManagedFrameBuffer
    void invalidateAllFrameBuffers(com.badlogic.gdx.Application) -> invalidateAllFrameBuffers
    void clearAllFrameBuffers(com.badlogic.gdx.Application) -> clearAllFrameBuffers
    java.lang.StringBuilder getManagedStatus(java.lang.StringBuilder) -> getManagedStatus
    java.lang.String getManagedStatus() -> getManagedStatus
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer -> com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer:
    void begin(com.badlogic.gdx.math.Matrix4,int) -> begin
    void color(com.badlogic.gdx.graphics.Color) -> color
    void color(float,float,float,float) -> color
    void texCoord(float,float) -> texCoord
    void normal(float,float,float) -> normal
    void vertex(float,float,float) -> vertex
    void end() -> end
    int getNumVertices() -> getNumVertices
    int getMaxVertices() -> getMaxVertices
    void dispose() -> dispose
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer20 -> com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer20:
    int primitiveType -> primitiveType
    int vertexIdx -> vertexIdx
    int numSetTexCoords -> numSetTexCoords
    int maxVertices -> maxVertices
    int numVertices -> numVertices
    com.badlogic.gdx.graphics.Mesh mesh -> mesh
    com.badlogic.gdx.graphics.glutils.ShaderProgram shader -> shader
    boolean ownsShader -> ownsShader
    int numTexCoords -> numTexCoords
    int vertexSize -> vertexSize
    int normalOffset -> normalOffset
    int colorOffset -> colorOffset
    int texCoordOffset -> texCoordOffset
    com.badlogic.gdx.math.Matrix4 projModelView -> projModelView
    float[] vertices -> vertices
    com.badlogic.gdx.graphics.VertexAttribute[] buildVertexAttributes(boolean,boolean,int) -> buildVertexAttributes
    void setShader(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> setShader
    void begin(com.badlogic.gdx.math.Matrix4,int) -> begin
    void color(com.badlogic.gdx.graphics.Color) -> color
    void color(float,float,float,float) -> color
    void texCoord(float,float) -> texCoord
    void normal(float,float,float) -> normal
    void vertex(float,float,float) -> vertex
    void end() -> end
    int getNumVertices() -> getNumVertices
    int getMaxVertices() -> getMaxVertices
    void dispose() -> dispose
    java.lang.String createVertexShader(boolean,boolean,int) -> createVertexShader
    java.lang.String createFragmentShader(boolean,boolean,int) -> createFragmentShader
    com.badlogic.gdx.graphics.glutils.ShaderProgram createDefaultShader(boolean,boolean,int) -> createDefaultShader
com.badlogic.gdx.graphics.glutils.IndexArray -> com.badlogic.gdx.graphics.glutils.IndexArray:
    java.nio.IntBuffer tmpHandle -> tmpHandle
    java.nio.ShortBuffer buffer -> buffer
    java.nio.ByteBuffer byteBuffer -> byteBuffer
    int getNumIndices() -> getNumIndices
    int getNumMaxIndices() -> getNumMaxIndices
    void setIndices(short[],int,int) -> setIndices
    java.nio.ShortBuffer getBuffer() -> getBuffer
    void bind() -> bind
    void unbind() -> unbind
    void invalidate() -> invalidate
    void dispose() -> dispose
com.badlogic.gdx.graphics.glutils.IndexBufferObject -> com.badlogic.gdx.graphics.glutils.IndexBufferObject:
    java.nio.IntBuffer tmpHandle -> tmpHandle
    java.nio.ShortBuffer buffer -> buffer
    java.nio.ByteBuffer byteBuffer -> byteBuffer
    int bufferHandle -> bufferHandle
    boolean isDirect -> isDirect
    boolean isDirty -> isDirty
    boolean isBound -> isBound
    int usage -> usage
    int createBufferObject() -> createBufferObject
    int getNumIndices() -> getNumIndices
    int getNumMaxIndices() -> getNumMaxIndices
    void setIndices(short[],int,int) -> setIndices
    java.nio.ShortBuffer getBuffer() -> getBuffer
    void bind() -> bind
    void unbind() -> unbind
    void invalidate() -> invalidate
    void dispose() -> dispose
com.badlogic.gdx.graphics.glutils.IndexBufferObjectSubData -> com.badlogic.gdx.graphics.glutils.IndexBufferObjectSubData:
    java.nio.IntBuffer tmpHandle -> tmpHandle
    java.nio.ShortBuffer buffer -> buffer
    java.nio.ByteBuffer byteBuffer -> byteBuffer
    int bufferHandle -> bufferHandle
    boolean isDirect -> isDirect
    boolean isDirty -> isDirty
    boolean isBound -> isBound
    int usage -> usage
    int createBufferObject() -> createBufferObject
    int getNumIndices() -> getNumIndices
    int getNumMaxIndices() -> getNumMaxIndices
    void setIndices(short[],int,int) -> setIndices
    java.nio.ShortBuffer getBuffer() -> getBuffer
    void bind() -> bind
    void unbind() -> unbind
    void invalidate() -> invalidate
    void dispose() -> dispose
com.badlogic.gdx.graphics.glutils.IndexData -> com.badlogic.gdx.graphics.glutils.IndexData:
    int getNumIndices() -> getNumIndices
    int getNumMaxIndices() -> getNumMaxIndices
    void setIndices(short[],int,int) -> setIndices
    java.nio.ShortBuffer getBuffer() -> getBuffer
    void bind() -> bind
    void unbind() -> unbind
    void invalidate() -> invalidate
    void dispose() -> dispose
com.badlogic.gdx.graphics.glutils.MipMapGenerator -> com.badlogic.gdx.graphics.glutils.MipMapGenerator:
    boolean useHWMipMap -> useHWMipMap
    void setUseHardwareMipMap(boolean) -> setUseHardwareMipMap
    void generateMipMap(com.badlogic.gdx.graphics.Pixmap,int,int) -> generateMipMap
    void generateMipMap(int,com.badlogic.gdx.graphics.Pixmap,int,int) -> generateMipMap
    void generateMipMapGLES20(int,com.badlogic.gdx.graphics.Pixmap) -> generateMipMapGLES20
    void generateMipMapDesktop(int,com.badlogic.gdx.graphics.Pixmap,int,int) -> generateMipMapDesktop
    void generateMipMapCPU(int,com.badlogic.gdx.graphics.Pixmap,int,int) -> generateMipMapCPU
com.badlogic.gdx.graphics.glutils.MipMapTextureData -> com.badlogic.gdx.graphics.glutils.MipMapTextureData:
    com.badlogic.gdx.graphics.TextureData[] mips -> mips
    com.badlogic.gdx.graphics.TextureData$TextureDataType getType() -> getType
    boolean isPrepared() -> isPrepared
    void prepare() -> prepare
    com.badlogic.gdx.graphics.Pixmap consumePixmap() -> consumePixmap
    boolean disposePixmap() -> disposePixmap
    void consumeCustomData(int) -> consumeCustomData
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> getFormat
    boolean useMipMaps() -> useMipMaps
    boolean isManaged() -> isManaged
com.badlogic.gdx.graphics.glutils.PixmapTextureData -> com.badlogic.gdx.graphics.glutils.PixmapTextureData:
    com.badlogic.gdx.graphics.Pixmap pixmap -> pixmap
    com.badlogic.gdx.graphics.Pixmap$Format format -> format
    boolean useMipMaps -> useMipMaps
    boolean disposePixmap -> disposePixmap
    boolean managed -> managed
    boolean disposePixmap() -> disposePixmap
    com.badlogic.gdx.graphics.Pixmap consumePixmap() -> consumePixmap
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> getFormat
    boolean useMipMaps() -> useMipMaps
    boolean isManaged() -> isManaged
    com.badlogic.gdx.graphics.TextureData$TextureDataType getType() -> getType
    void consumeCustomData(int) -> consumeCustomData
    boolean isPrepared() -> isPrepared
    void prepare() -> prepare
com.badlogic.gdx.graphics.glutils.ShaderProgram -> com.badlogic.gdx.graphics.glutils.ShaderProgram:
    java.lang.String POSITION_ATTRIBUTE -> POSITION_ATTRIBUTE
    java.lang.String NORMAL_ATTRIBUTE -> NORMAL_ATTRIBUTE
    java.lang.String COLOR_ATTRIBUTE -> COLOR_ATTRIBUTE
    java.lang.String TEXCOORD_ATTRIBUTE -> TEXCOORD_ATTRIBUTE
    java.lang.String TANGENT_ATTRIBUTE -> TANGENT_ATTRIBUTE
    java.lang.String BINORMAL_ATTRIBUTE -> BINORMAL_ATTRIBUTE
    boolean pedantic -> pedantic
    com.badlogic.gdx.utils.ObjectMap shaders -> shaders
    java.lang.String log -> log
    boolean isCompiled -> isCompiled
    com.badlogic.gdx.utils.ObjectIntMap uniforms -> uniforms
    com.badlogic.gdx.utils.ObjectIntMap uniformTypes -> uniformTypes
    com.badlogic.gdx.utils.ObjectIntMap uniformSizes -> uniformSizes
    java.lang.String[] uniformNames -> uniformNames
    com.badlogic.gdx.utils.ObjectIntMap attributes -> attributes
    com.badlogic.gdx.utils.ObjectIntMap attributeTypes -> attributeTypes
    com.badlogic.gdx.utils.ObjectIntMap attributeSizes -> attributeSizes
    java.lang.String[] attributeNames -> attributeNames
    int program -> program
    int vertexShaderHandle -> vertexShaderHandle
    int fragmentShaderHandle -> fragmentShaderHandle
    java.nio.FloatBuffer matrix -> matrix
    java.lang.String vertexShaderSource -> vertexShaderSource
    java.lang.String fragmentShaderSource -> fragmentShaderSource
    boolean invalidated -> invalidated
    java.nio.ByteBuffer buffer -> buffer
    java.nio.FloatBuffer floatBuffer -> floatBuffer
    java.nio.IntBuffer intBuffer -> intBuffer
    int refCount -> refCount
    java.nio.IntBuffer intbuf -> intbuf
    java.nio.IntBuffer params -> params
    java.nio.IntBuffer type -> type
    void compileShaders(java.lang.String,java.lang.String) -> compileShaders
    int loadShader(int,java.lang.String) -> loadShader
    int linkProgram() -> linkProgram
    java.lang.String getLog() -> getLog
    boolean isCompiled() -> isCompiled
    int fetchAttributeLocation(java.lang.String) -> fetchAttributeLocation
    int fetchUniformLocation(java.lang.String) -> fetchUniformLocation
    int fetchUniformLocation(java.lang.String,boolean) -> fetchUniformLocation
    void setUniformi(java.lang.String,int) -> setUniformi
    void setUniformi(int,int) -> setUniformi
    void setUniformi(java.lang.String,int,int) -> setUniformi
    void setUniformi(int,int,int) -> setUniformi
    void setUniformi(java.lang.String,int,int,int) -> setUniformi
    void setUniformi(int,int,int,int) -> setUniformi
    void setUniformi(java.lang.String,int,int,int,int) -> setUniformi
    void setUniformi(int,int,int,int,int) -> setUniformi
    void setUniformf(java.lang.String,float) -> setUniformf
    void setUniformf(int,float) -> setUniformf
    void setUniformf(java.lang.String,float,float) -> setUniformf
    void setUniformf(int,float,float) -> setUniformf
    void setUniformf(java.lang.String,float,float,float) -> setUniformf
    void setUniformf(int,float,float,float) -> setUniformf
    void setUniformf(java.lang.String,float,float,float,float) -> setUniformf
    void setUniformf(int,float,float,float,float) -> setUniformf
    void setUniform1fv(java.lang.String,float[],int,int) -> setUniform1fv
    void setUniform1fv(int,float[],int,int) -> setUniform1fv
    void setUniform2fv(java.lang.String,float[],int,int) -> setUniform2fv
    void setUniform2fv(int,float[],int,int) -> setUniform2fv
    void setUniform3fv(java.lang.String,float[],int,int) -> setUniform3fv
    void setUniform3fv(int,float[],int,int) -> setUniform3fv
    void setUniform4fv(java.lang.String,float[],int,int) -> setUniform4fv
    void setUniform4fv(int,float[],int,int) -> setUniform4fv
    void setUniformMatrix(java.lang.String,com.badlogic.gdx.math.Matrix4) -> setUniformMatrix
    void setUniformMatrix(java.lang.String,com.badlogic.gdx.math.Matrix4,boolean) -> setUniformMatrix
    void setUniformMatrix(int,com.badlogic.gdx.math.Matrix4) -> setUniformMatrix
    void setUniformMatrix(int,com.badlogic.gdx.math.Matrix4,boolean) -> setUniformMatrix
    void setUniformMatrix(java.lang.String,com.badlogic.gdx.math.Matrix3) -> setUniformMatrix
    void setUniformMatrix(java.lang.String,com.badlogic.gdx.math.Matrix3,boolean) -> setUniformMatrix
    void setUniformMatrix(int,com.badlogic.gdx.math.Matrix3) -> setUniformMatrix
    void setUniformMatrix(int,com.badlogic.gdx.math.Matrix3,boolean) -> setUniformMatrix
    void setUniformMatrix3fv(java.lang.String,java.nio.FloatBuffer,int,boolean) -> setUniformMatrix3fv
    void setUniformMatrix4fv(java.lang.String,java.nio.FloatBuffer,int,boolean) -> setUniformMatrix4fv
    void setUniformMatrix4fv(int,float[],int,int) -> setUniformMatrix4fv
    void setUniformMatrix4fv(java.lang.String,float[],int,int) -> setUniformMatrix4fv
    void setUniformf(java.lang.String,com.badlogic.gdx.math.Vector2) -> setUniformf
    void setUniformf(int,com.badlogic.gdx.math.Vector2) -> setUniformf
    void setUniformf(java.lang.String,com.badlogic.gdx.math.Vector3) -> setUniformf
    void setUniformf(int,com.badlogic.gdx.math.Vector3) -> setUniformf
    void setUniformf(java.lang.String,com.badlogic.gdx.graphics.Color) -> setUniformf
    void setUniformf(int,com.badlogic.gdx.graphics.Color) -> setUniformf
    void setVertexAttribute(java.lang.String,int,int,boolean,int,java.nio.Buffer) -> setVertexAttribute
    void setVertexAttribute(int,int,int,boolean,int,java.nio.Buffer) -> setVertexAttribute
    void setVertexAttribute(java.lang.String,int,int,boolean,int,int) -> setVertexAttribute
    void setVertexAttribute(int,int,int,boolean,int,int) -> setVertexAttribute
    void begin() -> begin
    void end() -> end
    void dispose() -> dispose
    void disableVertexAttribute(java.lang.String) -> disableVertexAttribute
    void disableVertexAttribute(int) -> disableVertexAttribute
    void enableVertexAttribute(java.lang.String) -> enableVertexAttribute
    void enableVertexAttribute(int) -> enableVertexAttribute
    void checkManaged() -> checkManaged
    void addManagedShader(com.badlogic.gdx.Application,com.badlogic.gdx.graphics.glutils.ShaderProgram) -> addManagedShader
    void invalidateAllShaderPrograms(com.badlogic.gdx.Application) -> invalidateAllShaderPrograms
    void clearAllShaderPrograms(com.badlogic.gdx.Application) -> clearAllShaderPrograms
    java.lang.String getManagedStatus() -> getManagedStatus
    void setAttributef(java.lang.String,float,float,float,float) -> setAttributef
    void ensureBufferCapacity(int) -> ensureBufferCapacity
    void fetchUniforms() -> fetchUniforms
    void fetchAttributes() -> fetchAttributes
    boolean hasAttribute(java.lang.String) -> hasAttribute
    int getAttributeType(java.lang.String) -> getAttributeType
    int getAttributeLocation(java.lang.String) -> getAttributeLocation
    int getAttributeSize(java.lang.String) -> getAttributeSize
    boolean hasUniform(java.lang.String) -> hasUniform
    int getUniformType(java.lang.String) -> getUniformType
    int getUniformLocation(java.lang.String) -> getUniformLocation
    int getUniformSize(java.lang.String) -> getUniformSize
    java.lang.String[] getAttributes() -> getAttributes
    java.lang.String[] getUniforms() -> getUniforms
    java.lang.String getVertexShaderSource() -> getVertexShaderSource
    java.lang.String getFragmentShaderSource() -> getFragmentShaderSource
com.badlogic.gdx.graphics.glutils.ShapeRenderer -> com.badlogic.gdx.graphics.glutils.ShapeRenderer:
    com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer renderer -> renderer
    boolean matrixDirty -> matrixDirty
    com.badlogic.gdx.math.Matrix4 projView -> projView
    com.badlogic.gdx.math.Matrix4 transform -> transform
    com.badlogic.gdx.math.Matrix4 combined -> combined
    com.badlogic.gdx.math.Vector2 tmp -> tmp
    com.badlogic.gdx.graphics.Color color -> color
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType currType -> currType
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    void setColor(float,float,float,float) -> setColor
    com.badlogic.gdx.graphics.Color getColor() -> getColor
    void setProjectionMatrix(com.badlogic.gdx.math.Matrix4) -> setProjectionMatrix
    com.badlogic.gdx.math.Matrix4 getProjectionMatrix() -> getProjectionMatrix
    void setTransformMatrix(com.badlogic.gdx.math.Matrix4) -> setTransformMatrix
    com.badlogic.gdx.math.Matrix4 getTransformMatrix() -> getTransformMatrix
    void identity() -> identity
    void translate(float,float,float) -> translate
    void rotate(float,float,float,float) -> rotate
    void scale(float,float,float) -> scale
    void begin(com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType) -> begin
    void point(float,float,float) -> point
    void line(float,float,float,float,float,float) -> line
    void line(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> line
    void line(float,float,float,float) -> line
    void line(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> line
    void line(float,float,float,float,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color) -> line
    void line(float,float,float,float,float,float,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color) -> line
    void curve(float,float,float,float,float,float,float,float,int) -> curve
    void triangle(float,float,float,float,float,float) -> triangle
    void triangle(float,float,float,float,float,float,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color) -> triangle
    void rect(float,float,float,float) -> rect
    void rect(float,float,float,float,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color) -> rect
    void rect(float,float,float,float,float,float,float) -> rect
    void rect(float,float,float,float,float,float,float,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color) -> rect
    void rectLine(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,float) -> rectLine
    void rectLine(float,float,float,float,float) -> rectLine
    void box(float,float,float,float,float,float) -> box
    void x(float,float,float) -> x
    void x(com.badlogic.gdx.math.Vector2,float) -> x
    void arc(float,float,float,float,float) -> arc
    void arc(float,float,float,float,float,int) -> arc
    void circle(float,float,float) -> circle
    void circle(float,float,float,int) -> circle
    void ellipse(float,float,float,float) -> ellipse
    void ellipse(float,float,float,float,int) -> ellipse
    void cone(float,float,float,float,float) -> cone
    void cone(float,float,float,float,float,int) -> cone
    void polygon(float[]) -> polygon
    void polygon(float[],int,int) -> polygon
    void polyline(float[]) -> polyline
    void polyline(float[],int,int) -> polyline
    void checkDirty() -> checkDirty
    void checkFlush(int) -> checkFlush
    void end() -> end
    void flush() -> flush
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType getCurrentType() -> getCurrentType
    com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer getRenderer() -> getRenderer
    void dispose() -> dispose
com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType -> com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType:
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType Point -> Point
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType Line -> Line
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType Filled -> Filled
    int glType -> glType
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType[] $VALUES -> $VALUES
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType[] values() -> values
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType valueOf(java.lang.String) -> valueOf
    int getGlType() -> getGlType
com.badlogic.gdx.graphics.glutils.VertexArray -> com.badlogic.gdx.graphics.glutils.VertexArray:
    com.badlogic.gdx.graphics.VertexAttributes attributes -> attributes
    java.nio.FloatBuffer buffer -> buffer
    java.nio.ByteBuffer byteBuffer -> byteBuffer
    boolean isBound -> isBound
    void dispose() -> dispose
    java.nio.FloatBuffer getBuffer() -> getBuffer
    int getNumVertices() -> getNumVertices
    int getNumMaxVertices() -> getNumMaxVertices
    void setVertices(float[],int,int) -> setVertices
    void updateVertices(int,float[],int,int) -> updateVertices
    void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> bind
    void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[]) -> bind
    void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> unbind
    void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[]) -> unbind
    com.badlogic.gdx.graphics.VertexAttributes getAttributes() -> getAttributes
com.badlogic.gdx.graphics.glutils.VertexBufferObject -> com.badlogic.gdx.graphics.glutils.VertexBufferObject:
    java.nio.IntBuffer tmpHandle -> tmpHandle
    com.badlogic.gdx.graphics.VertexAttributes attributes -> attributes
    java.nio.FloatBuffer buffer -> buffer
    java.nio.ByteBuffer byteBuffer -> byteBuffer
    int bufferHandle -> bufferHandle
    boolean isStatic -> isStatic
    int usage -> usage
    boolean isDirty -> isDirty
    boolean isBound -> isBound
    int createBufferObject() -> createBufferObject
    com.badlogic.gdx.graphics.VertexAttributes getAttributes() -> getAttributes
    int getNumVertices() -> getNumVertices
    int getNumMaxVertices() -> getNumMaxVertices
    java.nio.FloatBuffer getBuffer() -> getBuffer
    void bufferChanged() -> bufferChanged
    void setVertices(float[],int,int) -> setVertices
    void updateVertices(int,float[],int,int) -> updateVertices
    void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> bind
    void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[]) -> bind
    void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> unbind
    void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[]) -> unbind
    void invalidate() -> invalidate
    void dispose() -> dispose
com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData -> com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData:
    java.nio.IntBuffer tmpHandle -> tmpHandle
    com.badlogic.gdx.graphics.VertexAttributes attributes -> attributes
    java.nio.FloatBuffer buffer -> buffer
    java.nio.ByteBuffer byteBuffer -> byteBuffer
    int bufferHandle -> bufferHandle
    boolean isDirect -> isDirect
    boolean isStatic -> isStatic
    int usage -> usage
    boolean isDirty -> isDirty
    boolean isBound -> isBound
    int createBufferObject() -> createBufferObject
    com.badlogic.gdx.graphics.VertexAttributes getAttributes() -> getAttributes
    int getNumVertices() -> getNumVertices
    int getNumMaxVertices() -> getNumMaxVertices
    java.nio.FloatBuffer getBuffer() -> getBuffer
    void bufferChanged() -> bufferChanged
    void setVertices(float[],int,int) -> setVertices
    void updateVertices(int,float[],int,int) -> updateVertices
    void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> bind
    void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[]) -> bind
    void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> unbind
    void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[]) -> unbind
    void invalidate() -> invalidate
    void dispose() -> dispose
    int getBufferHandle() -> getBufferHandle
com.badlogic.gdx.graphics.glutils.VertexData -> com.badlogic.gdx.graphics.glutils.VertexData:
    int getNumVertices() -> getNumVertices
    int getNumMaxVertices() -> getNumMaxVertices
    com.badlogic.gdx.graphics.VertexAttributes getAttributes() -> getAttributes
    void setVertices(float[],int,int) -> setVertices
    void updateVertices(int,float[],int,int) -> updateVertices
    java.nio.FloatBuffer getBuffer() -> getBuffer
    void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> bind
    void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[]) -> bind
    void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> unbind
    void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[]) -> unbind
    void dispose() -> dispose
com.badlogic.gdx.input.GestureDetector -> com.badlogic.gdx.input.GestureDetector:
    com.badlogic.gdx.input.GestureDetector$GestureListener listener -> listener
    float tapSquareSize -> tapSquareSize
    long tapCountInterval -> tapCountInterval
    float longPressSeconds -> longPressSeconds
    long maxFlingDelay -> maxFlingDelay
    boolean inTapSquare -> inTapSquare
    int tapCount -> tapCount
    long lastTapTime -> lastTapTime
    float lastTapX -> lastTapX
    float lastTapY -> lastTapY
    int lastTapButton -> lastTapButton
    int lastTapPointer -> lastTapPointer
    boolean longPressFired -> longPressFired
    boolean pinching -> pinching
    boolean panning -> panning
    com.badlogic.gdx.input.GestureDetector$VelocityTracker tracker -> tracker
    float tapSquareCenterX -> tapSquareCenterX
    float tapSquareCenterY -> tapSquareCenterY
    long gestureStartTime -> gestureStartTime
    com.badlogic.gdx.math.Vector2 pointer1 -> pointer1
    com.badlogic.gdx.math.Vector2 pointer2 -> pointer2
    com.badlogic.gdx.math.Vector2 initialPointer1 -> initialPointer1
    com.badlogic.gdx.math.Vector2 initialPointer2 -> initialPointer2
    com.badlogic.gdx.utils.Timer$Task longPressTask -> longPressTask
    boolean touchDown(int,int,int,int) -> touchDown
    boolean touchDown(float,float,int,int) -> touchDown
    boolean touchDragged(int,int,int) -> touchDragged
    boolean touchDragged(float,float,int) -> touchDragged
    boolean touchUp(int,int,int,int) -> touchUp
    boolean touchUp(float,float,int,int) -> touchUp
    void cancel() -> cancel
    boolean isLongPressed() -> isLongPressed
    boolean isLongPressed(float) -> isLongPressed
    boolean isPanning() -> isPanning
    void reset() -> reset
    boolean isWithinTapSquare(float,float,float,float) -> isWithinTapSquare
    void invalidateTapSquare() -> invalidateTapSquare
    void setTapSquareSize(float) -> setTapSquareSize
    void setTapCountInterval(float) -> setTapCountInterval
    void setLongPressSeconds(float) -> setLongPressSeconds
    void setMaxFlingDelay(long) -> setMaxFlingDelay
com.badlogic.gdx.input.GestureDetector$1 -> com.badlogic.gdx.input.GestureDetector$1:
    com.badlogic.gdx.input.GestureDetector this$0 -> this$0
    void run() -> run
com.badlogic.gdx.input.GestureDetector$GestureAdapter -> com.badlogic.gdx.input.GestureDetector$GestureAdapter:
    boolean touchDown(float,float,int,int) -> touchDown
    boolean tap(float,float,int,int) -> tap
    boolean longPress(float,float) -> longPress
    boolean fling(float,float,int) -> fling
    boolean pan(float,float,float,float) -> pan
    boolean panStop(float,float,int,int) -> panStop
    boolean zoom(float,float) -> zoom
    boolean pinch(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> pinch
com.badlogic.gdx.input.GestureDetector$GestureListener -> com.badlogic.gdx.input.GestureDetector$GestureListener:
    boolean touchDown(float,float,int,int) -> touchDown
    boolean tap(float,float,int,int) -> tap
    boolean longPress(float,float) -> longPress
    boolean fling(float,float,int) -> fling
    boolean pan(float,float,float,float) -> pan
    boolean panStop(float,float,int,int) -> panStop
    boolean zoom(float,float) -> zoom
    boolean pinch(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> pinch
com.badlogic.gdx.input.GestureDetector$VelocityTracker -> com.badlogic.gdx.input.GestureDetector$VelocityTracker:
    int sampleSize -> sampleSize
    float lastX -> lastX
    float lastY -> lastY
    float deltaX -> deltaX
    float deltaY -> deltaY
    long lastTime -> lastTime
    int numSamples -> numSamples
    float[] meanX -> meanX
    float[] meanY -> meanY
    long[] meanTime -> meanTime
    void start(float,float,long) -> start
    void update(float,float,long) -> update
    float getVelocityX() -> getVelocityX
    float getVelocityY() -> getVelocityY
    float getAverage(float[],int) -> getAverage
    long getAverage(long[],int) -> getAverage
    float getSum(float[],int) -> getSum
com.badlogic.gdx.input.RemoteInput -> com.badlogic.gdx.input.RemoteInput:
    int DEFAULT_PORT -> DEFAULT_PORT
    java.net.ServerSocket serverSocket -> serverSocket
    float[] accel -> accel
    float[] compass -> compass
    boolean multiTouch -> multiTouch
    float remoteWidth -> remoteWidth
    float remoteHeight -> remoteHeight
    boolean connected -> connected
    com.badlogic.gdx.input.RemoteInput$RemoteInputListener listener -> listener
    java.util.Set keys -> keys
    int[] touchX -> touchX
    int[] touchY -> touchY
    boolean[] isTouched -> isTouched
    boolean justTouched -> justTouched
    com.badlogic.gdx.InputProcessor processor -> processor
    int port -> port
    java.lang.String[] ips -> ips
    void run() -> run
    boolean isConnected() -> isConnected
    float getAccelerometerX() -> getAccelerometerX
    float getAccelerometerY() -> getAccelerometerY
    float getAccelerometerZ() -> getAccelerometerZ
    int getX() -> getX
    int getX(int) -> getX
    int getY() -> getY
    int getY(int) -> getY
    boolean isTouched() -> isTouched
    boolean justTouched() -> justTouched
    boolean isTouched(int) -> isTouched
    boolean isButtonPressed(int) -> isButtonPressed
    boolean isKeyPressed(int) -> isKeyPressed
    void getTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String) -> getTextInput
    void getPlaceholderTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String) -> getPlaceholderTextInput
    void setOnscreenKeyboardVisible(boolean) -> setOnscreenKeyboardVisible
    void vibrate(int) -> vibrate
    void vibrate(long[],int) -> vibrate
    void cancelVibrate() -> cancelVibrate
    float getAzimuth() -> getAzimuth
    float getPitch() -> getPitch
    float getRoll() -> getRoll
    void setCatchBackKey(boolean) -> setCatchBackKey
    void setInputProcessor(com.badlogic.gdx.InputProcessor) -> setInputProcessor
    com.badlogic.gdx.InputProcessor getInputProcessor() -> getInputProcessor
    java.lang.String[] getIPs() -> getIPs
    boolean isPeripheralAvailable(com.badlogic.gdx.Input$Peripheral) -> isPeripheralAvailable
    int getRotation() -> getRotation
    com.badlogic.gdx.Input$Orientation getNativeOrientation() -> getNativeOrientation
    void setCursorCatched(boolean) -> setCursorCatched
    boolean isCursorCatched() -> isCursorCatched
    int getDeltaX() -> getDeltaX
    int getDeltaX(int) -> getDeltaX
    int getDeltaY() -> getDeltaY
    int getDeltaY(int) -> getDeltaY
    void setCursorPosition(int,int) -> setCursorPosition
    void setCursorImage(com.badlogic.gdx.graphics.Pixmap,int,int) -> setCursorImage
    void setCatchMenuKey(boolean) -> setCatchMenuKey
    long getCurrentEventTime() -> getCurrentEventTime
    void getRotationMatrix(float[]) -> getRotationMatrix
com.badlogic.gdx.input.RemoteInput$EventTrigger -> com.badlogic.gdx.input.RemoteInput$EventTrigger:
    com.badlogic.gdx.input.RemoteInput$TouchEvent touchEvent -> touchEvent
    com.badlogic.gdx.input.RemoteInput$KeyEvent keyEvent -> keyEvent
    com.badlogic.gdx.input.RemoteInput this$0 -> this$0
    void run() -> run
com.badlogic.gdx.input.RemoteInput$KeyEvent -> com.badlogic.gdx.input.RemoteInput$KeyEvent:
    int KEY_DOWN -> KEY_DOWN
    int KEY_UP -> KEY_UP
    int KEY_TYPED -> KEY_TYPED
    long timeStamp -> timeStamp
    int type -> type
    int keyCode -> keyCode
    char keyChar -> keyChar
    com.badlogic.gdx.input.RemoteInput this$0 -> this$0
com.badlogic.gdx.input.RemoteInput$RemoteInputListener -> com.badlogic.gdx.input.RemoteInput$RemoteInputListener:
    void onConnected() -> onConnected
    void onDisconnected() -> onDisconnected
com.badlogic.gdx.input.RemoteInput$TouchEvent -> com.badlogic.gdx.input.RemoteInput$TouchEvent:
    int TOUCH_DOWN -> TOUCH_DOWN
    int TOUCH_UP -> TOUCH_UP
    int TOUCH_DRAGGED -> TOUCH_DRAGGED
    long timeStamp -> timeStamp
    int type -> type
    int x -> x
    int y -> y
    int pointer -> pointer
    com.badlogic.gdx.input.RemoteInput this$0 -> this$0
com.badlogic.gdx.input.RemoteSender -> com.badlogic.gdx.input.RemoteSender:
    java.io.DataOutputStream out -> out
    boolean connected -> connected
    int KEY_DOWN -> KEY_DOWN
    int KEY_UP -> KEY_UP
    int KEY_TYPED -> KEY_TYPED
    int TOUCH_DOWN -> TOUCH_DOWN
    int TOUCH_UP -> TOUCH_UP
    int TOUCH_DRAGGED -> TOUCH_DRAGGED
    int ACCEL -> ACCEL
    int COMPASS -> COMPASS
    int SIZE -> SIZE
    void sendUpdate() -> sendUpdate
    boolean keyDown(int) -> keyDown
    boolean keyUp(int) -> keyUp
    boolean keyTyped(char) -> keyTyped
    boolean touchDown(int,int,int,int) -> touchDown
    boolean touchUp(int,int,int,int) -> touchUp
    boolean touchDragged(int,int,int) -> touchDragged
    boolean mouseMoved(int,int) -> mouseMoved
    boolean scrolled(int) -> scrolled
    boolean isConnected() -> isConnected
com.badlogic.gdx.jnigen.AndroidNdkScriptGenerator -> com.badlogic.gdx.jnigen.AndroidNdkScriptGenerator:
    void generate(com.badlogic.gdx.jnigen.BuildConfig,com.badlogic.gdx.jnigen.BuildTarget) -> generate
    void gatherSourceFiles(com.badlogic.gdx.jnigen.FileDescriptor,java.lang.String[],java.lang.String[],java.util.ArrayList) -> gatherSourceFiles
    boolean match(java.lang.String,java.lang.String[]) -> match
com.badlogic.gdx.jnigen.AntPathMatcher -> com.badlogic.gdx.jnigen.AntPathMatcher:
    boolean isPattern(java.lang.String) -> isPattern
    java.lang.String[] tokenizeToStringArray(java.lang.String,java.lang.String,boolean,boolean) -> tokenizeToStringArray
    boolean match(java.lang.String,java.lang.String[]) -> match
    boolean match(java.lang.String,java.lang.String) -> match
    boolean matchStrings(java.lang.String,java.lang.String) -> matchStrings
com.badlogic.gdx.jnigen.AntScriptGenerator -> com.badlogic.gdx.jnigen.AntScriptGenerator:
    void generate(com.badlogic.gdx.jnigen.BuildConfig,com.badlogic.gdx.jnigen.BuildTarget[]) -> generate
    void copyJniHeaders(java.lang.String) -> copyJniHeaders
    java.lang.String getSharedLibFilename(com.badlogic.gdx.jnigen.BuildTarget$TargetOs,boolean,java.lang.String) -> getSharedLibFilename
    java.lang.String getJniPlatform(com.badlogic.gdx.jnigen.BuildTarget$TargetOs) -> getJniPlatform
    java.lang.String getLibsDirectory(com.badlogic.gdx.jnigen.BuildConfig,com.badlogic.gdx.jnigen.BuildTarget) -> getLibsDirectory
    java.lang.String generateBuildTargetTemplate(com.badlogic.gdx.jnigen.BuildConfig,com.badlogic.gdx.jnigen.BuildTarget) -> generateBuildTargetTemplate
com.badlogic.gdx.jnigen.BuildConfig -> com.badlogic.gdx.jnigen.BuildConfig:
    java.lang.String sharedLibName -> sharedLibName
    com.badlogic.gdx.jnigen.FileDescriptor buildDir -> buildDir
    com.badlogic.gdx.jnigen.FileDescriptor libsDir -> libsDir
    com.badlogic.gdx.jnigen.FileDescriptor jniDir -> jniDir
    java.lang.String[] sharedLibs -> sharedLibs
com.badlogic.gdx.jnigen.BuildExecutor -> com.badlogic.gdx.jnigen.BuildExecutor:
    boolean executeAnt(java.lang.String,java.lang.String) -> executeAnt
    void executeNdk(java.lang.String) -> executeNdk
    boolean startProcess(java.lang.String,java.io.File) -> startProcess
com.badlogic.gdx.jnigen.BuildExecutor$1 -> com.badlogic.gdx.jnigen.BuildExecutor$1:
    java.lang.Process val$process -> val$process
    void run() -> run
    void printFileLineNumber(java.lang.String) -> printFileLineNumber
    java.lang.String getFileName(java.lang.String) -> getFileName
    java.lang.String getError(java.lang.String) -> getError
    int getLineNumber(java.lang.String) -> getLineNumber
com.badlogic.gdx.jnigen.BuildTarget -> com.badlogic.gdx.jnigen.BuildTarget:
    com.badlogic.gdx.jnigen.BuildTarget$TargetOs os -> os
    boolean is64Bit -> is64Bit
    java.lang.String[] cIncludes -> cIncludes
    java.lang.String[] cExcludes -> cExcludes
    java.lang.String[] cppIncludes -> cppIncludes
    java.lang.String[] cppExcludes -> cppExcludes
    java.lang.String[] headerDirs -> headerDirs
    java.lang.String compilerPrefix -> compilerPrefix
    java.lang.String cFlags -> cFlags
    java.lang.String cppFlags -> cppFlags
    java.lang.String linkerFlags -> linkerFlags
    java.lang.String buildFileName -> buildFileName
    boolean excludeFromMasterBuildFile -> excludeFromMasterBuildFile
    java.lang.String preCompileTask -> preCompileTask
    java.lang.String postCompileTask -> postCompileTask
    java.lang.String libraries -> libraries
    com.badlogic.gdx.jnigen.BuildTarget newDefaultTarget(com.badlogic.gdx.jnigen.BuildTarget$TargetOs,boolean) -> newDefaultTarget
com.badlogic.gdx.jnigen.BuildTarget$TargetOs -> com.badlogic.gdx.jnigen.BuildTarget$TargetOs:
    com.badlogic.gdx.jnigen.BuildTarget$TargetOs Windows -> Windows
    com.badlogic.gdx.jnigen.BuildTarget$TargetOs Linux -> Linux
    com.badlogic.gdx.jnigen.BuildTarget$TargetOs MacOsX -> MacOsX
    com.badlogic.gdx.jnigen.BuildTarget$TargetOs Android -> Android
    com.badlogic.gdx.jnigen.BuildTarget$TargetOs IOS -> IOS
    com.badlogic.gdx.jnigen.BuildTarget$TargetOs[] $VALUES -> $VALUES
    com.badlogic.gdx.jnigen.BuildTarget$TargetOs[] values() -> values
    com.badlogic.gdx.jnigen.BuildTarget$TargetOs valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.jnigen.FileDescriptor -> com.badlogic.gdx.jnigen.FileDescriptor:
    java.io.File file -> file
    com.badlogic.gdx.jnigen.FileDescriptor$FileType type -> type
    java.lang.String path() -> path
    java.lang.String name() -> name
    java.lang.String extension() -> extension
    java.lang.String nameWithoutExtension() -> nameWithoutExtension
    com.badlogic.gdx.jnigen.FileDescriptor$FileType type() -> type
    java.io.File file() -> file
    java.io.InputStream read() -> read
    java.io.Reader reader() -> reader
    java.io.Reader reader(java.lang.String) -> reader
    java.io.BufferedReader reader(int) -> reader
    java.io.BufferedReader reader(int,java.lang.String) -> reader
    java.lang.String readString() -> readString
    java.lang.String readString(java.lang.String) -> readString
    byte[] readBytes() -> readBytes
    int readBytes(byte[],int,int) -> readBytes
    java.io.OutputStream write(boolean) -> write
    void write(java.io.InputStream,boolean) -> write
    java.io.Writer writer(boolean) -> writer
    java.io.Writer writer(boolean,java.lang.String) -> writer
    void writeString(java.lang.String,boolean) -> writeString
    void writeString(java.lang.String,boolean,java.lang.String) -> writeString
    void writeBytes(byte[],boolean) -> writeBytes
    com.badlogic.gdx.jnigen.FileDescriptor[] list() -> list
    com.badlogic.gdx.jnigen.FileDescriptor[] list(java.lang.String) -> list
    boolean isDirectory() -> isDirectory
    com.badlogic.gdx.jnigen.FileDescriptor child(java.lang.String) -> child
    com.badlogic.gdx.jnigen.FileDescriptor parent() -> parent
    boolean mkdirs() -> mkdirs
    boolean exists() -> exists
    boolean delete() -> delete
    boolean deleteDirectory() -> deleteDirectory
    void copyTo(com.badlogic.gdx.jnigen.FileDescriptor) -> copyTo
    void moveTo(com.badlogic.gdx.jnigen.FileDescriptor) -> moveTo
    long length() -> length
    long lastModified() -> lastModified
    java.lang.String toString() -> toString
    com.badlogic.gdx.jnigen.FileDescriptor tempFile(java.lang.String) -> tempFile
    com.badlogic.gdx.jnigen.FileDescriptor tempDirectory(java.lang.String) -> tempDirectory
    boolean deleteDirectory(java.io.File) -> deleteDirectory
    void copyFile(com.badlogic.gdx.jnigen.FileDescriptor,com.badlogic.gdx.jnigen.FileDescriptor) -> copyFile
    void copyDirectory(com.badlogic.gdx.jnigen.FileDescriptor,com.badlogic.gdx.jnigen.FileDescriptor) -> copyDirectory
com.badlogic.gdx.jnigen.FileDescriptor$FileType -> com.badlogic.gdx.jnigen.FileDescriptor$FileType:
    com.badlogic.gdx.jnigen.FileDescriptor$FileType Classpath -> Classpath
    com.badlogic.gdx.jnigen.FileDescriptor$FileType Absolute -> Absolute
    com.badlogic.gdx.jnigen.FileDescriptor$FileType[] $VALUES -> $VALUES
    com.badlogic.gdx.jnigen.FileDescriptor$FileType[] values() -> values
    com.badlogic.gdx.jnigen.FileDescriptor$FileType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.jnigen.JniGenSharedLibraryLoader -> com.badlogic.gdx.jnigen.JniGenSharedLibraryLoader:
    java.util.Set loadedLibraries -> loadedLibraries
    java.lang.String nativesJar -> nativesJar
    com.badlogic.gdx.jnigen.SharedLibraryFinder libraryFinder -> libraryFinder
    java.util.zip.ZipFile nativesZip -> nativesZip
    void setSharedLibraryFinder(com.badlogic.gdx.jnigen.SharedLibraryFinder) -> setSharedLibraryFinder
    java.lang.String crc(java.io.InputStream) -> crc
    boolean loadLibrary(java.lang.String) -> loadLibrary
    java.lang.String extractLibrary(java.lang.String) -> extractLibrary
    java.io.InputStream getFromJar(java.lang.String,java.lang.String) -> getFromJar
    void load(java.lang.String) -> load
com.badlogic.gdx.jnigen.NativeCodeGenerator -> com.badlogic.gdx.jnigen.NativeCodeGenerator:
    java.lang.String JNI_METHOD_MARKER -> JNI_METHOD_MARKER
    java.lang.String JNI_ARG_PREFIX -> JNI_ARG_PREFIX
    java.lang.String JNI_RETURN_VALUE -> JNI_RETURN_VALUE
    java.lang.String JNI_WRAPPER_PREFIX -> JNI_WRAPPER_PREFIX
    com.badlogic.gdx.jnigen.FileDescriptor sourceDir -> sourceDir
    java.lang.String classpath -> classpath
    com.badlogic.gdx.jnigen.FileDescriptor jniDir -> jniDir
    java.lang.String[] includes -> includes
    java.lang.String[] excludes -> excludes
    com.badlogic.gdx.jnigen.AntPathMatcher matcher -> matcher
    com.badlogic.gdx.jnigen.parsing.JavaMethodParser javaMethodParser -> javaMethodParser
    com.badlogic.gdx.jnigen.parsing.CMethodParser cMethodParser -> cMethodParser
    com.badlogic.gdx.jnigen.parsing.CMethodParser$CMethodParserResult cResult -> cResult
    void generate() -> generate
    void generate(java.lang.String,java.lang.String,java.lang.String) -> generate
    void generate(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[]) -> generate
    void processDirectory(com.badlogic.gdx.jnigen.FileDescriptor) -> processDirectory
    java.lang.String getFullyQualifiedClassName(com.badlogic.gdx.jnigen.FileDescriptor) -> getFullyQualifiedClassName
    void generateHFile(com.badlogic.gdx.jnigen.FileDescriptor) -> generateHFile
    void generateCppFile(java.util.ArrayList,com.badlogic.gdx.jnigen.FileDescriptor,com.badlogic.gdx.jnigen.FileDescriptor) -> generateCppFile
    com.badlogic.gdx.jnigen.parsing.CMethodParser$CMethod findCMethod(com.badlogic.gdx.jnigen.parsing.JavaMethodParser$JavaMethod,java.util.ArrayList) -> findCMethod
    void emitLineMarker(java.lang.StringBuffer,int) -> emitLineMarker
    void emitJniSection(java.lang.StringBuffer,com.badlogic.gdx.jnigen.parsing.JavaMethodParser$JniSection) -> emitJniSection
    void emitJavaMethod(java.lang.StringBuffer,com.badlogic.gdx.jnigen.parsing.JavaMethodParser$JavaMethod,com.badlogic.gdx.jnigen.parsing.CMethodParser$CMethod) -> emitJavaMethod
    void emitMethodBody(java.lang.StringBuffer,com.badlogic.gdx.jnigen.parsing.JavaMethodParser$JavaMethod) -> emitMethodBody
    java.lang.String emitMethodSignature(java.lang.StringBuffer,com.badlogic.gdx.jnigen.parsing.JavaMethodParser$JavaMethod,com.badlogic.gdx.jnigen.parsing.CMethodParser$CMethod,java.lang.String) -> emitMethodSignature
    java.lang.String emitMethodSignature(java.lang.StringBuffer,com.badlogic.gdx.jnigen.parsing.JavaMethodParser$JavaMethod,com.badlogic.gdx.jnigen.parsing.CMethodParser$CMethod,java.lang.String,boolean) -> emitMethodSignature
    void emitJniSetupCode(java.lang.StringBuffer,com.badlogic.gdx.jnigen.parsing.JavaMethodParser$JavaMethod,java.lang.StringBuffer,java.lang.StringBuffer) -> emitJniSetupCode
    void emitJniCleanupCode(java.lang.StringBuffer,com.badlogic.gdx.jnigen.parsing.JavaMethodParser$JavaMethod,com.badlogic.gdx.jnigen.parsing.CMethodParser$CMethod) -> emitJniCleanupCode
com.badlogic.gdx.jnigen.SharedLibraryFinder -> com.badlogic.gdx.jnigen.SharedLibraryFinder:
    java.lang.String getSharedLibraryNameWindows(java.lang.String,boolean,java.util.zip.ZipFile) -> getSharedLibraryNameWindows
    java.lang.String getSharedLibraryNameLinux(java.lang.String,boolean,java.util.zip.ZipFile) -> getSharedLibraryNameLinux
    java.lang.String getSharedLibraryNameMac(java.lang.String,boolean,java.util.zip.ZipFile) -> getSharedLibraryNameMac
    java.lang.String getSharedLibraryNameAndroid(java.lang.String,java.util.zip.ZipFile) -> getSharedLibraryNameAndroid
com.badlogic.gdx.jnigen.parsing.CMethodParser -> com.badlogic.gdx.jnigen.parsing.CMethodParser:
    com.badlogic.gdx.jnigen.parsing.CMethodParser$CMethodParserResult parse(java.lang.String) -> parse
com.badlogic.gdx.jnigen.parsing.CMethodParser$CMethod -> com.badlogic.gdx.jnigen.parsing.CMethodParser$CMethod:
    java.lang.String returnType -> returnType
    java.lang.String head -> head
    java.lang.String[] argumentTypes -> argumentTypes
    int startIndex -> startIndex
    int endIndex -> endIndex
    java.lang.String getReturnType() -> getReturnType
    java.lang.String getHead() -> getHead
    java.lang.String[] getArgumentTypes() -> getArgumentTypes
    int getStartIndex() -> getStartIndex
    int getEndIndex() -> getEndIndex
com.badlogic.gdx.jnigen.parsing.CMethodParser$CMethodParserResult -> com.badlogic.gdx.jnigen.parsing.CMethodParser$CMethodParserResult:
    java.util.ArrayList methods -> methods
    java.util.ArrayList getMethods() -> getMethods
com.badlogic.gdx.jnigen.parsing.JavaMethodParser -> com.badlogic.gdx.jnigen.parsing.JavaMethodParser:
    java.util.ArrayList parse(java.lang.String) -> parse
com.badlogic.gdx.jnigen.parsing.JavaMethodParser$Argument -> com.badlogic.gdx.jnigen.parsing.JavaMethodParser$Argument:
    com.badlogic.gdx.jnigen.parsing.JavaMethodParser$ArgumentType type -> type
    java.lang.String name -> name
    com.badlogic.gdx.jnigen.parsing.JavaMethodParser$ArgumentType getType() -> getType
    java.lang.String getName() -> getName
    java.lang.String toString() -> toString
com.badlogic.gdx.jnigen.parsing.JavaMethodParser$ArgumentType -> com.badlogic.gdx.jnigen.parsing.JavaMethodParser$ArgumentType:
    com.badlogic.gdx.jnigen.parsing.JavaMethodParser$ArgumentType Boolean -> Boolean
    com.badlogic.gdx.jnigen.parsing.JavaMethodParser$ArgumentType Byte -> Byte
    com.badlogic.gdx.jnigen.parsing.JavaMethodParser$ArgumentType Char -> Char
    com.badlogic.gdx.jnigen.parsing.JavaMethodParser$ArgumentType Short -> Short
    com.badlogic.gdx.jnigen.parsing.JavaMethodParser$ArgumentType Integer -> Integer
    com.badlogic.gdx.jnigen.parsing.JavaMethodParser$ArgumentType Long -> Long
    com.badlogic.gdx.jnigen.parsing.JavaMethodParser$ArgumentType Float -> Float
    com.badlogic.gdx.jnigen.parsing.JavaMethodParser$ArgumentType Double -> Double
    com.badlogic.gdx.jnigen.parsing.JavaMethodParser$ArgumentType Buffer -> Buffer
    com.badlogic.gdx.jnigen.parsing.JavaMethodParser$ArgumentType ByteBuffer -> ByteBuffer
    com.badlogic.gdx.jnigen.parsing.JavaMethodParser$ArgumentType CharBuffer -> CharBuffer
    com.badlogic.gdx.jnigen.parsing.JavaMethodParser$ArgumentType ShortBuffer -> ShortBuffer
    com.badlogic.gdx.jnigen.parsing.JavaMethodParser$ArgumentType IntBuffer -> IntBuffer
    com.badlogic.gdx.jnigen.parsing.JavaMethodParser$ArgumentType LongBuffer -> LongBuffer
    com.badlogic.gdx.jnigen.parsing.JavaMethodParser$ArgumentType FloatBuffer -> FloatBuffer
    com.badlogic.gdx.jnigen.parsing.JavaMethodParser$ArgumentType DoubleBuffer -> DoubleBuffer
    com.badlogic.gdx.jnigen.parsing.JavaMethodParser$ArgumentType BooleanArray -> BooleanArray
    com.badlogic.gdx.jnigen.parsing.JavaMethodParser$ArgumentType ByteArray -> ByteArray
    com.badlogic.gdx.jnigen.parsing.JavaMethodParser$ArgumentType CharArray -> CharArray
    com.badlogic.gdx.jnigen.parsing.JavaMethodParser$ArgumentType ShortArray -> ShortArray
    com.badlogic.gdx.jnigen.parsing.JavaMethodParser$ArgumentType IntegerArray -> IntegerArray
    com.badlogic.gdx.jnigen.parsing.JavaMethodParser$ArgumentType LongArray -> LongArray
    com.badlogic.gdx.jnigen.parsing.JavaMethodParser$ArgumentType FloatArray -> FloatArray
    com.badlogic.gdx.jnigen.parsing.JavaMethodParser$ArgumentType DoubleArray -> DoubleArray
    com.badlogic.gdx.jnigen.parsing.JavaMethodParser$ArgumentType String -> String
    com.badlogic.gdx.jnigen.parsing.JavaMethodParser$ArgumentType Object -> Object
    com.badlogic.gdx.jnigen.parsing.JavaMethodParser$ArgumentType ObjectArray -> ObjectArray
    java.lang.String jniType -> jniType
    com.badlogic.gdx.jnigen.parsing.JavaMethodParser$ArgumentType[] $VALUES -> $VALUES
    com.badlogic.gdx.jnigen.parsing.JavaMethodParser$ArgumentType[] values() -> values
    com.badlogic.gdx.jnigen.parsing.JavaMethodParser$ArgumentType valueOf(java.lang.String) -> valueOf
    boolean isPrimitiveArray() -> isPrimitiveArray
    boolean isBuffer() -> isBuffer
    boolean isObject() -> isObject
    boolean isString() -> isString
    boolean isPlainOldDataType() -> isPlainOldDataType
    java.lang.String getBufferCType() -> getBufferCType
    java.lang.String getArrayCType() -> getArrayCType
    java.lang.String getJniType() -> getJniType
com.badlogic.gdx.jnigen.parsing.JavaMethodParser$JavaMethod -> com.badlogic.gdx.jnigen.parsing.JavaMethodParser$JavaMethod:
    java.lang.String className -> className
    java.lang.String name -> name
    boolean isStatic -> isStatic
    boolean isManual -> isManual
    java.lang.String returnType -> returnType
    java.lang.String nativeCode -> nativeCode
    java.util.ArrayList arguments -> arguments
    boolean hasDisposableArgument -> hasDisposableArgument
    int startIndex -> startIndex
    int endIndex -> endIndex
    java.lang.String getName() -> getName
    boolean isStatic() -> isStatic
    void setManual(boolean) -> setManual
    boolean isManual() -> isManual
    java.lang.String getReturnType() -> getReturnType
    java.lang.String getNativeCode() -> getNativeCode
    void setNativeCode(java.lang.String) -> setNativeCode
    java.util.ArrayList getArguments() -> getArguments
    boolean hasDisposableArgument() -> hasDisposableArgument
    int getStartIndex() -> getStartIndex
    int getEndIndex() -> getEndIndex
    java.lang.CharSequence getClassName() -> getClassName
    java.lang.String toString() -> toString
com.badlogic.gdx.jnigen.parsing.JavaMethodParser$JavaSegment -> com.badlogic.gdx.jnigen.parsing.JavaMethodParser$JavaSegment:
    int getStartIndex() -> getStartIndex
    int getEndIndex() -> getEndIndex
com.badlogic.gdx.jnigen.parsing.JavaMethodParser$JniSection -> com.badlogic.gdx.jnigen.parsing.JavaMethodParser$JniSection:
    java.lang.String nativeCode -> nativeCode
    int startIndex -> startIndex
    int endIndex -> endIndex
    java.lang.String getNativeCode() -> getNativeCode
    void setNativeCode(java.lang.String) -> setNativeCode
    int getStartIndex() -> getStartIndex
    int getEndIndex() -> getEndIndex
    java.lang.String toString() -> toString
com.badlogic.gdx.jnigen.parsing.JniHeaderCMethodParser -> com.badlogic.gdx.jnigen.parsing.JniHeaderCMethodParser:
    java.lang.String C_METHOD_MARKER -> C_METHOD_MARKER
    com.badlogic.gdx.jnigen.parsing.CMethodParser$CMethodParserResult parse(java.lang.String) -> parse
    com.badlogic.gdx.jnigen.parsing.CMethodParser$CMethod parseCMethod(java.lang.String,int) -> parseCMethod
com.badlogic.gdx.jnigen.parsing.RobustJavaMethodParser -> com.badlogic.gdx.jnigen.parsing.RobustJavaMethodParser:
    java.lang.String JNI_MANUAL -> JNI_MANUAL
    java.util.Map plainOldDataTypes -> plainOldDataTypes
    java.util.Map arrayTypes -> arrayTypes
    java.util.Map bufferTypes -> bufferTypes
    java.util.Stack classStack -> classStack
    java.util.ArrayList parse(java.lang.String) -> parse
    java.util.ArrayList sortMethodsAndSections(java.util.ArrayList,java.util.ArrayList) -> sortMethodsAndSections
    void alignMethodBodies(java.util.ArrayList,java.util.ArrayList) -> alignMethodBodies
    void getJavaMethods(java.util.ArrayList,japa.parser.ast.body.TypeDeclaration) -> getJavaMethods
    com.badlogic.gdx.jnigen.parsing.JavaMethodParser$JavaMethod createMethod(japa.parser.ast.body.MethodDeclaration) -> createMethod
    com.badlogic.gdx.jnigen.parsing.JavaMethodParser$ArgumentType getArgumentType(japa.parser.ast.body.Parameter) -> getArgumentType
    japa.parser.ast.body.TypeDeclaration getOuterClass(japa.parser.ast.CompilationUnit) -> getOuterClass
    java.util.ArrayList getJniSections(java.lang.String) -> getJniSections
    java.util.ArrayList getNativeCodeBodies(java.lang.String) -> getNativeCodeBodies
    java.util.ArrayList getComments(java.lang.String) -> getComments
com.badlogic.gdx.jnigen.parsing.RobustJavaMethodParser$1 -> com.badlogic.gdx.jnigen.parsing.RobustJavaMethodParser$1:
    com.badlogic.gdx.jnigen.parsing.RobustJavaMethodParser this$0 -> this$0
    int compare(com.badlogic.gdx.jnigen.parsing.JavaMethodParser$JavaSegment,com.badlogic.gdx.jnigen.parsing.JavaMethodParser$JavaSegment) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.badlogic.gdx.jnigen.test.MyJniClass -> com.badlogic.gdx.jnigen.test.MyJniClass:
    void test(boolean,byte,char,short,int,long,float,double,java.nio.Buffer,boolean[],char[],short[],int[],long[],float[],double[],double[][],java.lang.String) -> test
    void main(java.lang.String[]) -> main
com.badlogic.gdx.maps.ImageResolver -> com.badlogic.gdx.maps.ImageResolver:
    com.badlogic.gdx.graphics.g2d.TextureRegion getImage(java.lang.String) -> getImage
com.badlogic.gdx.maps.ImageResolver$AssetManagerImageResolver -> com.badlogic.gdx.maps.ImageResolver$AssetManagerImageResolver:
    com.badlogic.gdx.assets.AssetManager assetManager -> assetManager
    com.badlogic.gdx.graphics.g2d.TextureRegion getImage(java.lang.String) -> getImage
com.badlogic.gdx.maps.ImageResolver$DirectImageResolver -> com.badlogic.gdx.maps.ImageResolver$DirectImageResolver:
    com.badlogic.gdx.utils.ObjectMap images -> images
    com.badlogic.gdx.graphics.g2d.TextureRegion getImage(java.lang.String) -> getImage
com.badlogic.gdx.maps.ImageResolver$TextureAtlasImageResolver -> com.badlogic.gdx.maps.ImageResolver$TextureAtlasImageResolver:
    com.badlogic.gdx.graphics.g2d.TextureAtlas atlas -> atlas
    com.badlogic.gdx.graphics.g2d.TextureRegion getImage(java.lang.String) -> getImage
com.badlogic.gdx.maps.Map -> com.badlogic.gdx.maps.Map:
    com.badlogic.gdx.maps.MapLayers layers -> layers
    com.badlogic.gdx.maps.MapProperties properties -> properties
    com.badlogic.gdx.maps.MapLayers getLayers() -> getLayers
    com.badlogic.gdx.maps.MapProperties getProperties() -> getProperties
    void dispose() -> dispose
com.badlogic.gdx.maps.MapLayer -> com.badlogic.gdx.maps.MapLayer:
    java.lang.String name -> name
    float opacity -> opacity
    boolean visible -> visible
    com.badlogic.gdx.maps.MapObjects objects -> objects
    com.badlogic.gdx.maps.MapProperties properties -> properties
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    float getOpacity() -> getOpacity
    void setOpacity(float) -> setOpacity
    com.badlogic.gdx.maps.MapObjects getObjects() -> getObjects
    boolean isVisible() -> isVisible
    void setVisible(boolean) -> setVisible
    com.badlogic.gdx.maps.MapProperties getProperties() -> getProperties
com.badlogic.gdx.maps.MapLayers -> com.badlogic.gdx.maps.MapLayers:
    com.badlogic.gdx.utils.Array layers -> layers
    com.badlogic.gdx.maps.MapLayer get(int) -> get
    com.badlogic.gdx.maps.MapLayer get(java.lang.String) -> get
    int getCount() -> getCount
    void add(com.badlogic.gdx.maps.MapLayer) -> add
    void remove(int) -> remove
    void remove(com.badlogic.gdx.maps.MapLayer) -> remove
    com.badlogic.gdx.utils.Array getByType(java.lang.Class) -> getByType
    com.badlogic.gdx.utils.Array getByType(java.lang.Class,com.badlogic.gdx.utils.Array) -> getByType
    java.util.Iterator iterator() -> iterator
com.badlogic.gdx.maps.MapObject -> com.badlogic.gdx.maps.MapObject:
    java.lang.String name -> name
    float opacity -> opacity
    boolean visible -> visible
    com.badlogic.gdx.maps.MapProperties properties -> properties
    com.badlogic.gdx.graphics.Color color -> color
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    com.badlogic.gdx.graphics.Color getColor() -> getColor
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    float getOpacity() -> getOpacity
    void setOpacity(float) -> setOpacity
    boolean isVisible() -> isVisible
    void setVisible(boolean) -> setVisible
    com.badlogic.gdx.maps.MapProperties getProperties() -> getProperties
com.badlogic.gdx.maps.MapObjects -> com.badlogic.gdx.maps.MapObjects:
    com.badlogic.gdx.utils.Array objects -> objects
    com.badlogic.gdx.maps.MapObject get(int) -> get
    com.badlogic.gdx.maps.MapObject get(java.lang.String) -> get
    void add(com.badlogic.gdx.maps.MapObject) -> add
    void remove(int) -> remove
    void remove(com.badlogic.gdx.maps.MapObject) -> remove
    int getCount() -> getCount
    com.badlogic.gdx.utils.Array getByType(java.lang.Class) -> getByType
    com.badlogic.gdx.utils.Array getByType(java.lang.Class,com.badlogic.gdx.utils.Array) -> getByType
    java.util.Iterator iterator() -> iterator
com.badlogic.gdx.maps.MapProperties -> com.badlogic.gdx.maps.MapProperties:
    com.badlogic.gdx.utils.ObjectMap properties -> properties
    boolean containsKey(java.lang.String) -> containsKey
    java.lang.Object get(java.lang.String) -> get
    java.lang.Object get(java.lang.String,java.lang.Class) -> get
    java.lang.Object get(java.lang.String,java.lang.Object,java.lang.Class) -> get
    void put(java.lang.String,java.lang.Object) -> put
    void putAll(com.badlogic.gdx.maps.MapProperties) -> putAll
    void remove(java.lang.String) -> remove
    void clear() -> clear
    java.util.Iterator getKeys() -> getKeys
    java.util.Iterator getValues() -> getValues
com.badlogic.gdx.maps.MapRenderer -> com.badlogic.gdx.maps.MapRenderer:
    void setView(com.badlogic.gdx.graphics.OrthographicCamera) -> setView
    void setView(com.badlogic.gdx.math.Matrix4,float,float,float,float) -> setView
    void render() -> render
    void render(int[]) -> render
com.badlogic.gdx.maps.objects.CircleMapObject -> com.badlogic.gdx.maps.objects.CircleMapObject:
    com.badlogic.gdx.math.Circle circle -> circle
    com.badlogic.gdx.math.Circle getCircle() -> getCircle
com.badlogic.gdx.maps.objects.EllipseMapObject -> com.badlogic.gdx.maps.objects.EllipseMapObject:
    com.badlogic.gdx.math.Ellipse ellipse -> ellipse
    com.badlogic.gdx.math.Ellipse getEllipse() -> getEllipse
com.badlogic.gdx.maps.objects.PolygonMapObject -> com.badlogic.gdx.maps.objects.PolygonMapObject:
    com.badlogic.gdx.math.Polygon polygon -> polygon
    com.badlogic.gdx.math.Polygon getPolygon() -> getPolygon
    void setPolygon(com.badlogic.gdx.math.Polygon) -> setPolygon
com.badlogic.gdx.maps.objects.PolylineMapObject -> com.badlogic.gdx.maps.objects.PolylineMapObject:
    com.badlogic.gdx.math.Polyline polyline -> polyline
    com.badlogic.gdx.math.Polyline getPolyline() -> getPolyline
    void setPolyline(com.badlogic.gdx.math.Polyline) -> setPolyline
com.badlogic.gdx.maps.objects.RectangleMapObject -> com.badlogic.gdx.maps.objects.RectangleMapObject:
    com.badlogic.gdx.math.Rectangle rectangle -> rectangle
    com.badlogic.gdx.math.Rectangle getRectangle() -> getRectangle
com.badlogic.gdx.maps.objects.TextureMapObject -> com.badlogic.gdx.maps.objects.TextureMapObject:
    float x -> x
    float y -> y
    float originX -> originX
    float originY -> originY
    float scaleX -> scaleX
    float scaleY -> scaleY
    float rotation -> rotation
    com.badlogic.gdx.graphics.g2d.TextureRegion textureRegion -> textureRegion
    float getX() -> getX
    void setX(float) -> setX
    float getY() -> getY
    void setY(float) -> setY
    float getOriginX() -> getOriginX
    void setOriginX(float) -> setOriginX
    float getOriginY() -> getOriginY
    void setOriginY(float) -> setOriginY
    float getScaleX() -> getScaleX
    void setScaleX(float) -> setScaleX
    float getScaleY() -> getScaleY
    void setScaleY(float) -> setScaleY
    float getRotation() -> getRotation
    void setRotation(float) -> setRotation
    com.badlogic.gdx.graphics.g2d.TextureRegion getTextureRegion() -> getTextureRegion
    void setTextureRegion(com.badlogic.gdx.graphics.g2d.TextureRegion) -> setTextureRegion
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader -> com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader:
    int FLAG_FLIP_HORIZONTALLY -> FLAG_FLIP_HORIZONTALLY
    int FLAG_FLIP_VERTICALLY -> FLAG_FLIP_VERTICALLY
    int FLAG_FLIP_DIAGONALLY -> FLAG_FLIP_DIAGONALLY
    int MASK_CLEAR -> MASK_CLEAR
    com.badlogic.gdx.utils.XmlReader xml -> xml
    com.badlogic.gdx.utils.XmlReader$Element root -> root
    boolean convertObjectToTileSpace -> convertObjectToTileSpace
    int mapTileWidth -> mapTileWidth
    int mapTileHeight -> mapTileHeight
    int mapWidthInPixels -> mapWidthInPixels
    int mapHeightInPixels -> mapHeightInPixels
    com.badlogic.gdx.maps.tiled.TiledMap map -> map
    com.badlogic.gdx.utils.Array trackedTextures -> trackedTextures
    com.badlogic.gdx.maps.tiled.TiledMap load(java.lang.String) -> load
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasTiledMapLoaderParameters) -> getDependencies
    com.badlogic.gdx.maps.tiled.TiledMap load(java.lang.String,com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasTiledMapLoaderParameters) -> load
    com.badlogic.gdx.files.FileHandle loadAtlas(com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle) -> loadAtlas
    void setTextureFilters(com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter) -> setTextureFilters
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasTiledMapLoaderParameters) -> loadAsync
    com.badlogic.gdx.maps.tiled.TiledMap loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasTiledMapLoaderParameters) -> loadSync
    com.badlogic.gdx.maps.tiled.TiledMap loadMap(com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver,com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasTiledMapLoaderParameters) -> loadMap
    void loadTileset(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver,com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasTiledMapLoaderParameters) -> loadTileset
    void loadTileLayer(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element) -> loadTileLayer
    void loadObjectGroup(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element) -> loadObjectGroup
    void loadObject(com.badlogic.gdx.maps.MapLayer,com.badlogic.gdx.utils.XmlReader$Element) -> loadObject
    void loadProperties(com.badlogic.gdx.maps.MapProperties,com.badlogic.gdx.utils.XmlReader$Element) -> loadProperties
    com.badlogic.gdx.maps.tiled.TiledMapTileLayer$Cell createTileLayerCell(boolean,boolean,boolean) -> createTileLayerCell
    com.badlogic.gdx.files.FileHandle getRelativeFileHandle(com.badlogic.gdx.files.FileHandle,java.lang.String) -> getRelativeFileHandle
    java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadSync
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadAsync
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> getDependencies
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver -> com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver:
    com.badlogic.gdx.graphics.g2d.TextureAtlas getAtlas(java.lang.String) -> getAtlas
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver$AssetManagerAtlasResolver -> com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver$AssetManagerAtlasResolver:
    com.badlogic.gdx.assets.AssetManager assetManager -> assetManager
    com.badlogic.gdx.graphics.g2d.TextureAtlas getAtlas(java.lang.String) -> getAtlas
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver$DirectAtlasResolver -> com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver$DirectAtlasResolver:
    com.badlogic.gdx.utils.ObjectMap atlases -> atlases
    com.badlogic.gdx.graphics.g2d.TextureAtlas getAtlas(java.lang.String) -> getAtlas
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasTiledMapLoaderParameters -> com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasTiledMapLoaderParameters:
    boolean forceTextureFilters -> forceTextureFilters
    com.badlogic.gdx.graphics.Texture$TextureFilter textureMinFilter -> textureMinFilter
    com.badlogic.gdx.graphics.Texture$TextureFilter textureMagFilter -> textureMagFilter
    boolean convertObjectToTileSpace -> convertObjectToTileSpace
com.badlogic.gdx.maps.tiled.TideMapLoader -> com.badlogic.gdx.maps.tiled.TideMapLoader:
    com.badlogic.gdx.utils.XmlReader xml -> xml
    com.badlogic.gdx.utils.XmlReader$Element root -> root
    com.badlogic.gdx.maps.tiled.TiledMap load(java.lang.String) -> load
    com.badlogic.gdx.maps.tiled.TiledMap load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.TideMapLoader$Parameters) -> load
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.TideMapLoader$Parameters) -> getDependencies
    com.badlogic.gdx.maps.tiled.TiledMap loadMap(com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.ImageResolver) -> loadMap
    com.badlogic.gdx.utils.Array loadTileSheets(com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle) -> loadTileSheets
    void loadTileSheet(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.ImageResolver) -> loadTileSheet
    void loadLayer(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element) -> loadLayer
    void loadProperties(com.badlogic.gdx.maps.MapProperties,com.badlogic.gdx.utils.XmlReader$Element) -> loadProperties
    com.badlogic.gdx.files.FileHandle getRelativeFileHandle(com.badlogic.gdx.files.FileHandle,java.lang.String) -> getRelativeFileHandle
    java.lang.Object load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> load
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> getDependencies
com.badlogic.gdx.maps.tiled.TideMapLoader$Parameters -> com.badlogic.gdx.maps.tiled.TideMapLoader$Parameters:
com.badlogic.gdx.maps.tiled.TiledMap -> com.badlogic.gdx.maps.tiled.TiledMap:
    com.badlogic.gdx.maps.tiled.TiledMapTileSets tilesets -> tilesets
    com.badlogic.gdx.utils.Array ownedResources -> ownedResources
    com.badlogic.gdx.maps.tiled.TiledMapTileSets getTileSets() -> getTileSets
    void setOwnedResources(com.badlogic.gdx.utils.Array) -> setOwnedResources
    void dispose() -> dispose
com.badlogic.gdx.maps.tiled.TiledMapRenderer -> com.badlogic.gdx.maps.tiled.TiledMapRenderer:
    void renderObject(com.badlogic.gdx.maps.MapObject) -> renderObject
    void renderTileLayer(com.badlogic.gdx.maps.tiled.TiledMapTileLayer) -> renderTileLayer
com.badlogic.gdx.maps.tiled.TiledMapTile -> com.badlogic.gdx.maps.tiled.TiledMapTile:
    int getId() -> getId
    void setId(int) -> setId
    com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode getBlendMode() -> getBlendMode
    void setBlendMode(com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode) -> setBlendMode
    com.badlogic.gdx.graphics.g2d.TextureRegion getTextureRegion() -> getTextureRegion
    float getOffsetX() -> getOffsetX
    void setOffsetX(float) -> setOffsetX
    float getOffsetY() -> getOffsetY
    void setOffsetY(float) -> setOffsetY
    com.badlogic.gdx.maps.MapProperties getProperties() -> getProperties
com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode -> com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode:
    com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode NONE -> NONE
    com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode ALPHA -> ALPHA
    com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode[] $VALUES -> $VALUES
    com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode[] values() -> values
    com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.maps.tiled.TiledMapTileLayer -> com.badlogic.gdx.maps.tiled.TiledMapTileLayer:
    int width -> width
    int height -> height
    float tileWidth -> tileWidth
    float tileHeight -> tileHeight
    com.badlogic.gdx.maps.tiled.TiledMapTileLayer$Cell[][] cells -> cells
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    float getTileWidth() -> getTileWidth
    float getTileHeight() -> getTileHeight
    com.badlogic.gdx.maps.tiled.TiledMapTileLayer$Cell getCell(int,int) -> getCell
    void setCell(int,int,com.badlogic.gdx.maps.tiled.TiledMapTileLayer$Cell) -> setCell
com.badlogic.gdx.maps.tiled.TiledMapTileLayer$Cell -> com.badlogic.gdx.maps.tiled.TiledMapTileLayer$Cell:
    com.badlogic.gdx.maps.tiled.TiledMapTile tile -> tile
    boolean flipHorizontally -> flipHorizontally
    boolean flipVertically -> flipVertically
    int rotation -> rotation
    int ROTATE_0 -> ROTATE_0
    int ROTATE_90 -> ROTATE_90
    int ROTATE_180 -> ROTATE_180
    int ROTATE_270 -> ROTATE_270
    com.badlogic.gdx.maps.tiled.TiledMapTile getTile() -> getTile
    void setTile(com.badlogic.gdx.maps.tiled.TiledMapTile) -> setTile
    boolean getFlipHorizontally() -> getFlipHorizontally
    void setFlipHorizontally(boolean) -> setFlipHorizontally
    boolean getFlipVertically() -> getFlipVertically
    void setFlipVertically(boolean) -> setFlipVertically
    int getRotation() -> getRotation
    void setRotation(int) -> setRotation
com.badlogic.gdx.maps.tiled.TiledMapTileSet -> com.badlogic.gdx.maps.tiled.TiledMapTileSet:
    java.lang.String name -> name
    com.badlogic.gdx.utils.IntMap tiles -> tiles
    com.badlogic.gdx.maps.MapProperties properties -> properties
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    com.badlogic.gdx.maps.MapProperties getProperties() -> getProperties
    com.badlogic.gdx.maps.tiled.TiledMapTile getTile(int) -> getTile
    java.util.Iterator iterator() -> iterator
    void putTile(int,com.badlogic.gdx.maps.tiled.TiledMapTile) -> putTile
    void removeTile(int) -> removeTile
    int size() -> size
com.badlogic.gdx.maps.tiled.TiledMapTileSets -> com.badlogic.gdx.maps.tiled.TiledMapTileSets:
    com.badlogic.gdx.utils.Array tilesets -> tilesets
    com.badlogic.gdx.maps.tiled.TiledMapTileSet getTileSet(int) -> getTileSet
    com.badlogic.gdx.maps.tiled.TiledMapTileSet getTileSet(java.lang.String) -> getTileSet
    void addTileSet(com.badlogic.gdx.maps.tiled.TiledMapTileSet) -> addTileSet
    void removeTileSet(int) -> removeTileSet
    void removeTileSet(com.badlogic.gdx.maps.tiled.TiledMapTileSet) -> removeTileSet
    com.badlogic.gdx.maps.tiled.TiledMapTile getTile(int) -> getTile
    java.util.Iterator iterator() -> iterator
com.badlogic.gdx.maps.tiled.TmxMapHelper -> com.badlogic.gdx.maps.tiled.TmxMapHelper:
    int FLAG_FLIP_HORIZONTALLY -> FLAG_FLIP_HORIZONTALLY
    int FLAG_FLIP_VERTICALLY -> FLAG_FLIP_VERTICALLY
    int FLAG_FLIP_DIAGONALLY -> FLAG_FLIP_DIAGONALLY
    int MASK_CLEAR -> MASK_CLEAR
    int[] getTileIds(com.badlogic.gdx.utils.XmlReader$Element,int,int) -> getTileIds
    int unsignedByteToInt(byte) -> unsignedByteToInt
com.badlogic.gdx.maps.tiled.TmxMapLoader -> com.badlogic.gdx.maps.tiled.TmxMapLoader:
    int FLAG_FLIP_HORIZONTALLY -> FLAG_FLIP_HORIZONTALLY
    int FLAG_FLIP_VERTICALLY -> FLAG_FLIP_VERTICALLY
    int FLAG_FLIP_DIAGONALLY -> FLAG_FLIP_DIAGONALLY
    int MASK_CLEAR -> MASK_CLEAR
    com.badlogic.gdx.utils.XmlReader xml -> xml
    com.badlogic.gdx.utils.XmlReader$Element root -> root
    boolean convertObjectToTileSpace -> convertObjectToTileSpace
    int mapTileWidth -> mapTileWidth
    int mapTileHeight -> mapTileHeight
    int mapWidthInPixels -> mapWidthInPixels
    int mapHeightInPixels -> mapHeightInPixels
    com.badlogic.gdx.maps.tiled.TiledMap map -> map
    com.badlogic.gdx.maps.tiled.TiledMap load(java.lang.String) -> load
    com.badlogic.gdx.maps.tiled.TiledMap load(java.lang.String,com.badlogic.gdx.maps.tiled.TmxMapLoader$Parameters) -> load
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.TmxMapLoader$Parameters) -> loadAsync
    com.badlogic.gdx.maps.tiled.TiledMap loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.TmxMapLoader$Parameters) -> loadSync
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.TmxMapLoader$Parameters) -> getDependencies
    com.badlogic.gdx.maps.tiled.TiledMap loadTilemap(com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.ImageResolver) -> loadTilemap
    com.badlogic.gdx.utils.Array loadTilesets(com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle) -> loadTilesets
    void loadTileSet(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.ImageResolver) -> loadTileSet
    void loadTileLayer(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element) -> loadTileLayer
    void loadObjectGroup(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element) -> loadObjectGroup
    void loadObject(com.badlogic.gdx.maps.MapLayer,com.badlogic.gdx.utils.XmlReader$Element) -> loadObject
    void loadProperties(com.badlogic.gdx.maps.MapProperties,com.badlogic.gdx.utils.XmlReader$Element) -> loadProperties
    com.badlogic.gdx.maps.tiled.TiledMapTileLayer$Cell createTileLayerCell(boolean,boolean,boolean) -> createTileLayerCell
    com.badlogic.gdx.files.FileHandle getRelativeFileHandle(com.badlogic.gdx.files.FileHandle,java.lang.String) -> getRelativeFileHandle
    java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadSync
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadAsync
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> getDependencies
com.badlogic.gdx.maps.tiled.TmxMapLoader$Parameters -> com.badlogic.gdx.maps.tiled.TmxMapLoader$Parameters:
    boolean generateMipMaps -> generateMipMaps
    com.badlogic.gdx.graphics.Texture$TextureFilter textureMinFilter -> textureMinFilter
    com.badlogic.gdx.graphics.Texture$TextureFilter textureMagFilter -> textureMagFilter
    boolean convertObjectToTileSpace -> convertObjectToTileSpace
com.badlogic.gdx.maps.tiled.renderers.BatchTiledMapRenderer -> com.badlogic.gdx.maps.tiled.renderers.BatchTiledMapRenderer:
    com.badlogic.gdx.maps.tiled.TiledMap map -> map
    float unitScale -> unitScale
    com.badlogic.gdx.graphics.g2d.Batch spriteBatch -> spriteBatch
    com.badlogic.gdx.math.Rectangle viewBounds -> viewBounds
    boolean ownsSpriteBatch -> ownsSpriteBatch
    float[] vertices -> vertices
    com.badlogic.gdx.maps.tiled.TiledMap getMap() -> getMap
    void setMap(com.badlogic.gdx.maps.tiled.TiledMap) -> setMap
    float getUnitScale() -> getUnitScale
    com.badlogic.gdx.graphics.g2d.Batch getSpriteBatch() -> getSpriteBatch
    com.badlogic.gdx.math.Rectangle getViewBounds() -> getViewBounds
    void setView(com.badlogic.gdx.graphics.OrthographicCamera) -> setView
    void setView(com.badlogic.gdx.math.Matrix4,float,float,float,float) -> setView
    void render() -> render
    void render(int[]) -> render
    void beginRender() -> beginRender
    void endRender() -> endRender
    void dispose() -> dispose
com.badlogic.gdx.maps.tiled.renderers.HexagonalTiledMapRenderer -> com.badlogic.gdx.maps.tiled.renderers.HexagonalTiledMapRenderer:
    void renderTileLayer(com.badlogic.gdx.maps.tiled.TiledMapTileLayer) -> renderTileLayer
    void renderObject(com.badlogic.gdx.maps.MapObject) -> renderObject
com.badlogic.gdx.maps.tiled.renderers.IsometricStaggeredTiledMapRenderer -> com.badlogic.gdx.maps.tiled.renderers.IsometricStaggeredTiledMapRenderer:
    void renderObject(com.badlogic.gdx.maps.MapObject) -> renderObject
    void renderTileLayer(com.badlogic.gdx.maps.tiled.TiledMapTileLayer) -> renderTileLayer
com.badlogic.gdx.maps.tiled.renderers.IsometricTiledMapRenderer -> com.badlogic.gdx.maps.tiled.renderers.IsometricTiledMapRenderer:
    com.badlogic.gdx.math.Matrix4 isoTransform -> isoTransform
    com.badlogic.gdx.math.Matrix4 invIsotransform -> invIsotransform
    com.badlogic.gdx.math.Vector3 screenPos -> screenPos
    com.badlogic.gdx.math.Vector2 topRight -> topRight
    com.badlogic.gdx.math.Vector2 bottomLeft -> bottomLeft
    com.badlogic.gdx.math.Vector2 topLeft -> topLeft
    com.badlogic.gdx.math.Vector2 bottomRight -> bottomRight
    void init() -> init
    void renderObject(com.badlogic.gdx.maps.MapObject) -> renderObject
    com.badlogic.gdx.math.Vector3 translateScreenToIso(com.badlogic.gdx.math.Vector2) -> translateScreenToIso
    void renderTileLayer(com.badlogic.gdx.maps.tiled.TiledMapTileLayer) -> renderTileLayer
com.badlogic.gdx.maps.tiled.renderers.OrthoCachedTiledMapRenderer -> com.badlogic.gdx.maps.tiled.renderers.OrthoCachedTiledMapRenderer:
    float tolerance -> tolerance
    com.badlogic.gdx.maps.tiled.TiledMap map -> map
    com.badlogic.gdx.graphics.g2d.SpriteCache spriteCache -> spriteCache
    float[] vertices -> vertices
    boolean blending -> blending
    float unitScale -> unitScale
    com.badlogic.gdx.math.Rectangle viewBounds -> viewBounds
    com.badlogic.gdx.math.Rectangle cacheBounds -> cacheBounds
    float overCache -> overCache
    float maxTileWidth -> maxTileWidth
    float maxTileHeight -> maxTileHeight
    boolean cached -> cached
    int count -> count
    boolean canCacheMoreN -> canCacheMoreN
    boolean canCacheMoreE -> canCacheMoreE
    boolean canCacheMoreW -> canCacheMoreW
    boolean canCacheMoreS -> canCacheMoreS
    void setView(com.badlogic.gdx.graphics.OrthographicCamera) -> setView
    void setView(com.badlogic.gdx.math.Matrix4,float,float,float,float) -> setView
    void render() -> render
    void render(int[]) -> render
    void renderObject(com.badlogic.gdx.maps.MapObject) -> renderObject
    void renderTileLayer(com.badlogic.gdx.maps.tiled.TiledMapTileLayer) -> renderTileLayer
    void invalidateCache() -> invalidateCache
    boolean isCached() -> isCached
    void setOverCache(float) -> setOverCache
    void setMaxTileSize(float,float) -> setMaxTileSize
    void setBlending(boolean) -> setBlending
    com.badlogic.gdx.graphics.g2d.SpriteCache getSpriteCache() -> getSpriteCache
    void dispose() -> dispose
com.badlogic.gdx.maps.tiled.renderers.OrthogonalTiledMapRenderer -> com.badlogic.gdx.maps.tiled.renderers.OrthogonalTiledMapRenderer:
    void renderObject(com.badlogic.gdx.maps.MapObject) -> renderObject
    void renderTileLayer(com.badlogic.gdx.maps.tiled.TiledMapTileLayer) -> renderTileLayer
com.badlogic.gdx.maps.tiled.tiles.AnimatedTiledMapTile -> com.badlogic.gdx.maps.tiled.tiles.AnimatedTiledMapTile:
    long lastTiledMapRenderTime -> lastTiledMapRenderTime
    int id -> id
    com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode blendMode -> blendMode
    com.badlogic.gdx.maps.MapProperties properties -> properties
    com.badlogic.gdx.utils.Array frameTiles -> frameTiles
    float animationInterval -> animationInterval
    long frameCount -> frameCount
    long initialTimeOffset -> initialTimeOffset
    int getId() -> getId
    void setId(int) -> setId
    com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode getBlendMode() -> getBlendMode
    void setBlendMode(com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode) -> setBlendMode
    com.badlogic.gdx.graphics.g2d.TextureRegion getTextureRegion() -> getTextureRegion
    float getOffsetX() -> getOffsetX
    void setOffsetX(float) -> setOffsetX
    float getOffsetY() -> getOffsetY
    void setOffsetY(float) -> setOffsetY
    com.badlogic.gdx.maps.MapProperties getProperties() -> getProperties
    void updateAnimationBaseTime() -> updateAnimationBaseTime
com.badlogic.gdx.maps.tiled.tiles.StaticTiledMapTile -> com.badlogic.gdx.maps.tiled.tiles.StaticTiledMapTile:
    int id -> id
    com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode blendMode -> blendMode
    com.badlogic.gdx.maps.MapProperties properties -> properties
    com.badlogic.gdx.graphics.g2d.TextureRegion textureRegion -> textureRegion
    float offsetX -> offsetX
    float offsetY -> offsetY
    int getId() -> getId
    void setId(int) -> setId
    com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode getBlendMode() -> getBlendMode
    void setBlendMode(com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode) -> setBlendMode
    com.badlogic.gdx.maps.MapProperties getProperties() -> getProperties
    com.badlogic.gdx.graphics.g2d.TextureRegion getTextureRegion() -> getTextureRegion
    float getOffsetX() -> getOffsetX
    void setOffsetX(float) -> setOffsetX
    float getOffsetY() -> getOffsetY
    void setOffsetY(float) -> setOffsetY
com.badlogic.gdx.math.BSpline -> com.badlogic.gdx.math.BSpline:
    float d6 -> d6
    com.badlogic.gdx.math.Vector[] controlPoints -> controlPoints
    com.badlogic.gdx.utils.Array knots -> knots
    int degree -> degree
    boolean continuous -> continuous
    int spanCount -> spanCount
    com.badlogic.gdx.math.Vector tmp -> tmp
    com.badlogic.gdx.math.Vector tmp2 -> tmp2
    com.badlogic.gdx.math.Vector tmp3 -> tmp3
    com.badlogic.gdx.math.Vector cubic(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Vector[],boolean,com.badlogic.gdx.math.Vector) -> cubic
    com.badlogic.gdx.math.Vector cubic_derivative(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Vector[],boolean,com.badlogic.gdx.math.Vector) -> cubic_derivative
    com.badlogic.gdx.math.Vector cubic(com.badlogic.gdx.math.Vector,int,float,com.badlogic.gdx.math.Vector[],boolean,com.badlogic.gdx.math.Vector) -> cubic
    com.badlogic.gdx.math.Vector cubic_derivative(com.badlogic.gdx.math.Vector,int,float,com.badlogic.gdx.math.Vector[],boolean,com.badlogic.gdx.math.Vector) -> cubic_derivative
    com.badlogic.gdx.math.Vector calculate(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Vector[],int,boolean,com.badlogic.gdx.math.Vector) -> calculate
    com.badlogic.gdx.math.Vector derivative(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Vector[],int,boolean,com.badlogic.gdx.math.Vector) -> derivative
    com.badlogic.gdx.math.Vector calculate(com.badlogic.gdx.math.Vector,int,float,com.badlogic.gdx.math.Vector[],int,boolean,com.badlogic.gdx.math.Vector) -> calculate
    com.badlogic.gdx.math.Vector derivative(com.badlogic.gdx.math.Vector,int,float,com.badlogic.gdx.math.Vector[],int,boolean,com.badlogic.gdx.math.Vector) -> derivative
    com.badlogic.gdx.math.BSpline set(com.badlogic.gdx.math.Vector[],int,boolean) -> set
    com.badlogic.gdx.math.Vector valueAt(com.badlogic.gdx.math.Vector,float) -> valueAt
    com.badlogic.gdx.math.Vector valueAt(com.badlogic.gdx.math.Vector,int,float) -> valueAt
    com.badlogic.gdx.math.Vector derivativeAt(com.badlogic.gdx.math.Vector,float) -> derivativeAt
    com.badlogic.gdx.math.Vector derivativeAt(com.badlogic.gdx.math.Vector,int,float) -> derivativeAt
    int nearest(com.badlogic.gdx.math.Vector) -> nearest
    int nearest(com.badlogic.gdx.math.Vector,int,int) -> nearest
    float approximate(com.badlogic.gdx.math.Vector) -> approximate
    float approximate(com.badlogic.gdx.math.Vector,int,int) -> approximate
    float approximate(com.badlogic.gdx.math.Vector,int) -> approximate
    float locate(com.badlogic.gdx.math.Vector) -> locate
    float approxLength(int) -> approxLength
    float locate(java.lang.Object) -> locate
    float approximate(java.lang.Object) -> approximate
    java.lang.Object valueAt(java.lang.Object,float) -> valueAt
    java.lang.Object derivativeAt(java.lang.Object,float) -> derivativeAt
com.badlogic.gdx.math.Bezier -> com.badlogic.gdx.math.Bezier:
    com.badlogic.gdx.utils.Array points -> points
    com.badlogic.gdx.math.Vector tmp -> tmp
    com.badlogic.gdx.math.Vector tmp2 -> tmp2
    com.badlogic.gdx.math.Vector tmp3 -> tmp3
    com.badlogic.gdx.math.Vector linear(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector) -> linear
    com.badlogic.gdx.math.Vector linear_derivative(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector) -> linear_derivative
    com.badlogic.gdx.math.Vector quadratic(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector) -> quadratic
    com.badlogic.gdx.math.Vector quadratic_derivative(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector) -> quadratic_derivative
    com.badlogic.gdx.math.Vector cubic(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector) -> cubic
    com.badlogic.gdx.math.Vector cubic_derivative(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector) -> cubic_derivative
    com.badlogic.gdx.math.Bezier set(com.badlogic.gdx.math.Vector[]) -> set
    com.badlogic.gdx.math.Bezier set(com.badlogic.gdx.math.Vector[],int,int) -> set
    com.badlogic.gdx.math.Bezier set(com.badlogic.gdx.utils.Array,int,int) -> set
    com.badlogic.gdx.math.Vector valueAt(com.badlogic.gdx.math.Vector,float) -> valueAt
    com.badlogic.gdx.math.Vector derivativeAt(com.badlogic.gdx.math.Vector,float) -> derivativeAt
    float approximate(com.badlogic.gdx.math.Vector) -> approximate
    float locate(com.badlogic.gdx.math.Vector) -> locate
    float approxLength(int) -> approxLength
    float locate(java.lang.Object) -> locate
    float approximate(java.lang.Object) -> approximate
    java.lang.Object valueAt(java.lang.Object,float) -> valueAt
    java.lang.Object derivativeAt(java.lang.Object,float) -> derivativeAt
com.badlogic.gdx.math.Bresenham2 -> com.badlogic.gdx.math.Bresenham2:
    com.badlogic.gdx.utils.Array points -> points
    com.badlogic.gdx.utils.Pool pool -> pool
    com.badlogic.gdx.utils.Array line(com.badlogic.gdx.math.GridPoint2,com.badlogic.gdx.math.GridPoint2) -> line
    com.badlogic.gdx.utils.Array line(int,int,int,int) -> line
    com.badlogic.gdx.utils.Array line(int,int,int,int,com.badlogic.gdx.utils.Pool,com.badlogic.gdx.utils.Array) -> line
com.badlogic.gdx.math.Bresenham2$1 -> com.badlogic.gdx.math.Bresenham2$1:
    com.badlogic.gdx.math.Bresenham2 this$0 -> this$0
    com.badlogic.gdx.math.GridPoint2 newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.math.CatmullRomSpline -> com.badlogic.gdx.math.CatmullRomSpline:
    com.badlogic.gdx.math.Vector[] controlPoints -> controlPoints
    boolean continuous -> continuous
    int spanCount -> spanCount
    com.badlogic.gdx.math.Vector tmp -> tmp
    com.badlogic.gdx.math.Vector tmp2 -> tmp2
    com.badlogic.gdx.math.Vector tmp3 -> tmp3
    com.badlogic.gdx.math.Vector calculate(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Vector[],boolean,com.badlogic.gdx.math.Vector) -> calculate
    com.badlogic.gdx.math.Vector calculate(com.badlogic.gdx.math.Vector,int,float,com.badlogic.gdx.math.Vector[],boolean,com.badlogic.gdx.math.Vector) -> calculate
    com.badlogic.gdx.math.Vector derivative(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Vector[],boolean,com.badlogic.gdx.math.Vector) -> derivative
    com.badlogic.gdx.math.Vector derivative(com.badlogic.gdx.math.Vector,int,float,com.badlogic.gdx.math.Vector[],boolean,com.badlogic.gdx.math.Vector) -> derivative
    com.badlogic.gdx.math.CatmullRomSpline set(com.badlogic.gdx.math.Vector[],boolean) -> set
    com.badlogic.gdx.math.Vector valueAt(com.badlogic.gdx.math.Vector,float) -> valueAt
    com.badlogic.gdx.math.Vector valueAt(com.badlogic.gdx.math.Vector,int,float) -> valueAt
    com.badlogic.gdx.math.Vector derivativeAt(com.badlogic.gdx.math.Vector,float) -> derivativeAt
    com.badlogic.gdx.math.Vector derivativeAt(com.badlogic.gdx.math.Vector,int,float) -> derivativeAt
    int nearest(com.badlogic.gdx.math.Vector) -> nearest
    int nearest(com.badlogic.gdx.math.Vector,int,int) -> nearest
    float approximate(com.badlogic.gdx.math.Vector) -> approximate
    float approximate(com.badlogic.gdx.math.Vector,int,int) -> approximate
    float approximate(com.badlogic.gdx.math.Vector,int) -> approximate
    float locate(com.badlogic.gdx.math.Vector) -> locate
    float approxLength(int) -> approxLength
    float locate(java.lang.Object) -> locate
    float approximate(java.lang.Object) -> approximate
    java.lang.Object valueAt(java.lang.Object,float) -> valueAt
    java.lang.Object derivativeAt(java.lang.Object,float) -> derivativeAt
com.badlogic.gdx.math.Circle -> com.badlogic.gdx.math.Circle:
    float x -> x
    float y -> y
    float radius -> radius
    void set(float,float,float) -> set
    void set(com.badlogic.gdx.math.Vector2,float) -> set
    void set(com.badlogic.gdx.math.Circle) -> set
    void setPosition(com.badlogic.gdx.math.Vector2) -> setPosition
    void setPosition(float,float) -> setPosition
    void setX(float) -> setX
    void setY(float) -> setY
    void setRadius(float) -> setRadius
    boolean contains(float,float) -> contains
    boolean contains(com.badlogic.gdx.math.Vector2) -> contains
    boolean contains(com.badlogic.gdx.math.Circle) -> contains
    boolean overlaps(com.badlogic.gdx.math.Circle) -> overlaps
    java.lang.String toString() -> toString
com.badlogic.gdx.math.ConvexHull -> com.badlogic.gdx.math.ConvexHull:
    com.badlogic.gdx.utils.IntArray quicksortStack -> quicksortStack
    float[] sortedPoints -> sortedPoints
    com.badlogic.gdx.utils.FloatArray hull -> hull
    com.badlogic.gdx.utils.IntArray indices -> indices
    com.badlogic.gdx.utils.ShortArray originalIndices -> originalIndices
    com.badlogic.gdx.utils.FloatArray computePolygon(com.badlogic.gdx.utils.FloatArray,boolean) -> computePolygon
    com.badlogic.gdx.utils.FloatArray computePolygon(float[],boolean) -> computePolygon
    com.badlogic.gdx.utils.FloatArray computePolygon(float[],int,int,boolean) -> computePolygon
    com.badlogic.gdx.utils.IntArray computeIndices(com.badlogic.gdx.utils.FloatArray,boolean,boolean) -> computeIndices
    com.badlogic.gdx.utils.IntArray computeIndices(float[],boolean,boolean) -> computeIndices
    com.badlogic.gdx.utils.IntArray computeIndices(float[],int,int,boolean,boolean) -> computeIndices
    float ccw(float,float) -> ccw
    void sort(float[],int) -> sort
    int quicksortPartition(float[],int,int) -> quicksortPartition
    void sortWithIndices(float[],int,boolean) -> sortWithIndices
    int quicksortPartitionWithIndices(float[],int,int,boolean,short[]) -> quicksortPartitionWithIndices
com.badlogic.gdx.math.CumulativeDistribution -> com.badlogic.gdx.math.CumulativeDistribution:
    com.badlogic.gdx.utils.Array values -> values
    void add(java.lang.Object,float) -> add
    void add(java.lang.Object) -> add
    void generate() -> generate
    void generateNormalized() -> generateNormalized
    void generateUniform() -> generateUniform
    java.lang.Object value(float) -> value
    java.lang.Object value() -> value
    int size() -> size
    float getInterval(int) -> getInterval
    java.lang.Object getValue(int) -> getValue
    void setInterval(java.lang.Object,float) -> setInterval
    void setInterval(int,float) -> setInterval
    void clear() -> clear
com.badlogic.gdx.math.CumulativeDistribution$CumulativeValue -> com.badlogic.gdx.math.CumulativeDistribution$CumulativeValue:
    java.lang.Object value -> value
    float frequency -> frequency
    float interval -> interval
    com.badlogic.gdx.math.CumulativeDistribution this$0 -> this$0
com.badlogic.gdx.math.DelaunayTriangulator -> com.badlogic.gdx.math.DelaunayTriangulator:
    float EPSILON -> EPSILON
    int INSIDE -> INSIDE
    int COMPLETE -> COMPLETE
    int INCOMPLETE -> INCOMPLETE
    com.badlogic.gdx.utils.IntArray quicksortStack -> quicksortStack
    float[] sortedPoints -> sortedPoints
    com.badlogic.gdx.utils.ShortArray triangles -> triangles
    com.badlogic.gdx.utils.ShortArray originalIndices -> originalIndices
    com.badlogic.gdx.utils.IntArray edges -> edges
    com.badlogic.gdx.utils.BooleanArray complete -> complete
    float[] superTriangle -> superTriangle
    com.badlogic.gdx.math.Vector2 centroid -> centroid
    com.badlogic.gdx.utils.ShortArray computeTriangles(com.badlogic.gdx.utils.FloatArray,boolean) -> computeTriangles
    com.badlogic.gdx.utils.ShortArray computeTriangles(float[],boolean) -> computeTriangles
    com.badlogic.gdx.utils.ShortArray computeTriangles(float[],int,int,boolean) -> computeTriangles
    int circumCircle(float,float,float,float,float,float,float,float) -> circumCircle
    void sort(float[],int) -> sort
    int quicksortPartition(float[],int,int,short[]) -> quicksortPartition
    void trim(com.badlogic.gdx.utils.ShortArray,float[],float[],int,int) -> trim
com.badlogic.gdx.math.EarClippingTriangulator -> com.badlogic.gdx.math.EarClippingTriangulator:
    int CONCAVE -> CONCAVE
    int TANGENTIAL -> TANGENTIAL
    int CONVEX -> CONVEX
    com.badlogic.gdx.utils.ShortArray indicesArray -> indicesArray
    short[] indices -> indices
    float[] vertices -> vertices
    int vertexCount -> vertexCount
    com.badlogic.gdx.utils.IntArray vertexTypes -> vertexTypes
    com.badlogic.gdx.utils.ShortArray triangles -> triangles
    com.badlogic.gdx.utils.ShortArray computeTriangles(com.badlogic.gdx.utils.FloatArray) -> computeTriangles
    com.badlogic.gdx.utils.ShortArray computeTriangles(float[]) -> computeTriangles
    com.badlogic.gdx.utils.ShortArray computeTriangles(float[],int,int) -> computeTriangles
    void triangulate() -> triangulate
    int classifyVertex(int) -> classifyVertex
    int findEarTip() -> findEarTip
    boolean isEarTip(int) -> isEarTip
    void cutEarTip(int) -> cutEarTip
    int previousIndex(int) -> previousIndex
    int nextIndex(int) -> nextIndex
    boolean areVerticesClockwise(float[],int,int) -> areVerticesClockwise
    int computeSpannedAreaSign(float,float,float,float,float,float) -> computeSpannedAreaSign
com.badlogic.gdx.math.Ellipse -> com.badlogic.gdx.math.Ellipse:
    float x -> x
    float y -> y
    float width -> width
    float height -> height
    long serialVersionUID -> serialVersionUID
    boolean contains(float,float) -> contains
    boolean contains(com.badlogic.gdx.math.Vector2) -> contains
    void set(float,float,float,float) -> set
    void set(com.badlogic.gdx.math.Ellipse) -> set
    com.badlogic.gdx.math.Ellipse setPosition(com.badlogic.gdx.math.Vector2) -> setPosition
    com.badlogic.gdx.math.Ellipse setPosition(float,float) -> setPosition
    com.badlogic.gdx.math.Ellipse setSize(float,float) -> setSize
com.badlogic.gdx.math.FloatCounter -> com.badlogic.gdx.math.FloatCounter:
    int count -> count
    float total -> total
    float min -> min
    float max -> max
    float average -> average
    float latest -> latest
    float value -> value
    com.badlogic.gdx.math.WindowedMean mean -> mean
    void put(float) -> put
    void reset() -> reset
com.badlogic.gdx.math.Frustum -> com.badlogic.gdx.math.Frustum:
    com.badlogic.gdx.math.Vector3[] clipSpacePlanePoints -> clipSpacePlanePoints
    float[] clipSpacePlanePointsArray -> clipSpacePlanePointsArray
    com.badlogic.gdx.math.Plane[] planes -> planes
    com.badlogic.gdx.math.Vector3[] planePoints -> planePoints
    float[] planePointsArray -> planePointsArray
    void update(com.badlogic.gdx.math.Matrix4) -> update
    boolean pointInFrustum(com.badlogic.gdx.math.Vector3) -> pointInFrustum
    boolean pointInFrustum(float,float,float) -> pointInFrustum
    boolean sphereInFrustum(com.badlogic.gdx.math.Vector3,float) -> sphereInFrustum
    boolean sphereInFrustum(float,float,float,float) -> sphereInFrustum
    boolean sphereInFrustumWithoutNearFar(com.badlogic.gdx.math.Vector3,float) -> sphereInFrustumWithoutNearFar
    boolean sphereInFrustumWithoutNearFar(float,float,float,float) -> sphereInFrustumWithoutNearFar
    boolean boundsInFrustum(com.badlogic.gdx.math.collision.BoundingBox) -> boundsInFrustum
    boolean boundsInFrustum(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> boundsInFrustum
    boolean boundsInFrustum(float,float,float,float,float,float) -> boundsInFrustum
com.badlogic.gdx.math.GeometryUtils -> com.badlogic.gdx.math.GeometryUtils:
    com.badlogic.gdx.math.Vector2 tmp1 -> tmp1
    com.badlogic.gdx.math.Vector2 tmp2 -> tmp2
    com.badlogic.gdx.math.Vector2 tmp3 -> tmp3
    com.badlogic.gdx.math.Vector2 toBarycoord(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> toBarycoord
    boolean barycoordInsideTriangle(com.badlogic.gdx.math.Vector2) -> barycoordInsideTriangle
    com.badlogic.gdx.math.Vector2 fromBarycoord(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> fromBarycoord
    com.badlogic.gdx.math.Vector2 fromBarycoord(com.badlogic.gdx.math.Vector2,float,float,float,com.badlogic.gdx.math.Vector2) -> fromBarycoord
    float lowestPositiveRoot(float,float,float) -> lowestPositiveRoot
    com.badlogic.gdx.math.Vector2 triangleCentroid(float,float,float,float,float,float,com.badlogic.gdx.math.Vector2) -> triangleCentroid
    float triangleArea(float,float,float,float,float,float) -> triangleArea
    com.badlogic.gdx.math.Vector2 quadrilateralCentroid(float,float,float,float,float,float,float,float,com.badlogic.gdx.math.Vector2) -> quadrilateralCentroid
    com.badlogic.gdx.math.Vector2 polygonCentroid(float[],int,int,com.badlogic.gdx.math.Vector2) -> polygonCentroid
    float polygonArea(float[],int,int) -> polygonArea
com.badlogic.gdx.math.GridPoint2 -> com.badlogic.gdx.math.GridPoint2:
    int x -> x
    int y -> y
    com.badlogic.gdx.math.GridPoint2 set(com.badlogic.gdx.math.GridPoint2) -> set
    com.badlogic.gdx.math.GridPoint2 set(int,int) -> set
com.badlogic.gdx.math.GridPoint3 -> com.badlogic.gdx.math.GridPoint3:
    int x -> x
    int y -> y
    int z -> z
    com.badlogic.gdx.math.GridPoint3 set(com.badlogic.gdx.math.GridPoint3) -> set
    com.badlogic.gdx.math.GridPoint3 set(int,int,int) -> set
com.badlogic.gdx.math.Interpolation -> com.badlogic.gdx.math.Interpolation:
    com.badlogic.gdx.math.Interpolation linear -> linear
    com.badlogic.gdx.math.Interpolation fade -> fade
    com.badlogic.gdx.math.Interpolation$Pow pow2 -> pow2
    com.badlogic.gdx.math.Interpolation$PowIn pow2In -> pow2In
    com.badlogic.gdx.math.Interpolation$PowOut pow2Out -> pow2Out
    com.badlogic.gdx.math.Interpolation$Pow pow3 -> pow3
    com.badlogic.gdx.math.Interpolation$PowIn pow3In -> pow3In
    com.badlogic.gdx.math.Interpolation$PowOut pow3Out -> pow3Out
    com.badlogic.gdx.math.Interpolation$Pow pow4 -> pow4
    com.badlogic.gdx.math.Interpolation$PowIn pow4In -> pow4In
    com.badlogic.gdx.math.Interpolation$PowOut pow4Out -> pow4Out
    com.badlogic.gdx.math.Interpolation$Pow pow5 -> pow5
    com.badlogic.gdx.math.Interpolation$PowIn pow5In -> pow5In
    com.badlogic.gdx.math.Interpolation$PowOut pow5Out -> pow5Out
    com.badlogic.gdx.math.Interpolation sine -> sine
    com.badlogic.gdx.math.Interpolation sineIn -> sineIn
    com.badlogic.gdx.math.Interpolation sineOut -> sineOut
    com.badlogic.gdx.math.Interpolation exp10 -> exp10
    com.badlogic.gdx.math.Interpolation exp10In -> exp10In
    com.badlogic.gdx.math.Interpolation exp10Out -> exp10Out
    com.badlogic.gdx.math.Interpolation exp5 -> exp5
    com.badlogic.gdx.math.Interpolation exp5In -> exp5In
    com.badlogic.gdx.math.Interpolation exp5Out -> exp5Out
    com.badlogic.gdx.math.Interpolation circle -> circle
    com.badlogic.gdx.math.Interpolation circleIn -> circleIn
    com.badlogic.gdx.math.Interpolation circleOut -> circleOut
    com.badlogic.gdx.math.Interpolation$Elastic elastic -> elastic
    com.badlogic.gdx.math.Interpolation$Elastic elasticIn -> elasticIn
    com.badlogic.gdx.math.Interpolation$Elastic elasticOut -> elasticOut
    com.badlogic.gdx.math.Interpolation swing -> swing
    com.badlogic.gdx.math.Interpolation swingIn -> swingIn
    com.badlogic.gdx.math.Interpolation swingOut -> swingOut
    com.badlogic.gdx.math.Interpolation bounce -> bounce
    com.badlogic.gdx.math.Interpolation bounceIn -> bounceIn
    com.badlogic.gdx.math.Interpolation bounceOut -> bounceOut
    float apply(float) -> apply
    float apply(float,float,float) -> apply
com.badlogic.gdx.math.Interpolation$1 -> com.badlogic.gdx.math.Interpolation$1:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$2 -> com.badlogic.gdx.math.Interpolation$2:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$3 -> com.badlogic.gdx.math.Interpolation$3:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$4 -> com.badlogic.gdx.math.Interpolation$4:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$5 -> com.badlogic.gdx.math.Interpolation$5:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$6 -> com.badlogic.gdx.math.Interpolation$6:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$7 -> com.badlogic.gdx.math.Interpolation$7:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$8 -> com.badlogic.gdx.math.Interpolation$8:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$Bounce -> com.badlogic.gdx.math.Interpolation$Bounce:
    float out(float) -> out
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$BounceIn -> com.badlogic.gdx.math.Interpolation$BounceIn:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$BounceOut -> com.badlogic.gdx.math.Interpolation$BounceOut:
    float[] widths -> widths
    float[] heights -> heights
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$Elastic -> com.badlogic.gdx.math.Interpolation$Elastic:
    float value -> value
    float power -> power
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$ElasticIn -> com.badlogic.gdx.math.Interpolation$ElasticIn:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$ElasticOut -> com.badlogic.gdx.math.Interpolation$ElasticOut:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$Exp -> com.badlogic.gdx.math.Interpolation$Exp:
    float value -> value
    float power -> power
    float min -> min
    float scale -> scale
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$ExpIn -> com.badlogic.gdx.math.Interpolation$ExpIn:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$ExpOut -> com.badlogic.gdx.math.Interpolation$ExpOut:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$Pow -> com.badlogic.gdx.math.Interpolation$Pow:
    int power -> power
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$PowIn -> com.badlogic.gdx.math.Interpolation$PowIn:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$PowOut -> com.badlogic.gdx.math.Interpolation$PowOut:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$Swing -> com.badlogic.gdx.math.Interpolation$Swing:
    float scale -> scale
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$SwingIn -> com.badlogic.gdx.math.Interpolation$SwingIn:
    float scale -> scale
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$SwingOut -> com.badlogic.gdx.math.Interpolation$SwingOut:
    float scale -> scale
    float apply(float) -> apply
com.badlogic.gdx.math.Intersector -> com.badlogic.gdx.math.Intersector:
    com.badlogic.gdx.math.Vector3 v0 -> v0
    com.badlogic.gdx.math.Vector3 v1 -> v1
    com.badlogic.gdx.math.Vector3 v2 -> v2
    com.badlogic.gdx.math.Plane p -> p
    com.badlogic.gdx.math.Vector3 i -> i
    com.badlogic.gdx.math.Vector3 dir -> dir
    com.badlogic.gdx.math.Vector3 start -> start
    com.badlogic.gdx.math.Vector3 best -> best
    com.badlogic.gdx.math.Vector3 tmp -> tmp
    com.badlogic.gdx.math.Vector3 tmp1 -> tmp1
    com.badlogic.gdx.math.Vector3 tmp2 -> tmp2
    com.badlogic.gdx.math.Vector3 tmp3 -> tmp3
    com.badlogic.gdx.math.Vector2 v2tmp -> v2tmp
    com.badlogic.gdx.math.Vector3 intersection -> intersection
    boolean isPointInTriangle(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> isPointInTriangle
    boolean isPointInTriangle(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> isPointInTriangle
    boolean isPointInTriangle(float,float,float,float,float,float,float,float) -> isPointInTriangle
    boolean intersectSegmentPlane(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Vector3) -> intersectSegmentPlane
    int pointLineSide(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> pointLineSide
    int pointLineSide(float,float,float,float,float,float) -> pointLineSide
    boolean isPointInPolygon(com.badlogic.gdx.utils.Array,com.badlogic.gdx.math.Vector2) -> isPointInPolygon
    boolean isPointInPolygon(float[],int,int,float,float) -> isPointInPolygon
    float distanceLinePoint(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> distanceLinePoint
    float distanceLinePoint(float,float,float,float,float,float) -> distanceLinePoint
    float distanceSegmentPoint(float,float,float,float,float,float) -> distanceSegmentPoint
    float distanceSegmentPoint(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> distanceSegmentPoint
    com.badlogic.gdx.math.Vector2 nearestSegmentPoint(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> nearestSegmentPoint
    com.badlogic.gdx.math.Vector2 nearestSegmentPoint(float,float,float,float,float,float,com.badlogic.gdx.math.Vector2) -> nearestSegmentPoint
    boolean intersectSegmentCircle(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,float) -> intersectSegmentCircle
    float intersectSegmentCircleDisplace(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,float,com.badlogic.gdx.math.Vector2) -> intersectSegmentCircleDisplace
    boolean intersectRayPlane(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Vector3) -> intersectRayPlane
    float intersectLinePlane(float,float,float,float,float,float,com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Vector3) -> intersectLinePlane
    boolean intersectRayTriangle(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> intersectRayTriangle
    boolean intersectRaySphere(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Vector3) -> intersectRaySphere
    boolean intersectRayBounds(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.collision.BoundingBox,com.badlogic.gdx.math.Vector3) -> intersectRayBounds
    boolean intersectRayBoundsFast(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.collision.BoundingBox) -> intersectRayBoundsFast
    boolean intersectRayBoundsFast(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> intersectRayBoundsFast
    boolean intersectRayTriangles(com.badlogic.gdx.math.collision.Ray,float[],com.badlogic.gdx.math.Vector3) -> intersectRayTriangles
    boolean intersectRayTriangles(com.badlogic.gdx.math.collision.Ray,float[],short[],int,com.badlogic.gdx.math.Vector3) -> intersectRayTriangles
    boolean intersectRayTriangles(com.badlogic.gdx.math.collision.Ray,java.util.List,com.badlogic.gdx.math.Vector3) -> intersectRayTriangles
    boolean intersectLines(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> intersectLines
    boolean intersectLines(float,float,float,float,float,float,float,float,com.badlogic.gdx.math.Vector2) -> intersectLines
    boolean intersectLinePolygon(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Polygon) -> intersectLinePolygon
    boolean intersectRectangles(com.badlogic.gdx.math.Rectangle,com.badlogic.gdx.math.Rectangle,com.badlogic.gdx.math.Rectangle) -> intersectRectangles
    boolean intersectSegmentPolygon(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Polygon) -> intersectSegmentPolygon
    boolean intersectSegments(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> intersectSegments
    boolean intersectSegments(float,float,float,float,float,float,float,float,com.badlogic.gdx.math.Vector2) -> intersectSegments
    float det(float,float,float,float) -> det
    double detd(double,double,double,double) -> detd
    boolean overlaps(com.badlogic.gdx.math.Circle,com.badlogic.gdx.math.Circle) -> overlaps
    boolean overlaps(com.badlogic.gdx.math.Rectangle,com.badlogic.gdx.math.Rectangle) -> overlaps
    boolean overlaps(com.badlogic.gdx.math.Circle,com.badlogic.gdx.math.Rectangle) -> overlaps
    boolean overlapConvexPolygons(com.badlogic.gdx.math.Polygon,com.badlogic.gdx.math.Polygon) -> overlapConvexPolygons
    boolean overlapConvexPolygons(com.badlogic.gdx.math.Polygon,com.badlogic.gdx.math.Polygon,com.badlogic.gdx.math.Intersector$MinimumTranslationVector) -> overlapConvexPolygons
    boolean overlapConvexPolygons(float[],float[],com.badlogic.gdx.math.Intersector$MinimumTranslationVector) -> overlapConvexPolygons
    boolean overlapConvexPolygons(float[],int,int,float[],int,int,com.badlogic.gdx.math.Intersector$MinimumTranslationVector) -> overlapConvexPolygons
    void splitTriangle(float[],com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Intersector$SplitTriangle) -> splitTriangle
    void splitEdge(float[],int,int,int,com.badlogic.gdx.math.Plane,float[],int) -> splitEdge
    void main(java.lang.String[]) -> main
com.badlogic.gdx.math.Intersector$MinimumTranslationVector -> com.badlogic.gdx.math.Intersector$MinimumTranslationVector:
    com.badlogic.gdx.math.Vector2 normal -> normal
    float depth -> depth
com.badlogic.gdx.math.Intersector$SplitTriangle -> com.badlogic.gdx.math.Intersector$SplitTriangle:
    float[] front -> front
    float[] back -> back
    float[] edgeSplit -> edgeSplit
    int numFront -> numFront
    int numBack -> numBack
    int total -> total
    boolean frontCurrent -> frontCurrent
    int frontOffset -> frontOffset
    int backOffset -> backOffset
    java.lang.String toString() -> toString
    void setSide(boolean) -> setSide
    boolean getSide() -> getSide
    void add(float[],int,int) -> add
    void reset() -> reset
com.badlogic.gdx.math.MathUtils -> com.badlogic.gdx.math.MathUtils:
    float nanoToSec -> nanoToSec
    float FLOAT_ROUNDING_ERROR -> FLOAT_ROUNDING_ERROR
    float PI -> PI
    float PI2 -> PI2
    float E -> E
    int SIN_BITS -> SIN_BITS
    int SIN_MASK -> SIN_MASK
    int SIN_COUNT -> SIN_COUNT
    float radFull -> radFull
    float degFull -> degFull
    float radToIndex -> radToIndex
    float degToIndex -> degToIndex
    float radiansToDegrees -> radiansToDegrees
    float radDeg -> radDeg
    float degreesToRadians -> degreesToRadians
    float degRad -> degRad
    int ATAN2_BITS -> ATAN2_BITS
    int ATAN2_BITS2 -> ATAN2_BITS2
    int ATAN2_MASK -> ATAN2_MASK
    int ATAN2_COUNT -> ATAN2_COUNT
    int ATAN2_DIM -> ATAN2_DIM
    float INV_ATAN2_DIM_MINUS_1 -> INV_ATAN2_DIM_MINUS_1
    java.util.Random random -> random
    int BIG_ENOUGH_INT -> BIG_ENOUGH_INT
    double BIG_ENOUGH_FLOOR -> BIG_ENOUGH_FLOOR
    double CEIL -> CEIL
    double BIG_ENOUGH_CEIL -> BIG_ENOUGH_CEIL
    double BIG_ENOUGH_ROUND -> BIG_ENOUGH_ROUND
    float sin(float) -> sin
    float cos(float) -> cos
    float sinDeg(float) -> sinDeg
    float cosDeg(float) -> cosDeg
    float atan2(float,float) -> atan2
    int random(int) -> random
    int random(int,int) -> random
    boolean randomBoolean() -> randomBoolean
    boolean randomBoolean(float) -> randomBoolean
    float random() -> random
    float random(float) -> random
    float random(float,float) -> random
    int nextPowerOfTwo(int) -> nextPowerOfTwo
    boolean isPowerOfTwo(int) -> isPowerOfTwo
    int clamp(int,int,int) -> clamp
    short clamp(short,short,short) -> clamp
    float clamp(float,float,float) -> clamp
    float lerp(float,float,float) -> lerp
    int floor(float) -> floor
    int floorPositive(float) -> floorPositive
    int ceil(float) -> ceil
    int ceilPositive(float) -> ceilPositive
    int round(float) -> round
    int roundPositive(float) -> roundPositive
    boolean isZero(float) -> isZero
    boolean isZero(float,float) -> isZero
    boolean isEqual(float,float) -> isEqual
    boolean isEqual(float,float,float) -> isEqual
com.badlogic.gdx.math.MathUtils$Atan2 -> com.badlogic.gdx.math.MathUtils$Atan2:
    float[] table -> table
com.badlogic.gdx.math.MathUtils$Sin -> com.badlogic.gdx.math.MathUtils$Sin:
    float[] table -> table
com.badlogic.gdx.math.Matrix3 -> com.badlogic.gdx.math.Matrix3:
    long serialVersionUID -> serialVersionUID
    int M00 -> M00
    int M01 -> M01
    int M02 -> M02
    int M10 -> M10
    int M11 -> M11
    int M12 -> M12
    int M20 -> M20
    int M21 -> M21
    int M22 -> M22
    float[] val -> val
    float[] tmp -> tmp
    com.badlogic.gdx.math.Matrix3 idt() -> idt
    com.badlogic.gdx.math.Matrix3 mul(com.badlogic.gdx.math.Matrix3) -> mul
    com.badlogic.gdx.math.Matrix3 mulLeft(com.badlogic.gdx.math.Matrix3) -> mulLeft
    com.badlogic.gdx.math.Matrix3 setToRotation(float) -> setToRotation
    com.badlogic.gdx.math.Matrix3 setToRotationRad(float) -> setToRotationRad
    com.badlogic.gdx.math.Matrix3 setToRotation(com.badlogic.gdx.math.Vector3,float) -> setToRotation
    com.badlogic.gdx.math.Matrix3 setToRotation(com.badlogic.gdx.math.Vector3,float,float) -> setToRotation
    com.badlogic.gdx.math.Matrix3 setToTranslation(float,float) -> setToTranslation
    com.badlogic.gdx.math.Matrix3 setToTranslation(com.badlogic.gdx.math.Vector2) -> setToTranslation
    com.badlogic.gdx.math.Matrix3 setToScaling(float,float) -> setToScaling
    java.lang.String toString() -> toString
    float det() -> det
    com.badlogic.gdx.math.Matrix3 inv() -> inv
    com.badlogic.gdx.math.Matrix3 set(com.badlogic.gdx.math.Matrix3) -> set
    com.badlogic.gdx.math.Matrix3 set(com.badlogic.gdx.math.Matrix4) -> set
    com.badlogic.gdx.math.Matrix3 set(float[]) -> set
    com.badlogic.gdx.math.Matrix3 trn(com.badlogic.gdx.math.Vector2) -> trn
    com.badlogic.gdx.math.Matrix3 trn(float,float) -> trn
    com.badlogic.gdx.math.Matrix3 trn(com.badlogic.gdx.math.Vector3) -> trn
    com.badlogic.gdx.math.Matrix3 translate(float,float) -> translate
    com.badlogic.gdx.math.Matrix3 translate(com.badlogic.gdx.math.Vector2) -> translate
    com.badlogic.gdx.math.Matrix3 rotate(float) -> rotate
    com.badlogic.gdx.math.Matrix3 rotateRad(float) -> rotateRad
    com.badlogic.gdx.math.Matrix3 scale(float,float) -> scale
    com.badlogic.gdx.math.Matrix3 scale(com.badlogic.gdx.math.Vector2) -> scale
    float[] getValues() -> getValues
    com.badlogic.gdx.math.Vector2 getTranslation(com.badlogic.gdx.math.Vector2) -> getTranslation
    com.badlogic.gdx.math.Vector2 getScale(com.badlogic.gdx.math.Vector2) -> getScale
    float getRotation() -> getRotation
    float getRotationRad() -> getRotationRad
    com.badlogic.gdx.math.Matrix3 scl(float) -> scl
    com.badlogic.gdx.math.Matrix3 scl(com.badlogic.gdx.math.Vector2) -> scl
    com.badlogic.gdx.math.Matrix3 scl(com.badlogic.gdx.math.Vector3) -> scl
    com.badlogic.gdx.math.Matrix3 transpose() -> transpose
    void mul(float[],float[]) -> mul
com.badlogic.gdx.math.Matrix4 -> com.badlogic.gdx.math.Matrix4:
    long serialVersionUID -> serialVersionUID
    int M00 -> M00
    int M01 -> M01
    int M02 -> M02
    int M03 -> M03
    int M10 -> M10
    int M11 -> M11
    int M12 -> M12
    int M13 -> M13
    int M20 -> M20
    int M21 -> M21
    int M22 -> M22
    int M23 -> M23
    int M30 -> M30
    int M31 -> M31
    int M32 -> M32
    int M33 -> M33
    float[] tmp -> tmp
    float[] val -> val
    com.badlogic.gdx.math.Quaternion quat -> quat
    com.badlogic.gdx.math.Quaternion quat2 -> quat2
    com.badlogic.gdx.math.Vector3 l_vez -> l_vez
    com.badlogic.gdx.math.Vector3 l_vex -> l_vex
    com.badlogic.gdx.math.Vector3 l_vey -> l_vey
    com.badlogic.gdx.math.Vector3 tmpVec -> tmpVec
    com.badlogic.gdx.math.Matrix4 tmpMat -> tmpMat
    com.badlogic.gdx.math.Vector3 right -> right
    com.badlogic.gdx.math.Vector3 tmpForward -> tmpForward
    com.badlogic.gdx.math.Vector3 tmpUp -> tmpUp
    com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Matrix4) -> set
    com.badlogic.gdx.math.Matrix4 set(float[]) -> set
    com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Quaternion) -> set
    com.badlogic.gdx.math.Matrix4 set(float,float,float,float) -> set
    com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Quaternion) -> set
    com.badlogic.gdx.math.Matrix4 set(float,float,float,float,float,float,float) -> set
    com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Quaternion,com.badlogic.gdx.math.Vector3) -> set
    com.badlogic.gdx.math.Matrix4 set(float,float,float,float,float,float,float,float,float,float) -> set
    com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> set
    com.badlogic.gdx.math.Matrix4 cpy() -> cpy
    com.badlogic.gdx.math.Matrix4 trn(com.badlogic.gdx.math.Vector3) -> trn
    com.badlogic.gdx.math.Matrix4 trn(float,float,float) -> trn
    float[] getValues() -> getValues
    com.badlogic.gdx.math.Matrix4 mul(com.badlogic.gdx.math.Matrix4) -> mul
    com.badlogic.gdx.math.Matrix4 mulLeft(com.badlogic.gdx.math.Matrix4) -> mulLeft
    com.badlogic.gdx.math.Matrix4 tra() -> tra
    com.badlogic.gdx.math.Matrix4 idt() -> idt
    com.badlogic.gdx.math.Matrix4 inv() -> inv
    float det() -> det
    float det3x3() -> det3x3
    com.badlogic.gdx.math.Matrix4 setToProjection(float,float,float,float) -> setToProjection
    com.badlogic.gdx.math.Matrix4 setToOrtho2D(float,float,float,float) -> setToOrtho2D
    com.badlogic.gdx.math.Matrix4 setToOrtho2D(float,float,float,float,float,float) -> setToOrtho2D
    com.badlogic.gdx.math.Matrix4 setToOrtho(float,float,float,float,float,float) -> setToOrtho
    com.badlogic.gdx.math.Matrix4 setTranslation(com.badlogic.gdx.math.Vector3) -> setTranslation
    com.badlogic.gdx.math.Matrix4 setTranslation(float,float,float) -> setTranslation
    com.badlogic.gdx.math.Matrix4 setToTranslation(com.badlogic.gdx.math.Vector3) -> setToTranslation
    com.badlogic.gdx.math.Matrix4 setToTranslation(float,float,float) -> setToTranslation
    com.badlogic.gdx.math.Matrix4 setToTranslationAndScaling(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> setToTranslationAndScaling
    com.badlogic.gdx.math.Matrix4 setToTranslationAndScaling(float,float,float,float,float,float) -> setToTranslationAndScaling
    com.badlogic.gdx.math.Matrix4 setToRotation(com.badlogic.gdx.math.Vector3,float) -> setToRotation
    com.badlogic.gdx.math.Matrix4 setToRotationRad(com.badlogic.gdx.math.Vector3,float) -> setToRotationRad
    com.badlogic.gdx.math.Matrix4 setToRotation(float,float,float,float) -> setToRotation
    com.badlogic.gdx.math.Matrix4 setToRotationRad(float,float,float,float) -> setToRotationRad
    com.badlogic.gdx.math.Matrix4 setToRotation(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> setToRotation
    com.badlogic.gdx.math.Matrix4 setToRotation(float,float,float,float,float,float) -> setToRotation
    com.badlogic.gdx.math.Matrix4 setFromEulerAngles(float,float,float) -> setFromEulerAngles
    com.badlogic.gdx.math.Matrix4 setToScaling(com.badlogic.gdx.math.Vector3) -> setToScaling
    com.badlogic.gdx.math.Matrix4 setToScaling(float,float,float) -> setToScaling
    com.badlogic.gdx.math.Matrix4 setToLookAt(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> setToLookAt
    com.badlogic.gdx.math.Matrix4 setToLookAt(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> setToLookAt
    com.badlogic.gdx.math.Matrix4 setToWorld(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> setToWorld
    java.lang.String toString() -> toString
    com.badlogic.gdx.math.Matrix4 lerp(com.badlogic.gdx.math.Matrix4,float) -> lerp
    com.badlogic.gdx.math.Matrix4 avg(com.badlogic.gdx.math.Matrix4,float) -> avg
    com.badlogic.gdx.math.Matrix4 avg(com.badlogic.gdx.math.Matrix4[]) -> avg
    com.badlogic.gdx.math.Matrix4 avg(com.badlogic.gdx.math.Matrix4[],float[]) -> avg
    com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Matrix3) -> set
    com.badlogic.gdx.math.Matrix4 scl(com.badlogic.gdx.math.Vector3) -> scl
    com.badlogic.gdx.math.Matrix4 scl(float,float,float) -> scl
    com.badlogic.gdx.math.Matrix4 scl(float) -> scl
    com.badlogic.gdx.math.Vector3 getTranslation(com.badlogic.gdx.math.Vector3) -> getTranslation
    com.badlogic.gdx.math.Quaternion getRotation(com.badlogic.gdx.math.Quaternion,boolean) -> getRotation
    com.badlogic.gdx.math.Quaternion getRotation(com.badlogic.gdx.math.Quaternion) -> getRotation
    float getScaleXSquared() -> getScaleXSquared
    float getScaleYSquared() -> getScaleYSquared
    float getScaleZSquared() -> getScaleZSquared
    float getScaleX() -> getScaleX
    float getScaleY() -> getScaleY
    float getScaleZ() -> getScaleZ
    com.badlogic.gdx.math.Vector3 getScale(com.badlogic.gdx.math.Vector3) -> getScale
    com.badlogic.gdx.math.Matrix4 toNormalMatrix() -> toNormalMatrix
    void mul(float[],float[]) -> mul
    void mulVec(float[],float[]) -> mulVec
    void mulVec(float[],float[],int,int,int) -> mulVec
    void prj(float[],float[]) -> prj
    void prj(float[],float[],int,int,int) -> prj
    void rot(float[],float[]) -> rot
    void rot(float[],float[],int,int,int) -> rot
    boolean inv(float[]) -> inv
    float det(float[]) -> det
    com.badlogic.gdx.math.Matrix4 translate(com.badlogic.gdx.math.Vector3) -> translate
    com.badlogic.gdx.math.Matrix4 translate(float,float,float) -> translate
    com.badlogic.gdx.math.Matrix4 rotate(com.badlogic.gdx.math.Vector3,float) -> rotate
    com.badlogic.gdx.math.Matrix4 rotateRad(com.badlogic.gdx.math.Vector3,float) -> rotateRad
    com.badlogic.gdx.math.Matrix4 rotate(float,float,float,float) -> rotate
    com.badlogic.gdx.math.Matrix4 rotateRad(float,float,float,float) -> rotateRad
    com.badlogic.gdx.math.Matrix4 rotate(com.badlogic.gdx.math.Quaternion) -> rotate
    com.badlogic.gdx.math.Matrix4 rotate(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> rotate
    com.badlogic.gdx.math.Matrix4 scale(float,float,float) -> scale
    void extract4x3Matrix(float[]) -> extract4x3Matrix
com.badlogic.gdx.math.Path -> com.badlogic.gdx.math.Path:
    java.lang.Object derivativeAt(java.lang.Object,float) -> derivativeAt
    java.lang.Object valueAt(java.lang.Object,float) -> valueAt
    float approximate(java.lang.Object) -> approximate
    float locate(java.lang.Object) -> locate
    float approxLength(int) -> approxLength
com.badlogic.gdx.math.Plane -> com.badlogic.gdx.math.Plane:
    long serialVersionUID -> serialVersionUID
    com.badlogic.gdx.math.Vector3 normal -> normal
    float d -> d
    void set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> set
    void set(float,float,float,float) -> set
    float distance(com.badlogic.gdx.math.Vector3) -> distance
    com.badlogic.gdx.math.Plane$PlaneSide testPoint(com.badlogic.gdx.math.Vector3) -> testPoint
    com.badlogic.gdx.math.Plane$PlaneSide testPoint(float,float,float) -> testPoint
    boolean isFrontFacing(com.badlogic.gdx.math.Vector3) -> isFrontFacing
    com.badlogic.gdx.math.Vector3 getNormal() -> getNormal
    float getD() -> getD
    void set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> set
    void set(float,float,float,float,float,float) -> set
    void set(com.badlogic.gdx.math.Plane) -> set
    java.lang.String toString() -> toString
com.badlogic.gdx.math.Plane$PlaneSide -> com.badlogic.gdx.math.Plane$PlaneSide:
    com.badlogic.gdx.math.Plane$PlaneSide OnPlane -> OnPlane
    com.badlogic.gdx.math.Plane$PlaneSide Back -> Back
    com.badlogic.gdx.math.Plane$PlaneSide Front -> Front
    com.badlogic.gdx.math.Plane$PlaneSide[] $VALUES -> $VALUES
    com.badlogic.gdx.math.Plane$PlaneSide[] values() -> values
    com.badlogic.gdx.math.Plane$PlaneSide valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.math.Polygon -> com.badlogic.gdx.math.Polygon:
    float[] localVertices -> localVertices
    float[] worldVertices -> worldVertices
    float x -> x
    float y -> y
    float originX -> originX
    float originY -> originY
    float rotation -> rotation
    float scaleX -> scaleX
    float scaleY -> scaleY
    boolean dirty -> dirty
    com.badlogic.gdx.math.Rectangle bounds -> bounds
    float[] getVertices() -> getVertices
    float[] getTransformedVertices() -> getTransformedVertices
    void setOrigin(float,float) -> setOrigin
    void setPosition(float,float) -> setPosition
    void setVertices(float[]) -> setVertices
    void translate(float,float) -> translate
    void setRotation(float) -> setRotation
    void rotate(float) -> rotate
    void setScale(float,float) -> setScale
    void scale(float) -> scale
    void dirty() -> dirty
    float area() -> area
    com.badlogic.gdx.math.Rectangle getBoundingRectangle() -> getBoundingRectangle
    boolean contains(float,float) -> contains
    float getX() -> getX
    float getY() -> getY
    float getOriginX() -> getOriginX
    float getOriginY() -> getOriginY
    float getRotation() -> getRotation
    float getScaleX() -> getScaleX
    float getScaleY() -> getScaleY
com.badlogic.gdx.math.Polyline -> com.badlogic.gdx.math.Polyline:
    float[] localVertices -> localVertices
    float[] worldVertices -> worldVertices
    float x -> x
    float y -> y
    float originX -> originX
    float originY -> originY
    float rotation -> rotation
    float scaleX -> scaleX
    float scaleY -> scaleY
    float length -> length
    float scaledLength -> scaledLength
    boolean calculateScaledLength -> calculateScaledLength
    boolean calculateLength -> calculateLength
    boolean dirty -> dirty
    float[] getVertices() -> getVertices
    float[] getTransformedVertices() -> getTransformedVertices
    float getLength() -> getLength
    float getScaledLength() -> getScaledLength
    float getX() -> getX
    float getY() -> getY
    float getOriginX() -> getOriginX
    float getOriginY() -> getOriginY
    float getRotation() -> getRotation
    float getScaleX() -> getScaleX
    float getScaleY() -> getScaleY
    void setOrigin(float,float) -> setOrigin
    void setPosition(float,float) -> setPosition
    void setRotation(float) -> setRotation
    void rotate(float) -> rotate
    void setScale(float,float) -> setScale
    void scale(float) -> scale
    void calculateLength() -> calculateLength
    void calculateScaledLength() -> calculateScaledLength
    void dirty() -> dirty
    void translate(float,float) -> translate
com.badlogic.gdx.math.Quaternion -> com.badlogic.gdx.math.Quaternion:
    long serialVersionUID -> serialVersionUID
    float NORMALIZATION_TOLERANCE -> NORMALIZATION_TOLERANCE
    com.badlogic.gdx.math.Quaternion tmp1 -> tmp1
    com.badlogic.gdx.math.Quaternion tmp2 -> tmp2
    float x -> x
    float y -> y
    float z -> z
    float w -> w
    com.badlogic.gdx.math.Quaternion set(float,float,float,float) -> set
    com.badlogic.gdx.math.Quaternion set(com.badlogic.gdx.math.Quaternion) -> set
    com.badlogic.gdx.math.Quaternion set(com.badlogic.gdx.math.Vector3,float) -> set
    com.badlogic.gdx.math.Quaternion cpy() -> cpy
    float len(float,float,float,float) -> len
    float len() -> len
    java.lang.String toString() -> toString
    com.badlogic.gdx.math.Quaternion setEulerAngles(float,float,float) -> setEulerAngles
    com.badlogic.gdx.math.Quaternion setEulerAnglesRad(float,float,float) -> setEulerAnglesRad
    int getGimbalPole() -> getGimbalPole
    float getRollRad() -> getRollRad
    float getRoll() -> getRoll
    float getPitchRad() -> getPitchRad
    float getPitch() -> getPitch
    float getYawRad() -> getYawRad
    float getYaw() -> getYaw
    float len2(float,float,float,float) -> len2
    float len2() -> len2
    com.badlogic.gdx.math.Quaternion nor() -> nor
    com.badlogic.gdx.math.Quaternion conjugate() -> conjugate
    com.badlogic.gdx.math.Vector3 transform(com.badlogic.gdx.math.Vector3) -> transform
    com.badlogic.gdx.math.Quaternion mul(com.badlogic.gdx.math.Quaternion) -> mul
    com.badlogic.gdx.math.Quaternion mul(float,float,float,float) -> mul
    com.badlogic.gdx.math.Quaternion mulLeft(com.badlogic.gdx.math.Quaternion) -> mulLeft
    com.badlogic.gdx.math.Quaternion mulLeft(float,float,float,float) -> mulLeft
    com.badlogic.gdx.math.Quaternion add(com.badlogic.gdx.math.Quaternion) -> add
    com.badlogic.gdx.math.Quaternion add(float,float,float,float) -> add
    void toMatrix(float[]) -> toMatrix
    com.badlogic.gdx.math.Quaternion idt() -> idt
    boolean isIdentity() -> isIdentity
    boolean isIdentity(float) -> isIdentity
    com.badlogic.gdx.math.Quaternion setFromAxis(com.badlogic.gdx.math.Vector3,float) -> setFromAxis
    com.badlogic.gdx.math.Quaternion setFromAxisRad(com.badlogic.gdx.math.Vector3,float) -> setFromAxisRad
    com.badlogic.gdx.math.Quaternion setFromAxis(float,float,float,float) -> setFromAxis
    com.badlogic.gdx.math.Quaternion setFromAxisRad(float,float,float,float) -> setFromAxisRad
    com.badlogic.gdx.math.Quaternion setFromMatrix(boolean,com.badlogic.gdx.math.Matrix4) -> setFromMatrix
    com.badlogic.gdx.math.Quaternion setFromMatrix(com.badlogic.gdx.math.Matrix4) -> setFromMatrix
    com.badlogic.gdx.math.Quaternion setFromMatrix(boolean,com.badlogic.gdx.math.Matrix3) -> setFromMatrix
    com.badlogic.gdx.math.Quaternion setFromMatrix(com.badlogic.gdx.math.Matrix3) -> setFromMatrix
    com.badlogic.gdx.math.Quaternion setFromAxes(float,float,float,float,float,float,float,float,float) -> setFromAxes
    com.badlogic.gdx.math.Quaternion setFromAxes(boolean,float,float,float,float,float,float,float,float,float) -> setFromAxes
    com.badlogic.gdx.math.Quaternion setFromCross(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> setFromCross
    com.badlogic.gdx.math.Quaternion setFromCross(float,float,float,float,float,float) -> setFromCross
    com.badlogic.gdx.math.Quaternion slerp(com.badlogic.gdx.math.Quaternion,float) -> slerp
    com.badlogic.gdx.math.Quaternion slerp(com.badlogic.gdx.math.Quaternion[]) -> slerp
    com.badlogic.gdx.math.Quaternion slerp(com.badlogic.gdx.math.Quaternion[],float[]) -> slerp
    com.badlogic.gdx.math.Quaternion exp(float) -> exp
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    float dot(float,float,float,float,float,float,float,float) -> dot
    float dot(com.badlogic.gdx.math.Quaternion) -> dot
    float dot(float,float,float,float) -> dot
    com.badlogic.gdx.math.Quaternion mul(float) -> mul
    float getAxisAngle(com.badlogic.gdx.math.Vector3) -> getAxisAngle
    float getAxisAngleRad(com.badlogic.gdx.math.Vector3) -> getAxisAngleRad
    float getAngleRad() -> getAngleRad
    float getAngle() -> getAngle
    void getSwingTwist(float,float,float,com.badlogic.gdx.math.Quaternion,com.badlogic.gdx.math.Quaternion) -> getSwingTwist
    void getSwingTwist(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Quaternion,com.badlogic.gdx.math.Quaternion) -> getSwingTwist
    float getAngleAroundRad(float,float,float) -> getAngleAroundRad
    float getAngleAroundRad(com.badlogic.gdx.math.Vector3) -> getAngleAroundRad
    float getAngleAround(float,float,float) -> getAngleAround
    float getAngleAround(com.badlogic.gdx.math.Vector3) -> getAngleAround
com.badlogic.gdx.math.RandomXS128 -> com.badlogic.gdx.math.RandomXS128:
    long[] s -> s
    int next(int) -> next
com.badlogic.gdx.math.Rectangle -> com.badlogic.gdx.math.Rectangle:
    com.badlogic.gdx.math.Rectangle tmp -> tmp
    com.badlogic.gdx.math.Rectangle tmp2 -> tmp2
    long serialVersionUID -> serialVersionUID
    float x -> x
    float y -> y
    float width -> width
    float height -> height
    com.badlogic.gdx.math.Rectangle set(float,float,float,float) -> set
    float getX() -> getX
    com.badlogic.gdx.math.Rectangle setX(float) -> setX
    float getY() -> getY
    com.badlogic.gdx.math.Rectangle setY(float) -> setY
    float getWidth() -> getWidth
    com.badlogic.gdx.math.Rectangle setWidth(float) -> setWidth
    float getHeight() -> getHeight
    com.badlogic.gdx.math.Rectangle setHeight(float) -> setHeight
    com.badlogic.gdx.math.Vector2 getPosition(com.badlogic.gdx.math.Vector2) -> getPosition
    com.badlogic.gdx.math.Rectangle setPosition(com.badlogic.gdx.math.Vector2) -> setPosition
    com.badlogic.gdx.math.Rectangle setPosition(float,float) -> setPosition
    com.badlogic.gdx.math.Rectangle setSize(float,float) -> setSize
    com.badlogic.gdx.math.Rectangle setSize(float) -> setSize
    com.badlogic.gdx.math.Vector2 getSize(com.badlogic.gdx.math.Vector2) -> getSize
    boolean contains(float,float) -> contains
    boolean contains(com.badlogic.gdx.math.Vector2) -> contains
    boolean contains(com.badlogic.gdx.math.Rectangle) -> contains
    boolean overlaps(com.badlogic.gdx.math.Rectangle) -> overlaps
    com.badlogic.gdx.math.Rectangle set(com.badlogic.gdx.math.Rectangle) -> set
    com.badlogic.gdx.math.Rectangle merge(com.badlogic.gdx.math.Rectangle) -> merge
    com.badlogic.gdx.math.Rectangle merge(float,float) -> merge
    com.badlogic.gdx.math.Rectangle merge(com.badlogic.gdx.math.Vector2) -> merge
    com.badlogic.gdx.math.Rectangle merge(com.badlogic.gdx.math.Vector2[]) -> merge
    float getAspectRatio() -> getAspectRatio
    com.badlogic.gdx.math.Vector2 getCenter(com.badlogic.gdx.math.Vector2) -> getCenter
    com.badlogic.gdx.math.Rectangle setCenter(float,float) -> setCenter
    com.badlogic.gdx.math.Rectangle setCenter(com.badlogic.gdx.math.Vector2) -> setCenter
    com.badlogic.gdx.math.Rectangle fitOutside(com.badlogic.gdx.math.Rectangle) -> fitOutside
    com.badlogic.gdx.math.Rectangle fitInside(com.badlogic.gdx.math.Rectangle) -> fitInside
    java.lang.String toString() -> toString
com.badlogic.gdx.math.Vector -> com.badlogic.gdx.math.Vector:
    com.badlogic.gdx.math.Vector cpy() -> cpy
    float len() -> len
    float len2() -> len2
    com.badlogic.gdx.math.Vector limit(float) -> limit
    com.badlogic.gdx.math.Vector clamp(float,float) -> clamp
    com.badlogic.gdx.math.Vector set(com.badlogic.gdx.math.Vector) -> set
    com.badlogic.gdx.math.Vector sub(com.badlogic.gdx.math.Vector) -> sub
    com.badlogic.gdx.math.Vector nor() -> nor
    com.badlogic.gdx.math.Vector add(com.badlogic.gdx.math.Vector) -> add
    float dot(com.badlogic.gdx.math.Vector) -> dot
    com.badlogic.gdx.math.Vector scl(float) -> scl
    com.badlogic.gdx.math.Vector scl(com.badlogic.gdx.math.Vector) -> scl
    float dst(com.badlogic.gdx.math.Vector) -> dst
    float dst2(com.badlogic.gdx.math.Vector) -> dst2
    com.badlogic.gdx.math.Vector lerp(com.badlogic.gdx.math.Vector,float) -> lerp
    com.badlogic.gdx.math.Vector interpolate(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Interpolation) -> interpolate
    boolean isUnit() -> isUnit
    boolean isUnit(float) -> isUnit
    boolean isZero() -> isZero
    boolean isZero(float) -> isZero
    boolean isOnLine(com.badlogic.gdx.math.Vector,float) -> isOnLine
    boolean isOnLine(com.badlogic.gdx.math.Vector) -> isOnLine
    boolean isCollinear(com.badlogic.gdx.math.Vector,float) -> isCollinear
    boolean isCollinear(com.badlogic.gdx.math.Vector) -> isCollinear
    boolean isCollinearOpposite(com.badlogic.gdx.math.Vector,float) -> isCollinearOpposite
    boolean isCollinearOpposite(com.badlogic.gdx.math.Vector) -> isCollinearOpposite
    boolean isPerpendicular(com.badlogic.gdx.math.Vector) -> isPerpendicular
    boolean isPerpendicular(com.badlogic.gdx.math.Vector,float) -> isPerpendicular
    boolean hasSameDirection(com.badlogic.gdx.math.Vector) -> hasSameDirection
    boolean hasOppositeDirection(com.badlogic.gdx.math.Vector) -> hasOppositeDirection
    boolean epsilonEquals(com.badlogic.gdx.math.Vector,float) -> epsilonEquals
    com.badlogic.gdx.math.Vector mulAdd(com.badlogic.gdx.math.Vector,float) -> mulAdd
    com.badlogic.gdx.math.Vector mulAdd(com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector) -> mulAdd
com.badlogic.gdx.math.Vector2 -> com.badlogic.gdx.math.Vector2:
    long serialVersionUID -> serialVersionUID
    com.badlogic.gdx.math.Vector2 X -> X
    com.badlogic.gdx.math.Vector2 Y -> Y
    com.badlogic.gdx.math.Vector2 Zero -> Zero
    float x -> x
    float y -> y
    com.badlogic.gdx.math.Vector2 cpy() -> cpy
    float len(float,float) -> len
    float len() -> len
    float len2(float,float) -> len2
    float len2() -> len2
    com.badlogic.gdx.math.Vector2 set(com.badlogic.gdx.math.Vector2) -> set
    com.badlogic.gdx.math.Vector2 set(float,float) -> set
    com.badlogic.gdx.math.Vector2 sub(com.badlogic.gdx.math.Vector2) -> sub
    com.badlogic.gdx.math.Vector2 sub(float,float) -> sub
    com.badlogic.gdx.math.Vector2 nor() -> nor
    com.badlogic.gdx.math.Vector2 add(com.badlogic.gdx.math.Vector2) -> add
    com.badlogic.gdx.math.Vector2 add(float,float) -> add
    float dot(float,float,float,float) -> dot
    float dot(com.badlogic.gdx.math.Vector2) -> dot
    float dot(float,float) -> dot
    com.badlogic.gdx.math.Vector2 scl(float) -> scl
    com.badlogic.gdx.math.Vector2 scl(float,float) -> scl
    com.badlogic.gdx.math.Vector2 scl(com.badlogic.gdx.math.Vector2) -> scl
    com.badlogic.gdx.math.Vector2 mulAdd(com.badlogic.gdx.math.Vector2,float) -> mulAdd
    com.badlogic.gdx.math.Vector2 mulAdd(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> mulAdd
    float dst(float,float,float,float) -> dst
    float dst(com.badlogic.gdx.math.Vector2) -> dst
    float dst(float,float) -> dst
    float dst2(float,float,float,float) -> dst2
    float dst2(com.badlogic.gdx.math.Vector2) -> dst2
    float dst2(float,float) -> dst2
    com.badlogic.gdx.math.Vector2 limit(float) -> limit
    com.badlogic.gdx.math.Vector2 clamp(float,float) -> clamp
    java.lang.String toString() -> toString
    com.badlogic.gdx.math.Vector2 mul(com.badlogic.gdx.math.Matrix3) -> mul
    float crs(com.badlogic.gdx.math.Vector2) -> crs
    float crs(float,float) -> crs
    float angle() -> angle
    float angleRad() -> angleRad
    com.badlogic.gdx.math.Vector2 setAngle(float) -> setAngle
    com.badlogic.gdx.math.Vector2 setAngleRad(float) -> setAngleRad
    com.badlogic.gdx.math.Vector2 rotate(float) -> rotate
    com.badlogic.gdx.math.Vector2 rotateRad(float) -> rotateRad
    com.badlogic.gdx.math.Vector2 rotate90(int) -> rotate90
    com.badlogic.gdx.math.Vector2 lerp(com.badlogic.gdx.math.Vector2,float) -> lerp
    com.badlogic.gdx.math.Vector2 interpolate(com.badlogic.gdx.math.Vector2,float,com.badlogic.gdx.math.Interpolation) -> interpolate
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean epsilonEquals(com.badlogic.gdx.math.Vector2,float) -> epsilonEquals
    boolean epsilonEquals(float,float,float) -> epsilonEquals
    boolean isUnit() -> isUnit
    boolean isUnit(float) -> isUnit
    boolean isZero() -> isZero
    boolean isZero(float) -> isZero
    boolean isOnLine(com.badlogic.gdx.math.Vector2) -> isOnLine
    boolean isOnLine(com.badlogic.gdx.math.Vector2,float) -> isOnLine
    boolean isCollinear(com.badlogic.gdx.math.Vector2,float) -> isCollinear
    boolean isCollinear(com.badlogic.gdx.math.Vector2) -> isCollinear
    boolean isCollinearOpposite(com.badlogic.gdx.math.Vector2,float) -> isCollinearOpposite
    boolean isCollinearOpposite(com.badlogic.gdx.math.Vector2) -> isCollinearOpposite
    boolean isPerpendicular(com.badlogic.gdx.math.Vector2) -> isPerpendicular
    boolean isPerpendicular(com.badlogic.gdx.math.Vector2,float) -> isPerpendicular
    boolean hasSameDirection(com.badlogic.gdx.math.Vector2) -> hasSameDirection
    boolean hasOppositeDirection(com.badlogic.gdx.math.Vector2) -> hasOppositeDirection
    com.badlogic.gdx.math.Vector mulAdd(com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector) -> mulAdd
    com.badlogic.gdx.math.Vector mulAdd(com.badlogic.gdx.math.Vector,float) -> mulAdd
    boolean epsilonEquals(com.badlogic.gdx.math.Vector,float) -> epsilonEquals
    boolean hasOppositeDirection(com.badlogic.gdx.math.Vector) -> hasOppositeDirection
    boolean hasSameDirection(com.badlogic.gdx.math.Vector) -> hasSameDirection
    boolean isPerpendicular(com.badlogic.gdx.math.Vector,float) -> isPerpendicular
    boolean isPerpendicular(com.badlogic.gdx.math.Vector) -> isPerpendicular
    boolean isCollinearOpposite(com.badlogic.gdx.math.Vector) -> isCollinearOpposite
    boolean isCollinearOpposite(com.badlogic.gdx.math.Vector,float) -> isCollinearOpposite
    boolean isCollinear(com.badlogic.gdx.math.Vector) -> isCollinear
    boolean isCollinear(com.badlogic.gdx.math.Vector,float) -> isCollinear
    boolean isOnLine(com.badlogic.gdx.math.Vector) -> isOnLine
    boolean isOnLine(com.badlogic.gdx.math.Vector,float) -> isOnLine
    com.badlogic.gdx.math.Vector interpolate(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Interpolation) -> interpolate
    com.badlogic.gdx.math.Vector lerp(com.badlogic.gdx.math.Vector,float) -> lerp
    float dst2(com.badlogic.gdx.math.Vector) -> dst2
    float dst(com.badlogic.gdx.math.Vector) -> dst
    com.badlogic.gdx.math.Vector scl(com.badlogic.gdx.math.Vector) -> scl
    com.badlogic.gdx.math.Vector scl(float) -> scl
    float dot(com.badlogic.gdx.math.Vector) -> dot
    com.badlogic.gdx.math.Vector add(com.badlogic.gdx.math.Vector) -> add
    com.badlogic.gdx.math.Vector nor() -> nor
    com.badlogic.gdx.math.Vector sub(com.badlogic.gdx.math.Vector) -> sub
    com.badlogic.gdx.math.Vector set(com.badlogic.gdx.math.Vector) -> set
    com.badlogic.gdx.math.Vector clamp(float,float) -> clamp
    com.badlogic.gdx.math.Vector limit(float) -> limit
    com.badlogic.gdx.math.Vector cpy() -> cpy
com.badlogic.gdx.math.Vector3 -> com.badlogic.gdx.math.Vector3:
    long serialVersionUID -> serialVersionUID
    float x -> x
    float y -> y
    float z -> z
    com.badlogic.gdx.math.Vector3 X -> X
    com.badlogic.gdx.math.Vector3 Y -> Y
    com.badlogic.gdx.math.Vector3 Z -> Z
    com.badlogic.gdx.math.Vector3 Zero -> Zero
    com.badlogic.gdx.math.Matrix4 tmpMat -> tmpMat
    com.badlogic.gdx.math.Vector3 set(float,float,float) -> set
    com.badlogic.gdx.math.Vector3 set(com.badlogic.gdx.math.Vector3) -> set
    com.badlogic.gdx.math.Vector3 set(float[]) -> set
    com.badlogic.gdx.math.Vector3 set(com.badlogic.gdx.math.Vector2,float) -> set
    com.badlogic.gdx.math.Vector3 cpy() -> cpy
    com.badlogic.gdx.math.Vector3 add(com.badlogic.gdx.math.Vector3) -> add
    com.badlogic.gdx.math.Vector3 add(float,float,float) -> add
    com.badlogic.gdx.math.Vector3 add(float) -> add
    com.badlogic.gdx.math.Vector3 sub(com.badlogic.gdx.math.Vector3) -> sub
    com.badlogic.gdx.math.Vector3 sub(float,float,float) -> sub
    com.badlogic.gdx.math.Vector3 sub(float) -> sub
    com.badlogic.gdx.math.Vector3 scl(float) -> scl
    com.badlogic.gdx.math.Vector3 scl(com.badlogic.gdx.math.Vector3) -> scl
    com.badlogic.gdx.math.Vector3 scl(float,float,float) -> scl
    com.badlogic.gdx.math.Vector3 mulAdd(com.badlogic.gdx.math.Vector3,float) -> mulAdd
    com.badlogic.gdx.math.Vector3 mulAdd(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> mulAdd
    float len(float,float,float) -> len
    float len() -> len
    float len2(float,float,float) -> len2
    float len2() -> len2
    boolean idt(com.badlogic.gdx.math.Vector3) -> idt
    float dst(float,float,float,float,float,float) -> dst
    float dst(com.badlogic.gdx.math.Vector3) -> dst
    float dst(float,float,float) -> dst
    float dst2(float,float,float,float,float,float) -> dst2
    float dst2(com.badlogic.gdx.math.Vector3) -> dst2
    float dst2(float,float,float) -> dst2
    com.badlogic.gdx.math.Vector3 nor() -> nor
    float dot(float,float,float,float,float,float) -> dot
    float dot(com.badlogic.gdx.math.Vector3) -> dot
    float dot(float,float,float) -> dot
    com.badlogic.gdx.math.Vector3 crs(com.badlogic.gdx.math.Vector3) -> crs
    com.badlogic.gdx.math.Vector3 crs(float,float,float) -> crs
    com.badlogic.gdx.math.Vector3 mul4x3(float[]) -> mul4x3
    com.badlogic.gdx.math.Vector3 mul(com.badlogic.gdx.math.Matrix4) -> mul
    com.badlogic.gdx.math.Vector3 traMul(com.badlogic.gdx.math.Matrix4) -> traMul
    com.badlogic.gdx.math.Vector3 mul(com.badlogic.gdx.math.Matrix3) -> mul
    com.badlogic.gdx.math.Vector3 traMul(com.badlogic.gdx.math.Matrix3) -> traMul
    com.badlogic.gdx.math.Vector3 mul(com.badlogic.gdx.math.Quaternion) -> mul
    com.badlogic.gdx.math.Vector3 prj(com.badlogic.gdx.math.Matrix4) -> prj
    com.badlogic.gdx.math.Vector3 rot(com.badlogic.gdx.math.Matrix4) -> rot
    com.badlogic.gdx.math.Vector3 unrotate(com.badlogic.gdx.math.Matrix4) -> unrotate
    com.badlogic.gdx.math.Vector3 untransform(com.badlogic.gdx.math.Matrix4) -> untransform
    com.badlogic.gdx.math.Vector3 rotate(float,float,float,float) -> rotate
    com.badlogic.gdx.math.Vector3 rotateRad(float,float,float,float) -> rotateRad
    com.badlogic.gdx.math.Vector3 rotate(com.badlogic.gdx.math.Vector3,float) -> rotate
    com.badlogic.gdx.math.Vector3 rotateRad(com.badlogic.gdx.math.Vector3,float) -> rotateRad
    boolean isUnit() -> isUnit
    boolean isUnit(float) -> isUnit
    boolean isZero() -> isZero
    boolean isZero(float) -> isZero
    boolean isOnLine(com.badlogic.gdx.math.Vector3,float) -> isOnLine
    boolean isOnLine(com.badlogic.gdx.math.Vector3) -> isOnLine
    boolean isCollinear(com.badlogic.gdx.math.Vector3,float) -> isCollinear
    boolean isCollinear(com.badlogic.gdx.math.Vector3) -> isCollinear
    boolean isCollinearOpposite(com.badlogic.gdx.math.Vector3,float) -> isCollinearOpposite
    boolean isCollinearOpposite(com.badlogic.gdx.math.Vector3) -> isCollinearOpposite
    boolean isPerpendicular(com.badlogic.gdx.math.Vector3) -> isPerpendicular
    boolean isPerpendicular(com.badlogic.gdx.math.Vector3,float) -> isPerpendicular
    boolean hasSameDirection(com.badlogic.gdx.math.Vector3) -> hasSameDirection
    boolean hasOppositeDirection(com.badlogic.gdx.math.Vector3) -> hasOppositeDirection
    com.badlogic.gdx.math.Vector3 lerp(com.badlogic.gdx.math.Vector3,float) -> lerp
    com.badlogic.gdx.math.Vector3 interpolate(com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Interpolation) -> interpolate
    com.badlogic.gdx.math.Vector3 slerp(com.badlogic.gdx.math.Vector3,float) -> slerp
    java.lang.String toString() -> toString
    com.badlogic.gdx.math.Vector3 limit(float) -> limit
    com.badlogic.gdx.math.Vector3 clamp(float,float) -> clamp
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean epsilonEquals(com.badlogic.gdx.math.Vector3,float) -> epsilonEquals
    boolean epsilonEquals(float,float,float,float) -> epsilonEquals
    com.badlogic.gdx.math.Vector mulAdd(com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector) -> mulAdd
    com.badlogic.gdx.math.Vector mulAdd(com.badlogic.gdx.math.Vector,float) -> mulAdd
    boolean epsilonEquals(com.badlogic.gdx.math.Vector,float) -> epsilonEquals
    boolean hasOppositeDirection(com.badlogic.gdx.math.Vector) -> hasOppositeDirection
    boolean hasSameDirection(com.badlogic.gdx.math.Vector) -> hasSameDirection
    boolean isPerpendicular(com.badlogic.gdx.math.Vector,float) -> isPerpendicular
    boolean isPerpendicular(com.badlogic.gdx.math.Vector) -> isPerpendicular
    boolean isCollinearOpposite(com.badlogic.gdx.math.Vector) -> isCollinearOpposite
    boolean isCollinearOpposite(com.badlogic.gdx.math.Vector,float) -> isCollinearOpposite
    boolean isCollinear(com.badlogic.gdx.math.Vector) -> isCollinear
    boolean isCollinear(com.badlogic.gdx.math.Vector,float) -> isCollinear
    boolean isOnLine(com.badlogic.gdx.math.Vector) -> isOnLine
    boolean isOnLine(com.badlogic.gdx.math.Vector,float) -> isOnLine
    com.badlogic.gdx.math.Vector interpolate(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Interpolation) -> interpolate
    com.badlogic.gdx.math.Vector lerp(com.badlogic.gdx.math.Vector,float) -> lerp
    float dst2(com.badlogic.gdx.math.Vector) -> dst2
    float dst(com.badlogic.gdx.math.Vector) -> dst
    com.badlogic.gdx.math.Vector scl(com.badlogic.gdx.math.Vector) -> scl
    com.badlogic.gdx.math.Vector scl(float) -> scl
    float dot(com.badlogic.gdx.math.Vector) -> dot
    com.badlogic.gdx.math.Vector add(com.badlogic.gdx.math.Vector) -> add
    com.badlogic.gdx.math.Vector nor() -> nor
    com.badlogic.gdx.math.Vector sub(com.badlogic.gdx.math.Vector) -> sub
    com.badlogic.gdx.math.Vector set(com.badlogic.gdx.math.Vector) -> set
    com.badlogic.gdx.math.Vector clamp(float,float) -> clamp
    com.badlogic.gdx.math.Vector limit(float) -> limit
    com.badlogic.gdx.math.Vector cpy() -> cpy
com.badlogic.gdx.math.WindowedMean -> com.badlogic.gdx.math.WindowedMean:
    float[] values -> values
    int added_values -> added_values
    int last_value -> last_value
    float mean -> mean
    boolean dirty -> dirty
    boolean hasEnoughData() -> hasEnoughData
    void clear() -> clear
    void addValue(float) -> addValue
    float getMean() -> getMean
    float getOldest() -> getOldest
    float getLatest() -> getLatest
    float standardDeviation() -> standardDeviation
com.badlogic.gdx.math.collision.BoundingBox -> com.badlogic.gdx.math.collision.BoundingBox:
    long serialVersionUID -> serialVersionUID
    com.badlogic.gdx.math.Vector3[] crn -> crn
    com.badlogic.gdx.math.Vector3 min -> min
    com.badlogic.gdx.math.Vector3 max -> max
    com.badlogic.gdx.math.Vector3 cnt -> cnt
    com.badlogic.gdx.math.Vector3 dim -> dim
    boolean crn_dirty -> crn_dirty
    com.badlogic.gdx.math.Vector3 getCenter() -> getCenter
    void updateCorners() -> updateCorners
    com.badlogic.gdx.math.Vector3[] getCorners() -> getCorners
    com.badlogic.gdx.math.Vector3 getDimensions() -> getDimensions
    com.badlogic.gdx.math.Vector3 getMin() -> getMin
    com.badlogic.gdx.math.Vector3 getMax() -> getMax
    com.badlogic.gdx.math.collision.BoundingBox set(com.badlogic.gdx.math.collision.BoundingBox) -> set
    com.badlogic.gdx.math.collision.BoundingBox set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> set
    com.badlogic.gdx.math.collision.BoundingBox set(com.badlogic.gdx.math.Vector3[]) -> set
    com.badlogic.gdx.math.collision.BoundingBox set(java.util.List) -> set
    com.badlogic.gdx.math.collision.BoundingBox inf() -> inf
    com.badlogic.gdx.math.collision.BoundingBox ext(com.badlogic.gdx.math.Vector3) -> ext
    com.badlogic.gdx.math.collision.BoundingBox clr() -> clr
    boolean isValid() -> isValid
    com.badlogic.gdx.math.collision.BoundingBox ext(com.badlogic.gdx.math.collision.BoundingBox) -> ext
    com.badlogic.gdx.math.collision.BoundingBox ext(com.badlogic.gdx.math.collision.BoundingBox,com.badlogic.gdx.math.Matrix4) -> ext
    com.badlogic.gdx.math.collision.BoundingBox mul(com.badlogic.gdx.math.Matrix4) -> mul
    boolean contains(com.badlogic.gdx.math.collision.BoundingBox) -> contains
    boolean intersects(com.badlogic.gdx.math.collision.BoundingBox) -> intersects
    boolean contains(com.badlogic.gdx.math.Vector3) -> contains
    java.lang.String toString() -> toString
    com.badlogic.gdx.math.collision.BoundingBox ext(float,float,float) -> ext
    float min(float,float) -> min
    float max(float,float) -> max
com.badlogic.gdx.math.collision.Ray -> com.badlogic.gdx.math.collision.Ray:
    long serialVersionUID -> serialVersionUID
    com.badlogic.gdx.math.Vector3 origin -> origin
    com.badlogic.gdx.math.Vector3 direction -> direction
    com.badlogic.gdx.math.Vector3 tmp -> tmp
    com.badlogic.gdx.math.collision.Ray cpy() -> cpy
    com.badlogic.gdx.math.Vector3 getEndPoint(float) -> getEndPoint
    com.badlogic.gdx.math.Vector3 getEndPoint(com.badlogic.gdx.math.Vector3,float) -> getEndPoint
    com.badlogic.gdx.math.collision.Ray mul(com.badlogic.gdx.math.Matrix4) -> mul
    java.lang.String toString() -> toString
    com.badlogic.gdx.math.collision.Ray set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> set
    com.badlogic.gdx.math.collision.Ray set(float,float,float,float,float,float) -> set
    com.badlogic.gdx.math.collision.Ray set(com.badlogic.gdx.math.collision.Ray) -> set
com.badlogic.gdx.math.collision.Segment -> com.badlogic.gdx.math.collision.Segment:
    long serialVersionUID -> serialVersionUID
    com.badlogic.gdx.math.Vector3 a -> a
    com.badlogic.gdx.math.Vector3 b -> b
com.badlogic.gdx.math.collision.Sphere -> com.badlogic.gdx.math.collision.Sphere:
    long serialVersionUID -> serialVersionUID
    float radius -> radius
    com.badlogic.gdx.math.Vector3 center -> center
    boolean overlaps(com.badlogic.gdx.math.collision.Sphere) -> overlaps
com.badlogic.gdx.net.HttpParametersUtils -> com.badlogic.gdx.net.HttpParametersUtils:
    java.lang.String defaultEncoding -> defaultEncoding
    java.lang.String nameValueSeparator -> nameValueSeparator
    java.lang.String parameterSeparator -> parameterSeparator
    java.lang.String convertHttpParameters(java.util.Map) -> convertHttpParameters
    java.lang.String encode(java.lang.String,java.lang.String) -> encode
com.badlogic.gdx.net.HttpStatus -> com.badlogic.gdx.net.HttpStatus:
    int statusCode -> statusCode
    int SC_CONTINUE -> SC_CONTINUE
    int SC_SWITCHING_PROTOCOLS -> SC_SWITCHING_PROTOCOLS
    int SC_PROCESSING -> SC_PROCESSING
    int SC_OK -> SC_OK
    int SC_CREATED -> SC_CREATED
    int SC_ACCEPTED -> SC_ACCEPTED
    int SC_NON_AUTHORITATIVE_INFORMATION -> SC_NON_AUTHORITATIVE_INFORMATION
    int SC_NO_CONTENT -> SC_NO_CONTENT
    int SC_RESET_CONTENT -> SC_RESET_CONTENT
    int SC_PARTIAL_CONTENT -> SC_PARTIAL_CONTENT
    int SC_MULTI_STATUS -> SC_MULTI_STATUS
    int SC_MULTIPLE_CHOICES -> SC_MULTIPLE_CHOICES
    int SC_MOVED_PERMANENTLY -> SC_MOVED_PERMANENTLY
    int SC_MOVED_TEMPORARILY -> SC_MOVED_TEMPORARILY
    int SC_SEE_OTHER -> SC_SEE_OTHER
    int SC_NOT_MODIFIED -> SC_NOT_MODIFIED
    int SC_USE_PROXY -> SC_USE_PROXY
    int SC_TEMPORARY_REDIRECT -> SC_TEMPORARY_REDIRECT
    int SC_BAD_REQUEST -> SC_BAD_REQUEST
    int SC_UNAUTHORIZED -> SC_UNAUTHORIZED
    int SC_PAYMENT_REQUIRED -> SC_PAYMENT_REQUIRED
    int SC_FORBIDDEN -> SC_FORBIDDEN
    int SC_NOT_FOUND -> SC_NOT_FOUND
    int SC_METHOD_NOT_ALLOWED -> SC_METHOD_NOT_ALLOWED
    int SC_NOT_ACCEPTABLE -> SC_NOT_ACCEPTABLE
    int SC_PROXY_AUTHENTICATION_REQUIRED -> SC_PROXY_AUTHENTICATION_REQUIRED
    int SC_REQUEST_TIMEOUT -> SC_REQUEST_TIMEOUT
    int SC_CONFLICT -> SC_CONFLICT
    int SC_GONE -> SC_GONE
    int SC_LENGTH_REQUIRED -> SC_LENGTH_REQUIRED
    int SC_PRECONDITION_FAILED -> SC_PRECONDITION_FAILED
    int SC_REQUEST_TOO_LONG -> SC_REQUEST_TOO_LONG
    int SC_REQUEST_URI_TOO_LONG -> SC_REQUEST_URI_TOO_LONG
    int SC_UNSUPPORTED_MEDIA_TYPE -> SC_UNSUPPORTED_MEDIA_TYPE
    int SC_REQUESTED_RANGE_NOT_SATISFIABLE -> SC_REQUESTED_RANGE_NOT_SATISFIABLE
    int SC_EXPECTATION_FAILED -> SC_EXPECTATION_FAILED
    int SC_INSUFFICIENT_SPACE_ON_RESOURCE -> SC_INSUFFICIENT_SPACE_ON_RESOURCE
    int SC_METHOD_FAILURE -> SC_METHOD_FAILURE
    int SC_UNPROCESSABLE_ENTITY -> SC_UNPROCESSABLE_ENTITY
    int SC_LOCKED -> SC_LOCKED
    int SC_FAILED_DEPENDENCY -> SC_FAILED_DEPENDENCY
    int SC_INTERNAL_SERVER_ERROR -> SC_INTERNAL_SERVER_ERROR
    int SC_NOT_IMPLEMENTED -> SC_NOT_IMPLEMENTED
    int SC_BAD_GATEWAY -> SC_BAD_GATEWAY
    int SC_SERVICE_UNAVAILABLE -> SC_SERVICE_UNAVAILABLE
    int SC_GATEWAY_TIMEOUT -> SC_GATEWAY_TIMEOUT
    int SC_HTTP_VERSION_NOT_SUPPORTED -> SC_HTTP_VERSION_NOT_SUPPORTED
    int SC_INSUFFICIENT_STORAGE -> SC_INSUFFICIENT_STORAGE
    int getStatusCode() -> getStatusCode
com.badlogic.gdx.net.NetJavaImpl -> com.badlogic.gdx.net.NetJavaImpl:
    java.util.concurrent.ExecutorService executorService -> executorService
    com.badlogic.gdx.utils.ObjectMap connections -> connections
    com.badlogic.gdx.utils.ObjectMap listeners -> listeners
    java.util.concurrent.locks.Lock lock -> lock
    void sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener) -> sendHttpRequest
    void cancelHttpRequest(com.badlogic.gdx.Net$HttpRequest) -> cancelHttpRequest
com.badlogic.gdx.net.NetJavaImpl$1 -> com.badlogic.gdx.net.NetJavaImpl$1:
    boolean val$doingOutPut -> val$doingOutPut
    com.badlogic.gdx.Net$HttpRequest val$httpRequest -> val$httpRequest
    java.net.HttpURLConnection val$connection -> val$connection
    com.badlogic.gdx.Net$HttpResponseListener val$httpResponseListener -> val$httpResponseListener
    com.badlogic.gdx.net.NetJavaImpl this$0 -> this$0
    void run() -> run
com.badlogic.gdx.net.NetJavaImpl$HttpClientResponse -> com.badlogic.gdx.net.NetJavaImpl$HttpClientResponse:
    java.net.HttpURLConnection connection -> connection
    com.badlogic.gdx.net.HttpStatus status -> status
    byte[] getResult() -> getResult
    java.lang.String getResultAsString() -> getResultAsString
    java.io.InputStream getResultAsStream() -> getResultAsStream
    com.badlogic.gdx.net.HttpStatus getStatus() -> getStatus
    java.lang.String getHeader(java.lang.String) -> getHeader
    java.util.Map getHeaders() -> getHeaders
    java.io.InputStream getInputStream() -> getInputStream
com.badlogic.gdx.net.NetJavaServerSocketImpl -> com.badlogic.gdx.net.NetJavaServerSocketImpl:
    com.badlogic.gdx.Net$Protocol protocol -> protocol
    java.net.ServerSocket server -> server
    com.badlogic.gdx.Net$Protocol getProtocol() -> getProtocol
    com.badlogic.gdx.net.Socket accept(com.badlogic.gdx.net.SocketHints) -> accept
    void dispose() -> dispose
com.badlogic.gdx.net.NetJavaSocketImpl -> com.badlogic.gdx.net.NetJavaSocketImpl:
    java.net.Socket socket -> socket
    void applyHints(com.badlogic.gdx.net.SocketHints) -> applyHints
    boolean isConnected() -> isConnected
    java.io.InputStream getInputStream() -> getInputStream
    java.io.OutputStream getOutputStream() -> getOutputStream
    java.lang.String getRemoteAddress() -> getRemoteAddress
    void dispose() -> dispose
com.badlogic.gdx.net.ServerSocket -> com.badlogic.gdx.net.ServerSocket:
    com.badlogic.gdx.Net$Protocol getProtocol() -> getProtocol
    com.badlogic.gdx.net.Socket accept(com.badlogic.gdx.net.SocketHints) -> accept
com.badlogic.gdx.net.ServerSocketHints -> com.badlogic.gdx.net.ServerSocketHints:
    int backlog -> backlog
    int performancePrefConnectionTime -> performancePrefConnectionTime
    int performancePrefLatency -> performancePrefLatency
    int performancePrefBandwidth -> performancePrefBandwidth
    boolean reuseAddress -> reuseAddress
    int acceptTimeout -> acceptTimeout
    int receiveBufferSize -> receiveBufferSize
com.badlogic.gdx.net.Socket -> com.badlogic.gdx.net.Socket:
    boolean isConnected() -> isConnected
    java.io.InputStream getInputStream() -> getInputStream
    java.io.OutputStream getOutputStream() -> getOutputStream
    java.lang.String getRemoteAddress() -> getRemoteAddress
com.badlogic.gdx.net.SocketHints -> com.badlogic.gdx.net.SocketHints:
    int connectTimeout -> connectTimeout
    int performancePrefConnectionTime -> performancePrefConnectionTime
    int performancePrefLatency -> performancePrefLatency
    int performancePrefBandwidth -> performancePrefBandwidth
    int trafficClass -> trafficClass
    boolean keepAlive -> keepAlive
    boolean tcpNoDelay -> tcpNoDelay
    int sendBufferSize -> sendBufferSize
    int receiveBufferSize -> receiveBufferSize
    boolean linger -> linger
    int lingerDuration -> lingerDuration
    int socketTimeout -> socketTimeout
com.badlogic.gdx.scenes.scene2d.Action -> com.badlogic.gdx.scenes.scene2d.Action:
    com.badlogic.gdx.scenes.scene2d.Actor actor -> actor
    com.badlogic.gdx.utils.Pool pool -> pool
    boolean act(float) -> act
    void restart() -> restart
    com.badlogic.gdx.scenes.scene2d.Actor getActor() -> getActor
    void setActor(com.badlogic.gdx.scenes.scene2d.Actor) -> setActor
    void reset() -> reset
    com.badlogic.gdx.utils.Pool getPool() -> getPool
    void setPool(com.badlogic.gdx.utils.Pool) -> setPool
    java.lang.String toString() -> toString
com.badlogic.gdx.scenes.scene2d.Actor -> com.badlogic.gdx.scenes.scene2d.Actor:
    com.badlogic.gdx.scenes.scene2d.Stage stage -> stage
    com.badlogic.gdx.scenes.scene2d.Group parent -> parent
    com.badlogic.gdx.utils.DelayedRemovalArray listeners -> listeners
    com.badlogic.gdx.utils.DelayedRemovalArray captureListeners -> captureListeners
    com.badlogic.gdx.utils.Array actions -> actions
    java.lang.String name -> name
    com.badlogic.gdx.scenes.scene2d.Touchable touchable -> touchable
    boolean visible -> visible
    float x -> x
    float y -> y
    float width -> width
    float height -> height
    float originX -> originX
    float originY -> originY
    float scaleX -> scaleX
    float scaleY -> scaleY
    float rotation -> rotation
    com.badlogic.gdx.graphics.Color color -> color
    java.lang.Object userObject -> userObject
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    void act(float) -> act
    boolean fire(com.badlogic.gdx.scenes.scene2d.Event) -> fire
    boolean notify(com.badlogic.gdx.scenes.scene2d.Event,boolean) -> notify
    com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean) -> hit
    boolean remove() -> remove
    boolean addListener(com.badlogic.gdx.scenes.scene2d.EventListener) -> addListener
    boolean removeListener(com.badlogic.gdx.scenes.scene2d.EventListener) -> removeListener
    com.badlogic.gdx.utils.Array getListeners() -> getListeners
    boolean addCaptureListener(com.badlogic.gdx.scenes.scene2d.EventListener) -> addCaptureListener
    boolean removeCaptureListener(com.badlogic.gdx.scenes.scene2d.EventListener) -> removeCaptureListener
    com.badlogic.gdx.utils.Array getCaptureListeners() -> getCaptureListeners
    void addAction(com.badlogic.gdx.scenes.scene2d.Action) -> addAction
    void removeAction(com.badlogic.gdx.scenes.scene2d.Action) -> removeAction
    com.badlogic.gdx.utils.Array getActions() -> getActions
    void clearActions() -> clearActions
    void clearListeners() -> clearListeners
    void clear() -> clear
    com.badlogic.gdx.scenes.scene2d.Stage getStage() -> getStage
    void setStage(com.badlogic.gdx.scenes.scene2d.Stage) -> setStage
    boolean isDescendantOf(com.badlogic.gdx.scenes.scene2d.Actor) -> isDescendantOf
    boolean isAscendantOf(com.badlogic.gdx.scenes.scene2d.Actor) -> isAscendantOf
    boolean hasParent() -> hasParent
    com.badlogic.gdx.scenes.scene2d.Group getParent() -> getParent
    void setParent(com.badlogic.gdx.scenes.scene2d.Group) -> setParent
    boolean isTouchable() -> isTouchable
    com.badlogic.gdx.scenes.scene2d.Touchable getTouchable() -> getTouchable
    void setTouchable(com.badlogic.gdx.scenes.scene2d.Touchable) -> setTouchable
    boolean isVisible() -> isVisible
    void setVisible(boolean) -> setVisible
    java.lang.Object getUserObject() -> getUserObject
    void setUserObject(java.lang.Object) -> setUserObject
    float getX() -> getX
    void setX(float) -> setX
    float getY() -> getY
    void setY(float) -> setY
    void setPosition(float,float) -> setPosition
    void moveBy(float,float) -> moveBy
    float getWidth() -> getWidth
    void setWidth(float) -> setWidth
    float getHeight() -> getHeight
    void setHeight(float) -> setHeight
    float getTop() -> getTop
    float getRight() -> getRight
    void sizeChanged() -> sizeChanged
    void setSize(float,float) -> setSize
    void sizeBy(float) -> sizeBy
    void sizeBy(float,float) -> sizeBy
    void setBounds(float,float,float,float) -> setBounds
    float getOriginX() -> getOriginX
    void setOriginX(float) -> setOriginX
    float getOriginY() -> getOriginY
    void setOriginY(float) -> setOriginY
    void setOrigin(float,float) -> setOrigin
    float getScaleX() -> getScaleX
    void setScaleX(float) -> setScaleX
    float getScaleY() -> getScaleY
    void setScaleY(float) -> setScaleY
    void setScale(float) -> setScale
    void setScale(float,float) -> setScale
    void scaleBy(float) -> scaleBy
    void scaleBy(float,float) -> scaleBy
    float getRotation() -> getRotation
    void setRotation(float) -> setRotation
    void rotateBy(float) -> rotateBy
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    void setColor(float,float,float,float) -> setColor
    com.badlogic.gdx.graphics.Color getColor() -> getColor
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    void toFront() -> toFront
    void toBack() -> toBack
    void setZIndex(int) -> setZIndex
    int getZIndex() -> getZIndex
    boolean clipBegin() -> clipBegin
    boolean clipBegin(float,float,float,float) -> clipBegin
    void clipEnd() -> clipEnd
    com.badlogic.gdx.math.Vector2 screenToLocalCoordinates(com.badlogic.gdx.math.Vector2) -> screenToLocalCoordinates
    com.badlogic.gdx.math.Vector2 stageToLocalCoordinates(com.badlogic.gdx.math.Vector2) -> stageToLocalCoordinates
    com.badlogic.gdx.math.Vector2 localToStageCoordinates(com.badlogic.gdx.math.Vector2) -> localToStageCoordinates
    com.badlogic.gdx.math.Vector2 localToParentCoordinates(com.badlogic.gdx.math.Vector2) -> localToParentCoordinates
    com.badlogic.gdx.math.Vector2 localToAscendantCoordinates(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.math.Vector2) -> localToAscendantCoordinates
    com.badlogic.gdx.math.Vector2 parentToLocalCoordinates(com.badlogic.gdx.math.Vector2) -> parentToLocalCoordinates
    java.lang.String toString() -> toString
com.badlogic.gdx.scenes.scene2d.Event -> com.badlogic.gdx.scenes.scene2d.Event:
    com.badlogic.gdx.scenes.scene2d.Stage stage -> stage
    com.badlogic.gdx.scenes.scene2d.Actor targetActor -> targetActor
    com.badlogic.gdx.scenes.scene2d.Actor listenerActor -> listenerActor
    boolean capture -> capture
    boolean bubbles -> bubbles
    boolean handled -> handled
    boolean stopped -> stopped
    boolean cancelled -> cancelled
    void handle() -> handle
    void cancel() -> cancel
    void stop() -> stop
    void reset() -> reset
    com.badlogic.gdx.scenes.scene2d.Actor getTarget() -> getTarget
    void setTarget(com.badlogic.gdx.scenes.scene2d.Actor) -> setTarget
    com.badlogic.gdx.scenes.scene2d.Actor getListenerActor() -> getListenerActor
    void setListenerActor(com.badlogic.gdx.scenes.scene2d.Actor) -> setListenerActor
    boolean getBubbles() -> getBubbles
    void setBubbles(boolean) -> setBubbles
    boolean isHandled() -> isHandled
    boolean isStopped() -> isStopped
    boolean isCancelled() -> isCancelled
    void setCapture(boolean) -> setCapture
    boolean isCapture() -> isCapture
    void setStage(com.badlogic.gdx.scenes.scene2d.Stage) -> setStage
    com.badlogic.gdx.scenes.scene2d.Stage getStage() -> getStage
com.badlogic.gdx.scenes.scene2d.EventListener -> com.badlogic.gdx.scenes.scene2d.EventListener:
    boolean handle(com.badlogic.gdx.scenes.scene2d.Event) -> handle
com.badlogic.gdx.scenes.scene2d.Group -> com.badlogic.gdx.scenes.scene2d.Group:
    com.badlogic.gdx.utils.SnapshotArray children -> children
    com.badlogic.gdx.math.Matrix3 localTransform -> localTransform
    com.badlogic.gdx.math.Matrix3 worldTransform -> worldTransform
    com.badlogic.gdx.math.Matrix4 batchTransform -> batchTransform
    com.badlogic.gdx.math.Matrix4 oldBatchTransform -> oldBatchTransform
    boolean transform -> transform
    com.badlogic.gdx.math.Rectangle cullingArea -> cullingArea
    com.badlogic.gdx.math.Vector2 point -> point
    void act(float) -> act
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    void drawChildren(com.badlogic.gdx.graphics.g2d.Batch,float) -> drawChildren
    void applyTransform(com.badlogic.gdx.graphics.g2d.Batch,com.badlogic.gdx.math.Matrix4) -> applyTransform
    com.badlogic.gdx.math.Matrix4 computeTransform() -> computeTransform
    void resetTransform(com.badlogic.gdx.graphics.g2d.Batch) -> resetTransform
    void setCullingArea(com.badlogic.gdx.math.Rectangle) -> setCullingArea
    com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean) -> hit
    void childrenChanged() -> childrenChanged
    void addActor(com.badlogic.gdx.scenes.scene2d.Actor) -> addActor
    void addActorAt(int,com.badlogic.gdx.scenes.scene2d.Actor) -> addActorAt
    void addActorBefore(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor) -> addActorBefore
    void addActorAfter(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor) -> addActorAfter
    boolean removeActor(com.badlogic.gdx.scenes.scene2d.Actor) -> removeActor
    void clearChildren() -> clearChildren
    void clear() -> clear
    com.badlogic.gdx.scenes.scene2d.Actor findActor(java.lang.String) -> findActor
    void setStage(com.badlogic.gdx.scenes.scene2d.Stage) -> setStage
    boolean swapActor(int,int) -> swapActor
    boolean swapActor(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor) -> swapActor
    com.badlogic.gdx.utils.SnapshotArray getChildren() -> getChildren
    boolean hasChildren() -> hasChildren
    void setTransform(boolean) -> setTransform
    boolean isTransform() -> isTransform
    com.badlogic.gdx.math.Vector2 localToDescendantCoordinates(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.math.Vector2) -> localToDescendantCoordinates
    void print() -> print
    void print(java.lang.String) -> print
com.badlogic.gdx.scenes.scene2d.InputEvent -> com.badlogic.gdx.scenes.scene2d.InputEvent:
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type type -> type
    float stageX -> stageX
    float stageY -> stageY
    int pointer -> pointer
    int button -> button
    int keyCode -> keyCode
    int scrollAmount -> scrollAmount
    char character -> character
    com.badlogic.gdx.scenes.scene2d.Actor relatedActor -> relatedActor
    void reset() -> reset
    float getStageX() -> getStageX
    void setStageX(float) -> setStageX
    float getStageY() -> getStageY
    void setStageY(float) -> setStageY
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type getType() -> getType
    void setType(com.badlogic.gdx.scenes.scene2d.InputEvent$Type) -> setType
    int getPointer() -> getPointer
    void setPointer(int) -> setPointer
    int getButton() -> getButton
    void setButton(int) -> setButton
    int getKeyCode() -> getKeyCode
    void setKeyCode(int) -> setKeyCode
    char getCharacter() -> getCharacter
    void setCharacter(char) -> setCharacter
    int getScrollAmount() -> getScrollAmount
    void setScrollAmount(int) -> setScrollAmount
    com.badlogic.gdx.scenes.scene2d.Actor getRelatedActor() -> getRelatedActor
    void setRelatedActor(com.badlogic.gdx.scenes.scene2d.Actor) -> setRelatedActor
    com.badlogic.gdx.math.Vector2 toCoordinates(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.math.Vector2) -> toCoordinates
    boolean isTouchFocusCancel() -> isTouchFocusCancel
    java.lang.String toString() -> toString
com.badlogic.gdx.scenes.scene2d.InputEvent$Type -> com.badlogic.gdx.scenes.scene2d.InputEvent$Type:
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type touchDown -> touchDown
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type touchUp -> touchUp
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type touchDragged -> touchDragged
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type mouseMoved -> mouseMoved
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type enter -> enter
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type exit -> exit
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type scrolled -> scrolled
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type keyDown -> keyDown
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type keyUp -> keyUp
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type keyTyped -> keyTyped
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type[] $VALUES -> $VALUES
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type[] values() -> values
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.scenes.scene2d.InputListener -> com.badlogic.gdx.scenes.scene2d.InputListener:
    com.badlogic.gdx.math.Vector2 tmpCoords -> tmpCoords
    boolean handle(com.badlogic.gdx.scenes.scene2d.Event) -> handle
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
    void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> touchDragged
    boolean mouseMoved(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> mouseMoved
    void enter(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,com.badlogic.gdx.scenes.scene2d.Actor) -> enter
    void exit(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,com.badlogic.gdx.scenes.scene2d.Actor) -> exit
    boolean scrolled(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> scrolled
    boolean keyDown(com.badlogic.gdx.scenes.scene2d.InputEvent,int) -> keyDown
    boolean keyUp(com.badlogic.gdx.scenes.scene2d.InputEvent,int) -> keyUp
    boolean keyTyped(com.badlogic.gdx.scenes.scene2d.InputEvent,char) -> keyTyped
com.badlogic.gdx.scenes.scene2d.InputListener$1 -> com.badlogic.gdx.scenes.scene2d.InputListener$1:
    int[] $SwitchMap$com$badlogic$gdx$scenes$scene2d$InputEvent$Type -> $SwitchMap$com$badlogic$gdx$scenes$scene2d$InputEvent$Type
com.badlogic.gdx.scenes.scene2d.Stage -> com.badlogic.gdx.scenes.scene2d.Stage:
    com.badlogic.gdx.math.Vector2 actorCoords -> actorCoords
    com.badlogic.gdx.utils.viewport.Viewport viewport -> viewport
    com.badlogic.gdx.graphics.g2d.Batch batch -> batch
    boolean ownsBatch -> ownsBatch
    com.badlogic.gdx.scenes.scene2d.Group root -> root
    com.badlogic.gdx.math.Vector2 stageCoords -> stageCoords
    com.badlogic.gdx.scenes.scene2d.Actor[] pointerOverActors -> pointerOverActors
    boolean[] pointerTouched -> pointerTouched
    int[] pointerScreenX -> pointerScreenX
    int[] pointerScreenY -> pointerScreenY
    int mouseScreenX -> mouseScreenX
    int mouseScreenY -> mouseScreenY
    com.badlogic.gdx.scenes.scene2d.Actor mouseOverActor -> mouseOverActor
    com.badlogic.gdx.scenes.scene2d.Actor keyboardFocus -> keyboardFocus
    com.badlogic.gdx.scenes.scene2d.Actor scrollFocus -> scrollFocus
    com.badlogic.gdx.utils.SnapshotArray touchFocuses -> touchFocuses
    void draw() -> draw
    void act() -> act
    void act(float) -> act
    com.badlogic.gdx.scenes.scene2d.Actor fireEnterAndExit(com.badlogic.gdx.scenes.scene2d.Actor,int,int,int) -> fireEnterAndExit
    boolean touchDown(int,int,int,int) -> touchDown
    boolean touchDragged(int,int,int) -> touchDragged
    boolean touchUp(int,int,int,int) -> touchUp
    boolean mouseMoved(int,int) -> mouseMoved
    boolean scrolled(int) -> scrolled
    boolean keyDown(int) -> keyDown
    boolean keyUp(int) -> keyUp
    boolean keyTyped(char) -> keyTyped
    void addTouchFocus(com.badlogic.gdx.scenes.scene2d.EventListener,com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor,int,int) -> addTouchFocus
    void removeTouchFocus(com.badlogic.gdx.scenes.scene2d.EventListener,com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor,int,int) -> removeTouchFocus
    void cancelTouchFocus() -> cancelTouchFocus
    void cancelTouchFocus(com.badlogic.gdx.scenes.scene2d.EventListener,com.badlogic.gdx.scenes.scene2d.Actor) -> cancelTouchFocus
    void addActor(com.badlogic.gdx.scenes.scene2d.Actor) -> addActor
    void addAction(com.badlogic.gdx.scenes.scene2d.Action) -> addAction
    com.badlogic.gdx.utils.Array getActors() -> getActors
    boolean addListener(com.badlogic.gdx.scenes.scene2d.EventListener) -> addListener
    boolean removeListener(com.badlogic.gdx.scenes.scene2d.EventListener) -> removeListener
    boolean addCaptureListener(com.badlogic.gdx.scenes.scene2d.EventListener) -> addCaptureListener
    boolean removeCaptureListener(com.badlogic.gdx.scenes.scene2d.EventListener) -> removeCaptureListener
    void clear() -> clear
    void unfocusAll() -> unfocusAll
    void unfocus(com.badlogic.gdx.scenes.scene2d.Actor) -> unfocus
    void setKeyboardFocus(com.badlogic.gdx.scenes.scene2d.Actor) -> setKeyboardFocus
    com.badlogic.gdx.scenes.scene2d.Actor getKeyboardFocus() -> getKeyboardFocus
    void setScrollFocus(com.badlogic.gdx.scenes.scene2d.Actor) -> setScrollFocus
    com.badlogic.gdx.scenes.scene2d.Actor getScrollFocus() -> getScrollFocus
    com.badlogic.gdx.graphics.g2d.Batch getSpriteBatch() -> getSpriteBatch
    com.badlogic.gdx.graphics.g2d.Batch getBatch() -> getBatch
    com.badlogic.gdx.utils.viewport.Viewport getViewport() -> getViewport
    void setViewport(com.badlogic.gdx.utils.viewport.Viewport) -> setViewport
    float getWidth() -> getWidth
    float getHeight() -> getHeight
    com.badlogic.gdx.graphics.Camera getCamera() -> getCamera
    com.badlogic.gdx.scenes.scene2d.Group getRoot() -> getRoot
    com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean) -> hit
    com.badlogic.gdx.math.Vector2 screenToStageCoordinates(com.badlogic.gdx.math.Vector2) -> screenToStageCoordinates
    com.badlogic.gdx.math.Vector2 stageToScreenCoordinates(com.badlogic.gdx.math.Vector2) -> stageToScreenCoordinates
    com.badlogic.gdx.math.Vector2 toScreenCoordinates(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Matrix4) -> toScreenCoordinates
    void calculateScissors(com.badlogic.gdx.math.Rectangle,com.badlogic.gdx.math.Rectangle) -> calculateScissors
    void dispose() -> dispose
com.badlogic.gdx.scenes.scene2d.Stage$TouchFocus -> com.badlogic.gdx.scenes.scene2d.Stage$TouchFocus:
    com.badlogic.gdx.scenes.scene2d.EventListener listener -> listener
    com.badlogic.gdx.scenes.scene2d.Actor listenerActor -> listenerActor
    com.badlogic.gdx.scenes.scene2d.Actor target -> target
    int pointer -> pointer
    int button -> button
    void reset() -> reset
com.badlogic.gdx.scenes.scene2d.Touchable -> com.badlogic.gdx.scenes.scene2d.Touchable:
    com.badlogic.gdx.scenes.scene2d.Touchable enabled -> enabled
    com.badlogic.gdx.scenes.scene2d.Touchable disabled -> disabled
    com.badlogic.gdx.scenes.scene2d.Touchable childrenOnly -> childrenOnly
    com.badlogic.gdx.scenes.scene2d.Touchable[] $VALUES -> $VALUES
    com.badlogic.gdx.scenes.scene2d.Touchable[] values() -> values
    com.badlogic.gdx.scenes.scene2d.Touchable valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.scenes.scene2d.actions.Actions -> com.badlogic.gdx.scenes.scene2d.actions.Actions:
    com.badlogic.gdx.scenes.scene2d.Action action(java.lang.Class) -> action
    com.badlogic.gdx.scenes.scene2d.actions.AddAction addAction(com.badlogic.gdx.scenes.scene2d.Action) -> addAction
    com.badlogic.gdx.scenes.scene2d.actions.AddAction addAction(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Actor) -> addAction
    com.badlogic.gdx.scenes.scene2d.actions.RemoveAction removeAction(com.badlogic.gdx.scenes.scene2d.Action) -> removeAction
    com.badlogic.gdx.scenes.scene2d.actions.RemoveAction removeAction(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Actor) -> removeAction
    com.badlogic.gdx.scenes.scene2d.actions.MoveToAction moveTo(float,float) -> moveTo
    com.badlogic.gdx.scenes.scene2d.actions.MoveToAction moveTo(float,float,float) -> moveTo
    com.badlogic.gdx.scenes.scene2d.actions.MoveToAction moveTo(float,float,float,com.badlogic.gdx.math.Interpolation) -> moveTo
    com.badlogic.gdx.scenes.scene2d.actions.MoveByAction moveBy(float,float) -> moveBy
    com.badlogic.gdx.scenes.scene2d.actions.MoveByAction moveBy(float,float,float) -> moveBy
    com.badlogic.gdx.scenes.scene2d.actions.MoveByAction moveBy(float,float,float,com.badlogic.gdx.math.Interpolation) -> moveBy
    com.badlogic.gdx.scenes.scene2d.actions.SizeToAction sizeTo(float,float) -> sizeTo
    com.badlogic.gdx.scenes.scene2d.actions.SizeToAction sizeTo(float,float,float) -> sizeTo
    com.badlogic.gdx.scenes.scene2d.actions.SizeToAction sizeTo(float,float,float,com.badlogic.gdx.math.Interpolation) -> sizeTo
    com.badlogic.gdx.scenes.scene2d.actions.SizeByAction sizeBy(float,float) -> sizeBy
    com.badlogic.gdx.scenes.scene2d.actions.SizeByAction sizeBy(float,float,float) -> sizeBy
    com.badlogic.gdx.scenes.scene2d.actions.SizeByAction sizeBy(float,float,float,com.badlogic.gdx.math.Interpolation) -> sizeBy
    com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction scaleTo(float,float) -> scaleTo
    com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction scaleTo(float,float,float) -> scaleTo
    com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction scaleTo(float,float,float,com.badlogic.gdx.math.Interpolation) -> scaleTo
    com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction scaleBy(float,float) -> scaleBy
    com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction scaleBy(float,float,float) -> scaleBy
    com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction scaleBy(float,float,float,com.badlogic.gdx.math.Interpolation) -> scaleBy
    com.badlogic.gdx.scenes.scene2d.actions.RotateToAction rotateTo(float) -> rotateTo
    com.badlogic.gdx.scenes.scene2d.actions.RotateToAction rotateTo(float,float) -> rotateTo
    com.badlogic.gdx.scenes.scene2d.actions.RotateToAction rotateTo(float,float,com.badlogic.gdx.math.Interpolation) -> rotateTo
    com.badlogic.gdx.scenes.scene2d.actions.RotateByAction rotateBy(float) -> rotateBy
    com.badlogic.gdx.scenes.scene2d.actions.RotateByAction rotateBy(float,float) -> rotateBy
    com.badlogic.gdx.scenes.scene2d.actions.RotateByAction rotateBy(float,float,com.badlogic.gdx.math.Interpolation) -> rotateBy
    com.badlogic.gdx.scenes.scene2d.actions.ColorAction color(com.badlogic.gdx.graphics.Color) -> color
    com.badlogic.gdx.scenes.scene2d.actions.ColorAction color(com.badlogic.gdx.graphics.Color,float) -> color
    com.badlogic.gdx.scenes.scene2d.actions.ColorAction color(com.badlogic.gdx.graphics.Color,float,com.badlogic.gdx.math.Interpolation) -> color
    com.badlogic.gdx.scenes.scene2d.actions.AlphaAction alpha(float) -> alpha
    com.badlogic.gdx.scenes.scene2d.actions.AlphaAction alpha(float,float) -> alpha
    com.badlogic.gdx.scenes.scene2d.actions.AlphaAction alpha(float,float,com.badlogic.gdx.math.Interpolation) -> alpha
    com.badlogic.gdx.scenes.scene2d.actions.AlphaAction fadeOut(float) -> fadeOut
    com.badlogic.gdx.scenes.scene2d.actions.AlphaAction fadeOut(float,com.badlogic.gdx.math.Interpolation) -> fadeOut
    com.badlogic.gdx.scenes.scene2d.actions.AlphaAction fadeIn(float) -> fadeIn
    com.badlogic.gdx.scenes.scene2d.actions.AlphaAction fadeIn(float,com.badlogic.gdx.math.Interpolation) -> fadeIn
    com.badlogic.gdx.scenes.scene2d.actions.VisibleAction show() -> show
    com.badlogic.gdx.scenes.scene2d.actions.VisibleAction hide() -> hide
    com.badlogic.gdx.scenes.scene2d.actions.VisibleAction visible(boolean) -> visible
    com.badlogic.gdx.scenes.scene2d.actions.TouchableAction touchable(com.badlogic.gdx.scenes.scene2d.Touchable) -> touchable
    com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction removeActor() -> removeActor
    com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction removeActor(com.badlogic.gdx.scenes.scene2d.Actor) -> removeActor
    com.badlogic.gdx.scenes.scene2d.actions.DelayAction delay(float) -> delay
    com.badlogic.gdx.scenes.scene2d.actions.DelayAction delay(float,com.badlogic.gdx.scenes.scene2d.Action) -> delay
    com.badlogic.gdx.scenes.scene2d.actions.TimeScaleAction timeScale(float,com.badlogic.gdx.scenes.scene2d.Action) -> timeScale
    com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence(com.badlogic.gdx.scenes.scene2d.Action) -> sequence
    com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action) -> sequence
    com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action) -> sequence
    com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action) -> sequence
    com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action) -> sequence
    com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence(com.badlogic.gdx.scenes.scene2d.Action[]) -> sequence
    com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence() -> sequence
    com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel(com.badlogic.gdx.scenes.scene2d.Action) -> parallel
    com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action) -> parallel
    com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action) -> parallel
    com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action) -> parallel
    com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action) -> parallel
    com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel(com.badlogic.gdx.scenes.scene2d.Action[]) -> parallel
    com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel() -> parallel
    com.badlogic.gdx.scenes.scene2d.actions.RepeatAction repeat(int,com.badlogic.gdx.scenes.scene2d.Action) -> repeat
    com.badlogic.gdx.scenes.scene2d.actions.RepeatAction forever(com.badlogic.gdx.scenes.scene2d.Action) -> forever
    com.badlogic.gdx.scenes.scene2d.actions.RunnableAction run(java.lang.Runnable) -> run
    com.badlogic.gdx.scenes.scene2d.actions.LayoutAction layout(boolean) -> layout
    com.badlogic.gdx.scenes.scene2d.actions.AfterAction after(com.badlogic.gdx.scenes.scene2d.Action) -> after
    com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction addListener(com.badlogic.gdx.scenes.scene2d.EventListener,boolean) -> addListener
    com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction addListener(com.badlogic.gdx.scenes.scene2d.EventListener,boolean,com.badlogic.gdx.scenes.scene2d.Actor) -> addListener
    com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction removeListener(com.badlogic.gdx.scenes.scene2d.EventListener,boolean) -> removeListener
    com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction removeListener(com.badlogic.gdx.scenes.scene2d.EventListener,boolean,com.badlogic.gdx.scenes.scene2d.Actor) -> removeListener
com.badlogic.gdx.scenes.scene2d.actions.AddAction -> com.badlogic.gdx.scenes.scene2d.actions.AddAction:
    com.badlogic.gdx.scenes.scene2d.Actor targetActor -> targetActor
    com.badlogic.gdx.scenes.scene2d.Action action -> action
    boolean act(float) -> act
    com.badlogic.gdx.scenes.scene2d.Actor getTargetActor() -> getTargetActor
    void setTargetActor(com.badlogic.gdx.scenes.scene2d.Actor) -> setTargetActor
    com.badlogic.gdx.scenes.scene2d.Action getAction() -> getAction
    void setAction(com.badlogic.gdx.scenes.scene2d.Action) -> setAction
    void restart() -> restart
    void reset() -> reset
com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction -> com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction:
    com.badlogic.gdx.scenes.scene2d.Actor targetActor -> targetActor
    com.badlogic.gdx.scenes.scene2d.EventListener listener -> listener
    boolean capture -> capture
    boolean act(float) -> act
    com.badlogic.gdx.scenes.scene2d.Actor getTargetActor() -> getTargetActor
    void setTargetActor(com.badlogic.gdx.scenes.scene2d.Actor) -> setTargetActor
    com.badlogic.gdx.scenes.scene2d.EventListener getListener() -> getListener
    void setListener(com.badlogic.gdx.scenes.scene2d.EventListener) -> setListener
    boolean getCapture() -> getCapture
    void setCapture(boolean) -> setCapture
    void reset() -> reset
com.badlogic.gdx.scenes.scene2d.actions.AfterAction -> com.badlogic.gdx.scenes.scene2d.actions.AfterAction:
    com.badlogic.gdx.utils.Array waitForActions -> waitForActions
    void setActor(com.badlogic.gdx.scenes.scene2d.Actor) -> setActor
    void restart() -> restart
    boolean delegate(float) -> delegate
com.badlogic.gdx.scenes.scene2d.actions.AlphaAction -> com.badlogic.gdx.scenes.scene2d.actions.AlphaAction:
    float start -> start
    float end -> end
    com.badlogic.gdx.graphics.Color color -> color
    void begin() -> begin
    void update(float) -> update
    void reset() -> reset
    com.badlogic.gdx.graphics.Color getColor() -> getColor
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    float getAlpha() -> getAlpha
    void setAlpha(float) -> setAlpha
com.badlogic.gdx.scenes.scene2d.actions.ColorAction -> com.badlogic.gdx.scenes.scene2d.actions.ColorAction:
    float startR -> startR
    float startG -> startG
    float startB -> startB
    float startA -> startA
    com.badlogic.gdx.graphics.Color color -> color
    com.badlogic.gdx.graphics.Color end -> end
    void begin() -> begin
    void update(float) -> update
    void reset() -> reset
    com.badlogic.gdx.graphics.Color getColor() -> getColor
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    com.badlogic.gdx.graphics.Color getEndColor() -> getEndColor
    void setEndColor(com.badlogic.gdx.graphics.Color) -> setEndColor
com.badlogic.gdx.scenes.scene2d.actions.CountdownEventAction -> com.badlogic.gdx.scenes.scene2d.actions.CountdownEventAction:
    int count -> count
    int current -> current
    boolean handle(com.badlogic.gdx.scenes.scene2d.Event) -> handle
com.badlogic.gdx.scenes.scene2d.actions.DelayAction -> com.badlogic.gdx.scenes.scene2d.actions.DelayAction:
    float duration -> duration
    float time -> time
    boolean delegate(float) -> delegate
    void finish() -> finish
    void restart() -> restart
    float getTime() -> getTime
    void setTime(float) -> setTime
    float getDuration() -> getDuration
    void setDuration(float) -> setDuration
com.badlogic.gdx.scenes.scene2d.actions.DelegateAction -> com.badlogic.gdx.scenes.scene2d.actions.DelegateAction:
    com.badlogic.gdx.scenes.scene2d.Action action -> action
    void setAction(com.badlogic.gdx.scenes.scene2d.Action) -> setAction
    com.badlogic.gdx.scenes.scene2d.Action getAction() -> getAction
    boolean delegate(float) -> delegate
    boolean act(float) -> act
    void restart() -> restart
    void reset() -> reset
    void setActor(com.badlogic.gdx.scenes.scene2d.Actor) -> setActor
    java.lang.String toString() -> toString
com.badlogic.gdx.scenes.scene2d.actions.EventAction -> com.badlogic.gdx.scenes.scene2d.actions.EventAction:
    java.lang.Class eventClass -> eventClass
    boolean result -> result
    boolean active -> active
    com.badlogic.gdx.scenes.scene2d.EventListener listener -> listener
    void restart() -> restart
    void setActor(com.badlogic.gdx.scenes.scene2d.Actor) -> setActor
    boolean handle(com.badlogic.gdx.scenes.scene2d.Event) -> handle
    boolean act(float) -> act
    boolean isActive() -> isActive
    void setActive(boolean) -> setActive
com.badlogic.gdx.scenes.scene2d.actions.EventAction$1 -> com.badlogic.gdx.scenes.scene2d.actions.EventAction$1:
    com.badlogic.gdx.scenes.scene2d.actions.EventAction this$0 -> this$0
    boolean handle(com.badlogic.gdx.scenes.scene2d.Event) -> handle
com.badlogic.gdx.scenes.scene2d.actions.FloatAction -> com.badlogic.gdx.scenes.scene2d.actions.FloatAction:
    float start -> start
    float end -> end
    float value -> value
    void begin() -> begin
    void update(float) -> update
    float getValue() -> getValue
    void setValue(float) -> setValue
    float getStart() -> getStart
    void setStart(float) -> setStart
    float getEnd() -> getEnd
    void setEnd(float) -> setEnd
com.badlogic.gdx.scenes.scene2d.actions.IntAction -> com.badlogic.gdx.scenes.scene2d.actions.IntAction:
    int start -> start
    int end -> end
    int value -> value
    void begin() -> begin
    void update(float) -> update
    int getValue() -> getValue
    void setValue(int) -> setValue
    int getStart() -> getStart
    void setStart(int) -> setStart
    int getEnd() -> getEnd
    void setEnd(int) -> setEnd
com.badlogic.gdx.scenes.scene2d.actions.LayoutAction -> com.badlogic.gdx.scenes.scene2d.actions.LayoutAction:
    boolean enabled -> enabled
    void setActor(com.badlogic.gdx.scenes.scene2d.Actor) -> setActor
    boolean act(float) -> act
    boolean isEnabled() -> isEnabled
    void setLayoutEnabled(boolean) -> setLayoutEnabled
com.badlogic.gdx.scenes.scene2d.actions.MoveByAction -> com.badlogic.gdx.scenes.scene2d.actions.MoveByAction:
    float amountX -> amountX
    float amountY -> amountY
    void updateRelative(float) -> updateRelative
    void setAmount(float,float) -> setAmount
    float getAmountX() -> getAmountX
    void setAmountX(float) -> setAmountX
    float getAmountY() -> getAmountY
    void setAmountY(float) -> setAmountY
com.badlogic.gdx.scenes.scene2d.actions.MoveToAction -> com.badlogic.gdx.scenes.scene2d.actions.MoveToAction:
    float startX -> startX
    float startY -> startY
    float endX -> endX
    float endY -> endY
    void begin() -> begin
    void update(float) -> update
    void setPosition(float,float) -> setPosition
    float getX() -> getX
    void setX(float) -> setX
    float getY() -> getY
    void setY(float) -> setY
com.badlogic.gdx.scenes.scene2d.actions.ParallelAction -> com.badlogic.gdx.scenes.scene2d.actions.ParallelAction:
    com.badlogic.gdx.utils.Array actions -> actions
    boolean complete -> complete
    boolean act(float) -> act
    void restart() -> restart
    void reset() -> reset
    void addAction(com.badlogic.gdx.scenes.scene2d.Action) -> addAction
    void setActor(com.badlogic.gdx.scenes.scene2d.Actor) -> setActor
    com.badlogic.gdx.utils.Array getActions() -> getActions
    java.lang.String toString() -> toString
com.badlogic.gdx.scenes.scene2d.actions.RelativeTemporalAction -> com.badlogic.gdx.scenes.scene2d.actions.RelativeTemporalAction:
    float lastPercent -> lastPercent
    void begin() -> begin
    void update(float) -> update
    void updateRelative(float) -> updateRelative
com.badlogic.gdx.scenes.scene2d.actions.RemoveAction -> com.badlogic.gdx.scenes.scene2d.actions.RemoveAction:
    com.badlogic.gdx.scenes.scene2d.Actor targetActor -> targetActor
    com.badlogic.gdx.scenes.scene2d.Action action -> action
    boolean act(float) -> act
    com.badlogic.gdx.scenes.scene2d.Actor getTargetActor() -> getTargetActor
    void setTargetActor(com.badlogic.gdx.scenes.scene2d.Actor) -> setTargetActor
    com.badlogic.gdx.scenes.scene2d.Action getAction() -> getAction
    void setAction(com.badlogic.gdx.scenes.scene2d.Action) -> setAction
    void reset() -> reset
com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction -> com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction:
    com.badlogic.gdx.scenes.scene2d.Actor removeActor -> removeActor
    boolean removed -> removed
    boolean act(float) -> act
    void restart() -> restart
    void reset() -> reset
    com.badlogic.gdx.scenes.scene2d.Actor getRemoveActor() -> getRemoveActor
    void setRemoveActor(com.badlogic.gdx.scenes.scene2d.Actor) -> setRemoveActor
com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction -> com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction:
    com.badlogic.gdx.scenes.scene2d.Actor targetActor -> targetActor
    com.badlogic.gdx.scenes.scene2d.EventListener listener -> listener
    boolean capture -> capture
    boolean act(float) -> act
    com.badlogic.gdx.scenes.scene2d.Actor getTargetActor() -> getTargetActor
    void setTargetActor(com.badlogic.gdx.scenes.scene2d.Actor) -> setTargetActor
    com.badlogic.gdx.scenes.scene2d.EventListener getListener() -> getListener
    void setListener(com.badlogic.gdx.scenes.scene2d.EventListener) -> setListener
    boolean getCapture() -> getCapture
    void setCapture(boolean) -> setCapture
    void reset() -> reset
com.badlogic.gdx.scenes.scene2d.actions.RepeatAction -> com.badlogic.gdx.scenes.scene2d.actions.RepeatAction:
    int FOREVER -> FOREVER
    int repeatCount -> repeatCount
    int executedCount -> executedCount
    boolean finished -> finished
    boolean delegate(float) -> delegate
    void finish() -> finish
    void restart() -> restart
    void setCount(int) -> setCount
    int getCount() -> getCount
com.badlogic.gdx.scenes.scene2d.actions.RotateByAction -> com.badlogic.gdx.scenes.scene2d.actions.RotateByAction:
    float amount -> amount
    void updateRelative(float) -> updateRelative
    float getAmount() -> getAmount
    void setAmount(float) -> setAmount
com.badlogic.gdx.scenes.scene2d.actions.RotateToAction -> com.badlogic.gdx.scenes.scene2d.actions.RotateToAction:
    float start -> start
    float end -> end
    void begin() -> begin
    void update(float) -> update
    float getRotation() -> getRotation
    void setRotation(float) -> setRotation
com.badlogic.gdx.scenes.scene2d.actions.RunnableAction -> com.badlogic.gdx.scenes.scene2d.actions.RunnableAction:
    java.lang.Runnable runnable -> runnable
    boolean ran -> ran
    boolean act(float) -> act
    void run() -> run
    void restart() -> restart
    void reset() -> reset
    java.lang.Runnable getRunnable() -> getRunnable
    void setRunnable(java.lang.Runnable) -> setRunnable
com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction -> com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction:
    float amountX -> amountX
    float amountY -> amountY
    void updateRelative(float) -> updateRelative
    void setAmount(float,float) -> setAmount
    void setAmount(float) -> setAmount
    float getAmountX() -> getAmountX
    void setAmountX(float) -> setAmountX
    float getAmountY() -> getAmountY
    void setAmountY(float) -> setAmountY
com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction -> com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction:
    float startX -> startX
    float startY -> startY
    float endX -> endX
    float endY -> endY
    void begin() -> begin
    void update(float) -> update
    void setScale(float,float) -> setScale
    void setScale(float) -> setScale
    float getX() -> getX
    void setX(float) -> setX
    float getY() -> getY
    void setY(float) -> setY
com.badlogic.gdx.scenes.scene2d.actions.SequenceAction -> com.badlogic.gdx.scenes.scene2d.actions.SequenceAction:
    int index -> index
    boolean act(float) -> act
    void restart() -> restart
com.badlogic.gdx.scenes.scene2d.actions.SizeByAction -> com.badlogic.gdx.scenes.scene2d.actions.SizeByAction:
    float amountWidth -> amountWidth
    float amountHeight -> amountHeight
    void updateRelative(float) -> updateRelative
    void setAmount(float,float) -> setAmount
    float getAmountWidth() -> getAmountWidth
    void setAmountWidth(float) -> setAmountWidth
    float getAmountHeight() -> getAmountHeight
    void setAmountHeight(float) -> setAmountHeight
com.badlogic.gdx.scenes.scene2d.actions.SizeToAction -> com.badlogic.gdx.scenes.scene2d.actions.SizeToAction:
    float startWidth -> startWidth
    float startHeight -> startHeight
    float endWidth -> endWidth
    float endHeight -> endHeight
    void begin() -> begin
    void update(float) -> update
    void setSize(float,float) -> setSize
    float getWidth() -> getWidth
    void setWidth(float) -> setWidth
    float getHeight() -> getHeight
    void setHeight(float) -> setHeight
com.badlogic.gdx.scenes.scene2d.actions.TemporalAction -> com.badlogic.gdx.scenes.scene2d.actions.TemporalAction:
    float duration -> duration
    float time -> time
    com.badlogic.gdx.math.Interpolation interpolation -> interpolation
    boolean reverse -> reverse
    boolean began -> began
    boolean complete -> complete
    boolean act(float) -> act
    void begin() -> begin
    void end() -> end
    void update(float) -> update
    void finish() -> finish
    void restart() -> restart
    void reset() -> reset
    float getTime() -> getTime
    void setTime(float) -> setTime
    float getDuration() -> getDuration
    void setDuration(float) -> setDuration
    com.badlogic.gdx.math.Interpolation getInterpolation() -> getInterpolation
    void setInterpolation(com.badlogic.gdx.math.Interpolation) -> setInterpolation
    boolean isReverse() -> isReverse
    void setReverse(boolean) -> setReverse
com.badlogic.gdx.scenes.scene2d.actions.TimeScaleAction -> com.badlogic.gdx.scenes.scene2d.actions.TimeScaleAction:
    float scale -> scale
    boolean delegate(float) -> delegate
    float getScale() -> getScale
    void setScale(float) -> setScale
com.badlogic.gdx.scenes.scene2d.actions.TouchableAction -> com.badlogic.gdx.scenes.scene2d.actions.TouchableAction:
    com.badlogic.gdx.scenes.scene2d.Touchable touchable -> touchable
    boolean act(float) -> act
    com.badlogic.gdx.scenes.scene2d.Touchable getTouchable() -> getTouchable
    void setTouchable(com.badlogic.gdx.scenes.scene2d.Touchable) -> setTouchable
com.badlogic.gdx.scenes.scene2d.actions.VisibleAction -> com.badlogic.gdx.scenes.scene2d.actions.VisibleAction:
    boolean visible -> visible
    boolean act(float) -> act
    boolean isVisible() -> isVisible
    void setVisible(boolean) -> setVisible
com.badlogic.gdx.scenes.scene2d.ui.Button -> com.badlogic.gdx.scenes.scene2d.ui.Button:
    com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle style -> style
    boolean isChecked -> isChecked
    boolean isDisabled -> isDisabled
    com.badlogic.gdx.scenes.scene2d.ui.ButtonGroup buttonGroup -> buttonGroup
    com.badlogic.gdx.scenes.scene2d.utils.ClickListener clickListener -> clickListener
    void initialize() -> initialize
    void setChecked(boolean) -> setChecked
    void toggle() -> toggle
    boolean isChecked() -> isChecked
    boolean isPressed() -> isPressed
    boolean isOver() -> isOver
    com.badlogic.gdx.scenes.scene2d.utils.ClickListener getClickListener() -> getClickListener
    boolean isDisabled() -> isDisabled
    void setDisabled(boolean) -> setDisabled
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle) -> setStyle
    com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle getStyle() -> getStyle
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    float getMinWidth() -> getMinWidth
    float getMinHeight() -> getMinHeight
com.badlogic.gdx.scenes.scene2d.ui.Button$1 -> com.badlogic.gdx.scenes.scene2d.ui.Button$1:
    com.badlogic.gdx.scenes.scene2d.ui.Button this$0 -> this$0
    void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle -> com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable up -> up
    com.badlogic.gdx.scenes.scene2d.utils.Drawable down -> down
    com.badlogic.gdx.scenes.scene2d.utils.Drawable over -> over
    com.badlogic.gdx.scenes.scene2d.utils.Drawable checked -> checked
    com.badlogic.gdx.scenes.scene2d.utils.Drawable checkedOver -> checkedOver
    com.badlogic.gdx.scenes.scene2d.utils.Drawable disabled -> disabled
    float pressedOffsetX -> pressedOffsetX
    float pressedOffsetY -> pressedOffsetY
    float unpressedOffsetX -> unpressedOffsetX
    float unpressedOffsetY -> unpressedOffsetY
com.badlogic.gdx.scenes.scene2d.ui.ButtonGroup -> com.badlogic.gdx.scenes.scene2d.ui.ButtonGroup:
    com.badlogic.gdx.utils.Array buttons -> buttons
    com.badlogic.gdx.utils.Array checkedButtons -> checkedButtons
    int minCheckCount -> minCheckCount
    int maxCheckCount -> maxCheckCount
    boolean uncheckLast -> uncheckLast
    com.badlogic.gdx.scenes.scene2d.ui.Button lastChecked -> lastChecked
    void add(com.badlogic.gdx.scenes.scene2d.ui.Button) -> add
    void add(com.badlogic.gdx.scenes.scene2d.ui.Button[]) -> add
    void remove(com.badlogic.gdx.scenes.scene2d.ui.Button) -> remove
    void remove(com.badlogic.gdx.scenes.scene2d.ui.Button[]) -> remove
    void setChecked(java.lang.String) -> setChecked
    boolean canCheck(com.badlogic.gdx.scenes.scene2d.ui.Button,boolean) -> canCheck
    void uncheckAll() -> uncheckAll
    com.badlogic.gdx.scenes.scene2d.ui.Button getChecked() -> getChecked
    com.badlogic.gdx.utils.Array getAllChecked() -> getAllChecked
    com.badlogic.gdx.utils.Array getButtons() -> getButtons
    void setMinCheckCount(int) -> setMinCheckCount
    void setMaxCheckCount(int) -> setMaxCheckCount
    void setUncheckLast(boolean) -> setUncheckLast
com.badlogic.gdx.scenes.scene2d.ui.CheckBox -> com.badlogic.gdx.scenes.scene2d.ui.CheckBox:
    com.badlogic.gdx.scenes.scene2d.ui.Image image -> image
    com.esotericsoftware.tablelayout.Cell imageCell -> imageCell
    com.badlogic.gdx.scenes.scene2d.ui.CheckBox$CheckBoxStyle style -> style
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle) -> setStyle
    com.badlogic.gdx.scenes.scene2d.ui.CheckBox$CheckBoxStyle getStyle() -> getStyle
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    com.badlogic.gdx.scenes.scene2d.ui.Image getImage() -> getImage
    com.esotericsoftware.tablelayout.Cell getImageCell() -> getImageCell
    com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle getStyle() -> getStyle
    com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle getStyle() -> getStyle
com.badlogic.gdx.scenes.scene2d.ui.CheckBox$CheckBoxStyle -> com.badlogic.gdx.scenes.scene2d.ui.CheckBox$CheckBoxStyle:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable checkboxOn -> checkboxOn
    com.badlogic.gdx.scenes.scene2d.utils.Drawable checkboxOff -> checkboxOff
    com.badlogic.gdx.scenes.scene2d.utils.Drawable checkboxOver -> checkboxOver
    com.badlogic.gdx.scenes.scene2d.utils.Drawable checkboxOnDisabled -> checkboxOnDisabled
    com.badlogic.gdx.scenes.scene2d.utils.Drawable checkboxOffDisabled -> checkboxOffDisabled
com.badlogic.gdx.scenes.scene2d.ui.Container -> com.badlogic.gdx.scenes.scene2d.ui.Container:
    com.badlogic.gdx.scenes.scene2d.Actor widget -> widget
    java.lang.Float minWidth -> minWidth
    java.lang.Float minHeight -> minHeight
    java.lang.Float prefWidth -> prefWidth
    java.lang.Float prefHeight -> prefHeight
    java.lang.Float maxWidth -> maxWidth
    java.lang.Float maxHeight -> maxHeight
    float padTop -> padTop
    float padLeft -> padLeft
    float padBottom -> padBottom
    float padRight -> padRight
    float fillX -> fillX
    float fillY -> fillY
    int align -> align
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> background
    boolean clip -> clip
    boolean round -> round
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    void drawBackground(com.badlogic.gdx.graphics.g2d.Batch,float,float,float) -> drawBackground
    void setBackground(com.badlogic.gdx.scenes.scene2d.utils.Drawable) -> setBackground
    com.badlogic.gdx.scenes.scene2d.ui.Container background(com.badlogic.gdx.scenes.scene2d.utils.Drawable) -> background
    com.badlogic.gdx.scenes.scene2d.utils.Drawable getBackground() -> getBackground
    void layout() -> layout
    void setWidget(com.badlogic.gdx.scenes.scene2d.Actor) -> setWidget
    com.badlogic.gdx.scenes.scene2d.Actor getWidget() -> getWidget
    void addActor(com.badlogic.gdx.scenes.scene2d.Actor) -> addActor
    void addActorAt(int,com.badlogic.gdx.scenes.scene2d.Actor) -> addActorAt
    void addActorBefore(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor) -> addActorBefore
    void addActorAfter(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor) -> addActorAfter
    boolean removeActor(com.badlogic.gdx.scenes.scene2d.Actor) -> removeActor
    com.badlogic.gdx.scenes.scene2d.ui.Container size(float) -> size
    com.badlogic.gdx.scenes.scene2d.ui.Container size(float,float) -> size
    com.badlogic.gdx.scenes.scene2d.ui.Container width(float) -> width
    com.badlogic.gdx.scenes.scene2d.ui.Container height(float) -> height
    com.badlogic.gdx.scenes.scene2d.ui.Container minSize(float) -> minSize
    com.badlogic.gdx.scenes.scene2d.ui.Container minSize(float,float) -> minSize
    com.badlogic.gdx.scenes.scene2d.ui.Container minWidth(float) -> minWidth
    com.badlogic.gdx.scenes.scene2d.ui.Container minHeight(float) -> minHeight
    com.badlogic.gdx.scenes.scene2d.ui.Container prefSize(float) -> prefSize
    com.badlogic.gdx.scenes.scene2d.ui.Container prefSize(float,float) -> prefSize
    com.badlogic.gdx.scenes.scene2d.ui.Container prefWidth(float) -> prefWidth
    com.badlogic.gdx.scenes.scene2d.ui.Container prefHeight(float) -> prefHeight
    com.badlogic.gdx.scenes.scene2d.ui.Container maxSize(float) -> maxSize
    com.badlogic.gdx.scenes.scene2d.ui.Container maxSize(float,float) -> maxSize
    com.badlogic.gdx.scenes.scene2d.ui.Container maxWidth(float) -> maxWidth
    com.badlogic.gdx.scenes.scene2d.ui.Container maxHeight(float) -> maxHeight
    com.badlogic.gdx.scenes.scene2d.ui.Container pad(float) -> pad
    com.badlogic.gdx.scenes.scene2d.ui.Container pad(float,float,float,float) -> pad
    com.badlogic.gdx.scenes.scene2d.ui.Container padTop(float) -> padTop
    com.badlogic.gdx.scenes.scene2d.ui.Container padLeft(float) -> padLeft
    com.badlogic.gdx.scenes.scene2d.ui.Container padBottom(float) -> padBottom
    com.badlogic.gdx.scenes.scene2d.ui.Container padRight(float) -> padRight
    com.badlogic.gdx.scenes.scene2d.ui.Container fill() -> fill
    com.badlogic.gdx.scenes.scene2d.ui.Container fillX() -> fillX
    com.badlogic.gdx.scenes.scene2d.ui.Container fillY() -> fillY
    com.badlogic.gdx.scenes.scene2d.ui.Container fill(float,float) -> fill
    com.badlogic.gdx.scenes.scene2d.ui.Container fill(boolean,boolean) -> fill
    com.badlogic.gdx.scenes.scene2d.ui.Container fill(boolean) -> fill
    com.badlogic.gdx.scenes.scene2d.ui.Container align(int) -> align
    com.badlogic.gdx.scenes.scene2d.ui.Container center() -> center
    com.badlogic.gdx.scenes.scene2d.ui.Container top() -> top
    com.badlogic.gdx.scenes.scene2d.ui.Container left() -> left
    com.badlogic.gdx.scenes.scene2d.ui.Container bottom() -> bottom
    com.badlogic.gdx.scenes.scene2d.ui.Container right() -> right
    float getMinWidth() -> getMinWidth
    java.lang.Float getMinHeightValue() -> getMinHeightValue
    float getMinHeight() -> getMinHeight
    java.lang.Float getPrefWidthValue() -> getPrefWidthValue
    float getPrefWidth() -> getPrefWidth
    java.lang.Float getPrefHeightValue() -> getPrefHeightValue
    float getPrefHeight() -> getPrefHeight
    java.lang.Float getMaxWidthValue() -> getMaxWidthValue
    float getMaxWidth() -> getMaxWidth
    java.lang.Float getMaxHeightValue() -> getMaxHeightValue
    float getMaxHeight() -> getMaxHeight
    float getPadTop() -> getPadTop
    float getPadLeft() -> getPadLeft
    float getPadBottom() -> getPadBottom
    float getPadRight() -> getPadRight
    float getFillX() -> getFillX
    float getFillY() -> getFillY
    int getAlign() -> getAlign
    void setRound(boolean) -> setRound
    void setClip(boolean) -> setClip
    boolean getClip() -> getClip
    com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean) -> hit
com.badlogic.gdx.scenes.scene2d.ui.Dialog -> com.badlogic.gdx.scenes.scene2d.ui.Dialog:
    float fadeDuration -> fadeDuration
    com.badlogic.gdx.scenes.scene2d.ui.Table contentTable -> contentTable
    com.badlogic.gdx.scenes.scene2d.ui.Table buttonTable -> buttonTable
    com.badlogic.gdx.scenes.scene2d.ui.Skin skin -> skin
    com.badlogic.gdx.utils.ObjectMap values -> values
    boolean cancelHide -> cancelHide
    com.badlogic.gdx.scenes.scene2d.Actor previousKeyboardFocus -> previousKeyboardFocus
    com.badlogic.gdx.scenes.scene2d.Actor previousScrollFocus -> previousScrollFocus
    com.badlogic.gdx.scenes.scene2d.InputListener ignoreTouchDown -> ignoreTouchDown
    void initialize() -> initialize
    com.badlogic.gdx.scenes.scene2d.ui.Table getContentTable() -> getContentTable
    com.badlogic.gdx.scenes.scene2d.ui.Table getButtonTable() -> getButtonTable
    com.badlogic.gdx.scenes.scene2d.ui.Dialog text(java.lang.String) -> text
    com.badlogic.gdx.scenes.scene2d.ui.Dialog text(java.lang.String,com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle) -> text
    com.badlogic.gdx.scenes.scene2d.ui.Dialog text(com.badlogic.gdx.scenes.scene2d.ui.Label) -> text
    com.badlogic.gdx.scenes.scene2d.ui.Dialog button(java.lang.String) -> button
    com.badlogic.gdx.scenes.scene2d.ui.Dialog button(java.lang.String,java.lang.Object) -> button
    com.badlogic.gdx.scenes.scene2d.ui.Dialog button(java.lang.String,java.lang.Object,com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle) -> button
    com.badlogic.gdx.scenes.scene2d.ui.Dialog button(com.badlogic.gdx.scenes.scene2d.ui.Button) -> button
    com.badlogic.gdx.scenes.scene2d.ui.Dialog button(com.badlogic.gdx.scenes.scene2d.ui.Button,java.lang.Object) -> button
    com.badlogic.gdx.scenes.scene2d.ui.Dialog show(com.badlogic.gdx.scenes.scene2d.Stage) -> show
    void hide() -> hide
    void setObject(com.badlogic.gdx.scenes.scene2d.Actor,java.lang.Object) -> setObject
    com.badlogic.gdx.scenes.scene2d.ui.Dialog key(int,java.lang.Object) -> key
    void result(java.lang.Object) -> result
    void cancel() -> cancel
com.badlogic.gdx.scenes.scene2d.ui.Dialog$1 -> com.badlogic.gdx.scenes.scene2d.ui.Dialog$1:
    com.badlogic.gdx.scenes.scene2d.ui.Dialog this$0 -> this$0
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
com.badlogic.gdx.scenes.scene2d.ui.Dialog$2 -> com.badlogic.gdx.scenes.scene2d.ui.Dialog$2:
    com.badlogic.gdx.scenes.scene2d.ui.Dialog this$0 -> this$0
    void changed(com.badlogic.gdx.scenes.scene2d.utils.ChangeListener$ChangeEvent,com.badlogic.gdx.scenes.scene2d.Actor) -> changed
com.badlogic.gdx.scenes.scene2d.ui.Dialog$3 -> com.badlogic.gdx.scenes.scene2d.ui.Dialog$3:
    com.badlogic.gdx.scenes.scene2d.ui.Dialog this$0 -> this$0
    void keyboardFocusChanged(com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent,com.badlogic.gdx.scenes.scene2d.Actor,boolean) -> keyboardFocusChanged
    void scrollFocusChanged(com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent,com.badlogic.gdx.scenes.scene2d.Actor,boolean) -> scrollFocusChanged
    void focusChanged(com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent) -> focusChanged
com.badlogic.gdx.scenes.scene2d.ui.Dialog$4 -> com.badlogic.gdx.scenes.scene2d.ui.Dialog$4:
    int val$keycode -> val$keycode
    java.lang.Object val$object -> val$object
    com.badlogic.gdx.scenes.scene2d.ui.Dialog this$0 -> this$0
    boolean keyDown(com.badlogic.gdx.scenes.scene2d.InputEvent,int) -> keyDown
com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup -> com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup:
    float prefWidth -> prefWidth
    float prefHeight -> prefHeight
    boolean sizeInvalid -> sizeInvalid
    int align -> align
    boolean reverse -> reverse
    boolean round -> round
    float spacing -> spacing
    float padTop -> padTop
    float padLeft -> padLeft
    float padBottom -> padBottom
    float padRight -> padRight
    float fill -> fill
    void invalidate() -> invalidate
    void computeSize() -> computeSize
    void layout() -> layout
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    void setRound(boolean) -> setRound
    com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup reverse() -> reverse
    com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup reverse(boolean) -> reverse
    boolean getReverse() -> getReverse
    com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup space(float) -> space
    float getSpace() -> getSpace
    com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup pad(float) -> pad
    com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup pad(float,float,float,float) -> pad
    com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup padTop(float) -> padTop
    com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup padLeft(float) -> padLeft
    com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup padBottom(float) -> padBottom
    com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup padRight(float) -> padRight
    float getPadTop() -> getPadTop
    float getPadLeft() -> getPadLeft
    float getPadBottom() -> getPadBottom
    float getPadRight() -> getPadRight
    com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup align(int) -> align
    com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup center() -> center
    com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup top() -> top
    com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup bottom() -> bottom
    int getAlign() -> getAlign
    com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup fill() -> fill
    com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup fill(float) -> fill
    float getFill() -> getFill
com.badlogic.gdx.scenes.scene2d.ui.Image -> com.badlogic.gdx.scenes.scene2d.ui.Image:
    com.badlogic.gdx.utils.Scaling scaling -> scaling
    int align -> align
    float imageX -> imageX
    float imageY -> imageY
    float imageWidth -> imageWidth
    float imageHeight -> imageHeight
    com.badlogic.gdx.scenes.scene2d.utils.Drawable drawable -> drawable
    void layout() -> layout
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    void setDrawable(com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String) -> setDrawable
    void setDrawable(com.badlogic.gdx.scenes.scene2d.utils.Drawable) -> setDrawable
    com.badlogic.gdx.scenes.scene2d.utils.Drawable getDrawable() -> getDrawable
    void setScaling(com.badlogic.gdx.utils.Scaling) -> setScaling
    void setAlign(int) -> setAlign
    float getMinWidth() -> getMinWidth
    float getMinHeight() -> getMinHeight
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    float getImageX() -> getImageX
    float getImageY() -> getImageY
    float getImageWidth() -> getImageWidth
    float getImageHeight() -> getImageHeight
com.badlogic.gdx.scenes.scene2d.ui.ImageButton -> com.badlogic.gdx.scenes.scene2d.ui.ImageButton:
    com.badlogic.gdx.scenes.scene2d.ui.Image image -> image
    com.badlogic.gdx.scenes.scene2d.ui.ImageButton$ImageButtonStyle style -> style
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle) -> setStyle
    com.badlogic.gdx.scenes.scene2d.ui.ImageButton$ImageButtonStyle getStyle() -> getStyle
    void updateImage() -> updateImage
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    com.badlogic.gdx.scenes.scene2d.ui.Image getImage() -> getImage
    com.esotericsoftware.tablelayout.Cell getImageCell() -> getImageCell
    com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle getStyle() -> getStyle
com.badlogic.gdx.scenes.scene2d.ui.ImageButton$ImageButtonStyle -> com.badlogic.gdx.scenes.scene2d.ui.ImageButton$ImageButtonStyle:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageUp -> imageUp
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageDown -> imageDown
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageOver -> imageOver
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageChecked -> imageChecked
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageCheckedOver -> imageCheckedOver
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageDisabled -> imageDisabled
com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton -> com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton:
    com.badlogic.gdx.scenes.scene2d.ui.Image image -> image
    com.badlogic.gdx.scenes.scene2d.ui.Label label -> label
    com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton$ImageTextButtonStyle style -> style
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle) -> setStyle
    com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton$ImageTextButtonStyle getStyle() -> getStyle
    void updateImage() -> updateImage
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    com.badlogic.gdx.scenes.scene2d.ui.Image getImage() -> getImage
    com.esotericsoftware.tablelayout.Cell getImageCell() -> getImageCell
    com.badlogic.gdx.scenes.scene2d.ui.Label getLabel() -> getLabel
    com.esotericsoftware.tablelayout.Cell getLabelCell() -> getLabelCell
    void setText(java.lang.String) -> setText
    java.lang.CharSequence getText() -> getText
    com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle getStyle() -> getStyle
com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton$ImageTextButtonStyle -> com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton$ImageTextButtonStyle:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageUp -> imageUp
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageDown -> imageDown
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageOver -> imageOver
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageChecked -> imageChecked
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageCheckedOver -> imageCheckedOver
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageDisabled -> imageDisabled
com.badlogic.gdx.scenes.scene2d.ui.Label -> com.badlogic.gdx.scenes.scene2d.ui.Label:
    com.badlogic.gdx.graphics.Color tempColor -> tempColor
    com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle style -> style
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds bounds -> bounds
    com.badlogic.gdx.utils.StringBuilder text -> text
    com.badlogic.gdx.utils.StringBuilder tempText -> tempText
    com.badlogic.gdx.graphics.g2d.BitmapFontCache cache -> cache
    int labelAlign -> labelAlign
    com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment lineAlign -> lineAlign
    boolean wrap -> wrap
    float lastPrefHeight -> lastPrefHeight
    boolean sizeInvalid -> sizeInvalid
    float fontScaleX -> fontScaleX
    float fontScaleY -> fontScaleY
    boolean ellipse -> ellipse
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle) -> setStyle
    com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle getStyle() -> getStyle
    void setText(java.lang.CharSequence) -> setText
    boolean textEquals(java.lang.CharSequence) -> textEquals
    java.lang.CharSequence getText() -> getText
    void invalidate() -> invalidate
    void scaleAndComputeSize() -> scaleAndComputeSize
    void computeSize() -> computeSize
    void layout() -> layout
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getTextBounds() -> getTextBounds
    void setWrap(boolean) -> setWrap
    void setAlignment(int) -> setAlignment
    void setAlignment(int,int) -> setAlignment
    void setFontScale(float) -> setFontScale
    void setFontScale(float,float) -> setFontScale
    float getFontScaleX() -> getFontScaleX
    void setFontScaleX(float) -> setFontScaleX
    float getFontScaleY() -> getFontScaleY
    void setFontScaleY(float) -> setFontScaleY
    void setEllipse(boolean) -> setEllipse
    com.badlogic.gdx.graphics.g2d.BitmapFontCache getBitmapFontCache() -> getBitmapFontCache
com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle -> com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle:
    com.badlogic.gdx.graphics.g2d.BitmapFont font -> font
    com.badlogic.gdx.graphics.Color fontColor -> fontColor
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> background
com.badlogic.gdx.scenes.scene2d.ui.List -> com.badlogic.gdx.scenes.scene2d.ui.List:
    com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle style -> style
    com.badlogic.gdx.utils.Array items -> items
    com.badlogic.gdx.math.Rectangle cullingArea -> cullingArea
    float prefWidth -> prefWidth
    float prefHeight -> prefHeight
    float itemHeight -> itemHeight
    float textOffsetX -> textOffsetX
    float textOffsetY -> textOffsetY
    com.badlogic.gdx.scenes.scene2d.utils.ArraySelection selection -> selection
    void touchDown(float) -> touchDown
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle) -> setStyle
    com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle getStyle() -> getStyle
    void layout() -> layout
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    com.badlogic.gdx.scenes.scene2d.utils.ArraySelection getSelection() -> getSelection
    java.lang.Object getSelected() -> getSelected
    int getSelectedIndex() -> getSelectedIndex
    void setSelectedIndex(int) -> setSelectedIndex
    void setItems(java.lang.Object[]) -> setItems
    void setItems(com.badlogic.gdx.utils.Array) -> setItems
    com.badlogic.gdx.utils.Array getItems() -> getItems
    float getItemHeight() -> getItemHeight
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    void setCullingArea(com.badlogic.gdx.math.Rectangle) -> setCullingArea
com.badlogic.gdx.scenes.scene2d.ui.List$1 -> com.badlogic.gdx.scenes.scene2d.ui.List$1:
    com.badlogic.gdx.scenes.scene2d.ui.List this$0 -> this$0
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle -> com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle:
    com.badlogic.gdx.graphics.g2d.BitmapFont font -> font
    com.badlogic.gdx.graphics.Color fontColorSelected -> fontColorSelected
    com.badlogic.gdx.graphics.Color fontColorUnselected -> fontColorUnselected
    com.badlogic.gdx.scenes.scene2d.utils.Drawable selection -> selection
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> background
com.badlogic.gdx.scenes.scene2d.ui.ProgressBar -> com.badlogic.gdx.scenes.scene2d.ui.ProgressBar:
    com.badlogic.gdx.scenes.scene2d.ui.ProgressBar$ProgressBarStyle style -> style
    float min -> min
    float max -> max
    float stepSize -> stepSize
    float value -> value
    float animateFromValue -> animateFromValue
    float position -> position
    boolean vertical -> vertical
    float animateDuration -> animateDuration
    float animateTime -> animateTime
    com.badlogic.gdx.math.Interpolation animateInterpolation -> animateInterpolation
    float[] snapValues -> snapValues
    float threshold -> threshold
    boolean disabled -> disabled
    boolean shiftIgnoresSnap -> shiftIgnoresSnap
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.ProgressBar$ProgressBarStyle) -> setStyle
    com.badlogic.gdx.scenes.scene2d.ui.ProgressBar$ProgressBarStyle getStyle() -> getStyle
    void act(float) -> act
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    float getValue() -> getValue
    float getVisualValue() -> getVisualValue
    float getKnobPosition() -> getKnobPosition
    boolean setValue(float) -> setValue
    float clamp(float) -> clamp
    void setRange(float,float) -> setRange
    void setStepSize(float) -> setStepSize
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    float getMinValue() -> getMinValue
    float getMaxValue() -> getMaxValue
    float getStepSize() -> getStepSize
    void setAnimateDuration(float) -> setAnimateDuration
    void setAnimateInterpolation(com.badlogic.gdx.math.Interpolation) -> setAnimateInterpolation
    void setSnapToValues(float[],float) -> setSnapToValues
    float snap(float) -> snap
    void setDisabled(boolean) -> setDisabled
    boolean isDisabled() -> isDisabled
com.badlogic.gdx.scenes.scene2d.ui.ProgressBar$ProgressBarStyle -> com.badlogic.gdx.scenes.scene2d.ui.ProgressBar$ProgressBarStyle:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> background
    com.badlogic.gdx.scenes.scene2d.utils.Drawable disabledBackground -> disabledBackground
    com.badlogic.gdx.scenes.scene2d.utils.Drawable knob -> knob
    com.badlogic.gdx.scenes.scene2d.utils.Drawable disabledKnob -> disabledKnob
    com.badlogic.gdx.scenes.scene2d.utils.Drawable knobBefore -> knobBefore
    com.badlogic.gdx.scenes.scene2d.utils.Drawable knobAfter -> knobAfter
    com.badlogic.gdx.scenes.scene2d.utils.Drawable disabledKnobBefore -> disabledKnobBefore
    com.badlogic.gdx.scenes.scene2d.utils.Drawable disabledKnobAfter -> disabledKnobAfter
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane -> com.badlogic.gdx.scenes.scene2d.ui.ScrollPane:
    com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle style -> style
    com.badlogic.gdx.scenes.scene2d.Actor widget -> widget
    com.badlogic.gdx.math.Rectangle hScrollBounds -> hScrollBounds
    com.badlogic.gdx.math.Rectangle vScrollBounds -> vScrollBounds
    com.badlogic.gdx.math.Rectangle hKnobBounds -> hKnobBounds
    com.badlogic.gdx.math.Rectangle vKnobBounds -> vKnobBounds
    com.badlogic.gdx.math.Rectangle widgetAreaBounds -> widgetAreaBounds
    com.badlogic.gdx.math.Rectangle widgetCullingArea -> widgetCullingArea
    com.badlogic.gdx.math.Rectangle scissorBounds -> scissorBounds
    com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener flickScrollListener -> flickScrollListener
    boolean scrollX -> scrollX
    boolean scrollY -> scrollY
    boolean vScrollOnRight -> vScrollOnRight
    boolean hScrollOnBottom -> hScrollOnBottom
    float amountX -> amountX
    float amountY -> amountY
    float visualAmountX -> visualAmountX
    float visualAmountY -> visualAmountY
    float maxX -> maxX
    float maxY -> maxY
    boolean touchScrollH -> touchScrollH
    boolean touchScrollV -> touchScrollV
    com.badlogic.gdx.math.Vector2 lastPoint -> lastPoint
    float areaWidth -> areaWidth
    float areaHeight -> areaHeight
    boolean fadeScrollBars -> fadeScrollBars
    boolean smoothScrolling -> smoothScrolling
    float fadeAlpha -> fadeAlpha
    float fadeAlphaSeconds -> fadeAlphaSeconds
    float fadeDelay -> fadeDelay
    float fadeDelaySeconds -> fadeDelaySeconds
    boolean cancelTouchFocus -> cancelTouchFocus
    boolean flickScroll -> flickScroll
    float velocityX -> velocityX
    float velocityY -> velocityY
    float flingTimer -> flingTimer
    boolean overscrollX -> overscrollX
    boolean overscrollY -> overscrollY
    float flingTime -> flingTime
    float overscrollDistance -> overscrollDistance
    float overscrollSpeedMin -> overscrollSpeedMin
    float overscrollSpeedMax -> overscrollSpeedMax
    boolean forceScrollX -> forceScrollX
    boolean forceScrollY -> forceScrollY
    boolean disableX -> disableX
    boolean disableY -> disableY
    boolean clamp -> clamp
    boolean scrollbarsOnTop -> scrollbarsOnTop
    boolean variableSizeKnobs -> variableSizeKnobs
    int draggingPointer -> draggingPointer
    void resetFade() -> resetFade
    void cancelTouchFocusedChild(com.badlogic.gdx.scenes.scene2d.InputEvent) -> cancelTouchFocusedChild
    void cancel() -> cancel
    void clamp() -> clamp
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle) -> setStyle
    com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle getStyle() -> getStyle
    void act(float) -> act
    void layout() -> layout
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    void fling(float,float,float) -> fling
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    float getMinWidth() -> getMinWidth
    float getMinHeight() -> getMinHeight
    void setWidget(com.badlogic.gdx.scenes.scene2d.Actor) -> setWidget
    com.badlogic.gdx.scenes.scene2d.Actor getWidget() -> getWidget
    void addActor(com.badlogic.gdx.scenes.scene2d.Actor) -> addActor
    void addActorAt(int,com.badlogic.gdx.scenes.scene2d.Actor) -> addActorAt
    void addActorBefore(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor) -> addActorBefore
    void addActorAfter(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor) -> addActorAfter
    boolean removeActor(com.badlogic.gdx.scenes.scene2d.Actor) -> removeActor
    com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean) -> hit
    void scrollX(float) -> scrollX
    void scrollY(float) -> scrollY
    void visualScrollX(float) -> visualScrollX
    void visualScrollY(float) -> visualScrollY
    float getMouseWheelX() -> getMouseWheelX
    float getMouseWheelY() -> getMouseWheelY
    void setScrollX(float) -> setScrollX
    float getScrollX() -> getScrollX
    void setScrollY(float) -> setScrollY
    float getScrollY() -> getScrollY
    void updateVisualScroll() -> updateVisualScroll
    float getVisualScrollX() -> getVisualScrollX
    float getVisualScrollY() -> getVisualScrollY
    float getScrollPercentX() -> getScrollPercentX
    void setScrollPercentX(float) -> setScrollPercentX
    float getScrollPercentY() -> getScrollPercentY
    void setScrollPercentY(float) -> setScrollPercentY
    void setFlickScroll(boolean) -> setFlickScroll
    void scrollTo(float,float,float,float) -> scrollTo
    void scrollToCenter(float,float,float,float) -> scrollToCenter
    float getMaxX() -> getMaxX
    float getMaxY() -> getMaxY
    float getScrollBarHeight() -> getScrollBarHeight
    float getScrollBarWidth() -> getScrollBarWidth
    float getScrollWidth() -> getScrollWidth
    float getScrollHeight() -> getScrollHeight
    boolean isScrollX() -> isScrollX
    boolean isScrollY() -> isScrollY
    void setScrollingDisabled(boolean,boolean) -> setScrollingDisabled
    boolean isDragging() -> isDragging
    boolean isPanning() -> isPanning
    boolean isFlinging() -> isFlinging
    void setVelocityX(float) -> setVelocityX
    float getVelocityX() -> getVelocityX
    void setVelocityY(float) -> setVelocityY
    float getVelocityY() -> getVelocityY
    void setOverscroll(boolean,boolean) -> setOverscroll
    void setupOverscroll(float,float,float) -> setupOverscroll
    void setForceScroll(boolean,boolean) -> setForceScroll
    boolean isForceScrollX() -> isForceScrollX
    boolean isForceScrollY() -> isForceScrollY
    void setFlingTime(float) -> setFlingTime
    void setClamp(boolean) -> setClamp
    void setScrollBarPositions(boolean,boolean) -> setScrollBarPositions
    void setFadeScrollBars(boolean) -> setFadeScrollBars
    void setupFadeScrollBars(float,float) -> setupFadeScrollBars
    void setSmoothScrolling(boolean) -> setSmoothScrolling
    void setScrollbarsOnTop(boolean) -> setScrollbarsOnTop
    boolean getVariableSizeKnobs() -> getVariableSizeKnobs
    void setVariableSizeKnobs(boolean) -> setVariableSizeKnobs
    void setCancelTouchFocus(boolean) -> setCancelTouchFocus
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$1 -> com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$1:
    float handlePosition -> handlePosition
    com.badlogic.gdx.scenes.scene2d.ui.ScrollPane this$0 -> this$0
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
    void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> touchDragged
    boolean mouseMoved(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> mouseMoved
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$2 -> com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$2:
    com.badlogic.gdx.scenes.scene2d.ui.ScrollPane this$0 -> this$0
    void pan(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,float,float) -> pan
    void fling(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> fling
    boolean handle(com.badlogic.gdx.scenes.scene2d.Event) -> handle
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$3 -> com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$3:
    com.badlogic.gdx.scenes.scene2d.ui.ScrollPane this$0 -> this$0
    boolean scrolled(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> scrolled
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle -> com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> background
    com.badlogic.gdx.scenes.scene2d.utils.Drawable corner -> corner
    com.badlogic.gdx.scenes.scene2d.utils.Drawable hScroll -> hScroll
    com.badlogic.gdx.scenes.scene2d.utils.Drawable hScrollKnob -> hScrollKnob
    com.badlogic.gdx.scenes.scene2d.utils.Drawable vScroll -> vScroll
    com.badlogic.gdx.scenes.scene2d.utils.Drawable vScrollKnob -> vScrollKnob
com.badlogic.gdx.scenes.scene2d.ui.SelectBox -> com.badlogic.gdx.scenes.scene2d.ui.SelectBox:
    com.badlogic.gdx.math.Vector2 tmpCoords -> tmpCoords
    com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle style -> style
    com.badlogic.gdx.utils.Array items -> items
    java.lang.Object selected -> selected
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds bounds -> bounds
    com.badlogic.gdx.scenes.scene2d.ui.SelectBox$ListScroll scroll -> scroll
    com.badlogic.gdx.scenes.scene2d.utils.Selection selection -> selection
    com.badlogic.gdx.scenes.scene2d.Actor previousScrollFocus -> previousScrollFocus
    float prefWidth -> prefWidth
    float prefHeight -> prefHeight
    com.badlogic.gdx.scenes.scene2d.utils.ClickListener clickListener -> clickListener
    int maxListCount -> maxListCount
    boolean disabled -> disabled
    void setMaxListCount(int) -> setMaxListCount
    int getMaxListCount() -> getMaxListCount
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle) -> setStyle
    com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle getStyle() -> getStyle
    void setItems(java.lang.Object[]) -> setItems
    void setItems(com.badlogic.gdx.utils.Array) -> setItems
    com.badlogic.gdx.utils.Array getItems() -> getItems
    void layout() -> layout
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    com.badlogic.gdx.scenes.scene2d.utils.Selection getSelection() -> getSelection
    java.lang.Object getSelected() -> getSelected
    void setSelected(java.lang.Object) -> setSelected
    int getSelectedIndex() -> getSelectedIndex
    void setSelectedIndex(int) -> setSelectedIndex
    void setDisabled(boolean) -> setDisabled
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    void showList() -> showList
    void hideList() -> hideList
    com.badlogic.gdx.scenes.scene2d.ui.List getList() -> getList
    com.badlogic.gdx.scenes.scene2d.ui.ScrollPane getScrollPane() -> getScrollPane
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$1 -> com.badlogic.gdx.scenes.scene2d.ui.SelectBox$1:
    com.badlogic.gdx.scenes.scene2d.ui.SelectBox this$0 -> this$0
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$ListScroll -> com.badlogic.gdx.scenes.scene2d.ui.SelectBox$ListScroll:
    com.badlogic.gdx.scenes.scene2d.ui.List list -> list
    com.badlogic.gdx.math.Vector2 screenCoords -> screenCoords
    com.badlogic.gdx.scenes.scene2d.ui.SelectBox this$0 -> this$0
    void show(com.badlogic.gdx.scenes.scene2d.Stage) -> show
    com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean) -> hit
    void act(float) -> act
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$ListScroll$1 -> com.badlogic.gdx.scenes.scene2d.ui.SelectBox$ListScroll$1:
    com.badlogic.gdx.scenes.scene2d.ui.SelectBox val$this$0 -> val$this$0
    com.badlogic.gdx.scenes.scene2d.ui.SelectBox$ListScroll this$1 -> this$1
    boolean mouseMoved(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> mouseMoved
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$ListScroll$2 -> com.badlogic.gdx.scenes.scene2d.ui.SelectBox$ListScroll$2:
    com.badlogic.gdx.scenes.scene2d.ui.SelectBox val$this$0 -> val$this$0
    com.badlogic.gdx.scenes.scene2d.ui.SelectBox$ListScroll this$1 -> this$1
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle -> com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle:
    com.badlogic.gdx.graphics.g2d.BitmapFont font -> font
    com.badlogic.gdx.graphics.Color fontColor -> fontColor
    com.badlogic.gdx.graphics.Color disabledFontColor -> disabledFontColor
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> background
    com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle scrollStyle -> scrollStyle
    com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle listStyle -> listStyle
    com.badlogic.gdx.scenes.scene2d.utils.Drawable backgroundOver -> backgroundOver
    com.badlogic.gdx.scenes.scene2d.utils.Drawable backgroundOpen -> backgroundOpen
    com.badlogic.gdx.scenes.scene2d.utils.Drawable backgroundDisabled -> backgroundDisabled
com.badlogic.gdx.scenes.scene2d.ui.Skin -> com.badlogic.gdx.scenes.scene2d.ui.Skin:
    com.badlogic.gdx.utils.ObjectMap resources -> resources
    com.badlogic.gdx.graphics.g2d.TextureAtlas atlas -> atlas
    void load(com.badlogic.gdx.files.FileHandle) -> load
    void addRegions(com.badlogic.gdx.graphics.g2d.TextureAtlas) -> addRegions
    void add(java.lang.String,java.lang.Object) -> add
    void add(java.lang.String,java.lang.Object,java.lang.Class) -> add
    void remove(java.lang.String,java.lang.Class) -> remove
    java.lang.Object get(java.lang.Class) -> get
    java.lang.Object get(java.lang.String,java.lang.Class) -> get
    java.lang.Object optional(java.lang.String,java.lang.Class) -> optional
    boolean has(java.lang.String,java.lang.Class) -> has
    com.badlogic.gdx.utils.ObjectMap getAll(java.lang.Class) -> getAll
    com.badlogic.gdx.graphics.Color getColor(java.lang.String) -> getColor
    com.badlogic.gdx.graphics.g2d.BitmapFont getFont(java.lang.String) -> getFont
    com.badlogic.gdx.graphics.g2d.TextureRegion getRegion(java.lang.String) -> getRegion
    com.badlogic.gdx.scenes.scene2d.utils.TiledDrawable getTiledDrawable(java.lang.String) -> getTiledDrawable
    com.badlogic.gdx.graphics.g2d.NinePatch getPatch(java.lang.String) -> getPatch
    com.badlogic.gdx.graphics.g2d.Sprite getSprite(java.lang.String) -> getSprite
    com.badlogic.gdx.scenes.scene2d.utils.Drawable getDrawable(java.lang.String) -> getDrawable
    java.lang.String find(java.lang.Object) -> find
    com.badlogic.gdx.scenes.scene2d.utils.Drawable newDrawable(java.lang.String) -> newDrawable
    com.badlogic.gdx.scenes.scene2d.utils.Drawable newDrawable(java.lang.String,float,float,float,float) -> newDrawable
    com.badlogic.gdx.scenes.scene2d.utils.Drawable newDrawable(java.lang.String,com.badlogic.gdx.graphics.Color) -> newDrawable
    com.badlogic.gdx.scenes.scene2d.utils.Drawable newDrawable(com.badlogic.gdx.scenes.scene2d.utils.Drawable) -> newDrawable
    com.badlogic.gdx.scenes.scene2d.utils.Drawable newDrawable(com.badlogic.gdx.scenes.scene2d.utils.Drawable,float,float,float,float) -> newDrawable
    com.badlogic.gdx.scenes.scene2d.utils.Drawable newDrawable(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.graphics.Color) -> newDrawable
    void setEnabled(com.badlogic.gdx.scenes.scene2d.Actor,boolean) -> setEnabled
    com.badlogic.gdx.graphics.g2d.TextureAtlas getAtlas() -> getAtlas
    void dispose() -> dispose
    com.badlogic.gdx.utils.Json getJsonLoader(com.badlogic.gdx.files.FileHandle) -> getJsonLoader
    com.badlogic.gdx.utils.reflect.Method findMethod(java.lang.Class,java.lang.String) -> findMethod
com.badlogic.gdx.scenes.scene2d.ui.Skin$1 -> com.badlogic.gdx.scenes.scene2d.ui.Skin$1:
    com.badlogic.gdx.scenes.scene2d.ui.Skin this$0 -> this$0
    java.lang.Object readValue(java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue) -> readValue
com.badlogic.gdx.scenes.scene2d.ui.Skin$2 -> com.badlogic.gdx.scenes.scene2d.ui.Skin$2:
    com.badlogic.gdx.scenes.scene2d.ui.Skin val$skin -> val$skin
    com.badlogic.gdx.scenes.scene2d.ui.Skin this$0 -> this$0
    com.badlogic.gdx.scenes.scene2d.ui.Skin read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue,java.lang.Class) -> read
    void readNamedObjects(com.badlogic.gdx.utils.Json,java.lang.Class,com.badlogic.gdx.utils.JsonValue) -> readNamedObjects
    java.lang.Object read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue,java.lang.Class) -> read
com.badlogic.gdx.scenes.scene2d.ui.Skin$3 -> com.badlogic.gdx.scenes.scene2d.ui.Skin$3:
    com.badlogic.gdx.files.FileHandle val$skinFile -> val$skinFile
    com.badlogic.gdx.scenes.scene2d.ui.Skin val$skin -> val$skin
    com.badlogic.gdx.scenes.scene2d.ui.Skin this$0 -> this$0
    com.badlogic.gdx.graphics.g2d.BitmapFont read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue,java.lang.Class) -> read
    java.lang.Object read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue,java.lang.Class) -> read
com.badlogic.gdx.scenes.scene2d.ui.Skin$4 -> com.badlogic.gdx.scenes.scene2d.ui.Skin$4:
    com.badlogic.gdx.scenes.scene2d.ui.Skin this$0 -> this$0
    com.badlogic.gdx.graphics.Color read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue,java.lang.Class) -> read
    java.lang.Object read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue,java.lang.Class) -> read
com.badlogic.gdx.scenes.scene2d.ui.Skin$5 -> com.badlogic.gdx.scenes.scene2d.ui.Skin$5:
    com.badlogic.gdx.scenes.scene2d.ui.Skin this$0 -> this$0
    java.lang.Object read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue,java.lang.Class) -> read
com.badlogic.gdx.scenes.scene2d.ui.Skin$TintedDrawable -> com.badlogic.gdx.scenes.scene2d.ui.Skin$TintedDrawable:
    java.lang.String name -> name
    com.badlogic.gdx.graphics.Color color -> color
com.badlogic.gdx.scenes.scene2d.ui.Slider -> com.badlogic.gdx.scenes.scene2d.ui.Slider:
    int draggingPointer -> draggingPointer
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Slider$SliderStyle) -> setStyle
    com.badlogic.gdx.scenes.scene2d.ui.Slider$SliderStyle getStyle() -> getStyle
    boolean calculatePositionAndValue(float,float) -> calculatePositionAndValue
    boolean isDragging() -> isDragging
    com.badlogic.gdx.scenes.scene2d.ui.ProgressBar$ProgressBarStyle getStyle() -> getStyle
com.badlogic.gdx.scenes.scene2d.ui.Slider$1 -> com.badlogic.gdx.scenes.scene2d.ui.Slider$1:
    com.badlogic.gdx.scenes.scene2d.ui.Slider this$0 -> this$0
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
    void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> touchDragged
com.badlogic.gdx.scenes.scene2d.ui.Slider$SliderStyle -> com.badlogic.gdx.scenes.scene2d.ui.Slider$SliderStyle:
com.badlogic.gdx.scenes.scene2d.ui.SplitPane -> com.badlogic.gdx.scenes.scene2d.ui.SplitPane:
    com.badlogic.gdx.scenes.scene2d.ui.SplitPane$SplitPaneStyle style -> style
    com.badlogic.gdx.scenes.scene2d.Actor firstWidget -> firstWidget
    com.badlogic.gdx.scenes.scene2d.Actor secondWidget -> secondWidget
    boolean vertical -> vertical
    float splitAmount -> splitAmount
    float minAmount -> minAmount
    float maxAmount -> maxAmount
    float oldSplitAmount -> oldSplitAmount
    com.badlogic.gdx.math.Rectangle firstWidgetBounds -> firstWidgetBounds
    com.badlogic.gdx.math.Rectangle secondWidgetBounds -> secondWidgetBounds
    com.badlogic.gdx.math.Rectangle handleBounds -> handleBounds
    com.badlogic.gdx.math.Rectangle firstScissors -> firstScissors
    com.badlogic.gdx.math.Rectangle secondScissors -> secondScissors
    com.badlogic.gdx.math.Vector2 lastPoint -> lastPoint
    com.badlogic.gdx.math.Vector2 handlePosition -> handlePosition
    void initialize() -> initialize
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.SplitPane$SplitPaneStyle) -> setStyle
    com.badlogic.gdx.scenes.scene2d.ui.SplitPane$SplitPaneStyle getStyle() -> getStyle
    void layout() -> layout
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    float getMinWidth() -> getMinWidth
    float getMinHeight() -> getMinHeight
    void setVertical(boolean) -> setVertical
    void calculateHorizBoundsAndPositions() -> calculateHorizBoundsAndPositions
    void calculateVertBoundsAndPositions() -> calculateVertBoundsAndPositions
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    void setSplitAmount(float) -> setSplitAmount
    float getSplit() -> getSplit
    void setMinSplitAmount(float) -> setMinSplitAmount
    void setMaxSplitAmount(float) -> setMaxSplitAmount
    void setFirstWidget(com.badlogic.gdx.scenes.scene2d.Actor) -> setFirstWidget
    void setSecondWidget(com.badlogic.gdx.scenes.scene2d.Actor) -> setSecondWidget
    void addActor(com.badlogic.gdx.scenes.scene2d.Actor) -> addActor
    void addActorAt(int,com.badlogic.gdx.scenes.scene2d.Actor) -> addActorAt
    void addActorBefore(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor) -> addActorBefore
    boolean removeActor(com.badlogic.gdx.scenes.scene2d.Actor) -> removeActor
com.badlogic.gdx.scenes.scene2d.ui.SplitPane$1 -> com.badlogic.gdx.scenes.scene2d.ui.SplitPane$1:
    int draggingPointer -> draggingPointer
    com.badlogic.gdx.scenes.scene2d.ui.SplitPane this$0 -> this$0
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
    void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> touchDragged
com.badlogic.gdx.scenes.scene2d.ui.SplitPane$SplitPaneStyle -> com.badlogic.gdx.scenes.scene2d.ui.SplitPane$SplitPaneStyle:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable handle -> handle
com.badlogic.gdx.scenes.scene2d.ui.Stack -> com.badlogic.gdx.scenes.scene2d.ui.Stack:
    float prefWidth -> prefWidth
    float prefHeight -> prefHeight
    float minWidth -> minWidth
    float minHeight -> minHeight
    float maxWidth -> maxWidth
    float maxHeight -> maxHeight
    boolean sizeInvalid -> sizeInvalid
    void invalidate() -> invalidate
    void computeSize() -> computeSize
    void add(com.badlogic.gdx.scenes.scene2d.Actor) -> add
    void layout() -> layout
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    float getMinWidth() -> getMinWidth
    float getMinHeight() -> getMinHeight
    float getMaxWidth() -> getMaxWidth
    float getMaxHeight() -> getMaxHeight
com.badlogic.gdx.scenes.scene2d.ui.Table -> com.badlogic.gdx.scenes.scene2d.ui.Table:
    com.badlogic.gdx.scenes.scene2d.ui.TableLayout layout -> layout
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> background
    boolean clip -> clip
    com.badlogic.gdx.scenes.scene2d.ui.Skin skin -> skin
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    void drawBackground(com.badlogic.gdx.graphics.g2d.Batch,float,float,float) -> drawBackground
    void invalidate() -> invalidate
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    float getMinWidth() -> getMinWidth
    float getMinHeight() -> getMinHeight
    void setBackground(java.lang.String) -> setBackground
    void setBackground(com.badlogic.gdx.scenes.scene2d.utils.Drawable) -> setBackground
    void setBackground(com.badlogic.gdx.scenes.scene2d.utils.Drawable,boolean) -> setBackground
    com.badlogic.gdx.scenes.scene2d.ui.Table background(com.badlogic.gdx.scenes.scene2d.utils.Drawable) -> background
    com.badlogic.gdx.scenes.scene2d.ui.Table background(java.lang.String) -> background
    com.badlogic.gdx.scenes.scene2d.utils.Drawable getBackground() -> getBackground
    com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean) -> hit
    void setClip(boolean) -> setClip
    boolean getClip() -> getClip
    int getRow(float) -> getRow
    void clearChildren() -> clearChildren
    com.esotericsoftware.tablelayout.Cell add(java.lang.String) -> add
    com.esotericsoftware.tablelayout.Cell add(java.lang.String,java.lang.String) -> add
    com.esotericsoftware.tablelayout.Cell add(java.lang.String,java.lang.String,com.badlogic.gdx.graphics.Color) -> add
    com.esotericsoftware.tablelayout.Cell add(java.lang.String,java.lang.String,java.lang.String) -> add
    com.esotericsoftware.tablelayout.Cell add() -> add
    com.esotericsoftware.tablelayout.Cell add(com.badlogic.gdx.scenes.scene2d.Actor) -> add
    void add(com.badlogic.gdx.scenes.scene2d.Actor[]) -> add
    boolean removeActor(com.badlogic.gdx.scenes.scene2d.Actor) -> removeActor
    com.esotericsoftware.tablelayout.Cell stack(com.badlogic.gdx.scenes.scene2d.Actor[]) -> stack
    com.esotericsoftware.tablelayout.Cell row() -> row
    com.esotericsoftware.tablelayout.Cell columnDefaults(int) -> columnDefaults
    com.esotericsoftware.tablelayout.Cell defaults() -> defaults
    void layout() -> layout
    void reset() -> reset
    com.esotericsoftware.tablelayout.Cell getCell(com.badlogic.gdx.scenes.scene2d.Actor) -> getCell
    java.util.List getCells() -> getCells
    com.badlogic.gdx.scenes.scene2d.ui.Table pad(com.esotericsoftware.tablelayout.Value) -> pad
    com.badlogic.gdx.scenes.scene2d.ui.Table pad(com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value) -> pad
    com.badlogic.gdx.scenes.scene2d.ui.Table padTop(com.esotericsoftware.tablelayout.Value) -> padTop
    com.badlogic.gdx.scenes.scene2d.ui.Table padLeft(com.esotericsoftware.tablelayout.Value) -> padLeft
    com.badlogic.gdx.scenes.scene2d.ui.Table padBottom(com.esotericsoftware.tablelayout.Value) -> padBottom
    com.badlogic.gdx.scenes.scene2d.ui.Table padRight(com.esotericsoftware.tablelayout.Value) -> padRight
    com.badlogic.gdx.scenes.scene2d.ui.Table pad(float) -> pad
    com.badlogic.gdx.scenes.scene2d.ui.Table pad(float,float,float,float) -> pad
    com.badlogic.gdx.scenes.scene2d.ui.Table padTop(float) -> padTop
    com.badlogic.gdx.scenes.scene2d.ui.Table padLeft(float) -> padLeft
    com.badlogic.gdx.scenes.scene2d.ui.Table padBottom(float) -> padBottom
    com.badlogic.gdx.scenes.scene2d.ui.Table padRight(float) -> padRight
    com.badlogic.gdx.scenes.scene2d.ui.Table align(int) -> align
    com.badlogic.gdx.scenes.scene2d.ui.Table center() -> center
    com.badlogic.gdx.scenes.scene2d.ui.Table top() -> top
    com.badlogic.gdx.scenes.scene2d.ui.Table left() -> left
    com.badlogic.gdx.scenes.scene2d.ui.Table bottom() -> bottom
    com.badlogic.gdx.scenes.scene2d.ui.Table right() -> right
    com.badlogic.gdx.scenes.scene2d.ui.Table debug() -> debug
    com.badlogic.gdx.scenes.scene2d.ui.Table debugTable() -> debugTable
    com.badlogic.gdx.scenes.scene2d.ui.Table debugCell() -> debugCell
    com.badlogic.gdx.scenes.scene2d.ui.Table debugWidget() -> debugWidget
    com.badlogic.gdx.scenes.scene2d.ui.Table debug$2b20d7d0(int) -> debug$2b20d7d0
    int getDebug$f312a0f() -> getDebug$f312a0f
    com.esotericsoftware.tablelayout.Value getPadTopValue() -> getPadTopValue
    float getPadTop() -> getPadTop
    com.esotericsoftware.tablelayout.Value getPadLeftValue() -> getPadLeftValue
    float getPadLeft() -> getPadLeft
    com.esotericsoftware.tablelayout.Value getPadBottomValue() -> getPadBottomValue
    float getPadBottom() -> getPadBottom
    com.esotericsoftware.tablelayout.Value getPadRightValue() -> getPadRightValue
    float getPadRight() -> getPadRight
    float getPadX() -> getPadX
    float getPadY() -> getPadY
    int getAlign() -> getAlign
    void setSkin(com.badlogic.gdx.scenes.scene2d.ui.Skin) -> setSkin
    void setRound(boolean) -> setRound
    void drawDebug(com.badlogic.gdx.scenes.scene2d.Stage) -> drawDebug
    void drawDebug(com.badlogic.gdx.utils.Array,com.badlogic.gdx.graphics.g2d.Batch) -> drawDebug
com.badlogic.gdx.scenes.scene2d.ui.TableLayout -> com.badlogic.gdx.scenes.scene2d.ui.TableLayout:
    com.badlogic.gdx.utils.Array debugRects -> debugRects
    com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer debugRenderer -> debugRenderer
    boolean round -> round
    void layout() -> layout
    void invalidateHierarchy() -> invalidateHierarchy
    void drawDebug(com.badlogic.gdx.graphics.g2d.Batch) -> drawDebug
com.badlogic.gdx.scenes.scene2d.ui.TableToolkit -> com.badlogic.gdx.scenes.scene2d.ui.TableToolkit:
    boolean drawDebug -> drawDebug
    com.badlogic.gdx.utils.Pool cellPool -> cellPool
    com.esotericsoftware.tablelayout.Cell obtainCell(com.badlogic.gdx.scenes.scene2d.ui.TableLayout) -> obtainCell
    void freeCell(com.esotericsoftware.tablelayout.Cell) -> freeCell
    void addChild(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor) -> addChild
    void removeChild(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor) -> removeChild
    float getMinWidth(com.badlogic.gdx.scenes.scene2d.Actor) -> getMinWidth
    float getMinHeight(com.badlogic.gdx.scenes.scene2d.Actor) -> getMinHeight
    float getPrefWidth(com.badlogic.gdx.scenes.scene2d.Actor) -> getPrefWidth
    float getPrefHeight(com.badlogic.gdx.scenes.scene2d.Actor) -> getPrefHeight
    float getMaxWidth(com.badlogic.gdx.scenes.scene2d.Actor) -> getMaxWidth
    float getMaxHeight(com.badlogic.gdx.scenes.scene2d.Actor) -> getMaxHeight
    float getWidth(com.badlogic.gdx.scenes.scene2d.Actor) -> getWidth
    float getHeight(com.badlogic.gdx.scenes.scene2d.Actor) -> getHeight
    void clearDebugRectangles(com.badlogic.gdx.scenes.scene2d.ui.TableLayout) -> clearDebugRectangles
    void addDebugRectangle$7367ef1a(com.badlogic.gdx.scenes.scene2d.ui.TableLayout,int,float,float,float,float) -> addDebugRectangle$7367ef1a
    void addDebugRectangle$d3cbc44(com.esotericsoftware.tablelayout.BaseTableLayout,int,float,float,float,float) -> addDebugRectangle$d3cbc44
    void clearDebugRectangles(com.esotericsoftware.tablelayout.BaseTableLayout) -> clearDebugRectangles
    float getHeight(java.lang.Object) -> getHeight
    float getWidth(java.lang.Object) -> getWidth
    float getMaxHeight(java.lang.Object) -> getMaxHeight
    float getMaxWidth(java.lang.Object) -> getMaxWidth
    float getPrefHeight(java.lang.Object) -> getPrefHeight
    float getPrefWidth(java.lang.Object) -> getPrefWidth
    float getMinHeight(java.lang.Object) -> getMinHeight
    float getMinWidth(java.lang.Object) -> getMinWidth
    void removeChild(java.lang.Object,java.lang.Object) -> removeChild
    void addChild(java.lang.Object,java.lang.Object) -> addChild
    com.esotericsoftware.tablelayout.Cell obtainCell(com.esotericsoftware.tablelayout.BaseTableLayout) -> obtainCell
com.badlogic.gdx.scenes.scene2d.ui.TableToolkit$1 -> com.badlogic.gdx.scenes.scene2d.ui.TableToolkit$1:
    com.esotericsoftware.tablelayout.Cell newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.scenes.scene2d.ui.TableToolkit$DebugRect -> com.badlogic.gdx.scenes.scene2d.ui.TableToolkit$DebugRect:
    int type$18f23810 -> type$18f23810
com.badlogic.gdx.scenes.scene2d.ui.TextArea -> com.badlogic.gdx.scenes.scene2d.ui.TextArea:
    com.badlogic.gdx.utils.IntArray linesBreak -> linesBreak
    java.lang.String lastText -> lastText
    int cursorLine -> cursorLine
    int firstLineShowing -> firstLineShowing
    int linesShowing -> linesShowing
    float moveOffset -> moveOffset
    float prefRows -> prefRows
    void initialize() -> initialize
    int letterUnderCursor(float) -> letterUnderCursor
    void setPrefRows(float) -> setPrefRows
    float getPrefHeight() -> getPrefHeight
    int getLines() -> getLines
    boolean newLineAtEnd() -> newLineAtEnd
    void moveCursorLine(int) -> moveCursorLine
    void updateCurrentLine() -> updateCurrentLine
    void showCursor() -> showCursor
    int calculateCurrentLineIndex(int) -> calculateCurrentLineIndex
    void sizeChanged() -> sizeChanged
    float getTextY(com.badlogic.gdx.graphics.g2d.BitmapFont,com.badlogic.gdx.scenes.scene2d.utils.Drawable) -> getTextY
    void drawSelection(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.graphics.g2d.Batch,com.badlogic.gdx.graphics.g2d.BitmapFont,float,float) -> drawSelection
    void drawText(com.badlogic.gdx.graphics.g2d.Batch,com.badlogic.gdx.graphics.g2d.BitmapFont,float,float) -> drawText
    void drawCursor(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.graphics.g2d.Batch,com.badlogic.gdx.graphics.g2d.BitmapFont,float,float) -> drawCursor
    void calculateOffsets() -> calculateOffsets
    com.badlogic.gdx.scenes.scene2d.InputListener createInputListener() -> createInputListener
    void setSelection(int,int) -> setSelection
    void moveCursor(boolean,boolean) -> moveCursor
    boolean continueCursor(int,int) -> continueCursor
    int getCursorLine() -> getCursorLine
    int getFirstLineShowing() -> getFirstLineShowing
    int getLinesShowing() -> getLinesShowing
com.badlogic.gdx.scenes.scene2d.ui.TextArea$TextAreaListener -> com.badlogic.gdx.scenes.scene2d.ui.TextArea$TextAreaListener:
    com.badlogic.gdx.scenes.scene2d.ui.TextArea this$0 -> this$0
    void setCursorPosition(float,float) -> setCursorPosition
    boolean keyDown(com.badlogic.gdx.scenes.scene2d.InputEvent,int) -> keyDown
    boolean keyTyped(com.badlogic.gdx.scenes.scene2d.InputEvent,char) -> keyTyped
    void goHome(boolean) -> goHome
    void goEnd(boolean) -> goEnd
com.badlogic.gdx.scenes.scene2d.ui.TextButton -> com.badlogic.gdx.scenes.scene2d.ui.TextButton:
    com.badlogic.gdx.scenes.scene2d.ui.Label label -> label
    com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle style -> style
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle) -> setStyle
    com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle getStyle() -> getStyle
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    com.badlogic.gdx.scenes.scene2d.ui.Label getLabel() -> getLabel
    com.esotericsoftware.tablelayout.Cell getLabelCell() -> getLabelCell
    void setText(java.lang.String) -> setText
    java.lang.CharSequence getText() -> getText
    com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle getStyle() -> getStyle
com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle -> com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle:
    com.badlogic.gdx.graphics.g2d.BitmapFont font -> font
    com.badlogic.gdx.graphics.Color fontColor -> fontColor
    com.badlogic.gdx.graphics.Color downFontColor -> downFontColor
    com.badlogic.gdx.graphics.Color overFontColor -> overFontColor
    com.badlogic.gdx.graphics.Color checkedFontColor -> checkedFontColor
    com.badlogic.gdx.graphics.Color checkedOverFontColor -> checkedOverFontColor
    com.badlogic.gdx.graphics.Color disabledFontColor -> disabledFontColor
com.badlogic.gdx.scenes.scene2d.ui.TextField -> com.badlogic.gdx.scenes.scene2d.ui.TextField:
    char BACKSPACE -> BACKSPACE
    char ENTER_DESKTOP -> ENTER_DESKTOP
    char ENTER_ANDROID -> ENTER_ANDROID
    char TAB -> TAB
    char DELETE -> DELETE
    char BULLET -> BULLET
    com.badlogic.gdx.math.Vector2 tmp1 -> tmp1
    com.badlogic.gdx.math.Vector2 tmp2 -> tmp2
    com.badlogic.gdx.math.Vector2 tmp3 -> tmp3
    java.lang.String text -> text
    int cursor -> cursor
    int selectionStart -> selectionStart
    boolean hasSelection -> hasSelection
    boolean writeEnters -> writeEnters
    com.badlogic.gdx.utils.FloatArray glyphAdvances -> glyphAdvances
    com.badlogic.gdx.utils.FloatArray glyphPositions -> glyphPositions
    com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle style -> style
    java.lang.String messageText -> messageText
    java.lang.CharSequence displayText -> displayText
    com.badlogic.gdx.utils.Clipboard clipboard -> clipboard
    com.badlogic.gdx.scenes.scene2d.InputListener inputListener -> inputListener
    com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldListener listener -> listener
    com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter filter -> filter
    com.badlogic.gdx.scenes.scene2d.ui.TextField$OnscreenKeyboard keyboard -> keyboard
    boolean focusTraversal -> focusTraversal
    boolean onlyFontChars -> onlyFontChars
    boolean disabled -> disabled
    boolean rightAligned -> rightAligned
    float selectionX -> selectionX
    float selectionWidth -> selectionWidth
    boolean passwordMode -> passwordMode
    java.lang.StringBuilder passwordBuffer -> passwordBuffer
    char passwordCharacter -> passwordCharacter
    float textHeight -> textHeight
    float textOffset -> textOffset
    float renderOffset -> renderOffset
    int visibleTextStart -> visibleTextStart
    int visibleTextEnd -> visibleTextEnd
    int maxLength -> maxLength
    float blinkTime -> blinkTime
    boolean cursorOn -> cursorOn
    long lastBlink -> lastBlink
    com.badlogic.gdx.scenes.scene2d.ui.TextField$KeyRepeatTask keyRepeatTask -> keyRepeatTask
    float keyRepeatInitialTime -> keyRepeatInitialTime
    float keyRepeatTime -> keyRepeatTime
    void initialize() -> initialize
    com.badlogic.gdx.scenes.scene2d.InputListener createInputListener() -> createInputListener
    int letterUnderCursor(float) -> letterUnderCursor
    boolean isWordCharacter(char) -> isWordCharacter
    int[] wordUnderCursor(int) -> wordUnderCursor
    int[] wordUnderCursor(float) -> wordUnderCursor
    boolean withinMaxLength(int) -> withinMaxLength
    void setMaxLength(int) -> setMaxLength
    int getMaxLength() -> getMaxLength
    void setOnlyFontChars(boolean) -> setOnlyFontChars
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle) -> setStyle
    com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle getStyle() -> getStyle
    void calculateOffsets() -> calculateOffsets
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    float getTextY(com.badlogic.gdx.graphics.g2d.BitmapFont,com.badlogic.gdx.scenes.scene2d.utils.Drawable) -> getTextY
    void drawSelection(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.graphics.g2d.Batch,com.badlogic.gdx.graphics.g2d.BitmapFont,float,float) -> drawSelection
    void drawText(com.badlogic.gdx.graphics.g2d.Batch,com.badlogic.gdx.graphics.g2d.BitmapFont,float,float) -> drawText
    void drawCursor(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.graphics.g2d.Batch,com.badlogic.gdx.graphics.g2d.BitmapFont,float,float) -> drawCursor
    void updateDisplayText() -> updateDisplayText
    void blink() -> blink
    void copy() -> copy
    void cut() -> cut
    void paste() -> paste
    void paste(java.lang.String,boolean) -> paste
    java.lang.String insert(int,java.lang.CharSequence,java.lang.String) -> insert
    int delete() -> delete
    int delete(boolean) -> delete
    int delete(int,int,boolean) -> delete
    void next(boolean) -> next
    com.badlogic.gdx.scenes.scene2d.ui.TextField findNextTextField(com.badlogic.gdx.utils.Array,com.badlogic.gdx.scenes.scene2d.ui.TextField,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,boolean) -> findNextTextField
    com.badlogic.gdx.scenes.scene2d.InputListener getDefaultInputListener() -> getDefaultInputListener
    void setTextFieldListener(com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldListener) -> setTextFieldListener
    void setTextFieldFilter(com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter) -> setTextFieldFilter
    com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter getTextFieldFilter() -> getTextFieldFilter
    void setFocusTraversal(boolean) -> setFocusTraversal
    java.lang.String getMessageText() -> getMessageText
    void setMessageText(java.lang.String) -> setMessageText
    void setText(java.lang.String) -> setText
    java.lang.String getText() -> getText
    int getSelectionStart() -> getSelectionStart
    java.lang.String getSelection() -> getSelection
    void setSelection(int,int) -> setSelection
    void selectAll() -> selectAll
    void clearSelection() -> clearSelection
    void setCursorPosition(int) -> setCursorPosition
    int getCursorPosition() -> getCursorPosition
    com.badlogic.gdx.scenes.scene2d.ui.TextField$OnscreenKeyboard getOnscreenKeyboard() -> getOnscreenKeyboard
    void setOnscreenKeyboard(com.badlogic.gdx.scenes.scene2d.ui.TextField$OnscreenKeyboard) -> setOnscreenKeyboard
    void setClipboard(com.badlogic.gdx.utils.Clipboard) -> setClipboard
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    void setRightAligned(boolean) -> setRightAligned
    void setPasswordMode(boolean) -> setPasswordMode
    boolean isPasswordMode() -> isPasswordMode
    void setPasswordCharacter(char) -> setPasswordCharacter
    void setBlinkTime(float) -> setBlinkTime
    void setDisabled(boolean) -> setDisabled
    boolean isDisabled() -> isDisabled
    void moveCursor(boolean,boolean) -> moveCursor
    boolean continueCursor(int,int) -> continueCursor
com.badlogic.gdx.scenes.scene2d.ui.TextField$DefaultOnscreenKeyboard -> com.badlogic.gdx.scenes.scene2d.ui.TextField$DefaultOnscreenKeyboard:
    void show(boolean) -> show
com.badlogic.gdx.scenes.scene2d.ui.TextField$KeyRepeatTask -> com.badlogic.gdx.scenes.scene2d.ui.TextField$KeyRepeatTask:
    int keycode -> keycode
    com.badlogic.gdx.scenes.scene2d.ui.TextField this$0 -> this$0
    void run() -> run
com.badlogic.gdx.scenes.scene2d.ui.TextField$OnscreenKeyboard -> com.badlogic.gdx.scenes.scene2d.ui.TextField$OnscreenKeyboard:
    void show(boolean) -> show
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldClickListener -> com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldClickListener:
    com.badlogic.gdx.scenes.scene2d.ui.TextField this$0 -> this$0
    void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> touchDragged
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
    void setCursorPosition(float,float) -> setCursorPosition
    void goHome(boolean) -> goHome
    void goEnd(boolean) -> goEnd
    boolean keyDown(com.badlogic.gdx.scenes.scene2d.InputEvent,int) -> keyDown
    void scheduleKeyRepeatTask(int) -> scheduleKeyRepeatTask
    boolean keyUp(com.badlogic.gdx.scenes.scene2d.InputEvent,int) -> keyUp
    boolean keyTyped(com.badlogic.gdx.scenes.scene2d.InputEvent,char) -> keyTyped
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter -> com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter:
    boolean acceptChar(com.badlogic.gdx.scenes.scene2d.ui.TextField,char) -> acceptChar
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter$DigitsOnlyFilter -> com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter$DigitsOnlyFilter:
    boolean acceptChar(com.badlogic.gdx.scenes.scene2d.ui.TextField,char) -> acceptChar
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldListener -> com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldListener:
    void keyTyped(com.badlogic.gdx.scenes.scene2d.ui.TextField,char) -> keyTyped
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle -> com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle:
    com.badlogic.gdx.graphics.g2d.BitmapFont font -> font
    com.badlogic.gdx.graphics.Color fontColor -> fontColor
    com.badlogic.gdx.graphics.Color focusedFontColor -> focusedFontColor
    com.badlogic.gdx.graphics.Color disabledFontColor -> disabledFontColor
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> background
    com.badlogic.gdx.scenes.scene2d.utils.Drawable focusedBackground -> focusedBackground
    com.badlogic.gdx.scenes.scene2d.utils.Drawable disabledBackground -> disabledBackground
    com.badlogic.gdx.scenes.scene2d.utils.Drawable cursor -> cursor
    com.badlogic.gdx.scenes.scene2d.utils.Drawable selection -> selection
    com.badlogic.gdx.graphics.g2d.BitmapFont messageFont -> messageFont
    com.badlogic.gdx.graphics.Color messageFontColor -> messageFontColor
com.badlogic.gdx.scenes.scene2d.ui.Touchpad -> com.badlogic.gdx.scenes.scene2d.ui.Touchpad:
    com.badlogic.gdx.scenes.scene2d.ui.Touchpad$TouchpadStyle style -> style
    boolean touched -> touched
    boolean resetOnTouchUp -> resetOnTouchUp
    float deadzoneRadius -> deadzoneRadius
    com.badlogic.gdx.math.Circle knobBounds -> knobBounds
    com.badlogic.gdx.math.Circle touchBounds -> touchBounds
    com.badlogic.gdx.math.Circle deadzoneBounds -> deadzoneBounds
    com.badlogic.gdx.math.Vector2 knobPosition -> knobPosition
    com.badlogic.gdx.math.Vector2 knobPercent -> knobPercent
    void calculatePositionAndValue(float,float,boolean) -> calculatePositionAndValue
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Touchpad$TouchpadStyle) -> setStyle
    com.badlogic.gdx.scenes.scene2d.ui.Touchpad$TouchpadStyle getStyle() -> getStyle
    com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean) -> hit
    void layout() -> layout
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    boolean isTouched() -> isTouched
    boolean getResetOnTouchUp() -> getResetOnTouchUp
    void setResetOnTouchUp(boolean) -> setResetOnTouchUp
    void setDeadzone(float) -> setDeadzone
    float getKnobX() -> getKnobX
    float getKnobY() -> getKnobY
    float getKnobPercentX() -> getKnobPercentX
    float getKnobPercentY() -> getKnobPercentY
com.badlogic.gdx.scenes.scene2d.ui.Touchpad$1 -> com.badlogic.gdx.scenes.scene2d.ui.Touchpad$1:
    com.badlogic.gdx.scenes.scene2d.ui.Touchpad this$0 -> this$0
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> touchDragged
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
com.badlogic.gdx.scenes.scene2d.ui.Touchpad$TouchpadStyle -> com.badlogic.gdx.scenes.scene2d.ui.Touchpad$TouchpadStyle:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> background
    com.badlogic.gdx.scenes.scene2d.utils.Drawable knob -> knob
com.badlogic.gdx.scenes.scene2d.ui.Tree -> com.badlogic.gdx.scenes.scene2d.ui.Tree:
    com.badlogic.gdx.scenes.scene2d.ui.Tree$TreeStyle style -> style
    com.badlogic.gdx.utils.Array rootNodes -> rootNodes
    com.badlogic.gdx.scenes.scene2d.utils.Selection selection -> selection
    float ySpacing -> ySpacing
    float iconSpacingLeft -> iconSpacingLeft
    float iconSpacingRight -> iconSpacingRight
    float padding -> padding
    float indentSpacing -> indentSpacing
    float leftColumnWidth -> leftColumnWidth
    float prefWidth -> prefWidth
    float prefHeight -> prefHeight
    boolean sizeInvalid -> sizeInvalid
    com.badlogic.gdx.scenes.scene2d.ui.Tree$Node foundNode -> foundNode
    com.badlogic.gdx.scenes.scene2d.ui.Tree$Node overNode -> overNode
    com.badlogic.gdx.scenes.scene2d.utils.ClickListener clickListener -> clickListener
    void initialize() -> initialize
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Tree$TreeStyle) -> setStyle
    void add(com.badlogic.gdx.scenes.scene2d.ui.Tree$Node) -> add
    void insert(int,com.badlogic.gdx.scenes.scene2d.ui.Tree$Node) -> insert
    void remove(com.badlogic.gdx.scenes.scene2d.ui.Tree$Node) -> remove
    void clearChildren() -> clearChildren
    com.badlogic.gdx.utils.Array getNodes() -> getNodes
    void invalidate() -> invalidate
    void computeSize() -> computeSize
    void computeSize(com.badlogic.gdx.utils.Array,float) -> computeSize
    void layout() -> layout
    float layout(com.badlogic.gdx.utils.Array,float,float) -> layout
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.Batch,com.badlogic.gdx.utils.Array,float) -> draw
    com.badlogic.gdx.scenes.scene2d.ui.Tree$Node getNodeAt(float) -> getNodeAt
    float getNodeAt(com.badlogic.gdx.utils.Array,float,float) -> getNodeAt
    void selectNodes(com.badlogic.gdx.utils.Array,float,float) -> selectNodes
    com.badlogic.gdx.scenes.scene2d.utils.Selection getSelection() -> getSelection
    com.badlogic.gdx.scenes.scene2d.ui.Tree$TreeStyle getStyle() -> getStyle
    com.badlogic.gdx.utils.Array getRootNodes() -> getRootNodes
    com.badlogic.gdx.scenes.scene2d.ui.Tree$Node getOverNode() -> getOverNode
    void setOverNode(com.badlogic.gdx.scenes.scene2d.ui.Tree$Node) -> setOverNode
    void setPadding(float) -> setPadding
    void setYSpacing(float) -> setYSpacing
    void setIconSpacing(float,float) -> setIconSpacing
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    void findExpandedObjects(com.badlogic.gdx.utils.Array) -> findExpandedObjects
    void restoreExpandedObjects(com.badlogic.gdx.utils.Array) -> restoreExpandedObjects
    boolean findExpandedObjects(com.badlogic.gdx.utils.Array,com.badlogic.gdx.utils.Array) -> findExpandedObjects
    com.badlogic.gdx.scenes.scene2d.ui.Tree$Node findNode(java.lang.Object) -> findNode
    com.badlogic.gdx.scenes.scene2d.ui.Tree$Node findNode(com.badlogic.gdx.utils.Array,java.lang.Object) -> findNode
    void collapseAll() -> collapseAll
    void collapseAll(com.badlogic.gdx.utils.Array) -> collapseAll
    void expandAll() -> expandAll
    void expandAll(com.badlogic.gdx.utils.Array) -> expandAll
    com.badlogic.gdx.scenes.scene2d.utils.ClickListener getClickListener() -> getClickListener
com.badlogic.gdx.scenes.scene2d.ui.Tree$1 -> com.badlogic.gdx.scenes.scene2d.ui.Tree$1:
    com.badlogic.gdx.scenes.scene2d.ui.Tree this$0 -> this$0
    void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
    boolean mouseMoved(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> mouseMoved
    void exit(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,com.badlogic.gdx.scenes.scene2d.Actor) -> exit
com.badlogic.gdx.scenes.scene2d.ui.Tree$Node -> com.badlogic.gdx.scenes.scene2d.ui.Tree$Node:
    com.badlogic.gdx.scenes.scene2d.Actor actor -> actor
    com.badlogic.gdx.scenes.scene2d.ui.Tree$Node parent -> parent
    com.badlogic.gdx.utils.Array children -> children
    boolean selectable -> selectable
    boolean expanded -> expanded
    com.badlogic.gdx.scenes.scene2d.utils.Drawable icon -> icon
    float height -> height
    java.lang.Object object -> object
    void setExpanded(boolean) -> setExpanded
    void addToTree(com.badlogic.gdx.scenes.scene2d.ui.Tree) -> addToTree
    void removeFromTree(com.badlogic.gdx.scenes.scene2d.ui.Tree) -> removeFromTree
    void add(com.badlogic.gdx.scenes.scene2d.ui.Tree$Node) -> add
    void addAll(com.badlogic.gdx.utils.Array) -> addAll
    void insert(int,com.badlogic.gdx.scenes.scene2d.ui.Tree$Node) -> insert
    void remove() -> remove
    void remove(com.badlogic.gdx.scenes.scene2d.ui.Tree$Node) -> remove
    void removeAll() -> removeAll
    com.badlogic.gdx.scenes.scene2d.ui.Tree getTree() -> getTree
    com.badlogic.gdx.scenes.scene2d.Actor getActor() -> getActor
    boolean isExpanded() -> isExpanded
    com.badlogic.gdx.utils.Array getChildren() -> getChildren
    void updateChildren() -> updateChildren
    com.badlogic.gdx.scenes.scene2d.ui.Tree$Node getParent() -> getParent
    void setIcon(com.badlogic.gdx.scenes.scene2d.utils.Drawable) -> setIcon
    java.lang.Object getObject() -> getObject
    void setObject(java.lang.Object) -> setObject
    com.badlogic.gdx.scenes.scene2d.utils.Drawable getIcon() -> getIcon
    com.badlogic.gdx.scenes.scene2d.ui.Tree$Node findNode(java.lang.Object) -> findNode
    void collapseAll() -> collapseAll
    void expandAll() -> expandAll
    void expandTo() -> expandTo
    boolean isSelectable() -> isSelectable
    void setSelectable(boolean) -> setSelectable
    void findExpandedObjects(com.badlogic.gdx.utils.Array) -> findExpandedObjects
    void restoreExpandedObjects(com.badlogic.gdx.utils.Array) -> restoreExpandedObjects
com.badlogic.gdx.scenes.scene2d.ui.Tree$TreeStyle -> com.badlogic.gdx.scenes.scene2d.ui.Tree$TreeStyle:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable plus -> plus
    com.badlogic.gdx.scenes.scene2d.utils.Drawable minus -> minus
    com.badlogic.gdx.scenes.scene2d.utils.Drawable over -> over
    com.badlogic.gdx.scenes.scene2d.utils.Drawable selection -> selection
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> background
com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup -> com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup:
    float prefWidth -> prefWidth
    float prefHeight -> prefHeight
    boolean sizeInvalid -> sizeInvalid
    int align -> align
    boolean reverse -> reverse
    boolean round -> round
    float spacing -> spacing
    float padTop -> padTop
    float padLeft -> padLeft
    float padBottom -> padBottom
    float padRight -> padRight
    float fill -> fill
    void invalidate() -> invalidate
    void computeSize() -> computeSize
    void layout() -> layout
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    void setRound(boolean) -> setRound
    com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup reverse() -> reverse
    com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup reverse(boolean) -> reverse
    boolean getReverse() -> getReverse
    com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup space(float) -> space
    float getSpace() -> getSpace
    com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup pad(float) -> pad
    com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup pad(float,float,float,float) -> pad
    com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup padTop(float) -> padTop
    com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup padLeft(float) -> padLeft
    com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup padBottom(float) -> padBottom
    com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup padRight(float) -> padRight
    float getPadTop() -> getPadTop
    float getPadLeft() -> getPadLeft
    float getPadBottom() -> getPadBottom
    float getPadRight() -> getPadRight
    com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup align(int) -> align
    com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup center() -> center
    com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup left() -> left
    com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup right() -> right
    int getAlign() -> getAlign
    com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup fill() -> fill
    com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup fill(float) -> fill
    float getFill() -> getFill
com.badlogic.gdx.scenes.scene2d.ui.Widget -> com.badlogic.gdx.scenes.scene2d.ui.Widget:
    boolean needsLayout -> needsLayout
    boolean fillParent -> fillParent
    boolean layoutEnabled -> layoutEnabled
    float getMinWidth() -> getMinWidth
    float getMinHeight() -> getMinHeight
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    float getMaxWidth() -> getMaxWidth
    float getMaxHeight() -> getMaxHeight
    void setLayoutEnabled(boolean) -> setLayoutEnabled
    void validate() -> validate
    boolean needsLayout() -> needsLayout
    void invalidate() -> invalidate
    void invalidateHierarchy() -> invalidateHierarchy
    void sizeChanged() -> sizeChanged
    void pack() -> pack
    void setFillParent(boolean) -> setFillParent
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    void layout() -> layout
com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup -> com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup:
    boolean needsLayout -> needsLayout
    boolean fillParent -> fillParent
    boolean layoutEnabled -> layoutEnabled
    float getMinWidth() -> getMinWidth
    float getMinHeight() -> getMinHeight
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    float getMaxWidth() -> getMaxWidth
    float getMaxHeight() -> getMaxHeight
    void setLayoutEnabled(boolean) -> setLayoutEnabled
    void setLayoutEnabled(com.badlogic.gdx.scenes.scene2d.Group,boolean) -> setLayoutEnabled
    void validate() -> validate
    boolean needsLayout() -> needsLayout
    void invalidate() -> invalidate
    void invalidateHierarchy() -> invalidateHierarchy
    void childrenChanged() -> childrenChanged
    void sizeChanged() -> sizeChanged
    void pack() -> pack
    void setFillParent(boolean) -> setFillParent
    void layout() -> layout
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
com.badlogic.gdx.scenes.scene2d.ui.Window -> com.badlogic.gdx.scenes.scene2d.ui.Window:
    com.badlogic.gdx.math.Vector2 tmpPosition -> tmpPosition
    com.badlogic.gdx.math.Vector2 tmpSize -> tmpSize
    int MOVE -> MOVE
    com.badlogic.gdx.scenes.scene2d.ui.Window$WindowStyle style -> style
    java.lang.String title -> title
    com.badlogic.gdx.graphics.g2d.BitmapFontCache titleCache -> titleCache
    boolean isMovable -> isMovable
    boolean isModal -> isModal
    boolean isResizable -> isResizable
    int resizeBorder -> resizeBorder
    boolean dragging -> dragging
    int titleAlignment -> titleAlignment
    boolean keepWithinStage -> keepWithinStage
    com.badlogic.gdx.scenes.scene2d.ui.Table buttonTable -> buttonTable
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Window$WindowStyle) -> setStyle
    com.badlogic.gdx.scenes.scene2d.ui.Window$WindowStyle getStyle() -> getStyle
    void keepWithinStage() -> keepWithinStage
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    void drawBackground(com.badlogic.gdx.graphics.g2d.Batch,float,float,float) -> drawBackground
    com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean) -> hit
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getTitle() -> getTitle
    void setTitleAlignment(int) -> setTitleAlignment
    boolean isMovable() -> isMovable
    void setMovable(boolean) -> setMovable
    boolean isModal() -> isModal
    void setModal(boolean) -> setModal
    void setKeepWithinStage(boolean) -> setKeepWithinStage
    boolean isResizable() -> isResizable
    void setResizable(boolean) -> setResizable
    void setResizeBorder(int) -> setResizeBorder
    boolean isDragging() -> isDragging
    float getTitleWidth() -> getTitleWidth
    float getPrefWidth() -> getPrefWidth
    com.badlogic.gdx.scenes.scene2d.ui.Table getButtonTable() -> getButtonTable
com.badlogic.gdx.scenes.scene2d.ui.Window$1 -> com.badlogic.gdx.scenes.scene2d.ui.Window$1:
    com.badlogic.gdx.scenes.scene2d.ui.Window this$0 -> this$0
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
com.badlogic.gdx.scenes.scene2d.ui.Window$2 -> com.badlogic.gdx.scenes.scene2d.ui.Window$2:
    int edge -> edge
    float startX -> startX
    float startY -> startY
    float lastX -> lastX
    float lastY -> lastY
    com.badlogic.gdx.scenes.scene2d.ui.Window this$0 -> this$0
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
    void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> touchDragged
    boolean mouseMoved(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> mouseMoved
    boolean scrolled(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> scrolled
    boolean keyDown(com.badlogic.gdx.scenes.scene2d.InputEvent,int) -> keyDown
    boolean keyUp(com.badlogic.gdx.scenes.scene2d.InputEvent,int) -> keyUp
    boolean keyTyped(com.badlogic.gdx.scenes.scene2d.InputEvent,char) -> keyTyped
com.badlogic.gdx.scenes.scene2d.ui.Window$WindowStyle -> com.badlogic.gdx.scenes.scene2d.ui.Window$WindowStyle:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> background
    com.badlogic.gdx.graphics.g2d.BitmapFont titleFont -> titleFont
    com.badlogic.gdx.graphics.Color titleFontColor -> titleFontColor
    com.badlogic.gdx.scenes.scene2d.utils.Drawable stageBackground -> stageBackground
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener -> com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener:
    com.badlogic.gdx.math.Vector2 tmpCoords -> tmpCoords
    com.badlogic.gdx.input.GestureDetector detector -> detector
    com.badlogic.gdx.scenes.scene2d.InputEvent event -> event
    com.badlogic.gdx.scenes.scene2d.Actor actor -> actor
    com.badlogic.gdx.scenes.scene2d.Actor touchDownTarget -> touchDownTarget
    boolean handle(com.badlogic.gdx.scenes.scene2d.Event) -> handle
    void touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
    void tap(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> tap
    boolean longPress(com.badlogic.gdx.scenes.scene2d.Actor,float,float) -> longPress
    void fling(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> fling
    void pan(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,float,float) -> pan
    void zoom(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> zoom
    void pinch(com.badlogic.gdx.scenes.scene2d.InputEvent,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> pinch
    com.badlogic.gdx.input.GestureDetector getGestureDetector() -> getGestureDetector
    com.badlogic.gdx.scenes.scene2d.Actor getTouchDownTarget() -> getTouchDownTarget
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener$1 -> com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener$1:
    com.badlogic.gdx.math.Vector2 initialPointer1 -> initialPointer1
    com.badlogic.gdx.math.Vector2 initialPointer2 -> initialPointer2
    com.badlogic.gdx.math.Vector2 pointer1 -> pointer1
    com.badlogic.gdx.math.Vector2 pointer2 -> pointer2
    com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener this$0 -> this$0
    boolean tap(float,float,int,int) -> tap
    boolean longPress(float,float) -> longPress
    boolean fling(float,float,int) -> fling
    boolean pan(float,float,float,float) -> pan
    boolean zoom(float,float) -> zoom
    boolean pinch(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> pinch
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener$2 -> com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener$2:
    int[] $SwitchMap$com$badlogic$gdx$scenes$scene2d$InputEvent$Type -> $SwitchMap$com$badlogic$gdx$scenes$scene2d$InputEvent$Type
com.badlogic.gdx.scenes.scene2d.utils.Align -> com.badlogic.gdx.scenes.scene2d.utils.Align:
    int center -> center
    int top -> top
    int bottom -> bottom
    int left -> left
    int right -> right
com.badlogic.gdx.scenes.scene2d.utils.ArraySelection -> com.badlogic.gdx.scenes.scene2d.utils.ArraySelection:
    com.badlogic.gdx.utils.Array items -> items
    boolean rangeSelect -> rangeSelect
    void choose(java.lang.Object) -> choose
    boolean getRangeSelect() -> getRangeSelect
    void setRangeSelect(boolean) -> setRangeSelect
com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable -> com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable:
    float leftWidth -> leftWidth
    float rightWidth -> rightWidth
    float topHeight -> topHeight
    float bottomHeight -> bottomHeight
    float minWidth -> minWidth
    float minHeight -> minHeight
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float,float,float,float) -> draw
    float getLeftWidth() -> getLeftWidth
    void setLeftWidth(float) -> setLeftWidth
    float getRightWidth() -> getRightWidth
    void setRightWidth(float) -> setRightWidth
    float getTopHeight() -> getTopHeight
    void setTopHeight(float) -> setTopHeight
    float getBottomHeight() -> getBottomHeight
    void setBottomHeight(float) -> setBottomHeight
    float getMinWidth() -> getMinWidth
    void setMinWidth(float) -> setMinWidth
    float getMinHeight() -> getMinHeight
    void setMinHeight(float) -> setMinHeight
com.badlogic.gdx.scenes.scene2d.utils.ChangeListener -> com.badlogic.gdx.scenes.scene2d.utils.ChangeListener:
    boolean handle(com.badlogic.gdx.scenes.scene2d.Event) -> handle
    void changed(com.badlogic.gdx.scenes.scene2d.utils.ChangeListener$ChangeEvent,com.badlogic.gdx.scenes.scene2d.Actor) -> changed
com.badlogic.gdx.scenes.scene2d.utils.ChangeListener$ChangeEvent -> com.badlogic.gdx.scenes.scene2d.utils.ChangeListener$ChangeEvent:
com.badlogic.gdx.scenes.scene2d.utils.ClickListener -> com.badlogic.gdx.scenes.scene2d.utils.ClickListener:
    float visualPressedDuration -> visualPressedDuration
    float tapSquareSize -> tapSquareSize
    float touchDownX -> touchDownX
    float touchDownY -> touchDownY
    int pressedPointer -> pressedPointer
    int pressedButton -> pressedButton
    int button -> button
    boolean pressed -> pressed
    boolean over -> over
    boolean cancelled -> cancelled
    float visualPressedTime -> visualPressedTime
    long tapCountInterval -> tapCountInterval
    int tapCount -> tapCount
    long lastTapTime -> lastTapTime
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> touchDragged
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
    void enter(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,com.badlogic.gdx.scenes.scene2d.Actor) -> enter
    void exit(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,com.badlogic.gdx.scenes.scene2d.Actor) -> exit
    void cancel() -> cancel
    void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
    boolean isOver(com.badlogic.gdx.scenes.scene2d.Actor,float,float) -> isOver
    boolean inTapSquare(float,float) -> inTapSquare
    boolean inTapSquare() -> inTapSquare
    void invalidateTapSquare() -> invalidateTapSquare
    boolean isPressed() -> isPressed
    boolean isVisualPressed() -> isVisualPressed
    boolean isOver() -> isOver
    void setTapSquareSize(float) -> setTapSquareSize
    float getTapSquareSize() -> getTapSquareSize
    void setTapCountInterval(float) -> setTapCountInterval
    int getTapCount() -> getTapCount
    float getTouchDownX() -> getTouchDownX
    float getTouchDownY() -> getTouchDownY
    int getPressedButton() -> getPressedButton
    int getPressedPointer() -> getPressedPointer
    int getButton() -> getButton
    void setButton(int) -> setButton
com.badlogic.gdx.scenes.scene2d.utils.Cullable -> com.badlogic.gdx.scenes.scene2d.utils.Cullable:
    void setCullingArea(com.badlogic.gdx.math.Rectangle) -> setCullingArea
com.badlogic.gdx.scenes.scene2d.utils.Disableable -> com.badlogic.gdx.scenes.scene2d.utils.Disableable:
    void setDisabled(boolean) -> setDisabled
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop -> com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop:
    com.badlogic.gdx.math.Vector2 tmpVector -> tmpVector
    com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Payload payload -> payload
    com.badlogic.gdx.scenes.scene2d.Actor dragActor -> dragActor
    com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Target target -> target
    boolean isValidTarget -> isValidTarget
    com.badlogic.gdx.utils.Array targets -> targets
    com.badlogic.gdx.utils.ObjectMap sourceListeners -> sourceListeners
    float tapSquareSize -> tapSquareSize
    int button -> button
    float dragActorX -> dragActorX
    float dragActorY -> dragActorY
    float touchOffsetX -> touchOffsetX
    float touchOffsetY -> touchOffsetY
    long dragStartTime -> dragStartTime
    int dragTime -> dragTime
    int activePointer -> activePointer
    void addSource(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source) -> addSource
    void removeSource(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source) -> removeSource
    void addTarget(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Target) -> addTarget
    void removeTarget(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Target) -> removeTarget
    void clear() -> clear
    void setTapSquareSize(float) -> setTapSquareSize
    void setButton(int) -> setButton
    void setDragActorPosition(float,float) -> setDragActorPosition
    void setTouchOffset(float,float) -> setTouchOffset
    boolean isDragging() -> isDragging
    com.badlogic.gdx.scenes.scene2d.Actor getDragActor() -> getDragActor
    void setDragTime(int) -> setDragTime
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$1 -> com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$1:
    com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source val$source -> val$source
    com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop this$0 -> this$0
    void dragStart(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> dragStart
    void drag(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> drag
    void dragStop(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> dragStop
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Payload -> com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Payload:
    com.badlogic.gdx.scenes.scene2d.Actor dragActor -> dragActor
    com.badlogic.gdx.scenes.scene2d.Actor validDragActor -> validDragActor
    com.badlogic.gdx.scenes.scene2d.Actor invalidDragActor -> invalidDragActor
    java.lang.Object object -> object
    void setDragActor(com.badlogic.gdx.scenes.scene2d.Actor) -> setDragActor
    com.badlogic.gdx.scenes.scene2d.Actor getDragActor() -> getDragActor
    void setValidDragActor(com.badlogic.gdx.scenes.scene2d.Actor) -> setValidDragActor
    com.badlogic.gdx.scenes.scene2d.Actor getValidDragActor() -> getValidDragActor
    void setInvalidDragActor(com.badlogic.gdx.scenes.scene2d.Actor) -> setInvalidDragActor
    com.badlogic.gdx.scenes.scene2d.Actor getInvalidDragActor() -> getInvalidDragActor
    java.lang.Object getObject() -> getObject
    void setObject(java.lang.Object) -> setObject
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source -> com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source:
    com.badlogic.gdx.scenes.scene2d.Actor actor -> actor
    com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Payload dragStart(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> dragStart
    void dragStop(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Payload,com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Target) -> dragStop
    com.badlogic.gdx.scenes.scene2d.Actor getActor() -> getActor
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Target -> com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Target:
    com.badlogic.gdx.scenes.scene2d.Actor actor -> actor
    boolean drag(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source,com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Payload,float,float,int) -> drag
    void reset(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source,com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Payload) -> reset
    void drop(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source,com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Payload,float,float,int) -> drop
    com.badlogic.gdx.scenes.scene2d.Actor getActor() -> getActor
com.badlogic.gdx.scenes.scene2d.utils.DragListener -> com.badlogic.gdx.scenes.scene2d.utils.DragListener:
    float tapSquareSize -> tapSquareSize
    float touchDownX -> touchDownX
    float touchDownY -> touchDownY
    int pressedPointer -> pressedPointer
    int button -> button
    boolean dragging -> dragging
    float deltaX -> deltaX
    float deltaY -> deltaY
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> touchDragged
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
    void dragStart(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> dragStart
    void drag(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> drag
    void dragStop(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> dragStop
    void cancel() -> cancel
    boolean isDragging() -> isDragging
    void setTapSquareSize(float) -> setTapSquareSize
    float getTapSquareSize() -> getTapSquareSize
    float getTouchDownX() -> getTouchDownX
    float getTouchDownY() -> getTouchDownY
    float getDeltaX() -> getDeltaX
    float getDeltaY() -> getDeltaY
    int getButton() -> getButton
    void setButton(int) -> setButton
com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener -> com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener:
    com.badlogic.gdx.scenes.scene2d.ui.ScrollPane scroll -> scroll
    com.badlogic.gdx.utils.Timer$Task scrollUp -> scrollUp
    com.badlogic.gdx.utils.Timer$Task scrollDown -> scrollDown
    com.badlogic.gdx.math.Interpolation interpolation -> interpolation
    float minSpeed -> minSpeed
    float maxSpeed -> maxSpeed
    float tickSecs -> tickSecs
    long startTime -> startTime
    long rampTime -> rampTime
    void setup(float,float,float,float) -> setup
    float getScrollPixels() -> getScrollPixels
    void drag(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> drag
    void dragStop(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> dragStop
com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener$1 -> com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener$1:
    com.badlogic.gdx.scenes.scene2d.ui.ScrollPane val$scroll -> val$scroll
    com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener this$0 -> this$0
    void run() -> run
com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener$2 -> com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener$2:
    com.badlogic.gdx.scenes.scene2d.ui.ScrollPane val$scroll -> val$scroll
    com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener this$0 -> this$0
    void run() -> run
com.badlogic.gdx.scenes.scene2d.utils.Drawable -> com.badlogic.gdx.scenes.scene2d.utils.Drawable:
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float,float,float,float) -> draw
    float getLeftWidth() -> getLeftWidth
    void setLeftWidth(float) -> setLeftWidth
    float getRightWidth() -> getRightWidth
    void setRightWidth(float) -> setRightWidth
    float getTopHeight() -> getTopHeight
    void setTopHeight(float) -> setTopHeight
    float getBottomHeight() -> getBottomHeight
    void setBottomHeight(float) -> setBottomHeight
    float getMinWidth() -> getMinWidth
    void setMinWidth(float) -> setMinWidth
    float getMinHeight() -> getMinHeight
    void setMinHeight(float) -> setMinHeight
com.badlogic.gdx.scenes.scene2d.utils.FocusListener -> com.badlogic.gdx.scenes.scene2d.utils.FocusListener:
    boolean handle(com.badlogic.gdx.scenes.scene2d.Event) -> handle
    void keyboardFocusChanged(com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent,com.badlogic.gdx.scenes.scene2d.Actor,boolean) -> keyboardFocusChanged
    void scrollFocusChanged(com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent,com.badlogic.gdx.scenes.scene2d.Actor,boolean) -> scrollFocusChanged
com.badlogic.gdx.scenes.scene2d.utils.FocusListener$1 -> com.badlogic.gdx.scenes.scene2d.utils.FocusListener$1:
    int[] $SwitchMap$com$badlogic$gdx$scenes$scene2d$utils$FocusListener$FocusEvent$Type -> $SwitchMap$com$badlogic$gdx$scenes$scene2d$utils$FocusListener$FocusEvent$Type
com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent -> com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent:
    boolean focused -> focused
    com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type type -> type
    com.badlogic.gdx.scenes.scene2d.Actor relatedActor -> relatedActor
    void reset() -> reset
    boolean isFocused() -> isFocused
    void setFocused(boolean) -> setFocused
    com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type getType() -> getType
    void setType(com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type) -> setType
    com.badlogic.gdx.scenes.scene2d.Actor getRelatedActor() -> getRelatedActor
    void setRelatedActor(com.badlogic.gdx.scenes.scene2d.Actor) -> setRelatedActor
com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type -> com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type:
    com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type keyboard -> keyboard
    com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type scroll -> scroll
    com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type[] $VALUES -> $VALUES
    com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type[] values() -> values
    com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.scenes.scene2d.utils.Layout -> com.badlogic.gdx.scenes.scene2d.utils.Layout:
    void layout() -> layout
    void invalidate() -> invalidate
    void invalidateHierarchy() -> invalidateHierarchy
    void validate() -> validate
    void pack() -> pack
    void setFillParent(boolean) -> setFillParent
    void setLayoutEnabled(boolean) -> setLayoutEnabled
    float getMinWidth() -> getMinWidth
    float getMinHeight() -> getMinHeight
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    float getMaxWidth() -> getMaxWidth
    float getMaxHeight() -> getMaxHeight
com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable -> com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable:
    com.badlogic.gdx.graphics.g2d.NinePatch patch -> patch
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float,float,float,float) -> draw
    void setPatch(com.badlogic.gdx.graphics.g2d.NinePatch) -> setPatch
    com.badlogic.gdx.graphics.g2d.NinePatch getPatch() -> getPatch
com.badlogic.gdx.scenes.scene2d.utils.ScissorStack -> com.badlogic.gdx.scenes.scene2d.utils.ScissorStack:
    com.badlogic.gdx.utils.Array scissors -> scissors
    com.badlogic.gdx.math.Vector3 tmp -> tmp
    com.badlogic.gdx.math.Rectangle viewport -> viewport
    boolean pushScissors(com.badlogic.gdx.math.Rectangle) -> pushScissors
    com.badlogic.gdx.math.Rectangle popScissors() -> popScissors
    void fix(com.badlogic.gdx.math.Rectangle) -> fix
    void calculateScissors(com.badlogic.gdx.graphics.Camera,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Rectangle,com.badlogic.gdx.math.Rectangle) -> calculateScissors
    void calculateScissors(com.badlogic.gdx.graphics.Camera,float,float,float,float,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Rectangle,com.badlogic.gdx.math.Rectangle) -> calculateScissors
    com.badlogic.gdx.math.Rectangle getViewport() -> getViewport
com.badlogic.gdx.scenes.scene2d.utils.Selection -> com.badlogic.gdx.scenes.scene2d.utils.Selection:
    com.badlogic.gdx.scenes.scene2d.Actor actor -> actor
    com.badlogic.gdx.utils.ObjectSet selected -> selected
    com.badlogic.gdx.utils.ObjectSet old -> old
    boolean isDisabled -> isDisabled
    boolean toggle -> toggle
    boolean multiple -> multiple
    boolean required -> required
    boolean programmaticChangeEvents -> programmaticChangeEvents
    java.lang.Object lastSelected -> lastSelected
    void setActor(com.badlogic.gdx.scenes.scene2d.Actor) -> setActor
    void choose(java.lang.Object) -> choose
    boolean hasItems() -> hasItems
    boolean isEmpty() -> isEmpty
    int size() -> size
    com.badlogic.gdx.utils.ObjectSet items() -> items
    java.lang.Object first() -> first
    void snapshot() -> snapshot
    void revert() -> revert
    void cleanup() -> cleanup
    void set(java.lang.Object) -> set
    void setAll(com.badlogic.gdx.utils.Array) -> setAll
    void add(java.lang.Object) -> add
    void addAll(com.badlogic.gdx.utils.Array) -> addAll
    void remove(java.lang.Object) -> remove
    void removeAll(com.badlogic.gdx.utils.Array) -> removeAll
    void clear() -> clear
    boolean fireChangeEvent() -> fireChangeEvent
    boolean contains(java.lang.Object) -> contains
    java.lang.Object getLastSelected() -> getLastSelected
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.Array toArray() -> toArray
    com.badlogic.gdx.utils.Array toArray(com.badlogic.gdx.utils.Array) -> toArray
    void setDisabled(boolean) -> setDisabled
    boolean isDisabled() -> isDisabled
    boolean getToggle() -> getToggle
    void setToggle(boolean) -> setToggle
    boolean getMultiple() -> getMultiple
    void setMultiple(boolean) -> setMultiple
    boolean getRequired() -> getRequired
    void setRequired(boolean) -> setRequired
    void setProgrammaticChangeEvents(boolean) -> setProgrammaticChangeEvents
    java.lang.String toString() -> toString
com.badlogic.gdx.scenes.scene2d.utils.SpriteDrawable -> com.badlogic.gdx.scenes.scene2d.utils.SpriteDrawable:
    com.badlogic.gdx.graphics.g2d.Sprite sprite -> sprite
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float,float,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float,float,float,float,float,float,float,float,float) -> draw
    void setSprite(com.badlogic.gdx.graphics.g2d.Sprite) -> setSprite
    com.badlogic.gdx.graphics.g2d.Sprite getSprite() -> getSprite
com.badlogic.gdx.scenes.scene2d.utils.TextureRegionDrawable -> com.badlogic.gdx.scenes.scene2d.utils.TextureRegionDrawable:
    com.badlogic.gdx.graphics.g2d.TextureRegion region -> region
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float,float,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float,float,float,float,float,float,float,float,float) -> draw
    void setRegion(com.badlogic.gdx.graphics.g2d.TextureRegion) -> setRegion
    com.badlogic.gdx.graphics.g2d.TextureRegion getRegion() -> getRegion
com.badlogic.gdx.scenes.scene2d.utils.TiledDrawable -> com.badlogic.gdx.scenes.scene2d.utils.TiledDrawable:
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float,float,float,float) -> draw
com.badlogic.gdx.scenes.scene2d.utils.TransformDrawable -> com.badlogic.gdx.scenes.scene2d.utils.TransformDrawable:
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float,float,float,float,float,float,float,float,float) -> draw
com.badlogic.gdx.scenes.scene2d.utils.UIUtils -> com.badlogic.gdx.scenes.scene2d.utils.UIUtils:
    boolean isMac -> isMac
    boolean isWindows -> isWindows
    boolean isLinux -> isLinux
    boolean left() -> left
    boolean left(int) -> left
    boolean right() -> right
    boolean right(int) -> right
    boolean middle() -> middle
    boolean middle(int) -> middle
    boolean shift() -> shift
    boolean shift(int) -> shift
    boolean ctrl() -> ctrl
    boolean ctrl(int) -> ctrl
    boolean alt() -> alt
    boolean alt(int) -> alt
com.badlogic.gdx.utils.Array -> com.badlogic.gdx.utils.Array:
    java.lang.Object[] items -> items
    int size -> size
    boolean ordered -> ordered
    com.badlogic.gdx.utils.Array$ArrayIterable iterable -> iterable
    com.badlogic.gdx.utils.Predicate$PredicateIterable predicateIterable -> predicateIterable
    void add(java.lang.Object) -> add
    void addAll(com.badlogic.gdx.utils.Array) -> addAll
    void addAll(com.badlogic.gdx.utils.Array,int,int) -> addAll
    void addAll(java.lang.Object[]) -> addAll
    void addAll(java.lang.Object[],int,int) -> addAll
    java.lang.Object get(int) -> get
    void set(int,java.lang.Object) -> set
    void insert(int,java.lang.Object) -> insert
    void swap(int,int) -> swap
    boolean contains(java.lang.Object,boolean) -> contains
    int indexOf(java.lang.Object,boolean) -> indexOf
    int lastIndexOf(java.lang.Object,boolean) -> lastIndexOf
    boolean removeValue(java.lang.Object,boolean) -> removeValue
    java.lang.Object removeIndex(int) -> removeIndex
    void removeRange(int,int) -> removeRange
    boolean removeAll(com.badlogic.gdx.utils.Array,boolean) -> removeAll
    java.lang.Object pop() -> pop
    java.lang.Object peek() -> peek
    java.lang.Object first() -> first
    void clear() -> clear
    java.lang.Object[] shrink() -> shrink
    java.lang.Object[] ensureCapacity(int) -> ensureCapacity
    java.lang.Object[] resize(int) -> resize
    void sort() -> sort
    void sort(java.util.Comparator) -> sort
    java.lang.Object selectRanked(java.util.Comparator,int) -> selectRanked
    int selectRankedIndex(java.util.Comparator,int) -> selectRankedIndex
    void reverse() -> reverse
    void shuffle() -> shuffle
    java.util.Iterator iterator() -> iterator
    java.lang.Iterable select(com.badlogic.gdx.utils.Predicate) -> select
    void truncate(int) -> truncate
    java.lang.Object random() -> random
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Class) -> toArray
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String toString(java.lang.String) -> toString
    com.badlogic.gdx.utils.Array of(java.lang.Class) -> of
    com.badlogic.gdx.utils.Array of(boolean,int,java.lang.Class) -> of
    com.badlogic.gdx.utils.Array with(java.lang.Object[]) -> with
com.badlogic.gdx.utils.Array$ArrayIterable -> com.badlogic.gdx.utils.Array$ArrayIterable:
    com.badlogic.gdx.utils.Array array -> array
    boolean allowRemove -> allowRemove
    com.badlogic.gdx.utils.Array$ArrayIterator iterator1 -> iterator1
    com.badlogic.gdx.utils.Array$ArrayIterator iterator2 -> iterator2
    java.util.Iterator iterator() -> iterator
com.badlogic.gdx.utils.Array$ArrayIterator -> com.badlogic.gdx.utils.Array$ArrayIterator:
    com.badlogic.gdx.utils.Array array -> array
    boolean allowRemove -> allowRemove
    int index -> index
    boolean valid -> valid
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
    void reset() -> reset
    java.util.Iterator iterator() -> iterator
com.badlogic.gdx.utils.ArrayMap -> com.badlogic.gdx.utils.ArrayMap:
    java.lang.Object[] keys -> keys
    java.lang.Object[] values -> values
    int size -> size
    boolean ordered -> ordered
    com.badlogic.gdx.utils.ArrayMap$Entries entries1 -> entries1
    com.badlogic.gdx.utils.ArrayMap$Entries entries2 -> entries2
    com.badlogic.gdx.utils.ArrayMap$Values valuesIter1 -> valuesIter1
    com.badlogic.gdx.utils.ArrayMap$Values valuesIter2 -> valuesIter2
    com.badlogic.gdx.utils.ArrayMap$Keys keysIter1 -> keysIter1
    com.badlogic.gdx.utils.ArrayMap$Keys keysIter2 -> keysIter2
    void put(java.lang.Object,java.lang.Object) -> put
    void put(java.lang.Object,java.lang.Object,int) -> put
    void putAll(com.badlogic.gdx.utils.ArrayMap) -> putAll
    void putAll(com.badlogic.gdx.utils.ArrayMap,int,int) -> putAll
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object getKey(java.lang.Object,boolean) -> getKey
    java.lang.Object getKeyAt(int) -> getKeyAt
    java.lang.Object getValueAt(int) -> getValueAt
    java.lang.Object firstKey() -> firstKey
    java.lang.Object firstValue() -> firstValue
    void setKey(int,java.lang.Object) -> setKey
    void setValue(int,java.lang.Object) -> setValue
    void insert(int,java.lang.Object,java.lang.Object) -> insert
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object,boolean) -> containsValue
    int indexOfKey(java.lang.Object) -> indexOfKey
    int indexOfValue(java.lang.Object,boolean) -> indexOfValue
    java.lang.Object removeKey(java.lang.Object) -> removeKey
    boolean removeValue(java.lang.Object,boolean) -> removeValue
    void removeIndex(int) -> removeIndex
    java.lang.Object peekKey() -> peekKey
    java.lang.Object peekValue() -> peekValue
    void clear(int) -> clear
    void clear() -> clear
    void shrink() -> shrink
    void ensureCapacity(int) -> ensureCapacity
    void resize(int) -> resize
    void reverse() -> reverse
    void shuffle() -> shuffle
    void truncate(int) -> truncate
    java.lang.String toString() -> toString
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.ArrayMap$Entries entries() -> entries
    com.badlogic.gdx.utils.ArrayMap$Values values() -> values
    com.badlogic.gdx.utils.ArrayMap$Keys keys() -> keys
com.badlogic.gdx.utils.ArrayMap$Entries -> com.badlogic.gdx.utils.ArrayMap$Entries:
    com.badlogic.gdx.utils.ArrayMap map -> map
    com.badlogic.gdx.utils.ObjectMap$Entry entry -> entry
    int index -> index
    boolean valid -> valid
    boolean hasNext() -> hasNext
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.ObjectMap$Entry next() -> next
    void remove() -> remove
    void reset() -> reset
    java.lang.Object next() -> next
com.badlogic.gdx.utils.ArrayMap$Keys -> com.badlogic.gdx.utils.ArrayMap$Keys:
    com.badlogic.gdx.utils.ArrayMap map -> map
    int index -> index
    boolean valid -> valid
    boolean hasNext() -> hasNext
    java.util.Iterator iterator() -> iterator
    java.lang.Object next() -> next
    void remove() -> remove
    void reset() -> reset
    com.badlogic.gdx.utils.Array toArray() -> toArray
    com.badlogic.gdx.utils.Array toArray(com.badlogic.gdx.utils.Array) -> toArray
com.badlogic.gdx.utils.ArrayMap$Values -> com.badlogic.gdx.utils.ArrayMap$Values:
    com.badlogic.gdx.utils.ArrayMap map -> map
    int index -> index
    boolean valid -> valid
    boolean hasNext() -> hasNext
    java.util.Iterator iterator() -> iterator
    java.lang.Object next() -> next
    void remove() -> remove
    void reset() -> reset
    com.badlogic.gdx.utils.Array toArray() -> toArray
    com.badlogic.gdx.utils.Array toArray(com.badlogic.gdx.utils.Array) -> toArray
com.badlogic.gdx.utils.AtomicQueue -> com.badlogic.gdx.utils.AtomicQueue:
    java.util.concurrent.atomic.AtomicInteger writeIndex -> writeIndex
    java.util.concurrent.atomic.AtomicInteger readIndex -> readIndex
    java.util.concurrent.atomic.AtomicReferenceArray queue -> queue
    int next(int) -> next
    boolean put(java.lang.Object) -> put
    java.lang.Object poll() -> poll
com.badlogic.gdx.utils.Base64Coder -> com.badlogic.gdx.utils.Base64Coder:
    java.lang.String systemLineSeparator -> systemLineSeparator
    char[] map1 -> map1
    byte[] map2 -> map2
    java.lang.String encodeString(java.lang.String) -> encodeString
    java.lang.String encodeLines(byte[]) -> encodeLines
    java.lang.String encodeLines(byte[],int,int,int,java.lang.String) -> encodeLines
    char[] encode(byte[]) -> encode
    char[] encode(byte[],int) -> encode
    char[] encode(byte[],int,int) -> encode
    java.lang.String decodeString(java.lang.String) -> decodeString
    byte[] decodeLines(java.lang.String) -> decodeLines
    byte[] decode(java.lang.String) -> decode
    byte[] decode(char[]) -> decode
    byte[] decode(char[],int,int) -> decode
com.badlogic.gdx.utils.BaseJsonReader -> com.badlogic.gdx.utils.BaseJsonReader:
    com.badlogic.gdx.utils.JsonValue parse(java.io.InputStream) -> parse
    com.badlogic.gdx.utils.JsonValue parse(com.badlogic.gdx.files.FileHandle) -> parse
com.badlogic.gdx.utils.BinaryHeap -> com.badlogic.gdx.utils.BinaryHeap:
    int size -> size
    com.badlogic.gdx.utils.BinaryHeap$Node[] nodes -> nodes
    boolean isMaxHeap -> isMaxHeap
    com.badlogic.gdx.utils.BinaryHeap$Node add(com.badlogic.gdx.utils.BinaryHeap$Node) -> add
    com.badlogic.gdx.utils.BinaryHeap$Node add(com.badlogic.gdx.utils.BinaryHeap$Node,float) -> add
    com.badlogic.gdx.utils.BinaryHeap$Node peek() -> peek
    com.badlogic.gdx.utils.BinaryHeap$Node pop() -> pop
    com.badlogic.gdx.utils.BinaryHeap$Node remove(com.badlogic.gdx.utils.BinaryHeap$Node) -> remove
    com.badlogic.gdx.utils.BinaryHeap$Node remove(int) -> remove
    void clear() -> clear
    void setValue(com.badlogic.gdx.utils.BinaryHeap$Node,float) -> setValue
    void up(int) -> up
    void down(int) -> down
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.BinaryHeap$Node -> com.badlogic.gdx.utils.BinaryHeap$Node:
    float value -> value
    int index -> index
    float getValue() -> getValue
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.Bits -> com.badlogic.gdx.utils.Bits:
    long[] bits -> bits
    boolean get(int) -> get
    boolean getAndClear(int) -> getAndClear
    boolean getAndSet(int) -> getAndSet
    void set(int) -> set
    void flip(int) -> flip
    void checkCapacity(int) -> checkCapacity
    void clear(int) -> clear
    void clear() -> clear
    int numBits() -> numBits
    int length() -> length
    boolean isEmpty() -> isEmpty
    int nextSetBit(int) -> nextSetBit
    int nextClearBit(int) -> nextClearBit
    void and(com.badlogic.gdx.utils.Bits) -> and
    void andNot(com.badlogic.gdx.utils.Bits) -> andNot
    void or(com.badlogic.gdx.utils.Bits) -> or
    void xor(com.badlogic.gdx.utils.Bits) -> xor
    boolean intersects(com.badlogic.gdx.utils.Bits) -> intersects
    boolean containsAll(com.badlogic.gdx.utils.Bits) -> containsAll
com.badlogic.gdx.utils.BooleanArray -> com.badlogic.gdx.utils.BooleanArray:
    boolean[] items -> items
    int size -> size
    boolean ordered -> ordered
    void add(boolean) -> add
    void addAll(com.badlogic.gdx.utils.BooleanArray) -> addAll
    void addAll(com.badlogic.gdx.utils.BooleanArray,int,int) -> addAll
    void addAll(boolean[]) -> addAll
    void addAll(boolean[],int,int) -> addAll
    boolean get(int) -> get
    void set(int,boolean) -> set
    void insert(int,boolean) -> insert
    void swap(int,int) -> swap
    boolean removeIndex(int) -> removeIndex
    void removeRange(int,int) -> removeRange
    boolean removeAll(com.badlogic.gdx.utils.BooleanArray) -> removeAll
    boolean pop() -> pop
    boolean peek() -> peek
    boolean first() -> first
    void clear() -> clear
    boolean[] shrink() -> shrink
    boolean[] ensureCapacity(int) -> ensureCapacity
    boolean[] resize(int) -> resize
    void reverse() -> reverse
    void shuffle() -> shuffle
    void truncate(int) -> truncate
    boolean random() -> random
    boolean[] toArray() -> toArray
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String toString(java.lang.String) -> toString
    com.badlogic.gdx.utils.BooleanArray with(boolean[]) -> with
com.badlogic.gdx.utils.BufferUtils -> com.badlogic.gdx.utils.BufferUtils:
    com.badlogic.gdx.utils.Array unsafeBuffers -> unsafeBuffers
    int allocatedUnsafe -> allocatedUnsafe
    void copy(float[],java.nio.Buffer,int,int) -> copy
    void copy(byte[],int,java.nio.Buffer,int) -> copy
    void copy(short[],int,java.nio.Buffer,int) -> copy
    void copy(char[],int,int,java.nio.Buffer) -> copy
    void copy(int[],int,int,java.nio.Buffer) -> copy
    void copy(long[],int,int,java.nio.Buffer) -> copy
    void copy(float[],int,int,java.nio.Buffer) -> copy
    void copy(double[],int,int,java.nio.Buffer) -> copy
    void copy(char[],int,java.nio.Buffer,int) -> copy
    void copy(int[],int,java.nio.Buffer,int) -> copy
    void copy(long[],int,java.nio.Buffer,int) -> copy
    void copy(float[],int,java.nio.Buffer,int) -> copy
    void copy(double[],int,java.nio.Buffer,int) -> copy
    void copy(java.nio.Buffer,java.nio.Buffer,int) -> copy
    void transform(java.nio.Buffer,int,int,int,com.badlogic.gdx.math.Matrix4) -> transform
    void transform(float[],int,int,int,com.badlogic.gdx.math.Matrix4) -> transform
    void transform(java.nio.Buffer,int,int,int,com.badlogic.gdx.math.Matrix4,int) -> transform
    void transform(float[],int,int,int,com.badlogic.gdx.math.Matrix4,int) -> transform
    void transform(java.nio.Buffer,int,int,int,com.badlogic.gdx.math.Matrix3) -> transform
    void transform(float[],int,int,int,com.badlogic.gdx.math.Matrix3) -> transform
    void transform(java.nio.Buffer,int,int,int,com.badlogic.gdx.math.Matrix3,int) -> transform
    void transform(float[],int,int,int,com.badlogic.gdx.math.Matrix3,int) -> transform
    long findFloats(java.nio.Buffer,int,java.nio.Buffer,int) -> findFloats
    long findFloats(float[],int,java.nio.Buffer,int) -> findFloats
    long findFloats(java.nio.Buffer,int,float[],int) -> findFloats
    long findFloats(float[],int,float[],int) -> findFloats
    long findFloats(java.nio.Buffer,int,java.nio.Buffer,int,float) -> findFloats
    long findFloats(float[],int,java.nio.Buffer,int,float) -> findFloats
    long findFloats(java.nio.Buffer,int,float[],int,float) -> findFloats
    long findFloats(float[],int,float[],int,float) -> findFloats
    int positionInBytes(java.nio.Buffer) -> positionInBytes
    int bytesToElements(java.nio.Buffer,int) -> bytesToElements
    int elementsToBytes(java.nio.Buffer,int) -> elementsToBytes
    java.nio.FloatBuffer newFloatBuffer(int) -> newFloatBuffer
    java.nio.DoubleBuffer newDoubleBuffer(int) -> newDoubleBuffer
    java.nio.ByteBuffer newByteBuffer(int) -> newByteBuffer
    java.nio.ShortBuffer newShortBuffer(int) -> newShortBuffer
    java.nio.CharBuffer newCharBuffer(int) -> newCharBuffer
    java.nio.IntBuffer newIntBuffer(int) -> newIntBuffer
    java.nio.LongBuffer newLongBuffer(int) -> newLongBuffer
    void disposeUnsafeByteBuffer(java.nio.ByteBuffer) -> disposeUnsafeByteBuffer
    java.nio.ByteBuffer newUnsafeByteBuffer(int) -> newUnsafeByteBuffer
    long getUnsafeBufferAddress(java.nio.Buffer) -> getUnsafeBufferAddress
    java.nio.ByteBuffer newUnsafeByteBuffer(java.nio.ByteBuffer) -> newUnsafeByteBuffer
    int getAllocatedBytesUnsafe() -> getAllocatedBytesUnsafe
    void freeMemory(java.nio.ByteBuffer) -> freeMemory
    java.nio.ByteBuffer newDisposableByteBuffer(int) -> newDisposableByteBuffer
    long getBufferAddress(java.nio.Buffer) -> getBufferAddress
    void clear(java.nio.ByteBuffer,int) -> clear
    void copyJni(float[],java.nio.Buffer,int,int) -> copyJni
    void copyJni(byte[],int,java.nio.Buffer,int,int) -> copyJni
    void copyJni(char[],int,java.nio.Buffer,int,int) -> copyJni
    void copyJni(short[],int,java.nio.Buffer,int,int) -> copyJni
    void copyJni(int[],int,java.nio.Buffer,int,int) -> copyJni
    void copyJni(long[],int,java.nio.Buffer,int,int) -> copyJni
    void copyJni(float[],int,java.nio.Buffer,int,int) -> copyJni
    void copyJni(double[],int,java.nio.Buffer,int,int) -> copyJni
    void copyJni(java.nio.Buffer,int,java.nio.Buffer,int,int) -> copyJni
    void transformV4M4Jni(java.nio.Buffer,int,int,float[],int) -> transformV4M4Jni
    void transformV4M4Jni(float[],int,int,float[],int) -> transformV4M4Jni
    void transformV3M4Jni(java.nio.Buffer,int,int,float[],int) -> transformV3M4Jni
    void transformV3M4Jni(float[],int,int,float[],int) -> transformV3M4Jni
    void transformV2M4Jni(java.nio.Buffer,int,int,float[],int) -> transformV2M4Jni
    void transformV2M4Jni(float[],int,int,float[],int) -> transformV2M4Jni
    void transformV3M3Jni(java.nio.Buffer,int,int,float[],int) -> transformV3M3Jni
    void transformV3M3Jni(float[],int,int,float[],int) -> transformV3M3Jni
    void transformV2M3Jni(java.nio.Buffer,int,int,float[],int) -> transformV2M3Jni
    void transformV2M3Jni(float[],int,int,float[],int) -> transformV2M3Jni
    long find(java.nio.Buffer,int,int,java.nio.Buffer,int,int) -> find
    long find(float[],int,int,java.nio.Buffer,int,int) -> find
    long find(java.nio.Buffer,int,int,float[],int,int) -> find
    long find(float[],int,int,float[],int,int) -> find
    long find(java.nio.Buffer,int,int,java.nio.Buffer,int,int,float) -> find
    long find(float[],int,int,java.nio.Buffer,int,int,float) -> find
    long find(java.nio.Buffer,int,int,float[],int,int,float) -> find
    long find(float[],int,int,float[],int,int,float) -> find
com.badlogic.gdx.utils.ByteArray -> com.badlogic.gdx.utils.ByteArray:
    byte[] items -> items
    int size -> size
    boolean ordered -> ordered
    void add(byte) -> add
    void addAll(com.badlogic.gdx.utils.ByteArray) -> addAll
    void addAll(com.badlogic.gdx.utils.ByteArray,int,int) -> addAll
    void addAll(byte[]) -> addAll
    void addAll(byte[],int,int) -> addAll
    byte get(int) -> get
    void set(int,byte) -> set
    void incr(int,byte) -> incr
    void mul(int,byte) -> mul
    void insert(int,byte) -> insert
    void swap(int,int) -> swap
    boolean contains(byte) -> contains
    int indexOf(byte) -> indexOf
    int lastIndexOf(byte) -> lastIndexOf
    boolean removeValue(byte) -> removeValue
    int removeIndex(int) -> removeIndex
    void removeRange(int,int) -> removeRange
    boolean removeAll(com.badlogic.gdx.utils.ByteArray) -> removeAll
    byte pop() -> pop
    byte peek() -> peek
    byte first() -> first
    void clear() -> clear
    byte[] shrink() -> shrink
    byte[] ensureCapacity(int) -> ensureCapacity
    byte[] resize(int) -> resize
    void sort() -> sort
    void reverse() -> reverse
    void shuffle() -> shuffle
    void truncate(int) -> truncate
    byte random() -> random
    byte[] toArray() -> toArray
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String toString(java.lang.String) -> toString
    com.badlogic.gdx.utils.ByteArray with(byte[]) -> with
com.badlogic.gdx.utils.CharArray -> com.badlogic.gdx.utils.CharArray:
    char[] items -> items
    int size -> size
    boolean ordered -> ordered
    void add(char) -> add
    void addAll(com.badlogic.gdx.utils.CharArray) -> addAll
    void addAll(com.badlogic.gdx.utils.CharArray,int,int) -> addAll
    void addAll(char[]) -> addAll
    void addAll(char[],int,int) -> addAll
    char get(int) -> get
    void set(int,char) -> set
    void incr(int,char) -> incr
    void mul(int,char) -> mul
    void insert(int,char) -> insert
    void swap(int,int) -> swap
    boolean contains(char) -> contains
    int indexOf(char) -> indexOf
    int lastIndexOf(char) -> lastIndexOf
    boolean removeValue(char) -> removeValue
    char removeIndex(int) -> removeIndex
    void removeRange(int,int) -> removeRange
    boolean removeAll(com.badlogic.gdx.utils.CharArray) -> removeAll
    char pop() -> pop
    char peek() -> peek
    char first() -> first
    void clear() -> clear
    char[] shrink() -> shrink
    char[] ensureCapacity(int) -> ensureCapacity
    char[] resize(int) -> resize
    void sort() -> sort
    void reverse() -> reverse
    void shuffle() -> shuffle
    void truncate(int) -> truncate
    char random() -> random
    char[] toArray() -> toArray
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String toString(java.lang.String) -> toString
    com.badlogic.gdx.utils.CharArray with(char[]) -> with
com.badlogic.gdx.utils.Clipboard -> com.badlogic.gdx.utils.Clipboard:
    java.lang.String getContents() -> getContents
    void setContents(java.lang.String) -> setContents
com.badlogic.gdx.utils.ComparableTimSort -> com.badlogic.gdx.utils.ComparableTimSort:
    int MIN_MERGE -> MIN_MERGE
    java.lang.Object[] a -> a
    int MIN_GALLOP -> MIN_GALLOP
    int minGallop -> minGallop
    int INITIAL_TMP_STORAGE_LENGTH -> INITIAL_TMP_STORAGE_LENGTH
    java.lang.Object[] tmp -> tmp
    int stackSize -> stackSize
    int[] runBase -> runBase
    int[] runLen -> runLen
    boolean DEBUG -> DEBUG
    void doSort(java.lang.Object[],int,int) -> doSort
    void sort(java.lang.Object[]) -> sort
    void sort(java.lang.Object[],int,int) -> sort
    void binarySort(java.lang.Object[],int,int,int) -> binarySort
    int countRunAndMakeAscending(java.lang.Object[],int,int) -> countRunAndMakeAscending
    void reverseRange(java.lang.Object[],int,int) -> reverseRange
    int minRunLength(int) -> minRunLength
    void pushRun(int,int) -> pushRun
    void mergeCollapse() -> mergeCollapse
    void mergeForceCollapse() -> mergeForceCollapse
    void mergeAt(int) -> mergeAt
    int gallopLeft(java.lang.Comparable,java.lang.Object[],int,int,int) -> gallopLeft
    int gallopRight(java.lang.Comparable,java.lang.Object[],int,int,int) -> gallopRight
    void mergeLo(int,int,int,int) -> mergeLo
    void mergeHi(int,int,int,int) -> mergeHi
    java.lang.Object[] ensureCapacity(int) -> ensureCapacity
    void rangeCheck(int,int,int) -> rangeCheck
com.badlogic.gdx.utils.DataInput -> com.badlogic.gdx.utils.DataInput:
    char[] chars -> chars
    int readInt(boolean) -> readInt
    java.lang.String readString() -> readString
    void readUtf8_slow(int,int,int) -> readUtf8_slow
com.badlogic.gdx.utils.DataOutput -> com.badlogic.gdx.utils.DataOutput:
    int writeInt(int,boolean) -> writeInt
    void writeString(java.lang.String) -> writeString
    void writeString_slow(java.lang.String,int,int) -> writeString_slow
com.badlogic.gdx.utils.DelayedRemovalArray -> com.badlogic.gdx.utils.DelayedRemovalArray:
    boolean iterating -> iterating
    com.badlogic.gdx.utils.IntArray remove -> remove
    void begin() -> begin
    void end() -> end
    void remove(int) -> remove
    boolean removeValue(java.lang.Object,boolean) -> removeValue
    java.lang.Object removeIndex(int) -> removeIndex
    void removeRange(int,int) -> removeRange
    void set(int,java.lang.Object) -> set
    void insert(int,java.lang.Object) -> insert
    void swap(int,int) -> swap
    java.lang.Object pop() -> pop
    void clear() -> clear
    void sort() -> sort
    void sort(java.util.Comparator) -> sort
    void reverse() -> reverse
    void shuffle() -> shuffle
    void truncate(int) -> truncate
    com.badlogic.gdx.utils.DelayedRemovalArray with(java.lang.Object[]) -> with
com.badlogic.gdx.utils.Disposable -> com.badlogic.gdx.utils.Disposable:
    void dispose() -> dispose
com.badlogic.gdx.utils.FloatArray -> com.badlogic.gdx.utils.FloatArray:
    float[] items -> items
    int size -> size
    boolean ordered -> ordered
    void add(float) -> add
    void addAll(com.badlogic.gdx.utils.FloatArray) -> addAll
    void addAll(com.badlogic.gdx.utils.FloatArray,int,int) -> addAll
    void addAll(float[]) -> addAll
    void addAll(float[],int,int) -> addAll
    float get(int) -> get
    void set(int,float) -> set
    void incr(int,float) -> incr
    void mul(int,float) -> mul
    void insert(int,float) -> insert
    void swap(int,int) -> swap
    boolean contains(float) -> contains
    int indexOf(float) -> indexOf
    int lastIndexOf(char) -> lastIndexOf
    boolean removeValue(float) -> removeValue
    float removeIndex(int) -> removeIndex
    void removeRange(int,int) -> removeRange
    boolean removeAll(com.badlogic.gdx.utils.FloatArray) -> removeAll
    float pop() -> pop
    float peek() -> peek
    float first() -> first
    void clear() -> clear
    float[] shrink() -> shrink
    float[] ensureCapacity(int) -> ensureCapacity
    float[] resize(int) -> resize
    void sort() -> sort
    void reverse() -> reverse
    void shuffle() -> shuffle
    void truncate(int) -> truncate
    float random() -> random
    float[] toArray() -> toArray
    boolean equals(java.lang.Object) -> equals
    boolean equals(java.lang.Object,float) -> equals
    java.lang.String toString() -> toString
    java.lang.String toString(java.lang.String) -> toString
    com.badlogic.gdx.utils.FloatArray with(float[]) -> with
com.badlogic.gdx.utils.GdxBuild -> com.badlogic.gdx.utils.GdxBuild:
    void main(java.lang.String[]) -> main
com.badlogic.gdx.utils.GdxNativesLoader -> com.badlogic.gdx.utils.GdxNativesLoader:
    boolean disableNativesLoading -> disableNativesLoading
    boolean nativesLoaded -> nativesLoaded
    void load() -> load
com.badlogic.gdx.utils.GdxRuntimeException -> com.badlogic.gdx.utils.GdxRuntimeException:
    long serialVersionUID -> serialVersionUID
com.badlogic.gdx.utils.I18NBundle -> com.badlogic.gdx.utils.I18NBundle:
    java.lang.String DEFAULT_ENCODING -> DEFAULT_ENCODING
    boolean simpleFormatter -> simpleFormatter
    com.badlogic.gdx.utils.I18NBundle parent -> parent
    java.util.Locale locale -> locale
    com.badlogic.gdx.utils.ObjectMap properties -> properties
    com.badlogic.gdx.utils.TextFormatter formatter -> formatter
    boolean getSimpleFormatter() -> getSimpleFormatter
    void setSimpleFormatter(boolean) -> setSimpleFormatter
    com.badlogic.gdx.utils.I18NBundle createBundle(com.badlogic.gdx.files.FileHandle) -> createBundle
    com.badlogic.gdx.utils.I18NBundle createBundle(com.badlogic.gdx.files.FileHandle,java.util.Locale) -> createBundle
    com.badlogic.gdx.utils.I18NBundle createBundle(com.badlogic.gdx.files.FileHandle,java.lang.String) -> createBundle
    com.badlogic.gdx.utils.I18NBundle createBundle(com.badlogic.gdx.files.FileHandle,java.util.Locale,java.lang.String) -> createBundle
    com.badlogic.gdx.utils.I18NBundle createBundleImpl(com.badlogic.gdx.files.FileHandle,java.util.Locale,java.lang.String) -> createBundleImpl
    java.util.List getCandidateLocales(java.util.Locale) -> getCandidateLocales
    java.util.Locale getFallbackLocale(java.util.Locale) -> getFallbackLocale
    com.badlogic.gdx.utils.I18NBundle loadBundleChain(com.badlogic.gdx.files.FileHandle,java.lang.String,java.util.List,int,com.badlogic.gdx.utils.I18NBundle) -> loadBundleChain
    com.badlogic.gdx.utils.I18NBundle loadBundle(com.badlogic.gdx.files.FileHandle,java.lang.String,java.util.Locale) -> loadBundle
    void load(java.io.Reader) -> load
    com.badlogic.gdx.files.FileHandle toFileHandle(com.badlogic.gdx.files.FileHandle,java.util.Locale) -> toFileHandle
    java.util.Locale getLocale() -> getLocale
    void setLocale(java.util.Locale) -> setLocale
    java.lang.String get(java.lang.String) -> get
    java.lang.String format(java.lang.String,java.lang.Object[]) -> format
com.badlogic.gdx.utils.IdentityMap -> com.badlogic.gdx.utils.IdentityMap:
    int PRIME1 -> PRIME1
    int PRIME2 -> PRIME2
    int PRIME3 -> PRIME3
    int size -> size
    java.lang.Object[] keyTable -> keyTable
    java.lang.Object[] valueTable -> valueTable
    int capacity -> capacity
    int stashSize -> stashSize
    float loadFactor -> loadFactor
    int hashShift -> hashShift
    int mask -> mask
    int threshold -> threshold
    int stashCapacity -> stashCapacity
    int pushIterations -> pushIterations
    com.badlogic.gdx.utils.IdentityMap$Entries entries1 -> entries1
    com.badlogic.gdx.utils.IdentityMap$Entries entries2 -> entries2
    com.badlogic.gdx.utils.IdentityMap$Values values1 -> values1
    com.badlogic.gdx.utils.IdentityMap$Values values2 -> values2
    com.badlogic.gdx.utils.IdentityMap$Keys keys1 -> keys1
    com.badlogic.gdx.utils.IdentityMap$Keys keys2 -> keys2
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void putResize(java.lang.Object,java.lang.Object) -> putResize
    void push(java.lang.Object,java.lang.Object,int,java.lang.Object,int,java.lang.Object,int,java.lang.Object) -> push
    void putStash(java.lang.Object,java.lang.Object) -> putStash
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    java.lang.Object getStash(java.lang.Object,java.lang.Object) -> getStash
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeStash(java.lang.Object) -> removeStash
    void removeStashIndex(int) -> removeStashIndex
    void shrink(int) -> shrink
    void clear(int) -> clear
    void clear() -> clear
    boolean containsValue(java.lang.Object,boolean) -> containsValue
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsKeyStash(java.lang.Object) -> containsKeyStash
    java.lang.Object findKey(java.lang.Object,boolean) -> findKey
    void ensureCapacity(int) -> ensureCapacity
    void resize(int) -> resize
    int hash2(int) -> hash2
    int hash3(int) -> hash3
    java.lang.String toString() -> toString
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.IdentityMap$Entries entries() -> entries
    com.badlogic.gdx.utils.IdentityMap$Values values() -> values
    com.badlogic.gdx.utils.IdentityMap$Keys keys() -> keys
com.badlogic.gdx.utils.IdentityMap$Entries -> com.badlogic.gdx.utils.IdentityMap$Entries:
    com.badlogic.gdx.utils.IdentityMap$Entry entry -> entry
    com.badlogic.gdx.utils.IdentityMap$Entry next() -> next
    boolean hasNext() -> hasNext
    java.util.Iterator iterator() -> iterator
    void remove() -> remove
    void reset() -> reset
    java.lang.Object next() -> next
com.badlogic.gdx.utils.IdentityMap$Entry -> com.badlogic.gdx.utils.IdentityMap$Entry:
    java.lang.Object key -> key
    java.lang.Object value -> value
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.IdentityMap$Keys -> com.badlogic.gdx.utils.IdentityMap$Keys:
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.Array toArray() -> toArray
    void remove() -> remove
    void reset() -> reset
com.badlogic.gdx.utils.IdentityMap$MapIterator -> com.badlogic.gdx.utils.IdentityMap$MapIterator:
    boolean hasNext -> hasNext
    com.badlogic.gdx.utils.IdentityMap map -> map
    int nextIndex -> nextIndex
    int currentIndex -> currentIndex
    boolean valid -> valid
    void reset() -> reset
    void findNextIndex() -> findNextIndex
    void remove() -> remove
com.badlogic.gdx.utils.IdentityMap$Values -> com.badlogic.gdx.utils.IdentityMap$Values:
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.Array toArray() -> toArray
    void toArray(com.badlogic.gdx.utils.Array) -> toArray
    void remove() -> remove
    void reset() -> reset
com.badlogic.gdx.utils.IntArray -> com.badlogic.gdx.utils.IntArray:
    int[] items -> items
    int size -> size
    boolean ordered -> ordered
    void add(int) -> add
    void addAll(com.badlogic.gdx.utils.IntArray) -> addAll
    void addAll(com.badlogic.gdx.utils.IntArray,int,int) -> addAll
    void addAll(int[]) -> addAll
    void addAll(int[],int,int) -> addAll
    int get(int) -> get
    void set(int,int) -> set
    void incr(int,int) -> incr
    void mul(int,int) -> mul
    void insert(int,int) -> insert
    void swap(int,int) -> swap
    boolean contains(int) -> contains
    int indexOf(int) -> indexOf
    int lastIndexOf(int) -> lastIndexOf
    boolean removeValue(int) -> removeValue
    int removeIndex(int) -> removeIndex
    void removeRange(int,int) -> removeRange
    boolean removeAll(com.badlogic.gdx.utils.IntArray) -> removeAll
    int pop() -> pop
    int peek() -> peek
    int first() -> first
    void clear() -> clear
    int[] shrink() -> shrink
    int[] ensureCapacity(int) -> ensureCapacity
    int[] resize(int) -> resize
    void sort() -> sort
    void reverse() -> reverse
    void shuffle() -> shuffle
    void truncate(int) -> truncate
    int random() -> random
    int[] toArray() -> toArray
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String toString(java.lang.String) -> toString
    com.badlogic.gdx.utils.IntArray with(int[]) -> with
com.badlogic.gdx.utils.IntFloatMap -> com.badlogic.gdx.utils.IntFloatMap:
    int PRIME1 -> PRIME1
    int PRIME2 -> PRIME2
    int PRIME3 -> PRIME3
    int EMPTY -> EMPTY
    int size -> size
    int[] keyTable -> keyTable
    float[] valueTable -> valueTable
    int capacity -> capacity
    int stashSize -> stashSize
    float zeroValue -> zeroValue
    boolean hasZeroValue -> hasZeroValue
    float loadFactor -> loadFactor
    int hashShift -> hashShift
    int mask -> mask
    int threshold -> threshold
    int stashCapacity -> stashCapacity
    int pushIterations -> pushIterations
    com.badlogic.gdx.utils.IntFloatMap$Entries entries1 -> entries1
    com.badlogic.gdx.utils.IntFloatMap$Entries entries2 -> entries2
    com.badlogic.gdx.utils.IntFloatMap$Values values1 -> values1
    com.badlogic.gdx.utils.IntFloatMap$Values values2 -> values2
    com.badlogic.gdx.utils.IntFloatMap$Keys keys1 -> keys1
    com.badlogic.gdx.utils.IntFloatMap$Keys keys2 -> keys2
    void put(int,float) -> put
    void putAll(com.badlogic.gdx.utils.IntFloatMap) -> putAll
    void putResize(int,float) -> putResize
    void push(int,float,int,int,int,int,int,int) -> push
    void putStash(int,float) -> putStash
    float get(int,float) -> get
    float getStash(int,float) -> getStash
    float getAndIncrement(int,float,float) -> getAndIncrement
    float getAndIncrementStash(int,float,float) -> getAndIncrementStash
    float remove(int,float) -> remove
    float removeStash(int,float) -> removeStash
    void removeStashIndex(int) -> removeStashIndex
    void shrink(int) -> shrink
    void clear(int) -> clear
    void clear() -> clear
    boolean containsValue(float) -> containsValue
    boolean containsValue(float,float) -> containsValue
    boolean containsKey(int) -> containsKey
    boolean containsKeyStash(int) -> containsKeyStash
    int findKey(float,int) -> findKey
    void ensureCapacity(int) -> ensureCapacity
    void resize(int) -> resize
    int hash2(int) -> hash2
    int hash3(int) -> hash3
    java.lang.String toString() -> toString
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.IntFloatMap$Entries entries() -> entries
    com.badlogic.gdx.utils.IntFloatMap$Values values() -> values
    com.badlogic.gdx.utils.IntFloatMap$Keys keys() -> keys
com.badlogic.gdx.utils.IntFloatMap$Entries -> com.badlogic.gdx.utils.IntFloatMap$Entries:
    com.badlogic.gdx.utils.IntFloatMap$Entry entry -> entry
    com.badlogic.gdx.utils.IntFloatMap$Entry next() -> next
    boolean hasNext() -> hasNext
    java.util.Iterator iterator() -> iterator
    void remove() -> remove
    void reset() -> reset
    java.lang.Object next() -> next
com.badlogic.gdx.utils.IntFloatMap$Entry -> com.badlogic.gdx.utils.IntFloatMap$Entry:
    int key -> key
    float value -> value
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.IntFloatMap$Keys -> com.badlogic.gdx.utils.IntFloatMap$Keys:
    boolean hasNext() -> hasNext
    int next() -> next
    com.badlogic.gdx.utils.IntArray toArray() -> toArray
    void remove() -> remove
    void reset() -> reset
com.badlogic.gdx.utils.IntFloatMap$MapIterator -> com.badlogic.gdx.utils.IntFloatMap$MapIterator:
    int INDEX_ILLEGAL -> INDEX_ILLEGAL
    int INDEX_ZERO -> INDEX_ZERO
    boolean hasNext -> hasNext
    com.badlogic.gdx.utils.IntFloatMap map -> map
    int nextIndex -> nextIndex
    int currentIndex -> currentIndex
    boolean valid -> valid
    void reset() -> reset
    void findNextIndex() -> findNextIndex
    void remove() -> remove
com.badlogic.gdx.utils.IntFloatMap$Values -> com.badlogic.gdx.utils.IntFloatMap$Values:
    boolean hasNext() -> hasNext
    float next() -> next
    com.badlogic.gdx.utils.FloatArray toArray() -> toArray
    void remove() -> remove
    void reset() -> reset
com.badlogic.gdx.utils.IntIntMap -> com.badlogic.gdx.utils.IntIntMap:
    int PRIME1 -> PRIME1
    int PRIME2 -> PRIME2
    int PRIME3 -> PRIME3
    int EMPTY -> EMPTY
    int size -> size
    int[] keyTable -> keyTable
    int[] valueTable -> valueTable
    int capacity -> capacity
    int stashSize -> stashSize
    int zeroValue -> zeroValue
    boolean hasZeroValue -> hasZeroValue
    float loadFactor -> loadFactor
    int hashShift -> hashShift
    int mask -> mask
    int threshold -> threshold
    int stashCapacity -> stashCapacity
    int pushIterations -> pushIterations
    com.badlogic.gdx.utils.IntIntMap$Entries entries1 -> entries1
    com.badlogic.gdx.utils.IntIntMap$Entries entries2 -> entries2
    com.badlogic.gdx.utils.IntIntMap$Values values1 -> values1
    com.badlogic.gdx.utils.IntIntMap$Values values2 -> values2
    com.badlogic.gdx.utils.IntIntMap$Keys keys1 -> keys1
    com.badlogic.gdx.utils.IntIntMap$Keys keys2 -> keys2
    void put(int,int) -> put
    void putAll(com.badlogic.gdx.utils.IntIntMap) -> putAll
    void putResize(int,int) -> putResize
    void push(int,int,int,int,int,int,int,int) -> push
    void putStash(int,int) -> putStash
    int get(int,int) -> get
    int getStash(int,int) -> getStash
    int getAndIncrement(int,int,int) -> getAndIncrement
    int getAndIncrementStash(int,int,int) -> getAndIncrementStash
    int remove(int,int) -> remove
    int removeStash(int,int) -> removeStash
    void removeStashIndex(int) -> removeStashIndex
    void shrink(int) -> shrink
    void clear(int) -> clear
    void clear() -> clear
    boolean containsValue(int) -> containsValue
    boolean containsKey(int) -> containsKey
    boolean containsKeyStash(int) -> containsKeyStash
    int findKey(int,int) -> findKey
    void ensureCapacity(int) -> ensureCapacity
    void resize(int) -> resize
    int hash2(int) -> hash2
    int hash3(int) -> hash3
    java.lang.String toString() -> toString
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.IntIntMap$Entries entries() -> entries
    com.badlogic.gdx.utils.IntIntMap$Values values() -> values
    com.badlogic.gdx.utils.IntIntMap$Keys keys() -> keys
com.badlogic.gdx.utils.IntIntMap$Entries -> com.badlogic.gdx.utils.IntIntMap$Entries:
    com.badlogic.gdx.utils.IntIntMap$Entry entry -> entry
    com.badlogic.gdx.utils.IntIntMap$Entry next() -> next
    boolean hasNext() -> hasNext
    java.util.Iterator iterator() -> iterator
    void remove() -> remove
    void reset() -> reset
    java.lang.Object next() -> next
com.badlogic.gdx.utils.IntIntMap$Entry -> com.badlogic.gdx.utils.IntIntMap$Entry:
    int key -> key
    int value -> value
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.IntIntMap$Keys -> com.badlogic.gdx.utils.IntIntMap$Keys:
    boolean hasNext() -> hasNext
    int next() -> next
    com.badlogic.gdx.utils.IntArray toArray() -> toArray
    void remove() -> remove
    void reset() -> reset
com.badlogic.gdx.utils.IntIntMap$MapIterator -> com.badlogic.gdx.utils.IntIntMap$MapIterator:
    int INDEX_ILLEGAL -> INDEX_ILLEGAL
    int INDEX_ZERO -> INDEX_ZERO
    boolean hasNext -> hasNext
    com.badlogic.gdx.utils.IntIntMap map -> map
    int nextIndex -> nextIndex
    int currentIndex -> currentIndex
    boolean valid -> valid
    void reset() -> reset
    void findNextIndex() -> findNextIndex
    void remove() -> remove
com.badlogic.gdx.utils.IntIntMap$Values -> com.badlogic.gdx.utils.IntIntMap$Values:
    boolean hasNext() -> hasNext
    int next() -> next
    com.badlogic.gdx.utils.IntArray toArray() -> toArray
    void remove() -> remove
    void reset() -> reset
com.badlogic.gdx.utils.IntMap -> com.badlogic.gdx.utils.IntMap:
    int PRIME1 -> PRIME1
    int PRIME2 -> PRIME2
    int PRIME3 -> PRIME3
    int EMPTY -> EMPTY
    int size -> size
    int[] keyTable -> keyTable
    java.lang.Object[] valueTable -> valueTable
    int capacity -> capacity
    int stashSize -> stashSize
    java.lang.Object zeroValue -> zeroValue
    boolean hasZeroValue -> hasZeroValue
    float loadFactor -> loadFactor
    int hashShift -> hashShift
    int mask -> mask
    int threshold -> threshold
    int stashCapacity -> stashCapacity
    int pushIterations -> pushIterations
    com.badlogic.gdx.utils.IntMap$Entries entries1 -> entries1
    com.badlogic.gdx.utils.IntMap$Entries entries2 -> entries2
    com.badlogic.gdx.utils.IntMap$Values values1 -> values1
    com.badlogic.gdx.utils.IntMap$Values values2 -> values2
    com.badlogic.gdx.utils.IntMap$Keys keys1 -> keys1
    com.badlogic.gdx.utils.IntMap$Keys keys2 -> keys2
    java.lang.Object put(int,java.lang.Object) -> put
    void putAll(com.badlogic.gdx.utils.IntMap) -> putAll
    void putResize(int,java.lang.Object) -> putResize
    void push(int,java.lang.Object,int,int,int,int,int,int) -> push
    void putStash(int,java.lang.Object) -> putStash
    java.lang.Object get(int) -> get
    java.lang.Object get(int,java.lang.Object) -> get
    java.lang.Object getStash(int,java.lang.Object) -> getStash
    java.lang.Object remove(int) -> remove
    java.lang.Object removeStash(int) -> removeStash
    void removeStashIndex(int) -> removeStashIndex
    void shrink(int) -> shrink
    void clear(int) -> clear
    void clear() -> clear
    boolean containsValue(java.lang.Object,boolean) -> containsValue
    boolean containsKey(int) -> containsKey
    boolean containsKeyStash(int) -> containsKeyStash
    int findKey(java.lang.Object,boolean,int) -> findKey
    void ensureCapacity(int) -> ensureCapacity
    void resize(int) -> resize
    int hash2(int) -> hash2
    int hash3(int) -> hash3
    java.lang.String toString() -> toString
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.IntMap$Entries entries() -> entries
    com.badlogic.gdx.utils.IntMap$Values values() -> values
    com.badlogic.gdx.utils.IntMap$Keys keys() -> keys
com.badlogic.gdx.utils.IntMap$Entries -> com.badlogic.gdx.utils.IntMap$Entries:
    com.badlogic.gdx.utils.IntMap$Entry entry -> entry
    com.badlogic.gdx.utils.IntMap$Entry next() -> next
    boolean hasNext() -> hasNext
    java.util.Iterator iterator() -> iterator
    void remove() -> remove
    void reset() -> reset
    java.lang.Object next() -> next
com.badlogic.gdx.utils.IntMap$Entry -> com.badlogic.gdx.utils.IntMap$Entry:
    int key -> key
    java.lang.Object value -> value
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.IntMap$Keys -> com.badlogic.gdx.utils.IntMap$Keys:
    int next() -> next
    com.badlogic.gdx.utils.IntArray toArray() -> toArray
    void remove() -> remove
    void reset() -> reset
com.badlogic.gdx.utils.IntMap$MapIterator -> com.badlogic.gdx.utils.IntMap$MapIterator:
    int INDEX_ILLEGAL -> INDEX_ILLEGAL
    int INDEX_ZERO -> INDEX_ZERO
    boolean hasNext -> hasNext
    com.badlogic.gdx.utils.IntMap map -> map
    int nextIndex -> nextIndex
    int currentIndex -> currentIndex
    boolean valid -> valid
    void reset() -> reset
    void findNextIndex() -> findNextIndex
    void remove() -> remove
com.badlogic.gdx.utils.IntMap$Values -> com.badlogic.gdx.utils.IntMap$Values:
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.Array toArray() -> toArray
    void remove() -> remove
    void reset() -> reset
com.badlogic.gdx.utils.IntSet -> com.badlogic.gdx.utils.IntSet:
    int PRIME1 -> PRIME1
    int PRIME2 -> PRIME2
    int PRIME3 -> PRIME3
    int EMPTY -> EMPTY
    int size -> size
    int[] keyTable -> keyTable
    int capacity -> capacity
    int stashSize -> stashSize
    boolean hasZeroValue -> hasZeroValue
    float loadFactor -> loadFactor
    int hashShift -> hashShift
    int mask -> mask
    int threshold -> threshold
    int stashCapacity -> stashCapacity
    int pushIterations -> pushIterations
    com.badlogic.gdx.utils.IntSet$IntSetIterator iterator1 -> iterator1
    com.badlogic.gdx.utils.IntSet$IntSetIterator iterator2 -> iterator2
    boolean add(int) -> add
    void addAll(com.badlogic.gdx.utils.IntArray) -> addAll
    void addAll(com.badlogic.gdx.utils.IntArray,int,int) -> addAll
    void addAll(int[]) -> addAll
    void addAll(int[],int,int) -> addAll
    void addAll(com.badlogic.gdx.utils.IntSet) -> addAll
    void addResize(int) -> addResize
    void push(int,int,int,int,int,int,int) -> push
    void addStash(int) -> addStash
    boolean remove(int) -> remove
    boolean removeStash(int) -> removeStash
    void removeStashIndex(int) -> removeStashIndex
    void shrink(int) -> shrink
    void clear(int) -> clear
    void clear() -> clear
    boolean contains(int) -> contains
    boolean containsKeyStash(int) -> containsKeyStash
    int first() -> first
    void ensureCapacity(int) -> ensureCapacity
    void resize(int) -> resize
    int hash2(int) -> hash2
    int hash3(int) -> hash3
    java.lang.String toString() -> toString
    com.badlogic.gdx.utils.IntSet$IntSetIterator iterator() -> iterator
    com.badlogic.gdx.utils.IntSet with(int[]) -> with
com.badlogic.gdx.utils.IntSet$IntSetIterator -> com.badlogic.gdx.utils.IntSet$IntSetIterator:
    int INDEX_ILLEGAL -> INDEX_ILLEGAL
    int INDEX_ZERO -> INDEX_ZERO
    boolean hasNext -> hasNext
    com.badlogic.gdx.utils.IntSet set -> set
    int nextIndex -> nextIndex
    int currentIndex -> currentIndex
    boolean valid -> valid
    void reset() -> reset
    void findNextIndex() -> findNextIndex
    void remove() -> remove
    int next() -> next
    com.badlogic.gdx.utils.IntArray toArray() -> toArray
com.badlogic.gdx.utils.Json -> com.badlogic.gdx.utils.Json:
    boolean debug -> debug
    com.badlogic.gdx.utils.JsonWriter writer -> writer
    java.lang.String typeName -> typeName
    boolean usePrototypes -> usePrototypes
    com.badlogic.gdx.utils.JsonWriter$OutputType outputType -> outputType
    com.badlogic.gdx.utils.ObjectMap typeToFields -> typeToFields
    com.badlogic.gdx.utils.ObjectMap tagToClass -> tagToClass
    com.badlogic.gdx.utils.ObjectMap classToTag -> classToTag
    com.badlogic.gdx.utils.ObjectMap classToSerializer -> classToSerializer
    com.badlogic.gdx.utils.ObjectMap classToDefaultValues -> classToDefaultValues
    com.badlogic.gdx.utils.Json$Serializer defaultSerializer -> defaultSerializer
    boolean ignoreUnknownFields -> ignoreUnknownFields
    void setIgnoreUnknownFields(boolean) -> setIgnoreUnknownFields
    void setOutputType(com.badlogic.gdx.utils.JsonWriter$OutputType) -> setOutputType
    void addClassTag(java.lang.String,java.lang.Class) -> addClassTag
    java.lang.Class getClass(java.lang.String) -> getClass
    java.lang.String getTag(java.lang.Class) -> getTag
    void setTypeName(java.lang.String) -> setTypeName
    void setDefaultSerializer(com.badlogic.gdx.utils.Json$Serializer) -> setDefaultSerializer
    void setSerializer(java.lang.Class,com.badlogic.gdx.utils.Json$Serializer) -> setSerializer
    com.badlogic.gdx.utils.Json$Serializer getSerializer(java.lang.Class) -> getSerializer
    void setUsePrototypes(boolean) -> setUsePrototypes
    void setElementType(java.lang.Class,java.lang.String,java.lang.Class) -> setElementType
    com.badlogic.gdx.utils.ObjectMap cacheFields(java.lang.Class) -> cacheFields
    java.lang.String toJson(java.lang.Object) -> toJson
    java.lang.String toJson(java.lang.Object,java.lang.Class) -> toJson
    java.lang.String toJson(java.lang.Object,java.lang.Class,java.lang.Class) -> toJson
    void toJson(java.lang.Object,com.badlogic.gdx.files.FileHandle) -> toJson
    void toJson(java.lang.Object,java.lang.Class,com.badlogic.gdx.files.FileHandle) -> toJson
    void toJson(java.lang.Object,java.lang.Class,java.lang.Class,com.badlogic.gdx.files.FileHandle) -> toJson
    void toJson(java.lang.Object,java.io.Writer) -> toJson
    void toJson(java.lang.Object,java.lang.Class,java.io.Writer) -> toJson
    void toJson(java.lang.Object,java.lang.Class,java.lang.Class,java.io.Writer) -> toJson
    void setWriter(java.io.Writer) -> setWriter
    com.badlogic.gdx.utils.JsonWriter getWriter() -> getWriter
    void writeFields(java.lang.Object) -> writeFields
    java.lang.Object[] getDefaultValues(java.lang.Class) -> getDefaultValues
    void writeField(java.lang.Object,java.lang.String) -> writeField
    void writeField(java.lang.Object,java.lang.String,java.lang.Class) -> writeField
    void writeField(java.lang.Object,java.lang.String,java.lang.String) -> writeField
    void writeField(java.lang.Object,java.lang.String,java.lang.String,java.lang.Class) -> writeField
    void writeValue(java.lang.String,java.lang.Object) -> writeValue
    void writeValue(java.lang.String,java.lang.Object,java.lang.Class) -> writeValue
    void writeValue(java.lang.String,java.lang.Object,java.lang.Class,java.lang.Class) -> writeValue
    void writeValue(java.lang.Object) -> writeValue
    void writeValue(java.lang.Object,java.lang.Class) -> writeValue
    void writeValue(java.lang.Object,java.lang.Class,java.lang.Class) -> writeValue
    void writeObjectStart(java.lang.String) -> writeObjectStart
    void writeObjectStart(java.lang.String,java.lang.Class,java.lang.Class) -> writeObjectStart
    void writeObjectStart() -> writeObjectStart
    void writeObjectStart(java.lang.Class,java.lang.Class) -> writeObjectStart
    void writeObjectEnd() -> writeObjectEnd
    void writeArrayStart(java.lang.String) -> writeArrayStart
    void writeArrayStart() -> writeArrayStart
    void writeArrayEnd() -> writeArrayEnd
    void writeType(java.lang.Class) -> writeType
    java.lang.Object fromJson(java.lang.Class,java.io.Reader) -> fromJson
    java.lang.Object fromJson(java.lang.Class,java.lang.Class,java.io.Reader) -> fromJson
    java.lang.Object fromJson(java.lang.Class,java.io.InputStream) -> fromJson
    java.lang.Object fromJson(java.lang.Class,java.lang.Class,java.io.InputStream) -> fromJson
    java.lang.Object fromJson(java.lang.Class,com.badlogic.gdx.files.FileHandle) -> fromJson
    java.lang.Object fromJson(java.lang.Class,java.lang.Class,com.badlogic.gdx.files.FileHandle) -> fromJson
    java.lang.Object fromJson(java.lang.Class,char[],int,int) -> fromJson
    java.lang.Object fromJson(java.lang.Class,java.lang.Class,char[],int,int) -> fromJson
    java.lang.Object fromJson(java.lang.Class,java.lang.String) -> fromJson
    java.lang.Object fromJson(java.lang.Class,java.lang.Class,java.lang.String) -> fromJson
    void readField(java.lang.Object,java.lang.String,com.badlogic.gdx.utils.JsonValue) -> readField
    void readField(java.lang.Object,java.lang.String,java.lang.Class,com.badlogic.gdx.utils.JsonValue) -> readField
    void readField(java.lang.Object,java.lang.String,java.lang.String,com.badlogic.gdx.utils.JsonValue) -> readField
    void readField(java.lang.Object,java.lang.String,java.lang.String,java.lang.Class,com.badlogic.gdx.utils.JsonValue) -> readField
    void readFields(java.lang.Object,com.badlogic.gdx.utils.JsonValue) -> readFields
    java.lang.Object readValue(java.lang.String,java.lang.Class,com.badlogic.gdx.utils.JsonValue) -> readValue
    java.lang.Object readValue(java.lang.String,java.lang.Class,java.lang.Object,com.badlogic.gdx.utils.JsonValue) -> readValue
    java.lang.Object readValue(java.lang.String,java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue) -> readValue
    java.lang.Object readValue(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object,com.badlogic.gdx.utils.JsonValue) -> readValue
    java.lang.Object readValue(java.lang.Class,java.lang.Class,java.lang.Object,com.badlogic.gdx.utils.JsonValue) -> readValue
    java.lang.Object readValue(java.lang.Class,com.badlogic.gdx.utils.JsonValue) -> readValue
    java.lang.Object readValue(java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue) -> readValue
    java.lang.String convertToString(java.lang.Object) -> convertToString
    java.lang.Object newInstance(java.lang.Class) -> newInstance
    java.lang.String prettyPrint(java.lang.Object) -> prettyPrint
    java.lang.String prettyPrint(java.lang.String) -> prettyPrint
    java.lang.String prettyPrint(java.lang.Object,int) -> prettyPrint
    java.lang.String prettyPrint(java.lang.String,int) -> prettyPrint
    java.lang.String prettyPrint(java.lang.Object,com.badlogic.gdx.utils.JsonValue$PrettyPrintSettings) -> prettyPrint
    java.lang.String prettyPrint(java.lang.String,com.badlogic.gdx.utils.JsonValue$PrettyPrintSettings) -> prettyPrint
com.badlogic.gdx.utils.Json$FieldMetadata -> com.badlogic.gdx.utils.Json$FieldMetadata:
    com.badlogic.gdx.utils.reflect.Field field -> field
    java.lang.Class elementType -> elementType
com.badlogic.gdx.utils.Json$ReadOnlySerializer -> com.badlogic.gdx.utils.Json$ReadOnlySerializer:
    void write(com.badlogic.gdx.utils.Json,java.lang.Object,java.lang.Class) -> write
    java.lang.Object read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue,java.lang.Class) -> read
com.badlogic.gdx.utils.Json$Serializable -> com.badlogic.gdx.utils.Json$Serializable:
    void write(com.badlogic.gdx.utils.Json) -> write
    void read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue) -> read
com.badlogic.gdx.utils.Json$Serializer -> com.badlogic.gdx.utils.Json$Serializer:
    void write(com.badlogic.gdx.utils.Json,java.lang.Object,java.lang.Class) -> write
    java.lang.Object read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue,java.lang.Class) -> read
com.badlogic.gdx.utils.JsonReader -> com.badlogic.gdx.utils.JsonReader:
    byte[] _json_actions -> _json_actions
    short[] _json_key_offsets -> _json_key_offsets
    char[] _json_trans_keys -> _json_trans_keys
    byte[] _json_single_lengths -> _json_single_lengths
    byte[] _json_range_lengths -> _json_range_lengths
    short[] _json_index_offsets -> _json_index_offsets
    byte[] _json_indicies -> _json_indicies
    byte[] _json_trans_targs -> _json_trans_targs
    byte[] _json_trans_actions -> _json_trans_actions
    byte[] _json_eof_actions -> _json_eof_actions
    int json_start -> json_start
    int json_first_final -> json_first_final
    int json_error -> json_error
    int json_en_object -> json_en_object
    int json_en_array -> json_en_array
    int json_en_main -> json_en_main
    com.badlogic.gdx.utils.Array elements -> elements
    com.badlogic.gdx.utils.Array lastChild -> lastChild
    com.badlogic.gdx.utils.JsonValue root -> root
    com.badlogic.gdx.utils.JsonValue current -> current
    com.badlogic.gdx.utils.JsonValue parse(java.lang.String) -> parse
    com.badlogic.gdx.utils.JsonValue parse(java.io.Reader) -> parse
    com.badlogic.gdx.utils.JsonValue parse(java.io.InputStream) -> parse
    com.badlogic.gdx.utils.JsonValue parse(com.badlogic.gdx.files.FileHandle) -> parse
    com.badlogic.gdx.utils.JsonValue parse(char[],int,int) -> parse
    byte[] init__json_actions_0() -> init__json_actions_0
    short[] init__json_key_offsets_0() -> init__json_key_offsets_0
    char[] init__json_trans_keys_0() -> init__json_trans_keys_0
    byte[] init__json_single_lengths_0() -> init__json_single_lengths_0
    byte[] init__json_range_lengths_0() -> init__json_range_lengths_0
    short[] init__json_index_offsets_0() -> init__json_index_offsets_0
    byte[] init__json_indicies_0() -> init__json_indicies_0
    byte[] init__json_trans_targs_0() -> init__json_trans_targs_0
    byte[] init__json_trans_actions_0() -> init__json_trans_actions_0
    byte[] init__json_eof_actions_0() -> init__json_eof_actions_0
    void addChild(java.lang.String,com.badlogic.gdx.utils.JsonValue) -> addChild
    void startObject(java.lang.String) -> startObject
    void startArray(java.lang.String) -> startArray
    void pop() -> pop
    void string(java.lang.String,java.lang.String) -> string
    void number(java.lang.String,double) -> number
    void number(java.lang.String,long) -> number
    void bool(java.lang.String,boolean) -> bool
    java.lang.String unescape(java.lang.String) -> unescape
com.badlogic.gdx.utils.JsonValue -> com.badlogic.gdx.utils.JsonValue:
    com.badlogic.gdx.utils.JsonValue$ValueType type -> type
    java.lang.String stringValue -> stringValue
    double doubleValue -> doubleValue
    long longValue -> longValue
    java.lang.String name -> name
    com.badlogic.gdx.utils.JsonValue child -> child
    com.badlogic.gdx.utils.JsonValue next -> next
    com.badlogic.gdx.utils.JsonValue prev -> prev
    int size -> size
    com.badlogic.gdx.utils.JsonValue get(int) -> get
    com.badlogic.gdx.utils.JsonValue get(java.lang.String) -> get
    boolean has(java.lang.String) -> has
    com.badlogic.gdx.utils.JsonValue require(int) -> require
    com.badlogic.gdx.utils.JsonValue require(java.lang.String) -> require
    com.badlogic.gdx.utils.JsonValue remove(int) -> remove
    com.badlogic.gdx.utils.JsonValue remove(java.lang.String) -> remove
    int size() -> size
    java.lang.String asString() -> asString
    float asFloat() -> asFloat
    double asDouble() -> asDouble
    long asLong() -> asLong
    int asInt() -> asInt
    boolean asBoolean() -> asBoolean
    byte asByte() -> asByte
    short asShort() -> asShort
    char asChar() -> asChar
    java.lang.String[] asStringArray() -> asStringArray
    float[] asFloatArray() -> asFloatArray
    double[] asDoubleArray() -> asDoubleArray
    long[] asLongArray() -> asLongArray
    int[] asIntArray() -> asIntArray
    boolean[] asBooleanArray() -> asBooleanArray
    byte[] asByteArray() -> asByteArray
    short[] asShortArray() -> asShortArray
    char[] asCharArray() -> asCharArray
    boolean hasChild(java.lang.String) -> hasChild
    com.badlogic.gdx.utils.JsonValue getChild(java.lang.String) -> getChild
    java.lang.String getString(java.lang.String,java.lang.String) -> getString
    float getFloat(java.lang.String,float) -> getFloat
    double getDouble(java.lang.String,double) -> getDouble
    long getLong(java.lang.String,long) -> getLong
    int getInt(java.lang.String,int) -> getInt
    boolean getBoolean(java.lang.String,boolean) -> getBoolean
    byte getByte(java.lang.String,byte) -> getByte
    short getShort(java.lang.String,short) -> getShort
    char getChar(java.lang.String,char) -> getChar
    java.lang.String getString(java.lang.String) -> getString
    float getFloat(java.lang.String) -> getFloat
    double getDouble(java.lang.String) -> getDouble
    long getLong(java.lang.String) -> getLong
    int getInt(java.lang.String) -> getInt
    boolean getBoolean(java.lang.String) -> getBoolean
    byte getByte(java.lang.String) -> getByte
    short getShort(java.lang.String) -> getShort
    char getChar(java.lang.String) -> getChar
    java.lang.String getString(int) -> getString
    float getFloat(int) -> getFloat
    double getDouble(int) -> getDouble
    long getLong(int) -> getLong
    int getInt(int) -> getInt
    boolean getBoolean(int) -> getBoolean
    byte getByte(int) -> getByte
    short getShort(int) -> getShort
    char getChar(int) -> getChar
    com.badlogic.gdx.utils.JsonValue$ValueType type() -> type
    void setType(com.badlogic.gdx.utils.JsonValue$ValueType) -> setType
    boolean isArray() -> isArray
    boolean isObject() -> isObject
    boolean isString() -> isString
    boolean isNumber() -> isNumber
    boolean isDouble() -> isDouble
    boolean isLong() -> isLong
    boolean isBoolean() -> isBoolean
    boolean isNull() -> isNull
    boolean isValue() -> isValue
    java.lang.String name() -> name
    void setName(java.lang.String) -> setName
    com.badlogic.gdx.utils.JsonValue child() -> child
    com.badlogic.gdx.utils.JsonValue next() -> next
    void setNext(com.badlogic.gdx.utils.JsonValue) -> setNext
    com.badlogic.gdx.utils.JsonValue prev() -> prev
    void setPrev(com.badlogic.gdx.utils.JsonValue) -> setPrev
    void set(java.lang.String) -> set
    void set(double) -> set
    void set(long) -> set
    void set(boolean) -> set
    java.lang.String toString() -> toString
    java.lang.String prettyPrint(com.badlogic.gdx.utils.JsonWriter$OutputType,int) -> prettyPrint
    java.lang.String prettyPrint(com.badlogic.gdx.utils.JsonValue$PrettyPrintSettings) -> prettyPrint
    void prettyPrint(com.badlogic.gdx.utils.JsonValue,com.badlogic.gdx.utils.StringBuilder,int,com.badlogic.gdx.utils.JsonValue$PrettyPrintSettings) -> prettyPrint
    boolean isFlat(com.badlogic.gdx.utils.JsonValue) -> isFlat
    boolean isNumeric(com.badlogic.gdx.utils.JsonValue) -> isNumeric
    void indent(int,com.badlogic.gdx.utils.StringBuilder) -> indent
    com.badlogic.gdx.utils.JsonValue$JsonIterator iterator() -> iterator
    java.util.Iterator iterator() -> iterator
com.badlogic.gdx.utils.JsonValue$1 -> com.badlogic.gdx.utils.JsonValue$1:
    int[] $SwitchMap$com$badlogic$gdx$utils$JsonValue$ValueType -> $SwitchMap$com$badlogic$gdx$utils$JsonValue$ValueType
com.badlogic.gdx.utils.JsonValue$JsonIterator -> com.badlogic.gdx.utils.JsonValue$JsonIterator:
    com.badlogic.gdx.utils.JsonValue entry -> entry
    com.badlogic.gdx.utils.JsonValue current -> current
    com.badlogic.gdx.utils.JsonValue this$0 -> this$0
    boolean hasNext() -> hasNext
    com.badlogic.gdx.utils.JsonValue next() -> next
    void remove() -> remove
    java.util.Iterator iterator() -> iterator
    java.lang.Object next() -> next
com.badlogic.gdx.utils.JsonValue$PrettyPrintSettings -> com.badlogic.gdx.utils.JsonValue$PrettyPrintSettings:
    com.badlogic.gdx.utils.JsonWriter$OutputType outputType -> outputType
    int singleLineColumns -> singleLineColumns
    boolean wrapNumericArrays -> wrapNumericArrays
com.badlogic.gdx.utils.JsonValue$ValueType -> com.badlogic.gdx.utils.JsonValue$ValueType:
    com.badlogic.gdx.utils.JsonValue$ValueType object -> object
    com.badlogic.gdx.utils.JsonValue$ValueType array -> array
    com.badlogic.gdx.utils.JsonValue$ValueType stringValue -> stringValue
    com.badlogic.gdx.utils.JsonValue$ValueType doubleValue -> doubleValue
    com.badlogic.gdx.utils.JsonValue$ValueType longValue -> longValue
    com.badlogic.gdx.utils.JsonValue$ValueType booleanValue -> booleanValue
    com.badlogic.gdx.utils.JsonValue$ValueType nullValue -> nullValue
    com.badlogic.gdx.utils.JsonValue$ValueType[] $VALUES -> $VALUES
    com.badlogic.gdx.utils.JsonValue$ValueType[] values() -> values
    com.badlogic.gdx.utils.JsonValue$ValueType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.utils.JsonWriter -> com.badlogic.gdx.utils.JsonWriter:
    java.io.Writer writer -> writer
    com.badlogic.gdx.utils.Array stack -> stack
    com.badlogic.gdx.utils.JsonWriter$JsonObject current -> current
    boolean named -> named
    com.badlogic.gdx.utils.JsonWriter$OutputType outputType -> outputType
    java.io.Writer getWriter() -> getWriter
    void setOutputType(com.badlogic.gdx.utils.JsonWriter$OutputType) -> setOutputType
    com.badlogic.gdx.utils.JsonWriter name(java.lang.String) -> name
    com.badlogic.gdx.utils.JsonWriter object() -> object
    com.badlogic.gdx.utils.JsonWriter array() -> array
    com.badlogic.gdx.utils.JsonWriter value(java.lang.Object) -> value
    com.badlogic.gdx.utils.JsonWriter object(java.lang.String) -> object
    com.badlogic.gdx.utils.JsonWriter array(java.lang.String) -> array
    com.badlogic.gdx.utils.JsonWriter set(java.lang.String,java.lang.Object) -> set
    com.badlogic.gdx.utils.JsonWriter pop() -> pop
    void write(char[],int,int) -> write
    void flush() -> flush
    void close() -> close
com.badlogic.gdx.utils.JsonWriter$1 -> com.badlogic.gdx.utils.JsonWriter$1:
    int[] $SwitchMap$com$badlogic$gdx$utils$JsonWriter$OutputType -> $SwitchMap$com$badlogic$gdx$utils$JsonWriter$OutputType
com.badlogic.gdx.utils.JsonWriter$JsonObject -> com.badlogic.gdx.utils.JsonWriter$JsonObject:
    boolean array -> array
    boolean needsComma -> needsComma
    com.badlogic.gdx.utils.JsonWriter this$0 -> this$0
    void close() -> close
com.badlogic.gdx.utils.JsonWriter$OutputType -> com.badlogic.gdx.utils.JsonWriter$OutputType:
    com.badlogic.gdx.utils.JsonWriter$OutputType json -> json
    com.badlogic.gdx.utils.JsonWriter$OutputType javascript -> javascript
    com.badlogic.gdx.utils.JsonWriter$OutputType minimal -> minimal
    java.util.regex.Pattern javascriptPattern -> javascriptPattern
    java.util.regex.Pattern minimalNamePattern -> minimalNamePattern
    java.util.regex.Pattern minimalValuePattern -> minimalValuePattern
    com.badlogic.gdx.utils.JsonWriter$OutputType[] $VALUES -> $VALUES
    com.badlogic.gdx.utils.JsonWriter$OutputType[] values() -> values
    com.badlogic.gdx.utils.JsonWriter$OutputType valueOf(java.lang.String) -> valueOf
    java.lang.String quoteValue(java.lang.Object) -> quoteValue
    java.lang.String quoteName(java.lang.String) -> quoteName
com.badlogic.gdx.utils.LittleEndianInputStream -> com.badlogic.gdx.utils.LittleEndianInputStream:
    java.io.DataInputStream din -> din
    void readFully(byte[]) -> readFully
    void readFully(byte[],int,int) -> readFully
    int skipBytes(int) -> skipBytes
    boolean readBoolean() -> readBoolean
    byte readByte() -> readByte
    int readUnsignedByte() -> readUnsignedByte
    short readShort() -> readShort
    int readUnsignedShort() -> readUnsignedShort
    char readChar() -> readChar
    int readInt() -> readInt
    long readLong() -> readLong
    float readFloat() -> readFloat
    double readDouble() -> readDouble
    java.lang.String readLine() -> readLine
    java.lang.String readUTF() -> readUTF
com.badlogic.gdx.utils.Logger -> com.badlogic.gdx.utils.Logger:
    int NONE -> NONE
    int ERROR -> ERROR
    int INFO -> INFO
    int DEBUG -> DEBUG
    java.lang.String tag -> tag
    int level -> level
    void debug(java.lang.String) -> debug
    void debug(java.lang.String,java.lang.Exception) -> debug
    void info(java.lang.String) -> info
    void info(java.lang.String,java.lang.Exception) -> info
    void error(java.lang.String) -> error
    void error(java.lang.String,java.lang.Throwable) -> error
    void setLevel(int) -> setLevel
    int getLevel() -> getLevel
com.badlogic.gdx.utils.LongArray -> com.badlogic.gdx.utils.LongArray:
    long[] items -> items
    int size -> size
    boolean ordered -> ordered
    void add(long) -> add
    void addAll(com.badlogic.gdx.utils.LongArray) -> addAll
    void addAll(com.badlogic.gdx.utils.LongArray,int,int) -> addAll
    void addAll(long[]) -> addAll
    void addAll(long[],int,int) -> addAll
    long get(int) -> get
    void set(int,long) -> set
    void incr(int,long) -> incr
    void mul(int,long) -> mul
    void insert(int,long) -> insert
    void swap(int,int) -> swap
    boolean contains(long) -> contains
    int indexOf(long) -> indexOf
    int lastIndexOf(char) -> lastIndexOf
    boolean removeValue(long) -> removeValue
    long removeIndex(int) -> removeIndex
    void removeRange(int,int) -> removeRange
    boolean removeAll(com.badlogic.gdx.utils.LongArray) -> removeAll
    long pop() -> pop
    long peek() -> peek
    long first() -> first
    void clear() -> clear
    long[] shrink() -> shrink
    long[] ensureCapacity(int) -> ensureCapacity
    long[] resize(int) -> resize
    void sort() -> sort
    void reverse() -> reverse
    void shuffle() -> shuffle
    void truncate(int) -> truncate
    long random() -> random
    long[] toArray() -> toArray
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String toString(java.lang.String) -> toString
    com.badlogic.gdx.utils.LongArray with(long[]) -> with
com.badlogic.gdx.utils.LongMap -> com.badlogic.gdx.utils.LongMap:
    int PRIME1 -> PRIME1
    int PRIME2 -> PRIME2
    int PRIME3 -> PRIME3
    int EMPTY -> EMPTY
    int size -> size
    long[] keyTable -> keyTable
    java.lang.Object[] valueTable -> valueTable
    int capacity -> capacity
    int stashSize -> stashSize
    java.lang.Object zeroValue -> zeroValue
    boolean hasZeroValue -> hasZeroValue
    float loadFactor -> loadFactor
    int hashShift -> hashShift
    int mask -> mask
    int threshold -> threshold
    int stashCapacity -> stashCapacity
    int pushIterations -> pushIterations
    com.badlogic.gdx.utils.LongMap$Entries entries1 -> entries1
    com.badlogic.gdx.utils.LongMap$Entries entries2 -> entries2
    com.badlogic.gdx.utils.LongMap$Values values1 -> values1
    com.badlogic.gdx.utils.LongMap$Values values2 -> values2
    com.badlogic.gdx.utils.LongMap$Keys keys1 -> keys1
    com.badlogic.gdx.utils.LongMap$Keys keys2 -> keys2
    java.lang.Object put(long,java.lang.Object) -> put
    void putAll(com.badlogic.gdx.utils.LongMap) -> putAll
    void putResize(long,java.lang.Object) -> putResize
    void push(long,java.lang.Object,int,long,int,long,int,long) -> push
    void putStash(long,java.lang.Object) -> putStash
    java.lang.Object get(long) -> get
    java.lang.Object get(long,java.lang.Object) -> get
    java.lang.Object getStash(long,java.lang.Object) -> getStash
    java.lang.Object remove(long) -> remove
    java.lang.Object removeStash(long) -> removeStash
    void removeStashIndex(int) -> removeStashIndex
    void shrink(int) -> shrink
    void clear(int) -> clear
    void clear() -> clear
    boolean containsValue(java.lang.Object,boolean) -> containsValue
    boolean containsKey(long) -> containsKey
    boolean containsKeyStash(long) -> containsKeyStash
    long findKey(java.lang.Object,boolean,long) -> findKey
    void ensureCapacity(int) -> ensureCapacity
    void resize(int) -> resize
    int hash2(long) -> hash2
    int hash3(long) -> hash3
    java.lang.String toString() -> toString
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.LongMap$Entries entries() -> entries
    com.badlogic.gdx.utils.LongMap$Values values() -> values
    com.badlogic.gdx.utils.LongMap$Keys keys() -> keys
com.badlogic.gdx.utils.LongMap$Entries -> com.badlogic.gdx.utils.LongMap$Entries:
    com.badlogic.gdx.utils.LongMap$Entry entry -> entry
    com.badlogic.gdx.utils.LongMap$Entry next() -> next
    boolean hasNext() -> hasNext
    java.util.Iterator iterator() -> iterator
    void remove() -> remove
    void reset() -> reset
    java.lang.Object next() -> next
com.badlogic.gdx.utils.LongMap$Entry -> com.badlogic.gdx.utils.LongMap$Entry:
    long key -> key
    java.lang.Object value -> value
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.LongMap$Keys -> com.badlogic.gdx.utils.LongMap$Keys:
    long next() -> next
    com.badlogic.gdx.utils.LongArray toArray() -> toArray
    void remove() -> remove
    void reset() -> reset
com.badlogic.gdx.utils.LongMap$MapIterator -> com.badlogic.gdx.utils.LongMap$MapIterator:
    int INDEX_ILLEGAL -> INDEX_ILLEGAL
    int INDEX_ZERO -> INDEX_ZERO
    boolean hasNext -> hasNext
    com.badlogic.gdx.utils.LongMap map -> map
    int nextIndex -> nextIndex
    int currentIndex -> currentIndex
    boolean valid -> valid
    void reset() -> reset
    void findNextIndex() -> findNextIndex
    void remove() -> remove
com.badlogic.gdx.utils.LongMap$Values -> com.badlogic.gdx.utils.LongMap$Values:
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.Array toArray() -> toArray
    void remove() -> remove
    void reset() -> reset
com.badlogic.gdx.utils.NumberUtils -> com.badlogic.gdx.utils.NumberUtils:
    boolean intToFloatColorMask -> intToFloatColorMask
    int floatToIntBits(float) -> floatToIntBits
    int floatToRawIntBits(float) -> floatToRawIntBits
    int floatToIntColor(float) -> floatToIntColor
    float intToFloatColor(int) -> intToFloatColor
    float intBitsToFloat(int) -> intBitsToFloat
    long doubleToLongBits(double) -> doubleToLongBits
    double longBitsToDouble(long) -> longBitsToDouble
com.badlogic.gdx.utils.ObjectFloatMap -> com.badlogic.gdx.utils.ObjectFloatMap:
    int PRIME1 -> PRIME1
    int PRIME2 -> PRIME2
    int PRIME3 -> PRIME3
    int size -> size
    java.lang.Object[] keyTable -> keyTable
    float[] valueTable -> valueTable
    int capacity -> capacity
    int stashSize -> stashSize
    float loadFactor -> loadFactor
    int hashShift -> hashShift
    int mask -> mask
    int threshold -> threshold
    int stashCapacity -> stashCapacity
    int pushIterations -> pushIterations
    com.badlogic.gdx.utils.ObjectFloatMap$Entries entries1 -> entries1
    com.badlogic.gdx.utils.ObjectFloatMap$Entries entries2 -> entries2
    com.badlogic.gdx.utils.ObjectFloatMap$Values values1 -> values1
    com.badlogic.gdx.utils.ObjectFloatMap$Values values2 -> values2
    com.badlogic.gdx.utils.ObjectFloatMap$Keys keys1 -> keys1
    com.badlogic.gdx.utils.ObjectFloatMap$Keys keys2 -> keys2
    void put(java.lang.Object,float) -> put
    void putAll(com.badlogic.gdx.utils.ObjectFloatMap) -> putAll
    void putResize(java.lang.Object,float) -> putResize
    void push(java.lang.Object,float,int,java.lang.Object,int,java.lang.Object,int,java.lang.Object) -> push
    void putStash(java.lang.Object,float) -> putStash
    float get(java.lang.Object,float) -> get
    float getStash(java.lang.Object,float) -> getStash
    float getAndIncrement(java.lang.Object,float,float) -> getAndIncrement
    float getAndIncrementStash(java.lang.Object,float,float) -> getAndIncrementStash
    float remove(java.lang.Object,float) -> remove
    float removeStash(java.lang.Object,float) -> removeStash
    void removeStashIndex(int) -> removeStashIndex
    void shrink(int) -> shrink
    void clear(int) -> clear
    void clear() -> clear
    boolean containsValue(float) -> containsValue
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsKeyStash(java.lang.Object) -> containsKeyStash
    java.lang.Object findKey(float) -> findKey
    void ensureCapacity(int) -> ensureCapacity
    void resize(int) -> resize
    int hash2(int) -> hash2
    int hash3(int) -> hash3
    java.lang.String toString() -> toString
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.ObjectFloatMap$Entries entries() -> entries
    com.badlogic.gdx.utils.ObjectFloatMap$Values values() -> values
    com.badlogic.gdx.utils.ObjectFloatMap$Keys keys() -> keys
com.badlogic.gdx.utils.ObjectFloatMap$Entries -> com.badlogic.gdx.utils.ObjectFloatMap$Entries:
    com.badlogic.gdx.utils.ObjectFloatMap$Entry entry -> entry
    com.badlogic.gdx.utils.ObjectFloatMap$Entry next() -> next
    boolean hasNext() -> hasNext
    java.util.Iterator iterator() -> iterator
    void remove() -> remove
    void reset() -> reset
    java.lang.Object next() -> next
com.badlogic.gdx.utils.ObjectFloatMap$Entry -> com.badlogic.gdx.utils.ObjectFloatMap$Entry:
    java.lang.Object key -> key
    float value -> value
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.ObjectFloatMap$Keys -> com.badlogic.gdx.utils.ObjectFloatMap$Keys:
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.Array toArray() -> toArray
    void remove() -> remove
    void reset() -> reset
com.badlogic.gdx.utils.ObjectFloatMap$MapIterator -> com.badlogic.gdx.utils.ObjectFloatMap$MapIterator:
    boolean hasNext -> hasNext
    com.badlogic.gdx.utils.ObjectFloatMap map -> map
    int nextIndex -> nextIndex
    int currentIndex -> currentIndex
    boolean valid -> valid
    void reset() -> reset
    void findNextIndex() -> findNextIndex
    void remove() -> remove
com.badlogic.gdx.utils.ObjectFloatMap$Values -> com.badlogic.gdx.utils.ObjectFloatMap$Values:
    boolean hasNext() -> hasNext
    float next() -> next
    com.badlogic.gdx.utils.FloatArray toArray() -> toArray
    void remove() -> remove
    void reset() -> reset
com.badlogic.gdx.utils.ObjectIntMap -> com.badlogic.gdx.utils.ObjectIntMap:
    int PRIME1 -> PRIME1
    int PRIME2 -> PRIME2
    int PRIME3 -> PRIME3
    int size -> size
    java.lang.Object[] keyTable -> keyTable
    int[] valueTable -> valueTable
    int capacity -> capacity
    int stashSize -> stashSize
    float loadFactor -> loadFactor
    int hashShift -> hashShift
    int mask -> mask
    int threshold -> threshold
    int stashCapacity -> stashCapacity
    int pushIterations -> pushIterations
    com.badlogic.gdx.utils.ObjectIntMap$Entries entries1 -> entries1
    com.badlogic.gdx.utils.ObjectIntMap$Entries entries2 -> entries2
    com.badlogic.gdx.utils.ObjectIntMap$Values values1 -> values1
    com.badlogic.gdx.utils.ObjectIntMap$Values values2 -> values2
    com.badlogic.gdx.utils.ObjectIntMap$Keys keys1 -> keys1
    com.badlogic.gdx.utils.ObjectIntMap$Keys keys2 -> keys2
    void put(java.lang.Object,int) -> put
    void putAll(com.badlogic.gdx.utils.ObjectIntMap) -> putAll
    void putResize(java.lang.Object,int) -> putResize
    void push(java.lang.Object,int,int,java.lang.Object,int,java.lang.Object,int,java.lang.Object) -> push
    void putStash(java.lang.Object,int) -> putStash
    int get(java.lang.Object,int) -> get
    int getStash(java.lang.Object,int) -> getStash
    int getAndIncrement(java.lang.Object,int,int) -> getAndIncrement
    int getAndIncrementStash(java.lang.Object,int,int) -> getAndIncrementStash
    int remove(java.lang.Object,int) -> remove
    int removeStash(java.lang.Object,int) -> removeStash
    void removeStashIndex(int) -> removeStashIndex
    void shrink(int) -> shrink
    void clear(int) -> clear
    void clear() -> clear
    boolean containsValue(int) -> containsValue
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsKeyStash(java.lang.Object) -> containsKeyStash
    java.lang.Object findKey(int) -> findKey
    void ensureCapacity(int) -> ensureCapacity
    void resize(int) -> resize
    int hash2(int) -> hash2
    int hash3(int) -> hash3
    java.lang.String toString() -> toString
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.ObjectIntMap$Entries entries() -> entries
    com.badlogic.gdx.utils.ObjectIntMap$Values values() -> values
    com.badlogic.gdx.utils.ObjectIntMap$Keys keys() -> keys
com.badlogic.gdx.utils.ObjectIntMap$Entries -> com.badlogic.gdx.utils.ObjectIntMap$Entries:
    com.badlogic.gdx.utils.ObjectIntMap$Entry entry -> entry
    com.badlogic.gdx.utils.ObjectIntMap$Entry next() -> next
    boolean hasNext() -> hasNext
    java.util.Iterator iterator() -> iterator
    void remove() -> remove
    void reset() -> reset
    java.lang.Object next() -> next
com.badlogic.gdx.utils.ObjectIntMap$Entry -> com.badlogic.gdx.utils.ObjectIntMap$Entry:
    java.lang.Object key -> key
    int value -> value
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.ObjectIntMap$Keys -> com.badlogic.gdx.utils.ObjectIntMap$Keys:
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.Array toArray() -> toArray
    void remove() -> remove
    void reset() -> reset
com.badlogic.gdx.utils.ObjectIntMap$MapIterator -> com.badlogic.gdx.utils.ObjectIntMap$MapIterator:
    boolean hasNext -> hasNext
    com.badlogic.gdx.utils.ObjectIntMap map -> map
    int nextIndex -> nextIndex
    int currentIndex -> currentIndex
    boolean valid -> valid
    void reset() -> reset
    void findNextIndex() -> findNextIndex
    void remove() -> remove
com.badlogic.gdx.utils.ObjectIntMap$Values -> com.badlogic.gdx.utils.ObjectIntMap$Values:
    boolean hasNext() -> hasNext
    int next() -> next
    com.badlogic.gdx.utils.IntArray toArray() -> toArray
    void remove() -> remove
    void reset() -> reset
com.badlogic.gdx.utils.ObjectMap -> com.badlogic.gdx.utils.ObjectMap:
    int PRIME1 -> PRIME1
    int PRIME2 -> PRIME2
    int PRIME3 -> PRIME3
    int size -> size
    java.lang.Object[] keyTable -> keyTable
    java.lang.Object[] valueTable -> valueTable
    int capacity -> capacity
    int stashSize -> stashSize
    float loadFactor -> loadFactor
    int hashShift -> hashShift
    int mask -> mask
    int threshold -> threshold
    int stashCapacity -> stashCapacity
    int pushIterations -> pushIterations
    com.badlogic.gdx.utils.ObjectMap$Entries entries1 -> entries1
    com.badlogic.gdx.utils.ObjectMap$Entries entries2 -> entries2
    com.badlogic.gdx.utils.ObjectMap$Values values1 -> values1
    com.badlogic.gdx.utils.ObjectMap$Values values2 -> values2
    com.badlogic.gdx.utils.ObjectMap$Keys keys1 -> keys1
    com.badlogic.gdx.utils.ObjectMap$Keys keys2 -> keys2
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object put_internal(java.lang.Object,java.lang.Object) -> put_internal
    void putAll(com.badlogic.gdx.utils.ObjectMap) -> putAll
    void putResize(java.lang.Object,java.lang.Object) -> putResize
    void push(java.lang.Object,java.lang.Object,int,java.lang.Object,int,java.lang.Object,int,java.lang.Object) -> push
    void putStash(java.lang.Object,java.lang.Object) -> putStash
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object getStash(java.lang.Object) -> getStash
    java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    java.lang.Object getStash(java.lang.Object,java.lang.Object) -> getStash
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeStash(java.lang.Object) -> removeStash
    void removeStashIndex(int) -> removeStashIndex
    void shrink(int) -> shrink
    void clear(int) -> clear
    void clear() -> clear
    boolean containsValue(java.lang.Object,boolean) -> containsValue
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsKeyStash(java.lang.Object) -> containsKeyStash
    java.lang.Object findKey(java.lang.Object,boolean) -> findKey
    void ensureCapacity(int) -> ensureCapacity
    void resize(int) -> resize
    int hash2(int) -> hash2
    int hash3(int) -> hash3
    java.lang.String toString(java.lang.String) -> toString
    java.lang.String toString() -> toString
    java.lang.String toString(java.lang.String,boolean) -> toString
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.ObjectMap$Entries entries() -> entries
    com.badlogic.gdx.utils.ObjectMap$Values values() -> values
    com.badlogic.gdx.utils.ObjectMap$Keys keys() -> keys
com.badlogic.gdx.utils.ObjectMap$Entries -> com.badlogic.gdx.utils.ObjectMap$Entries:
    com.badlogic.gdx.utils.ObjectMap$Entry entry -> entry
    com.badlogic.gdx.utils.ObjectMap$Entry next() -> next
    boolean hasNext() -> hasNext
    java.util.Iterator iterator() -> iterator
    void remove() -> remove
    void reset() -> reset
    java.lang.Object next() -> next
com.badlogic.gdx.utils.ObjectMap$Entry -> com.badlogic.gdx.utils.ObjectMap$Entry:
    java.lang.Object key -> key
    java.lang.Object value -> value
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.ObjectMap$Keys -> com.badlogic.gdx.utils.ObjectMap$Keys:
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.Array toArray() -> toArray
    void remove() -> remove
    void reset() -> reset
com.badlogic.gdx.utils.ObjectMap$MapIterator -> com.badlogic.gdx.utils.ObjectMap$MapIterator:
    boolean hasNext -> hasNext
    com.badlogic.gdx.utils.ObjectMap map -> map
    int nextIndex -> nextIndex
    int currentIndex -> currentIndex
    boolean valid -> valid
    void reset() -> reset
    void advance() -> advance
    void remove() -> remove
com.badlogic.gdx.utils.ObjectMap$Values -> com.badlogic.gdx.utils.ObjectMap$Values:
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.Array toArray() -> toArray
    void toArray(com.badlogic.gdx.utils.Array) -> toArray
    void remove() -> remove
    void reset() -> reset
com.badlogic.gdx.utils.ObjectSet -> com.badlogic.gdx.utils.ObjectSet:
    int PRIME1 -> PRIME1
    int PRIME2 -> PRIME2
    int PRIME3 -> PRIME3
    int size -> size
    java.lang.Object[] keyTable -> keyTable
    int capacity -> capacity
    int stashSize -> stashSize
    float loadFactor -> loadFactor
    int hashShift -> hashShift
    int mask -> mask
    int threshold -> threshold
    int stashCapacity -> stashCapacity
    int pushIterations -> pushIterations
    com.badlogic.gdx.utils.ObjectSet$SetIterator iterator1 -> iterator1
    com.badlogic.gdx.utils.ObjectSet$SetIterator iterator2 -> iterator2
    boolean add(java.lang.Object) -> add
    void addAll(com.badlogic.gdx.utils.Array) -> addAll
    void addAll(com.badlogic.gdx.utils.Array,int,int) -> addAll
    void addAll(java.lang.Object[]) -> addAll
    void addAll(java.lang.Object[],int,int) -> addAll
    void addAll(com.badlogic.gdx.utils.ObjectSet) -> addAll
    void addResize(java.lang.Object) -> addResize
    void push(java.lang.Object,int,java.lang.Object,int,java.lang.Object,int,java.lang.Object) -> push
    void addStash(java.lang.Object) -> addStash
    boolean remove(java.lang.Object) -> remove
    boolean removeStash(java.lang.Object) -> removeStash
    void removeStashIndex(int) -> removeStashIndex
    void shrink(int) -> shrink
    void clear(int) -> clear
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsKeyStash(java.lang.Object) -> containsKeyStash
    java.lang.Object first() -> first
    void ensureCapacity(int) -> ensureCapacity
    void resize(int) -> resize
    int hash2(int) -> hash2
    int hash3(int) -> hash3
    java.lang.String toString() -> toString
    java.lang.String toString(java.lang.String) -> toString
    com.badlogic.gdx.utils.ObjectSet$SetIterator iterator() -> iterator
    com.badlogic.gdx.utils.ObjectSet with(java.lang.Object[]) -> with
    java.util.Iterator iterator() -> iterator
com.badlogic.gdx.utils.ObjectSet$SetIterator -> com.badlogic.gdx.utils.ObjectSet$SetIterator:
    boolean hasNext -> hasNext
    com.badlogic.gdx.utils.ObjectSet set -> set
    int nextIndex -> nextIndex
    int currentIndex -> currentIndex
    boolean valid -> valid
    void reset() -> reset
    void findNextIndex() -> findNextIndex
    void remove() -> remove
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.Array toArray(com.badlogic.gdx.utils.Array) -> toArray
    com.badlogic.gdx.utils.Array toArray() -> toArray
com.badlogic.gdx.utils.OrderedMap -> com.badlogic.gdx.utils.OrderedMap:
    com.badlogic.gdx.utils.Array keys -> keys
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
    void clear(int) -> clear
    void clear() -> clear
    com.badlogic.gdx.utils.Array orderedKeys() -> orderedKeys
    com.badlogic.gdx.utils.ObjectMap$Entries entries() -> entries
    com.badlogic.gdx.utils.ObjectMap$Keys keys() -> keys
    com.badlogic.gdx.utils.ObjectMap$Values values() -> values
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.OrderedMap$1 -> com.badlogic.gdx.utils.OrderedMap$1:
    com.badlogic.gdx.utils.OrderedMap this$0 -> this$0
    void advance() -> advance
    com.badlogic.gdx.utils.ObjectMap$Entry next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
com.badlogic.gdx.utils.OrderedMap$2 -> com.badlogic.gdx.utils.OrderedMap$2:
    com.badlogic.gdx.utils.OrderedMap this$0 -> this$0
    void advance() -> advance
    java.lang.Object next() -> next
    void remove() -> remove
com.badlogic.gdx.utils.OrderedMap$3 -> com.badlogic.gdx.utils.OrderedMap$3:
    com.badlogic.gdx.utils.OrderedMap this$0 -> this$0
    void advance() -> advance
    java.lang.Object next() -> next
    void remove() -> remove
com.badlogic.gdx.utils.PauseableThread -> com.badlogic.gdx.utils.PauseableThread:
    java.lang.Runnable runnable -> runnable
    boolean paused -> paused
    boolean exit -> exit
    void run() -> run
    void onPause() -> onPause
    void onResume() -> onResume
    boolean isPaused() -> isPaused
    void stopThread() -> stopThread
com.badlogic.gdx.utils.PerformanceCounter -> com.badlogic.gdx.utils.PerformanceCounter:
    float nano2seconds -> nano2seconds
    long startTime -> startTime
    long lastTick -> lastTick
    com.badlogic.gdx.math.FloatCounter time -> time
    com.badlogic.gdx.math.FloatCounter load -> load
    java.lang.String name -> name
    float current -> current
    boolean valid -> valid
    void tick() -> tick
    void tick(float) -> tick
    void start() -> start
    void stop() -> stop
    void reset() -> reset
    java.lang.String toString() -> toString
    com.badlogic.gdx.utils.StringBuilder toString(com.badlogic.gdx.utils.StringBuilder) -> toString
com.badlogic.gdx.utils.PerformanceCounters -> com.badlogic.gdx.utils.PerformanceCounters:
    float nano2seconds -> nano2seconds
    long lastTick -> lastTick
    com.badlogic.gdx.utils.Array counters -> counters
    com.badlogic.gdx.utils.PerformanceCounter add(java.lang.String,int) -> add
    com.badlogic.gdx.utils.PerformanceCounter add(java.lang.String) -> add
    void tick() -> tick
    void tick(float) -> tick
    com.badlogic.gdx.utils.StringBuilder toString(com.badlogic.gdx.utils.StringBuilder) -> toString
com.badlogic.gdx.utils.Pool -> com.badlogic.gdx.utils.Pool:
    int max -> max
    int peak -> peak
    com.badlogic.gdx.utils.Array freeObjects -> freeObjects
    java.lang.Object newObject() -> newObject
    java.lang.Object obtain() -> obtain
    void free(java.lang.Object) -> free
    void freeAll(com.badlogic.gdx.utils.Array) -> freeAll
    void clear() -> clear
    int getFree() -> getFree
com.badlogic.gdx.utils.Pool$Poolable -> com.badlogic.gdx.utils.Pool$Poolable:
    void reset() -> reset
com.badlogic.gdx.utils.PooledLinkedList -> com.badlogic.gdx.utils.PooledLinkedList:
    com.badlogic.gdx.utils.PooledLinkedList$Item head -> head
    com.badlogic.gdx.utils.PooledLinkedList$Item tail -> tail
    com.badlogic.gdx.utils.PooledLinkedList$Item iter -> iter
    com.badlogic.gdx.utils.PooledLinkedList$Item curr -> curr
    int size -> size
    com.badlogic.gdx.utils.Pool pool -> pool
    void add(java.lang.Object) -> add
    void iter() -> iter
    java.lang.Object next() -> next
    void remove() -> remove
    void clear() -> clear
com.badlogic.gdx.utils.PooledLinkedList$1 -> com.badlogic.gdx.utils.PooledLinkedList$1:
    com.badlogic.gdx.utils.PooledLinkedList this$0 -> this$0
    com.badlogic.gdx.utils.PooledLinkedList$Item newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.utils.PooledLinkedList$Item -> com.badlogic.gdx.utils.PooledLinkedList$Item:
    java.lang.Object payload -> payload
    com.badlogic.gdx.utils.PooledLinkedList$Item next -> next
    com.badlogic.gdx.utils.PooledLinkedList$Item prev -> prev
com.badlogic.gdx.utils.Pools -> com.badlogic.gdx.utils.Pools:
    com.badlogic.gdx.utils.ObjectMap typePools -> typePools
    com.badlogic.gdx.utils.Pool get(java.lang.Class) -> get
    java.lang.Object obtain(java.lang.Class) -> obtain
    void free(java.lang.Object) -> free
    void freeAll(com.badlogic.gdx.utils.Array) -> freeAll
    void freeAll(com.badlogic.gdx.utils.Array,boolean) -> freeAll
com.badlogic.gdx.utils.Predicate -> com.badlogic.gdx.utils.Predicate:
    boolean evaluate(java.lang.Object) -> evaluate
com.badlogic.gdx.utils.Predicate$PredicateIterable -> com.badlogic.gdx.utils.Predicate$PredicateIterable:
    java.lang.Iterable iterable -> iterable
    com.badlogic.gdx.utils.Predicate predicate -> predicate
    com.badlogic.gdx.utils.Predicate$PredicateIterator iterator -> iterator
    void set(java.lang.Iterable,com.badlogic.gdx.utils.Predicate) -> set
    java.util.Iterator iterator() -> iterator
com.badlogic.gdx.utils.Predicate$PredicateIterator -> com.badlogic.gdx.utils.Predicate$PredicateIterator:
    java.util.Iterator iterator -> iterator
    com.badlogic.gdx.utils.Predicate predicate -> predicate
    boolean end -> end
    boolean peeked -> peeked
    java.lang.Object next -> next
    void set(java.lang.Iterable,com.badlogic.gdx.utils.Predicate) -> set
    void set(java.util.Iterator,com.badlogic.gdx.utils.Predicate) -> set
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.badlogic.gdx.utils.PropertiesUtils -> com.badlogic.gdx.utils.PropertiesUtils:
    int NONE -> NONE
    int SLASH -> SLASH
    int UNICODE -> UNICODE
    int CONTINUE -> CONTINUE
    int KEY_DONE -> KEY_DONE
    int IGNORE -> IGNORE
    java.lang.String LINE_SEPARATOR -> LINE_SEPARATOR
    void load(com.badlogic.gdx.utils.ObjectMap,java.io.Reader) -> load
    void store(com.badlogic.gdx.utils.ObjectMap,java.io.Writer,java.lang.String) -> store
    void storeImpl(com.badlogic.gdx.utils.ObjectMap,java.io.Writer,java.lang.String,boolean) -> storeImpl
    void dumpString(com.badlogic.gdx.utils.StringBuilder,java.lang.String,boolean,boolean) -> dumpString
    void writeComment(java.io.Writer,java.lang.String) -> writeComment
com.badlogic.gdx.utils.QuickSelect -> com.badlogic.gdx.utils.QuickSelect:
    java.lang.Object[] array -> array
    java.util.Comparator comp -> comp
    int select(java.lang.Object[],java.util.Comparator,int,int) -> select
    int partition(int,int,int) -> partition
    int recursiveSelect(int,int,int) -> recursiveSelect
    int medianOfThreePivot(int,int) -> medianOfThreePivot
    void swap(int,int) -> swap
com.badlogic.gdx.utils.ReflectionPool -> com.badlogic.gdx.utils.ReflectionPool:
    com.badlogic.gdx.utils.reflect.Constructor constructor -> constructor
    com.badlogic.gdx.utils.reflect.Constructor findConstructor(java.lang.Class) -> findConstructor
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.utils.Scaling -> com.badlogic.gdx.utils.Scaling:
    com.badlogic.gdx.utils.Scaling fit -> fit
    com.badlogic.gdx.utils.Scaling fill -> fill
    com.badlogic.gdx.utils.Scaling fillX -> fillX
    com.badlogic.gdx.utils.Scaling fillY -> fillY
    com.badlogic.gdx.utils.Scaling stretch -> stretch
    com.badlogic.gdx.utils.Scaling stretchX -> stretchX
    com.badlogic.gdx.utils.Scaling stretchY -> stretchY
    com.badlogic.gdx.utils.Scaling none -> none
    com.badlogic.gdx.math.Vector2 temp -> temp
    com.badlogic.gdx.utils.Scaling[] $VALUES -> $VALUES
    com.badlogic.gdx.utils.Scaling[] values() -> values
    com.badlogic.gdx.utils.Scaling valueOf(java.lang.String) -> valueOf
    com.badlogic.gdx.math.Vector2 apply(float,float,float,float) -> apply
com.badlogic.gdx.utils.Scaling$1 -> com.badlogic.gdx.utils.Scaling$1:
    int[] $SwitchMap$com$badlogic$gdx$utils$Scaling -> $SwitchMap$com$badlogic$gdx$utils$Scaling
com.badlogic.gdx.utils.ScreenUtils -> com.badlogic.gdx.utils.ScreenUtils:
    com.badlogic.gdx.graphics.g2d.TextureRegion getFrameBufferTexture() -> getFrameBufferTexture
    com.badlogic.gdx.graphics.g2d.TextureRegion getFrameBufferTexture(int,int,int,int) -> getFrameBufferTexture
    com.badlogic.gdx.graphics.Pixmap getFrameBufferPixmap(int,int,int,int) -> getFrameBufferPixmap
    byte[] getFrameBufferPixels(boolean) -> getFrameBufferPixels
    byte[] getFrameBufferPixels(int,int,int,int,boolean) -> getFrameBufferPixels
com.badlogic.gdx.utils.Select -> com.badlogic.gdx.utils.Select:
    com.badlogic.gdx.utils.Select instance -> instance
    com.badlogic.gdx.utils.QuickSelect quickSelect -> quickSelect
    com.badlogic.gdx.utils.Select instance() -> instance
    java.lang.Object select(java.lang.Object[],java.util.Comparator,int,int) -> select
    int selectIndex(java.lang.Object[],java.util.Comparator,int,int) -> selectIndex
    int fastMin(java.lang.Object[],java.util.Comparator,int) -> fastMin
    int fastMax(java.lang.Object[],java.util.Comparator,int) -> fastMax
com.badlogic.gdx.utils.SerializationException -> com.badlogic.gdx.utils.SerializationException:
    java.lang.StringBuffer trace -> trace
    boolean causedBy(java.lang.Class) -> causedBy
    boolean causedBy(java.lang.Throwable,java.lang.Class) -> causedBy
    java.lang.String getMessage() -> getMessage
    void addTrace(java.lang.String) -> addTrace
com.badlogic.gdx.utils.SharedLibraryLoader -> com.badlogic.gdx.utils.SharedLibraryLoader:
    boolean isWindows -> isWindows
    boolean isLinux -> isLinux
    boolean isMac -> isMac
    boolean isIos -> isIos
    boolean isAndroid -> isAndroid
    boolean isARM -> isARM
    boolean is64Bit -> is64Bit
    java.lang.String abi -> abi
    java.util.HashSet loadedLibraries -> loadedLibraries
    java.lang.String nativesJar -> nativesJar
    java.lang.String crc(java.io.InputStream) -> crc
    java.lang.String mapLibraryName(java.lang.String) -> mapLibraryName
    void load(java.lang.String) -> load
    java.io.InputStream readFile(java.lang.String) -> readFile
    java.io.File extractFile(java.lang.String,java.lang.String) -> extractFile
    java.io.File getExtractedFile(java.lang.String,java.lang.String) -> getExtractedFile
    boolean canWrite(java.io.File) -> canWrite
    java.io.File extractFile(java.lang.String,java.lang.String,java.io.File) -> extractFile
    void loadFile(java.lang.String) -> loadFile
    java.lang.Throwable loadFile(java.lang.String,java.lang.String,java.io.File) -> loadFile
com.badlogic.gdx.utils.ShortArray -> com.badlogic.gdx.utils.ShortArray:
    short[] items -> items
    int size -> size
    boolean ordered -> ordered
    void add(int) -> add
    void add(short) -> add
    void addAll(com.badlogic.gdx.utils.ShortArray) -> addAll
    void addAll(com.badlogic.gdx.utils.ShortArray,int,int) -> addAll
    void addAll(short[]) -> addAll
    void addAll(short[],int,int) -> addAll
    short get(int) -> get
    void set(int,short) -> set
    void incr(int,short) -> incr
    void mul(int,short) -> mul
    void insert(int,short) -> insert
    void swap(int,int) -> swap
    boolean contains(short) -> contains
    int indexOf(short) -> indexOf
    int lastIndexOf(char) -> lastIndexOf
    boolean removeValue(short) -> removeValue
    short removeIndex(int) -> removeIndex
    void removeRange(int,int) -> removeRange
    boolean removeAll(com.badlogic.gdx.utils.ShortArray) -> removeAll
    short pop() -> pop
    short peek() -> peek
    short first() -> first
    void clear() -> clear
    short[] shrink() -> shrink
    short[] ensureCapacity(int) -> ensureCapacity
    short[] resize(int) -> resize
    void sort() -> sort
    void reverse() -> reverse
    void shuffle() -> shuffle
    void truncate(int) -> truncate
    short random() -> random
    short[] toArray() -> toArray
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String toString(java.lang.String) -> toString
    com.badlogic.gdx.utils.ShortArray with(short[]) -> with
com.badlogic.gdx.utils.SnapshotArray -> com.badlogic.gdx.utils.SnapshotArray:
    java.lang.Object[] snapshot -> snapshot
    java.lang.Object[] recycled -> recycled
    int snapshots -> snapshots
    java.lang.Object[] begin() -> begin
    void end() -> end
    void modified() -> modified
    void set(int,java.lang.Object) -> set
    void insert(int,java.lang.Object) -> insert
    void swap(int,int) -> swap
    boolean removeValue(java.lang.Object,boolean) -> removeValue
    java.lang.Object removeIndex(int) -> removeIndex
    void removeRange(int,int) -> removeRange
    boolean removeAll(com.badlogic.gdx.utils.Array,boolean) -> removeAll
    java.lang.Object pop() -> pop
    void clear() -> clear
    void sort() -> sort
    void sort(java.util.Comparator) -> sort
    void reverse() -> reverse
    void shuffle() -> shuffle
    void truncate(int) -> truncate
    com.badlogic.gdx.utils.SnapshotArray with(java.lang.Object[]) -> with
com.badlogic.gdx.utils.Sort -> com.badlogic.gdx.utils.Sort:
    com.badlogic.gdx.utils.Sort instance -> instance
    com.badlogic.gdx.utils.TimSort timSort -> timSort
    com.badlogic.gdx.utils.ComparableTimSort comparableTimSort -> comparableTimSort
    void sort(com.badlogic.gdx.utils.Array) -> sort
    void sort(java.lang.Object[]) -> sort
    void sort(java.lang.Object[],int,int) -> sort
    void sort(com.badlogic.gdx.utils.Array,java.util.Comparator) -> sort
    void sort(java.lang.Object[],java.util.Comparator) -> sort
    void sort(java.lang.Object[],java.util.Comparator,int,int) -> sort
    com.badlogic.gdx.utils.Sort instance() -> instance
com.badlogic.gdx.utils.SortedIntList -> com.badlogic.gdx.utils.SortedIntList:
    com.badlogic.gdx.utils.SortedIntList$NodePool nodePool -> nodePool
    com.badlogic.gdx.utils.SortedIntList$Iterator iterator -> iterator
    int size -> size
    com.badlogic.gdx.utils.SortedIntList$Node first -> first
    java.lang.Object insert(int,java.lang.Object) -> insert
    java.lang.Object get(int) -> get
    void clear() -> clear
    int size() -> size
    java.util.Iterator iterator() -> iterator
com.badlogic.gdx.utils.SortedIntList$Iterator -> com.badlogic.gdx.utils.SortedIntList$Iterator:
    com.badlogic.gdx.utils.SortedIntList$Node position -> position
    com.badlogic.gdx.utils.SortedIntList$Node previousPosition -> previousPosition
    com.badlogic.gdx.utils.SortedIntList this$0 -> this$0
    boolean hasNext() -> hasNext
    com.badlogic.gdx.utils.SortedIntList$Node next() -> next
    void remove() -> remove
    com.badlogic.gdx.utils.SortedIntList$Iterator reset() -> reset
    java.lang.Object next() -> next
com.badlogic.gdx.utils.SortedIntList$Node -> com.badlogic.gdx.utils.SortedIntList$Node:
    com.badlogic.gdx.utils.SortedIntList$Node p -> p
    com.badlogic.gdx.utils.SortedIntList$Node n -> n
    java.lang.Object value -> value
    int index -> index
com.badlogic.gdx.utils.SortedIntList$NodePool -> com.badlogic.gdx.utils.SortedIntList$NodePool:
    com.badlogic.gdx.utils.SortedIntList$Node newObject() -> newObject
    com.badlogic.gdx.utils.SortedIntList$Node obtain(com.badlogic.gdx.utils.SortedIntList$Node,com.badlogic.gdx.utils.SortedIntList$Node,java.lang.Object,int) -> obtain
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.utils.StreamUtils -> com.badlogic.gdx.utils.StreamUtils:
    int DEFAULT_BUFFER_SIZE -> DEFAULT_BUFFER_SIZE
    byte[] EMPTY_BYTES -> EMPTY_BYTES
    void copyStream(java.io.InputStream,java.io.OutputStream) -> copyStream
    void copyStream(java.io.InputStream,java.io.OutputStream,int) -> copyStream
    byte[] copyStreamToByteArray(java.io.InputStream) -> copyStreamToByteArray
    byte[] copyStreamToByteArray(java.io.InputStream,int) -> copyStreamToByteArray
    java.lang.String copyStreamToString(java.io.InputStream) -> copyStreamToString
    java.lang.String copyStreamToString(java.io.InputStream,int) -> copyStreamToString
    void closeQuietly(java.io.Closeable) -> closeQuietly
com.badlogic.gdx.utils.StreamUtils$OptimizedByteArrayOutputStream -> com.badlogic.gdx.utils.StreamUtils$OptimizedByteArrayOutputStream:
    byte[] toByteArray() -> toByteArray
com.badlogic.gdx.utils.StringBuilder -> com.badlogic.gdx.utils.StringBuilder:
    int INITIAL_CAPACITY -> INITIAL_CAPACITY
    char[] chars -> chars
    int length -> length
    char[] digits -> digits
    int numChars(int,int) -> numChars
    int numChars(long,int) -> numChars
    char[] getValue() -> getValue
    void enlargeBuffer(int) -> enlargeBuffer
    void appendNull() -> appendNull
    void append0(char[]) -> append0
    void append0(char[],int,int) -> append0
    void append0(char) -> append0
    void append0(java.lang.String) -> append0
    void append0(java.lang.CharSequence,int,int) -> append0
    int capacity() -> capacity
    char charAt(int) -> charAt
    void delete0(int,int) -> delete0
    void deleteCharAt0(int) -> deleteCharAt0
    void ensureCapacity(int) -> ensureCapacity
    void getChars(int,int,char[],int) -> getChars
    void insert0(int,char[]) -> insert0
    void insert0(int,char[],int,int) -> insert0
    void insert0(int,char) -> insert0
    void insert0(int,java.lang.String) -> insert0
    void insert0(int,java.lang.CharSequence,int,int) -> insert0
    int length() -> length
    void move(int,int) -> move
    void replace0(int,int,java.lang.String) -> replace0
    void reverse0() -> reverse0
    void setCharAt(int,char) -> setCharAt
    void setLength(int) -> setLength
    java.lang.String substring(int) -> substring
    java.lang.String substring(int,int) -> substring
    java.lang.String toString() -> toString
    java.lang.CharSequence subSequence(int,int) -> subSequence
    int indexOf(java.lang.String) -> indexOf
    int indexOf(java.lang.String,int) -> indexOf
    int lastIndexOf(java.lang.String) -> lastIndexOf
    int lastIndexOf(java.lang.String,int) -> lastIndexOf
    void trimToSize() -> trimToSize
    int codePointAt(int) -> codePointAt
    int codePointBefore(int) -> codePointBefore
    int codePointCount(int,int) -> codePointCount
    int offsetByCodePoints(int,int) -> offsetByCodePoints
    com.badlogic.gdx.utils.StringBuilder append(boolean) -> append
    com.badlogic.gdx.utils.StringBuilder append(char) -> append
    com.badlogic.gdx.utils.StringBuilder append(int) -> append
    com.badlogic.gdx.utils.StringBuilder append(int,int) -> append
    com.badlogic.gdx.utils.StringBuilder append(int,int,char) -> append
    com.badlogic.gdx.utils.StringBuilder append(long) -> append
    com.badlogic.gdx.utils.StringBuilder append(long,int) -> append
    com.badlogic.gdx.utils.StringBuilder append(long,int,char) -> append
    com.badlogic.gdx.utils.StringBuilder append(float) -> append
    com.badlogic.gdx.utils.StringBuilder append(double) -> append
    com.badlogic.gdx.utils.StringBuilder append(java.lang.Object) -> append
    com.badlogic.gdx.utils.StringBuilder append(java.lang.String) -> append
    com.badlogic.gdx.utils.StringBuilder append(char[]) -> append
    com.badlogic.gdx.utils.StringBuilder append(char[],int,int) -> append
    com.badlogic.gdx.utils.StringBuilder append(java.lang.CharSequence) -> append
    com.badlogic.gdx.utils.StringBuilder append(com.badlogic.gdx.utils.StringBuilder) -> append
    com.badlogic.gdx.utils.StringBuilder append(java.lang.CharSequence,int,int) -> append
    com.badlogic.gdx.utils.StringBuilder append(com.badlogic.gdx.utils.StringBuilder,int,int) -> append
    com.badlogic.gdx.utils.StringBuilder appendCodePoint(int) -> appendCodePoint
    com.badlogic.gdx.utils.StringBuilder delete(int,int) -> delete
    com.badlogic.gdx.utils.StringBuilder deleteCharAt(int) -> deleteCharAt
    com.badlogic.gdx.utils.StringBuilder insert(int,boolean) -> insert
    com.badlogic.gdx.utils.StringBuilder insert(int,char) -> insert
    com.badlogic.gdx.utils.StringBuilder insert(int,int) -> insert
    com.badlogic.gdx.utils.StringBuilder insert(int,long) -> insert
    com.badlogic.gdx.utils.StringBuilder insert(int,float) -> insert
    com.badlogic.gdx.utils.StringBuilder insert(int,double) -> insert
    com.badlogic.gdx.utils.StringBuilder insert(int,java.lang.Object) -> insert
    com.badlogic.gdx.utils.StringBuilder insert(int,java.lang.String) -> insert
    com.badlogic.gdx.utils.StringBuilder insert(int,char[]) -> insert
    com.badlogic.gdx.utils.StringBuilder insert(int,char[],int,int) -> insert
    com.badlogic.gdx.utils.StringBuilder insert(int,java.lang.CharSequence) -> insert
    com.badlogic.gdx.utils.StringBuilder insert(int,java.lang.CharSequence,int,int) -> insert
    com.badlogic.gdx.utils.StringBuilder replace(int,int,java.lang.String) -> replace
    com.badlogic.gdx.utils.StringBuilder reverse() -> reverse
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Appendable append(char) -> append
    java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    java.lang.Appendable append(java.lang.CharSequence) -> append
com.badlogic.gdx.utils.TextFormatter -> com.badlogic.gdx.utils.TextFormatter:
    java.text.MessageFormat messageFormat -> messageFormat
    com.badlogic.gdx.utils.StringBuilder buffer -> buffer
    java.lang.String format(java.lang.String,java.lang.Object[]) -> format
    java.lang.String replaceEscapeChars(java.lang.String) -> replaceEscapeChars
    java.lang.String simpleFormat(java.lang.String,java.lang.Object[]) -> simpleFormat
com.badlogic.gdx.utils.TimSort -> com.badlogic.gdx.utils.TimSort:
    int MIN_MERGE -> MIN_MERGE
    java.lang.Object[] a -> a
    java.util.Comparator c -> c
    int MIN_GALLOP -> MIN_GALLOP
    int minGallop -> minGallop
    int INITIAL_TMP_STORAGE_LENGTH -> INITIAL_TMP_STORAGE_LENGTH
    java.lang.Object[] tmp -> tmp
    int tmpCount -> tmpCount
    int stackSize -> stackSize
    int[] runBase -> runBase
    int[] runLen -> runLen
    boolean DEBUG -> DEBUG
    void doSort(java.lang.Object[],java.util.Comparator,int,int) -> doSort
    void sort(java.lang.Object[],java.util.Comparator) -> sort
    void sort(java.lang.Object[],int,int,java.util.Comparator) -> sort
    void binarySort(java.lang.Object[],int,int,int,java.util.Comparator) -> binarySort
    int countRunAndMakeAscending(java.lang.Object[],int,int,java.util.Comparator) -> countRunAndMakeAscending
    void reverseRange(java.lang.Object[],int,int) -> reverseRange
    int minRunLength(int) -> minRunLength
    void pushRun(int,int) -> pushRun
    void mergeCollapse() -> mergeCollapse
    void mergeForceCollapse() -> mergeForceCollapse
    void mergeAt(int) -> mergeAt
    int gallopLeft(java.lang.Object,java.lang.Object[],int,int,int,java.util.Comparator) -> gallopLeft
    int gallopRight(java.lang.Object,java.lang.Object[],int,int,int,java.util.Comparator) -> gallopRight
    void mergeLo(int,int,int,int) -> mergeLo
    void mergeHi(int,int,int,int) -> mergeHi
    java.lang.Object[] ensureCapacity(int) -> ensureCapacity
    void rangeCheck(int,int,int) -> rangeCheck
com.badlogic.gdx.utils.TimeUtils -> com.badlogic.gdx.utils.TimeUtils:
    long nanosPerMilli -> nanosPerMilli
    long nanoTime() -> nanoTime
    long millis() -> millis
    long nanosToMillis(long) -> nanosToMillis
    long millisToNanos(long) -> millisToNanos
    long timeSinceNanos(long) -> timeSinceNanos
    long timeSinceMillis(long) -> timeSinceMillis
com.badlogic.gdx.utils.Timer -> com.badlogic.gdx.utils.Timer:
    com.badlogic.gdx.utils.Array instances -> instances
    com.badlogic.gdx.utils.Timer$TimerThread thread -> thread
    int CANCELLED -> CANCELLED
    int FOREVER -> FOREVER
    com.badlogic.gdx.utils.Timer instance -> instance
    com.badlogic.gdx.utils.Array tasks -> tasks
    com.badlogic.gdx.utils.Timer instance() -> instance
    void postTask(com.badlogic.gdx.utils.Timer$Task) -> postTask
    void scheduleTask(com.badlogic.gdx.utils.Timer$Task,float) -> scheduleTask
    void scheduleTask(com.badlogic.gdx.utils.Timer$Task,float,float) -> scheduleTask
    void scheduleTask(com.badlogic.gdx.utils.Timer$Task,float,float,int) -> scheduleTask
    void stop() -> stop
    void start() -> start
    void clear() -> clear
    long update(long,long) -> update
    void delay(long) -> delay
    void wake() -> wake
    void post(com.badlogic.gdx.utils.Timer$Task) -> post
    void schedule(com.badlogic.gdx.utils.Timer$Task,float) -> schedule
    void schedule(com.badlogic.gdx.utils.Timer$Task,float,float) -> schedule
    void schedule(com.badlogic.gdx.utils.Timer$Task,float,float,int) -> schedule
    void checkStatics() -> checkStatics
com.badlogic.gdx.utils.Timer$Task -> com.badlogic.gdx.utils.Timer$Task:
    long executeTimeMillis -> executeTimeMillis
    long intervalMillis -> intervalMillis
    int repeatCount -> repeatCount
    void run() -> run
    void cancel() -> cancel
    boolean isScheduled() -> isScheduled
    long getExecuteTimeMillis() -> getExecuteTimeMillis
com.badlogic.gdx.utils.Timer$TimerThread -> com.badlogic.gdx.utils.Timer$TimerThread:
    com.badlogic.gdx.Application app -> app
    long pauseMillis -> pauseMillis
    void run() -> run
    void resume() -> resume
    void pause() -> pause
    void dispose() -> dispose
com.badlogic.gdx.utils.UBJsonReader -> com.badlogic.gdx.utils.UBJsonReader:
    boolean oldFormat -> oldFormat
    com.badlogic.gdx.utils.JsonValue parse(java.io.InputStream) -> parse
    com.badlogic.gdx.utils.JsonValue parse(com.badlogic.gdx.files.FileHandle) -> parse
    com.badlogic.gdx.utils.JsonValue parse(java.io.DataInputStream) -> parse
    com.badlogic.gdx.utils.JsonValue parse(java.io.DataInputStream,byte) -> parse
    com.badlogic.gdx.utils.JsonValue parseArray(java.io.DataInputStream) -> parseArray
    com.badlogic.gdx.utils.JsonValue parseObject(java.io.DataInputStream) -> parseObject
    com.badlogic.gdx.utils.JsonValue parseData(java.io.DataInputStream,byte) -> parseData
    java.lang.String parseString(java.io.DataInputStream,byte) -> parseString
    java.lang.String parseString(java.io.DataInputStream,boolean,byte) -> parseString
    long parseSize(java.io.DataInputStream,boolean,long) -> parseSize
    long parseSize(java.io.DataInputStream,byte,boolean,long) -> parseSize
    short readUChar(java.io.DataInputStream) -> readUChar
    int readUShort(java.io.DataInputStream) -> readUShort
    long readUInt(java.io.DataInputStream) -> readUInt
    java.lang.String readString(java.io.DataInputStream,long) -> readString
com.badlogic.gdx.utils.UBJsonWriter -> com.badlogic.gdx.utils.UBJsonWriter:
    java.io.DataOutputStream out -> out
    com.badlogic.gdx.utils.UBJsonWriter$JsonObject current -> current
    boolean named -> named
    com.badlogic.gdx.utils.Array stack -> stack
    com.badlogic.gdx.utils.UBJsonWriter object() -> object
    com.badlogic.gdx.utils.UBJsonWriter object(java.lang.String) -> object
    com.badlogic.gdx.utils.UBJsonWriter array() -> array
    com.badlogic.gdx.utils.UBJsonWriter array(java.lang.String) -> array
    com.badlogic.gdx.utils.UBJsonWriter name(java.lang.String) -> name
    com.badlogic.gdx.utils.UBJsonWriter value(byte) -> value
    com.badlogic.gdx.utils.UBJsonWriter value(short) -> value
    com.badlogic.gdx.utils.UBJsonWriter value(int) -> value
    com.badlogic.gdx.utils.UBJsonWriter value(long) -> value
    com.badlogic.gdx.utils.UBJsonWriter value(float) -> value
    com.badlogic.gdx.utils.UBJsonWriter value(double) -> value
    com.badlogic.gdx.utils.UBJsonWriter value(boolean) -> value
    com.badlogic.gdx.utils.UBJsonWriter value(char) -> value
    com.badlogic.gdx.utils.UBJsonWriter value(java.lang.String) -> value
    com.badlogic.gdx.utils.UBJsonWriter value(byte[]) -> value
    com.badlogic.gdx.utils.UBJsonWriter value(short[]) -> value
    com.badlogic.gdx.utils.UBJsonWriter value(int[]) -> value
    com.badlogic.gdx.utils.UBJsonWriter value(long[]) -> value
    com.badlogic.gdx.utils.UBJsonWriter value(float[]) -> value
    com.badlogic.gdx.utils.UBJsonWriter value(double[]) -> value
    com.badlogic.gdx.utils.UBJsonWriter value(boolean[]) -> value
    com.badlogic.gdx.utils.UBJsonWriter value(char[]) -> value
    com.badlogic.gdx.utils.UBJsonWriter value(java.lang.String[]) -> value
    com.badlogic.gdx.utils.UBJsonWriter value(java.lang.Object) -> value
    com.badlogic.gdx.utils.UBJsonWriter value() -> value
    com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,byte) -> set
    com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,short) -> set
    com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,int) -> set
    com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,long) -> set
    com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,float) -> set
    com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,double) -> set
    com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,boolean) -> set
    com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,char) -> set
    com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,java.lang.String) -> set
    com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,byte[]) -> set
    com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,short[]) -> set
    com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,int[]) -> set
    com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,long[]) -> set
    com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,float[]) -> set
    com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,double[]) -> set
    com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,boolean[]) -> set
    com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,char[]) -> set
    com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,java.lang.String[]) -> set
    com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String) -> set
    void checkName() -> checkName
    com.badlogic.gdx.utils.UBJsonWriter pop() -> pop
    com.badlogic.gdx.utils.UBJsonWriter pop(boolean) -> pop
    void flush() -> flush
    void close() -> close
com.badlogic.gdx.utils.UBJsonWriter$JsonObject -> com.badlogic.gdx.utils.UBJsonWriter$JsonObject:
    boolean array -> array
    com.badlogic.gdx.utils.UBJsonWriter this$0 -> this$0
    void close() -> close
com.badlogic.gdx.utils.XmlReader -> com.badlogic.gdx.utils.XmlReader:
    com.badlogic.gdx.utils.Array elements -> elements
    com.badlogic.gdx.utils.XmlReader$Element root -> root
    com.badlogic.gdx.utils.XmlReader$Element current -> current
    com.badlogic.gdx.utils.StringBuilder textBuffer -> textBuffer
    byte[] _xml_actions -> _xml_actions
    byte[] _xml_key_offsets -> _xml_key_offsets
    char[] _xml_trans_keys -> _xml_trans_keys
    byte[] _xml_single_lengths -> _xml_single_lengths
    byte[] _xml_range_lengths -> _xml_range_lengths
    short[] _xml_index_offsets -> _xml_index_offsets
    byte[] _xml_indicies -> _xml_indicies
    byte[] _xml_trans_targs -> _xml_trans_targs
    byte[] _xml_trans_actions -> _xml_trans_actions
    int xml_start -> xml_start
    int xml_first_final -> xml_first_final
    int xml_error -> xml_error
    int xml_en_elementBody -> xml_en_elementBody
    int xml_en_main -> xml_en_main
    com.badlogic.gdx.utils.XmlReader$Element parse(java.lang.String) -> parse
    com.badlogic.gdx.utils.XmlReader$Element parse(java.io.Reader) -> parse
    com.badlogic.gdx.utils.XmlReader$Element parse(java.io.InputStream) -> parse
    com.badlogic.gdx.utils.XmlReader$Element parse(com.badlogic.gdx.files.FileHandle) -> parse
    com.badlogic.gdx.utils.XmlReader$Element parse(char[],int,int) -> parse
    byte[] init__xml_actions_0() -> init__xml_actions_0
    byte[] init__xml_key_offsets_0() -> init__xml_key_offsets_0
    char[] init__xml_trans_keys_0() -> init__xml_trans_keys_0
    byte[] init__xml_single_lengths_0() -> init__xml_single_lengths_0
    byte[] init__xml_range_lengths_0() -> init__xml_range_lengths_0
    short[] init__xml_index_offsets_0() -> init__xml_index_offsets_0
    byte[] init__xml_indicies_0() -> init__xml_indicies_0
    byte[] init__xml_trans_targs_0() -> init__xml_trans_targs_0
    byte[] init__xml_trans_actions_0() -> init__xml_trans_actions_0
    void open(java.lang.String) -> open
    void attribute(java.lang.String,java.lang.String) -> attribute
    java.lang.String entity(java.lang.String) -> entity
    void text(java.lang.String) -> text
    void close() -> close
com.badlogic.gdx.utils.XmlReader$Element -> com.badlogic.gdx.utils.XmlReader$Element:
    java.lang.String name -> name
    com.badlogic.gdx.utils.ObjectMap attributes -> attributes
    com.badlogic.gdx.utils.Array children -> children
    java.lang.String text -> text
    com.badlogic.gdx.utils.XmlReader$Element parent -> parent
    java.lang.String getName() -> getName
    com.badlogic.gdx.utils.ObjectMap getAttributes() -> getAttributes
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    java.lang.String getAttribute(java.lang.String,java.lang.String) -> getAttribute
    void setAttribute(java.lang.String,java.lang.String) -> setAttribute
    int getChildCount() -> getChildCount
    com.badlogic.gdx.utils.XmlReader$Element getChild(int) -> getChild
    void addChild(com.badlogic.gdx.utils.XmlReader$Element) -> addChild
    java.lang.String getText() -> getText
    void setText(java.lang.String) -> setText
    void removeChild(int) -> removeChild
    void removeChild(com.badlogic.gdx.utils.XmlReader$Element) -> removeChild
    void remove() -> remove
    com.badlogic.gdx.utils.XmlReader$Element getParent() -> getParent
    java.lang.String toString() -> toString
    java.lang.String toString(java.lang.String) -> toString
    com.badlogic.gdx.utils.XmlReader$Element getChildByName(java.lang.String) -> getChildByName
    com.badlogic.gdx.utils.XmlReader$Element getChildByNameRecursive(java.lang.String) -> getChildByNameRecursive
    com.badlogic.gdx.utils.Array getChildrenByName(java.lang.String) -> getChildrenByName
    com.badlogic.gdx.utils.Array getChildrenByNameRecursively(java.lang.String) -> getChildrenByNameRecursively
    void getChildrenByNameRecursively(java.lang.String,com.badlogic.gdx.utils.Array) -> getChildrenByNameRecursively
    float getFloatAttribute(java.lang.String) -> getFloatAttribute
    float getFloatAttribute(java.lang.String,float) -> getFloatAttribute
    int getIntAttribute(java.lang.String) -> getIntAttribute
    int getIntAttribute(java.lang.String,int) -> getIntAttribute
    boolean getBooleanAttribute(java.lang.String) -> getBooleanAttribute
    boolean getBooleanAttribute(java.lang.String,boolean) -> getBooleanAttribute
    java.lang.String get(java.lang.String) -> get
    java.lang.String get(java.lang.String,java.lang.String) -> get
    int getInt(java.lang.String) -> getInt
    int getInt(java.lang.String,int) -> getInt
    float getFloat(java.lang.String) -> getFloat
    float getFloat(java.lang.String,float) -> getFloat
    boolean getBoolean(java.lang.String) -> getBoolean
    boolean getBoolean(java.lang.String,boolean) -> getBoolean
com.badlogic.gdx.utils.XmlWriter -> com.badlogic.gdx.utils.XmlWriter:
    java.io.Writer writer -> writer
    com.badlogic.gdx.utils.Array stack -> stack
    java.lang.String currentElement -> currentElement
    boolean indentNextClose -> indentNextClose
    int indent -> indent
    void indent() -> indent
    com.badlogic.gdx.utils.XmlWriter element(java.lang.String) -> element
    com.badlogic.gdx.utils.XmlWriter element(java.lang.String,java.lang.Object) -> element
    boolean startElementContent() -> startElementContent
    com.badlogic.gdx.utils.XmlWriter attribute(java.lang.String,java.lang.Object) -> attribute
    com.badlogic.gdx.utils.XmlWriter text(java.lang.Object) -> text
    com.badlogic.gdx.utils.XmlWriter pop() -> pop
    void close() -> close
    void write(char[],int,int) -> write
    void flush() -> flush
com.badlogic.gdx.utils.async.AsyncExecutor -> com.badlogic.gdx.utils.async.AsyncExecutor:
    java.util.concurrent.ExecutorService executor -> executor
    com.badlogic.gdx.utils.async.AsyncResult submit(com.badlogic.gdx.utils.async.AsyncTask) -> submit
    void dispose() -> dispose
com.badlogic.gdx.utils.async.AsyncExecutor$1 -> com.badlogic.gdx.utils.async.AsyncExecutor$1:
    com.badlogic.gdx.utils.async.AsyncExecutor this$0 -> this$0
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.badlogic.gdx.utils.async.AsyncExecutor$2 -> com.badlogic.gdx.utils.async.AsyncExecutor$2:
    com.badlogic.gdx.utils.async.AsyncTask val$task -> val$task
    com.badlogic.gdx.utils.async.AsyncExecutor this$0 -> this$0
    java.lang.Object call() -> call
com.badlogic.gdx.utils.async.AsyncResult -> com.badlogic.gdx.utils.async.AsyncResult:
    java.util.concurrent.Future future -> future
    boolean isDone() -> isDone
    java.lang.Object get() -> get
com.badlogic.gdx.utils.async.AsyncTask -> com.badlogic.gdx.utils.async.AsyncTask:
    java.lang.Object call() -> call
com.badlogic.gdx.utils.async.ThreadUtils -> com.badlogic.gdx.utils.async.ThreadUtils:
    void yield() -> yield
com.badlogic.gdx.utils.compression.CRC -> com.badlogic.gdx.utils.compression.CRC:
    int[] Table -> Table
    int _value -> _value
    void Init() -> Init
    void Update(byte[],int,int) -> Update
    void Update(byte[]) -> Update
    void UpdateByte(int) -> UpdateByte
    int GetDigest() -> GetDigest
com.badlogic.gdx.utils.compression.ICodeProgress -> com.badlogic.gdx.utils.compression.ICodeProgress:
    void SetProgress(long,long) -> SetProgress
com.badlogic.gdx.utils.compression.Lzma -> com.badlogic.gdx.utils.compression.Lzma:
    void compress(java.io.InputStream,java.io.OutputStream) -> compress
    void decompress(java.io.InputStream,java.io.OutputStream) -> decompress
com.badlogic.gdx.utils.compression.Lzma$CommandLine -> com.badlogic.gdx.utils.compression.Lzma$CommandLine:
    int kEncode -> kEncode
    int kDecode -> kDecode
    int kBenchmak -> kBenchmak
    int Command -> Command
    int NumBenchmarkPasses -> NumBenchmarkPasses
    int DictionarySize -> DictionarySize
    boolean DictionarySizeIsDefined -> DictionarySizeIsDefined
    int Lc -> Lc
    int Lp -> Lp
    int Pb -> Pb
    int Fb -> Fb
    boolean FbIsDefined -> FbIsDefined
    boolean Eos -> Eos
    int Algorithm -> Algorithm
    int MatchFinder -> MatchFinder
    java.lang.String InFile -> InFile
    java.lang.String OutFile -> OutFile
com.badlogic.gdx.utils.compression.lz.BinTree -> com.badlogic.gdx.utils.compression.lz.BinTree:
    int _cyclicBufferPos -> _cyclicBufferPos
    int _cyclicBufferSize -> _cyclicBufferSize
    int _matchMaxLen -> _matchMaxLen
    int[] _son -> _son
    int[] _hash -> _hash
    int _cutValue -> _cutValue
    int _hashMask -> _hashMask
    int _hashSizeSum -> _hashSizeSum
    boolean HASH_ARRAY -> HASH_ARRAY
    int kHash2Size -> kHash2Size
    int kHash3Size -> kHash3Size
    int kBT2HashSize -> kBT2HashSize
    int kStartMaxLen -> kStartMaxLen
    int kHash3Offset -> kHash3Offset
    int kEmptyHashValue -> kEmptyHashValue
    int kMaxValForNormalize -> kMaxValForNormalize
    int kNumHashDirectBytes -> kNumHashDirectBytes
    int kMinMatchCheck -> kMinMatchCheck
    int kFixHashSize -> kFixHashSize
    int[] CrcTable -> CrcTable
    void SetType(int) -> SetType
    void Init() -> Init
    void MovePos() -> MovePos
    boolean Create(int,int,int,int) -> Create
    int GetMatches(int[]) -> GetMatches
    void Skip(int) -> Skip
    void NormalizeLinks(int[],int,int) -> NormalizeLinks
    void Normalize() -> Normalize
    void SetCutValue(int) -> SetCutValue
com.badlogic.gdx.utils.compression.lz.InWindow -> com.badlogic.gdx.utils.compression.lz.InWindow:
    byte[] _bufferBase -> _bufferBase
    java.io.InputStream _stream -> _stream
    int _posLimit -> _posLimit
    boolean _streamEndWasReached -> _streamEndWasReached
    int _pointerToLastSafePosition -> _pointerToLastSafePosition
    int _bufferOffset -> _bufferOffset
    int _blockSize -> _blockSize
    int _pos -> _pos
    int _keepSizeBefore -> _keepSizeBefore
    int _keepSizeAfter -> _keepSizeAfter
    int _streamPos -> _streamPos
    void MoveBlock() -> MoveBlock
    void ReadBlock() -> ReadBlock
    void Free() -> Free
    void Create(int,int,int) -> Create
    void SetStream(java.io.InputStream) -> SetStream
    void ReleaseStream() -> ReleaseStream
    void Init() -> Init
    void MovePos() -> MovePos
    byte GetIndexByte(int) -> GetIndexByte
    int GetMatchLen(int,int,int) -> GetMatchLen
    int GetNumAvailableBytes() -> GetNumAvailableBytes
    void ReduceOffsets(int) -> ReduceOffsets
com.badlogic.gdx.utils.compression.lz.OutWindow -> com.badlogic.gdx.utils.compression.lz.OutWindow:
    byte[] _buffer -> _buffer
    int _pos -> _pos
    int _windowSize -> _windowSize
    int _streamPos -> _streamPos
    java.io.OutputStream _stream -> _stream
    void Create(int) -> Create
    void SetStream(java.io.OutputStream) -> SetStream
    void ReleaseStream() -> ReleaseStream
    void Init(boolean) -> Init
    void Flush() -> Flush
    void CopyBlock(int,int) -> CopyBlock
    void PutByte(byte) -> PutByte
    byte GetByte(int) -> GetByte
com.badlogic.gdx.utils.compression.lzma.Base -> com.badlogic.gdx.utils.compression.lzma.Base:
    int kNumRepDistances -> kNumRepDistances
    int kNumStates -> kNumStates
    int kNumPosSlotBits -> kNumPosSlotBits
    int kDicLogSizeMin -> kDicLogSizeMin
    int kNumLenToPosStatesBits -> kNumLenToPosStatesBits
    int kNumLenToPosStates -> kNumLenToPosStates
    int kMatchMinLen -> kMatchMinLen
    int kNumAlignBits -> kNumAlignBits
    int kAlignTableSize -> kAlignTableSize
    int kAlignMask -> kAlignMask
    int kStartPosModelIndex -> kStartPosModelIndex
    int kEndPosModelIndex -> kEndPosModelIndex
    int kNumPosModels -> kNumPosModels
    int kNumFullDistances -> kNumFullDistances
    int kNumLitPosStatesBitsEncodingMax -> kNumLitPosStatesBitsEncodingMax
    int kNumLitContextBitsMax -> kNumLitContextBitsMax
    int kNumPosStatesBitsMax -> kNumPosStatesBitsMax
    int kNumPosStatesMax -> kNumPosStatesMax
    int kNumPosStatesBitsEncodingMax -> kNumPosStatesBitsEncodingMax
    int kNumPosStatesEncodingMax -> kNumPosStatesEncodingMax
    int kNumLowLenBits -> kNumLowLenBits
    int kNumMidLenBits -> kNumMidLenBits
    int kNumHighLenBits -> kNumHighLenBits
    int kNumLowLenSymbols -> kNumLowLenSymbols
    int kNumMidLenSymbols -> kNumMidLenSymbols
    int kNumLenSymbols -> kNumLenSymbols
    int kMatchMaxLen -> kMatchMaxLen
    int StateInit() -> StateInit
    int StateUpdateChar(int) -> StateUpdateChar
    int StateUpdateMatch(int) -> StateUpdateMatch
    int StateUpdateRep(int) -> StateUpdateRep
    int StateUpdateShortRep(int) -> StateUpdateShortRep
    boolean StateIsCharState(int) -> StateIsCharState
    int GetLenToPosState(int) -> GetLenToPosState
com.badlogic.gdx.utils.compression.lzma.Decoder -> com.badlogic.gdx.utils.compression.lzma.Decoder:
    com.badlogic.gdx.utils.compression.lz.OutWindow m_OutWindow -> m_OutWindow
    com.badlogic.gdx.utils.compression.rangecoder.Decoder m_RangeDecoder -> m_RangeDecoder
    short[] m_IsMatchDecoders -> m_IsMatchDecoders
    short[] m_IsRepDecoders -> m_IsRepDecoders
    short[] m_IsRepG0Decoders -> m_IsRepG0Decoders
    short[] m_IsRepG1Decoders -> m_IsRepG1Decoders
    short[] m_IsRepG2Decoders -> m_IsRepG2Decoders
    short[] m_IsRep0LongDecoders -> m_IsRep0LongDecoders
    com.badlogic.gdx.utils.compression.rangecoder.BitTreeDecoder[] m_PosSlotDecoder -> m_PosSlotDecoder
    short[] m_PosDecoders -> m_PosDecoders
    com.badlogic.gdx.utils.compression.rangecoder.BitTreeDecoder m_PosAlignDecoder -> m_PosAlignDecoder
    com.badlogic.gdx.utils.compression.lzma.Decoder$LenDecoder m_LenDecoder -> m_LenDecoder
    com.badlogic.gdx.utils.compression.lzma.Decoder$LenDecoder m_RepLenDecoder -> m_RepLenDecoder
    com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder m_LiteralDecoder -> m_LiteralDecoder
    int m_DictionarySize -> m_DictionarySize
    int m_DictionarySizeCheck -> m_DictionarySizeCheck
    int m_PosStateMask -> m_PosStateMask
    boolean SetDictionarySize(int) -> SetDictionarySize
    boolean SetLcLpPb(int,int,int) -> SetLcLpPb
    void Init() -> Init
    boolean Code(java.io.InputStream,java.io.OutputStream,long) -> Code
    boolean SetDecoderProperties(byte[]) -> SetDecoderProperties
com.badlogic.gdx.utils.compression.lzma.Decoder$LenDecoder -> com.badlogic.gdx.utils.compression.lzma.Decoder$LenDecoder:
    short[] m_Choice -> m_Choice
    com.badlogic.gdx.utils.compression.rangecoder.BitTreeDecoder[] m_LowCoder -> m_LowCoder
    com.badlogic.gdx.utils.compression.rangecoder.BitTreeDecoder[] m_MidCoder -> m_MidCoder
    com.badlogic.gdx.utils.compression.rangecoder.BitTreeDecoder m_HighCoder -> m_HighCoder
    int m_NumPosStates -> m_NumPosStates
    com.badlogic.gdx.utils.compression.lzma.Decoder this$0 -> this$0
    void Create(int) -> Create
    void Init() -> Init
    int Decode(com.badlogic.gdx.utils.compression.rangecoder.Decoder,int) -> Decode
com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder -> com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder:
    com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder$Decoder2[] m_Coders -> m_Coders
    int m_NumPrevBits -> m_NumPrevBits
    int m_NumPosBits -> m_NumPosBits
    int m_PosMask -> m_PosMask
    com.badlogic.gdx.utils.compression.lzma.Decoder this$0 -> this$0
    void Create(int,int) -> Create
    void Init() -> Init
    com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder$Decoder2 GetDecoder(int,byte) -> GetDecoder
com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder$Decoder2 -> com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder$Decoder2:
    short[] m_Decoders -> m_Decoders
    com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder this$1 -> this$1
    void Init() -> Init
    byte DecodeNormal(com.badlogic.gdx.utils.compression.rangecoder.Decoder) -> DecodeNormal
    byte DecodeWithMatchByte(com.badlogic.gdx.utils.compression.rangecoder.Decoder,byte) -> DecodeWithMatchByte
com.badlogic.gdx.utils.compression.lzma.Encoder -> com.badlogic.gdx.utils.compression.lzma.Encoder:
    int EMatchFinderTypeBT2 -> EMatchFinderTypeBT2
    int EMatchFinderTypeBT4 -> EMatchFinderTypeBT4
    int kIfinityPrice -> kIfinityPrice
    byte[] g_FastPos -> g_FastPos
    int _state -> _state
    byte _previousByte -> _previousByte
    int[] _repDistances -> _repDistances
    int kDefaultDictionaryLogSize -> kDefaultDictionaryLogSize
    int kNumFastBytesDefault -> kNumFastBytesDefault
    int kNumLenSpecSymbols -> kNumLenSpecSymbols
    int kNumOpts -> kNumOpts
    com.badlogic.gdx.utils.compression.lzma.Encoder$Optimal[] _optimum -> _optimum
    com.badlogic.gdx.utils.compression.lz.BinTree _matchFinder -> _matchFinder
    com.badlogic.gdx.utils.compression.rangecoder.Encoder _rangeEncoder -> _rangeEncoder
    short[] _isMatch -> _isMatch
    short[] _isRep -> _isRep
    short[] _isRepG0 -> _isRepG0
    short[] _isRepG1 -> _isRepG1
    short[] _isRepG2 -> _isRepG2
    short[] _isRep0Long -> _isRep0Long
    com.badlogic.gdx.utils.compression.rangecoder.BitTreeEncoder[] _posSlotEncoder -> _posSlotEncoder
    short[] _posEncoders -> _posEncoders
    com.badlogic.gdx.utils.compression.rangecoder.BitTreeEncoder _posAlignEncoder -> _posAlignEncoder
    com.badlogic.gdx.utils.compression.lzma.Encoder$LenPriceTableEncoder _lenEncoder -> _lenEncoder
    com.badlogic.gdx.utils.compression.lzma.Encoder$LenPriceTableEncoder _repMatchLenEncoder -> _repMatchLenEncoder
    com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder _literalEncoder -> _literalEncoder
    int[] _matchDistances -> _matchDistances
    int _numFastBytes -> _numFastBytes
    int _longestMatchLength -> _longestMatchLength
    int _numDistancePairs -> _numDistancePairs
    int _additionalOffset -> _additionalOffset
    int _optimumEndIndex -> _optimumEndIndex
    int _optimumCurrentIndex -> _optimumCurrentIndex
    boolean _longestMatchWasFound -> _longestMatchWasFound
    int[] _posSlotPrices -> _posSlotPrices
    int[] _distancesPrices -> _distancesPrices
    int[] _alignPrices -> _alignPrices
    int _alignPriceCount -> _alignPriceCount
    int _distTableSize -> _distTableSize
    int _posStateBits -> _posStateBits
    int _posStateMask -> _posStateMask
    int _numLiteralPosStateBits -> _numLiteralPosStateBits
    int _numLiteralContextBits -> _numLiteralContextBits
    int _dictionarySize -> _dictionarySize
    int _dictionarySizePrev -> _dictionarySizePrev
    int _numFastBytesPrev -> _numFastBytesPrev
    long nowPos64 -> nowPos64
    boolean _finished -> _finished
    java.io.InputStream _inStream -> _inStream
    int _matchFinderType -> _matchFinderType
    boolean _writeEndMark -> _writeEndMark
    boolean _needReleaseMFStream -> _needReleaseMFStream
    int[] reps -> reps
    int[] repLens -> repLens
    int backRes -> backRes
    long[] processedInSize -> processedInSize
    long[] processedOutSize -> processedOutSize
    boolean[] finished -> finished
    int kPropSize -> kPropSize
    byte[] properties -> properties
    int[] tempPrices -> tempPrices
    int _matchPriceCount -> _matchPriceCount
    int GetPosSlot(int) -> GetPosSlot
    int GetPosSlot2(int) -> GetPosSlot2
    void BaseInit() -> BaseInit
    void Create() -> Create
    void SetWriteEndMarkerMode(boolean) -> SetWriteEndMarkerMode
    void Init() -> Init
    int ReadMatchDistances() -> ReadMatchDistances
    void MovePos(int) -> MovePos
    int GetRepLen1Price(int,int) -> GetRepLen1Price
    int GetPureRepPrice(int,int,int) -> GetPureRepPrice
    int GetRepPrice(int,int,int,int) -> GetRepPrice
    int GetPosLenPrice(int,int,int) -> GetPosLenPrice
    int Backward(int) -> Backward
    int GetOptimum(int) -> GetOptimum
    boolean ChangePair(int,int) -> ChangePair
    void WriteEndMarker(int) -> WriteEndMarker
    void Flush(int) -> Flush
    void CodeOneBlock(long[],long[],boolean[]) -> CodeOneBlock
    void ReleaseMFStream() -> ReleaseMFStream
    void SetOutStream(java.io.OutputStream) -> SetOutStream
    void ReleaseOutStream() -> ReleaseOutStream
    void ReleaseStreams() -> ReleaseStreams
    void SetStreams(java.io.InputStream,java.io.OutputStream,long,long) -> SetStreams
    void Code(java.io.InputStream,java.io.OutputStream,long,long,com.badlogic.gdx.utils.compression.ICodeProgress) -> Code
    void WriteCoderProperties(java.io.OutputStream) -> WriteCoderProperties
    void FillDistancesPrices() -> FillDistancesPrices
    void FillAlignPrices() -> FillAlignPrices
    boolean SetAlgorithm(int) -> SetAlgorithm
    boolean SetDictionarySize(int) -> SetDictionarySize
    boolean SetNumFastBytes(int) -> SetNumFastBytes
    boolean SetMatchFinder(int) -> SetMatchFinder
    boolean SetLcLpPb(int,int,int) -> SetLcLpPb
    void SetEndMarkerMode(boolean) -> SetEndMarkerMode
com.badlogic.gdx.utils.compression.lzma.Encoder$LenEncoder -> com.badlogic.gdx.utils.compression.lzma.Encoder$LenEncoder:
    short[] _choice -> _choice
    com.badlogic.gdx.utils.compression.rangecoder.BitTreeEncoder[] _lowCoder -> _lowCoder
    com.badlogic.gdx.utils.compression.rangecoder.BitTreeEncoder[] _midCoder -> _midCoder
    com.badlogic.gdx.utils.compression.rangecoder.BitTreeEncoder _highCoder -> _highCoder
    com.badlogic.gdx.utils.compression.lzma.Encoder this$0 -> this$0
    void Init(int) -> Init
    void Encode(com.badlogic.gdx.utils.compression.rangecoder.Encoder,int,int) -> Encode
    void SetPrices(int,int,int[],int) -> SetPrices
com.badlogic.gdx.utils.compression.lzma.Encoder$LenPriceTableEncoder -> com.badlogic.gdx.utils.compression.lzma.Encoder$LenPriceTableEncoder:
    int[] _prices -> _prices
    int _tableSize -> _tableSize
    int[] _counters -> _counters
    com.badlogic.gdx.utils.compression.lzma.Encoder this$0 -> this$0
    void SetTableSize(int) -> SetTableSize
    int GetPrice(int,int) -> GetPrice
    void UpdateTable(int) -> UpdateTable
    void UpdateTables(int) -> UpdateTables
    void Encode(com.badlogic.gdx.utils.compression.rangecoder.Encoder,int,int) -> Encode
com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder -> com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder:
    com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder$Encoder2[] m_Coders -> m_Coders
    int m_NumPrevBits -> m_NumPrevBits
    int m_NumPosBits -> m_NumPosBits
    int m_PosMask -> m_PosMask
    com.badlogic.gdx.utils.compression.lzma.Encoder this$0 -> this$0
    void Create(int,int) -> Create
    void Init() -> Init
    com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder$Encoder2 GetSubCoder(int,byte) -> GetSubCoder
com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder$Encoder2 -> com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder$Encoder2:
    short[] m_Encoders -> m_Encoders
    com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder this$1 -> this$1
    void Init() -> Init
    void Encode(com.badlogic.gdx.utils.compression.rangecoder.Encoder,byte) -> Encode
    void EncodeMatched(com.badlogic.gdx.utils.compression.rangecoder.Encoder,byte,byte) -> EncodeMatched
    int GetPrice(boolean,byte,byte) -> GetPrice
com.badlogic.gdx.utils.compression.lzma.Encoder$Optimal -> com.badlogic.gdx.utils.compression.lzma.Encoder$Optimal:
    int State -> State
    boolean Prev1IsChar -> Prev1IsChar
    boolean Prev2 -> Prev2
    int PosPrev2 -> PosPrev2
    int BackPrev2 -> BackPrev2
    int Price -> Price
    int PosPrev -> PosPrev
    int BackPrev -> BackPrev
    int Backs0 -> Backs0
    int Backs1 -> Backs1
    int Backs2 -> Backs2
    int Backs3 -> Backs3
    com.badlogic.gdx.utils.compression.lzma.Encoder this$0 -> this$0
    void MakeAsChar() -> MakeAsChar
    void MakeAsShortRep() -> MakeAsShortRep
    boolean IsShortRep() -> IsShortRep
com.badlogic.gdx.utils.compression.rangecoder.BitTreeDecoder -> com.badlogic.gdx.utils.compression.rangecoder.BitTreeDecoder:
    short[] Models -> Models
    int NumBitLevels -> NumBitLevels
    void Init() -> Init
    int Decode(com.badlogic.gdx.utils.compression.rangecoder.Decoder) -> Decode
    int ReverseDecode(com.badlogic.gdx.utils.compression.rangecoder.Decoder) -> ReverseDecode
    int ReverseDecode(short[],int,com.badlogic.gdx.utils.compression.rangecoder.Decoder,int) -> ReverseDecode
com.badlogic.gdx.utils.compression.rangecoder.BitTreeEncoder -> com.badlogic.gdx.utils.compression.rangecoder.BitTreeEncoder:
    short[] Models -> Models
    int NumBitLevels -> NumBitLevels
    void Init() -> Init
    void Encode(com.badlogic.gdx.utils.compression.rangecoder.Encoder,int) -> Encode
    void ReverseEncode(com.badlogic.gdx.utils.compression.rangecoder.Encoder,int) -> ReverseEncode
    int GetPrice(int) -> GetPrice
    int ReverseGetPrice(int) -> ReverseGetPrice
    int ReverseGetPrice(short[],int,int,int) -> ReverseGetPrice
    void ReverseEncode(short[],int,com.badlogic.gdx.utils.compression.rangecoder.Encoder,int,int) -> ReverseEncode
com.badlogic.gdx.utils.compression.rangecoder.Decoder -> com.badlogic.gdx.utils.compression.rangecoder.Decoder:
    int kTopMask -> kTopMask
    int kNumBitModelTotalBits -> kNumBitModelTotalBits
    int kBitModelTotal -> kBitModelTotal
    int kNumMoveBits -> kNumMoveBits
    int Range -> Range
    int Code -> Code
    java.io.InputStream Stream -> Stream
    void SetStream(java.io.InputStream) -> SetStream
    void ReleaseStream() -> ReleaseStream
    void Init() -> Init
    int DecodeDirectBits(int) -> DecodeDirectBits
    int DecodeBit(short[],int) -> DecodeBit
    void InitBitModels(short[]) -> InitBitModels
com.badlogic.gdx.utils.compression.rangecoder.Encoder -> com.badlogic.gdx.utils.compression.rangecoder.Encoder:
    int kTopMask -> kTopMask
    int kNumBitModelTotalBits -> kNumBitModelTotalBits
    int kBitModelTotal -> kBitModelTotal
    int kNumMoveBits -> kNumMoveBits
    java.io.OutputStream Stream -> Stream
    long Low -> Low
    int Range -> Range
    int _cacheSize -> _cacheSize
    int _cache -> _cache
    long _position -> _position
    int kNumMoveReducingBits -> kNumMoveReducingBits
    int kNumBitPriceShiftBits -> kNumBitPriceShiftBits
    int[] ProbPrices -> ProbPrices
    void SetStream(java.io.OutputStream) -> SetStream
    void ReleaseStream() -> ReleaseStream
    void Init() -> Init
    void FlushData() -> FlushData
    void FlushStream() -> FlushStream
    void ShiftLow() -> ShiftLow
    void EncodeDirectBits(int,int) -> EncodeDirectBits
    long GetProcessedSizeAdd() -> GetProcessedSizeAdd
    void InitBitModels(short[]) -> InitBitModels
    void Encode(short[],int,int) -> Encode
    int GetPrice(int,int) -> GetPrice
    int GetPrice0(int) -> GetPrice0
    int GetPrice1(int) -> GetPrice1
com.badlogic.gdx.utils.reflect.ArrayReflection -> com.badlogic.gdx.utils.reflect.ArrayReflection:
    java.lang.Object newInstance(java.lang.Class,int) -> newInstance
    int getLength(java.lang.Object) -> getLength
    java.lang.Object get(java.lang.Object,int) -> get
    void set(java.lang.Object,int,java.lang.Object) -> set
com.badlogic.gdx.utils.reflect.ClassReflection -> com.badlogic.gdx.utils.reflect.ClassReflection:
    java.lang.Class forName(java.lang.String) -> forName
    java.lang.String getSimpleName(java.lang.Class) -> getSimpleName
    boolean isInstance(java.lang.Class,java.lang.Object) -> isInstance
    boolean isAssignableFrom(java.lang.Class,java.lang.Class) -> isAssignableFrom
    boolean isMemberClass(java.lang.Class) -> isMemberClass
    boolean isStaticClass(java.lang.Class) -> isStaticClass
    java.lang.Object newInstance(java.lang.Class) -> newInstance
    com.badlogic.gdx.utils.reflect.Constructor[] getConstructors(java.lang.Class) -> getConstructors
    com.badlogic.gdx.utils.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[]) -> getConstructor
    com.badlogic.gdx.utils.reflect.Constructor getDeclaredConstructor(java.lang.Class,java.lang.Class[]) -> getDeclaredConstructor
    com.badlogic.gdx.utils.reflect.Method[] getMethods(java.lang.Class) -> getMethods
    com.badlogic.gdx.utils.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Class[]) -> getMethod
    com.badlogic.gdx.utils.reflect.Method[] getDeclaredMethods(java.lang.Class) -> getDeclaredMethods
    com.badlogic.gdx.utils.reflect.Method getDeclaredMethod(java.lang.Class,java.lang.String,java.lang.Class[]) -> getDeclaredMethod
    com.badlogic.gdx.utils.reflect.Field[] getFields(java.lang.Class) -> getFields
    com.badlogic.gdx.utils.reflect.Field getField(java.lang.Class,java.lang.String) -> getField
    com.badlogic.gdx.utils.reflect.Field[] getDeclaredFields(java.lang.Class) -> getDeclaredFields
    com.badlogic.gdx.utils.reflect.Field getDeclaredField(java.lang.Class,java.lang.String) -> getDeclaredField
com.badlogic.gdx.utils.reflect.Constructor -> com.badlogic.gdx.utils.reflect.Constructor:
    java.lang.reflect.Constructor constructor -> constructor
    java.lang.Class[] getParameterTypes() -> getParameterTypes
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    boolean isAccessible() -> isAccessible
    void setAccessible(boolean) -> setAccessible
    java.lang.Object newInstance(java.lang.Object[]) -> newInstance
com.badlogic.gdx.utils.reflect.Field -> com.badlogic.gdx.utils.reflect.Field:
    java.lang.reflect.Field field -> field
    java.lang.String getName() -> getName
    java.lang.Class getType() -> getType
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    boolean isAccessible() -> isAccessible
    void setAccessible(boolean) -> setAccessible
    boolean isDefaultAccess() -> isDefaultAccess
    boolean isFinal() -> isFinal
    boolean isPrivate() -> isPrivate
    boolean isProtected() -> isProtected
    boolean isPublic() -> isPublic
    boolean isStatic() -> isStatic
    boolean isTransient() -> isTransient
    boolean isVolatile() -> isVolatile
    boolean isSynthetic() -> isSynthetic
    java.lang.Class getElementType(int) -> getElementType
    java.lang.Object get(java.lang.Object) -> get
    void set(java.lang.Object,java.lang.Object) -> set
com.badlogic.gdx.utils.reflect.Method -> com.badlogic.gdx.utils.reflect.Method:
    java.lang.reflect.Method method -> method
    java.lang.String getName() -> getName
    java.lang.Class getReturnType() -> getReturnType
    java.lang.Class[] getParameterTypes() -> getParameterTypes
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    boolean isAccessible() -> isAccessible
    void setAccessible(boolean) -> setAccessible
    boolean isAbstract() -> isAbstract
    boolean isDefaultAccess() -> isDefaultAccess
    boolean isFinal() -> isFinal
    boolean isPrivate() -> isPrivate
    boolean isProtected() -> isProtected
    boolean isPublic() -> isPublic
    boolean isNative() -> isNative
    boolean isStatic() -> isStatic
    boolean isVarArgs() -> isVarArgs
    java.lang.Object invoke(java.lang.Object,java.lang.Object[]) -> invoke
com.badlogic.gdx.utils.reflect.ReflectionException -> com.badlogic.gdx.utils.reflect.ReflectionException:
com.badlogic.gdx.utils.viewport.ExtendViewport -> com.badlogic.gdx.utils.viewport.ExtendViewport:
    float minWorldWidth -> minWorldWidth
    float minWorldHeight -> minWorldHeight
    float maxWorldWidth -> maxWorldWidth
    float maxWorldHeight -> maxWorldHeight
    void update(int,int,boolean) -> update
    float getMinWorldWidth() -> getMinWorldWidth
    void setMinWorldWidth(float) -> setMinWorldWidth
    float getMinWorldHeight() -> getMinWorldHeight
    void setMinWorldHeight(float) -> setMinWorldHeight
    float getMaxWorldWidth() -> getMaxWorldWidth
    void setMaxWorldWidth(float) -> setMaxWorldWidth
    float getMaxWorldHeight() -> getMaxWorldHeight
    void setMaxWorldHeight(float) -> setMaxWorldHeight
com.badlogic.gdx.utils.viewport.FillViewport -> com.badlogic.gdx.utils.viewport.FillViewport:
com.badlogic.gdx.utils.viewport.FitViewport -> com.badlogic.gdx.utils.viewport.FitViewport:
com.badlogic.gdx.utils.viewport.ScalingViewport -> com.badlogic.gdx.utils.viewport.ScalingViewport:
    com.badlogic.gdx.utils.Scaling scaling -> scaling
    void update(int,int,boolean) -> update
    com.badlogic.gdx.utils.Scaling getScaling() -> getScaling
    void setScaling(com.badlogic.gdx.utils.Scaling) -> setScaling
com.badlogic.gdx.utils.viewport.ScreenViewport -> com.badlogic.gdx.utils.viewport.ScreenViewport:
    float unitsPerPixel -> unitsPerPixel
    void update(int,int,boolean) -> update
    float getUnitsPerPixel() -> getUnitsPerPixel
    void setUnitsPerPixel(float) -> setUnitsPerPixel
com.badlogic.gdx.utils.viewport.StretchViewport -> com.badlogic.gdx.utils.viewport.StretchViewport:
com.badlogic.gdx.utils.viewport.Viewport -> com.badlogic.gdx.utils.viewport.Viewport:
    float worldWidth -> worldWidth
    float worldHeight -> worldHeight
    int viewportWidth -> viewportWidth
    int viewportHeight -> viewportHeight
    int viewportX -> viewportX
    int viewportY -> viewportY
    com.badlogic.gdx.graphics.Camera camera -> camera
    com.badlogic.gdx.math.Vector3 tmp -> tmp
    void update() -> update
    void update(int,int) -> update
    void update(int,int,boolean) -> update
    com.badlogic.gdx.math.Vector2 unproject(com.badlogic.gdx.math.Vector2) -> unproject
    com.badlogic.gdx.math.Vector2 project(com.badlogic.gdx.math.Vector2) -> project
    com.badlogic.gdx.math.Vector3 unproject(com.badlogic.gdx.math.Vector3) -> unproject
    com.badlogic.gdx.math.Vector3 project(com.badlogic.gdx.math.Vector3) -> project
    com.badlogic.gdx.math.collision.Ray getPickRay(float,float) -> getPickRay
    void calculateScissors(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Rectangle,com.badlogic.gdx.math.Rectangle) -> calculateScissors
    com.badlogic.gdx.math.Vector2 toScreenCoordinates(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Matrix4) -> toScreenCoordinates
    com.badlogic.gdx.graphics.Camera getCamera() -> getCamera
    void setCamera(com.badlogic.gdx.graphics.Camera) -> setCamera
    void setWorldSize(float,float) -> setWorldSize
    float getWorldWidth() -> getWorldWidth
    void setWorldWidth(float) -> setWorldWidth
    float getWorldHeight() -> getWorldHeight
    void setWorldHeight(float) -> setWorldHeight
    int getViewportX() -> getViewportX
    int getViewportY() -> getViewportY
    int getViewportWidth() -> getViewportWidth
    int getViewportHeight() -> getViewportHeight
    int getLeftGutterWidth() -> getLeftGutterWidth
    int getRightGutterX() -> getRightGutterX
    int getRightGutterWidth() -> getRightGutterWidth
    int getBottomGutterHeight() -> getBottomGutterHeight
    int getTopGutterY() -> getTopGutterY
    int getTopGutterHeight() -> getTopGutterHeight
com.baidu.inf.iis.bcs.BaiduBCS -> com.baidu.inf.iis.bcs.BaiduBCS:
    org.apache.commons.logging.Log log -> log
    com.baidu.inf.iis.bcs.http.BCSHttpClient bcsHttpClient -> bcsHttpClient
    com.baidu.inf.iis.bcs.auth.BCSCredentials credentials -> credentials
    java.lang.String endpoint -> endpoint
    void setCredentials(com.baidu.inf.iis.bcs.auth.BCSCredentials) -> setCredentials
    com.baidu.inf.iis.bcs.auth.BCSCredentials getCredentials() -> getCredentials
    void setDefaultEncoding(java.lang.String) -> setDefaultEncoding
    java.lang.String getDefaultEncoding() -> getDefaultEncoding
    void setEndpoint(java.lang.String) -> setEndpoint
    java.lang.String getEndpoint() -> getEndpoint
    com.baidu.inf.iis.bcs.response.BaiduBCSResponse copyObject(com.baidu.inf.iis.bcs.request.CopyObjectRequest) -> copyObject
    com.baidu.inf.iis.bcs.response.BaiduBCSResponse copyObject(com.baidu.inf.iis.bcs.model.Resource,com.baidu.inf.iis.bcs.model.Resource) -> copyObject
    com.baidu.inf.iis.bcs.response.BaiduBCSResponse copyObject(com.baidu.inf.iis.bcs.model.Resource,com.baidu.inf.iis.bcs.model.Resource,com.baidu.inf.iis.bcs.model.ObjectMetadata) -> copyObject
    com.baidu.inf.iis.bcs.response.BaiduBCSResponse createBucket(com.baidu.inf.iis.bcs.request.CreateBucketRequest) -> createBucket
    com.baidu.inf.iis.bcs.response.BaiduBCSResponse createBucket(java.lang.String) -> createBucket
    com.baidu.inf.iis.bcs.response.BaiduBCSResponse deleteBucket(com.baidu.inf.iis.bcs.request.DeleteBucketRequest) -> deleteBucket
    com.baidu.inf.iis.bcs.response.BaiduBCSResponse deleteBucket(java.lang.String) -> deleteBucket
    com.baidu.inf.iis.bcs.response.BaiduBCSResponse deleteObject(com.baidu.inf.iis.bcs.request.DeleteObjectRequest) -> deleteObject
    com.baidu.inf.iis.bcs.response.BaiduBCSResponse deleteObject(java.lang.String,java.lang.String) -> deleteObject
    com.baidu.inf.iis.bcs.response.BaiduBCSResponse getBucketPolicy(com.baidu.inf.iis.bcs.request.GetBucketPolicyRequest) -> getBucketPolicy
    com.baidu.inf.iis.bcs.response.BaiduBCSResponse getBucketPolicy(java.lang.String) -> getBucketPolicy
    com.baidu.inf.iis.bcs.response.BaiduBCSResponse getObject(com.baidu.inf.iis.bcs.request.GetObjectRequest) -> getObject
    com.baidu.inf.iis.bcs.response.BaiduBCSResponse getObject(com.baidu.inf.iis.bcs.request.GetObjectRequest,java.io.File) -> getObject
    com.baidu.inf.iis.bcs.response.BaiduBCSResponse getObject(java.lang.String,java.lang.String) -> getObject
    com.baidu.inf.iis.bcs.response.BaiduBCSResponse getObjectMetadata(com.baidu.inf.iis.bcs.request.GetObjectMetadataRequest) -> getObjectMetadata
    com.baidu.inf.iis.bcs.response.BaiduBCSResponse getObjectMetadata(java.lang.String,java.lang.String) -> getObjectMetadata
    boolean doesObjectExist(java.lang.String,java.lang.String) -> doesObjectExist
    com.baidu.inf.iis.bcs.response.BaiduBCSResponse getObjectPolicy(com.baidu.inf.iis.bcs.request.GetObjectPolicyRequest) -> getObjectPolicy
    com.baidu.inf.iis.bcs.response.BaiduBCSResponse getObjectPolicy(java.lang.String,java.lang.String) -> getObjectPolicy
    com.baidu.inf.iis.bcs.response.BaiduBCSResponse listBucket(com.baidu.inf.iis.bcs.request.ListBucketRequest) -> listBucket
    com.baidu.inf.iis.bcs.response.BaiduBCSResponse listObject(com.baidu.inf.iis.bcs.request.ListObjectRequest) -> listObject
    com.baidu.inf.iis.bcs.response.BaiduBCSResponse putBucketPolicy(com.baidu.inf.iis.bcs.request.PutBucketPolicyRequest) -> putBucketPolicy
    com.baidu.inf.iis.bcs.response.BaiduBCSResponse putBucketPolicy(java.lang.String,com.baidu.inf.iis.bcs.policy.Policy) -> putBucketPolicy
    com.baidu.inf.iis.bcs.response.BaiduBCSResponse putBucketPolicy(java.lang.String,com.baidu.inf.iis.bcs.model.X_BS_ACL) -> putBucketPolicy
    com.baidu.inf.iis.bcs.response.BaiduBCSResponse putObject(com.baidu.inf.iis.bcs.request.PutObjectRequest) -> putObject
    com.baidu.inf.iis.bcs.response.BaiduBCSResponse putObject(java.lang.String,java.lang.String,java.io.File) -> putObject
    com.baidu.inf.iis.bcs.response.BaiduBCSResponse putObject(java.lang.String,java.lang.String,java.io.InputStream,com.baidu.inf.iis.bcs.model.ObjectMetadata) -> putObject
    com.baidu.inf.iis.bcs.response.BaiduBCSResponse putObjectPolicy(com.baidu.inf.iis.bcs.request.PutObjectPolicyRequest) -> putObjectPolicy
    com.baidu.inf.iis.bcs.response.BaiduBCSResponse putObjectPolicy(java.lang.String,java.lang.String,com.baidu.inf.iis.bcs.policy.Policy) -> putObjectPolicy
    com.baidu.inf.iis.bcs.response.BaiduBCSResponse putObjectPolicy(java.lang.String,java.lang.String,com.baidu.inf.iis.bcs.model.X_BS_ACL) -> putObjectPolicy
    com.baidu.inf.iis.bcs.response.BaiduBCSResponse putSuperfile(com.baidu.inf.iis.bcs.request.PutSuperfileRequest) -> putSuperfile
    com.baidu.inf.iis.bcs.response.BaiduBCSResponse putSuperfile(java.lang.String,java.lang.String,java.util.List) -> putSuperfile
    com.baidu.inf.iis.bcs.response.BaiduBCSResponse putSuperfile(java.lang.String,java.lang.String,com.baidu.inf.iis.bcs.model.ObjectMetadata,java.util.List) -> putSuperfile
    com.baidu.inf.iis.bcs.response.BaiduBCSResponse setObjectMetadata(com.baidu.inf.iis.bcs.request.SetObjectMetadataRequest) -> setObjectMetadata
    com.baidu.inf.iis.bcs.response.BaiduBCSResponse setObjectMetadata(java.lang.String,java.lang.String,com.baidu.inf.iis.bcs.model.ObjectMetadata) -> setObjectMetadata
    java.lang.String generateUrl(com.baidu.inf.iis.bcs.request.GenerateUrlRequest) -> generateUrl
    com.baidu.inf.iis.bcs.http.BCSHttpRequest createHttpRequest(com.baidu.inf.iis.bcs.request.BaiduBCSRequest) -> createHttpRequest
    void populateRequestMetadata(com.baidu.inf.iis.bcs.http.BCSHttpRequest,com.baidu.inf.iis.bcs.model.ObjectMetadata) -> populateRequestMetadata
    void assertParameterNotNull(java.lang.Object,java.lang.String) -> assertParameterNotNull
    java.lang.String buildResourcePath(java.lang.String,java.lang.String) -> buildResourcePath
com.baidu.inf.iis.bcs.auth.BCSCredentials -> com.baidu.inf.iis.bcs.auth.BCSCredentials:
    java.lang.String accessKey -> accessKey
    java.lang.String secretKey -> secretKey
    java.lang.String getAccessKey() -> getAccessKey
    java.lang.String getSecretKey() -> getSecretKey
com.baidu.inf.iis.bcs.auth.BCSSignCondition -> com.baidu.inf.iis.bcs.auth.BCSSignCondition:
    java.lang.Long time -> time
    java.lang.String ip -> ip
    java.lang.Long size -> size
    java.lang.String getIp() -> getIp
    java.lang.Long getSize() -> getSize
    java.lang.Long getTime() -> getTime
    void setIp(java.lang.String) -> setIp
    void setSize(java.lang.Long) -> setSize
    void setTime(java.lang.Long) -> setTime
com.baidu.inf.iis.bcs.auth.BCSSigner -> com.baidu.inf.iis.bcs.auth.BCSSigner:
    void main(java.lang.String[]) -> main
    void sign(com.baidu.inf.iis.bcs.request.BaiduBCSRequest,com.baidu.inf.iis.bcs.http.BCSHttpRequest,com.baidu.inf.iis.bcs.auth.BCSCredentials) -> sign
    void sign(com.baidu.inf.iis.bcs.request.BaiduBCSRequest,com.baidu.inf.iis.bcs.http.BCSHttpRequest,com.baidu.inf.iis.bcs.auth.BCSCredentials,com.baidu.inf.iis.bcs.auth.BCSSignCondition) -> sign
com.baidu.inf.iis.bcs.auth.BCSSigner$1 -> com.baidu.inf.iis.bcs.auth.BCSSigner$1:
com.baidu.inf.iis.bcs.auth.SigningAlgorithm -> com.baidu.inf.iis.bcs.auth.SigningAlgorithm:
    com.baidu.inf.iis.bcs.auth.SigningAlgorithm HmacSHA1 -> HmacSHA1
    com.baidu.inf.iis.bcs.auth.SigningAlgorithm HmacSHA256 -> HmacSHA256
    java.lang.String name -> name
    com.baidu.inf.iis.bcs.auth.SigningAlgorithm[] $VALUES -> $VALUES
    com.baidu.inf.iis.bcs.auth.SigningAlgorithm[] values() -> values
    com.baidu.inf.iis.bcs.auth.SigningAlgorithm valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
com.baidu.inf.iis.bcs.handler.BucketListResponseHandler -> com.baidu.inf.iis.bcs.handler.BucketListResponseHandler:
    com.baidu.inf.iis.bcs.response.BaiduBCSResponse handle(com.baidu.inf.iis.bcs.http.BCSHttpResponse) -> handle
com.baidu.inf.iis.bcs.handler.ErrorResponseHandler -> com.baidu.inf.iis.bcs.handler.ErrorResponseHandler:
    org.apache.commons.logging.Log log -> log
    com.baidu.inf.iis.bcs.response.BaiduBCSResponse handle(com.baidu.inf.iis.bcs.http.BCSHttpResponse) -> handle
com.baidu.inf.iis.bcs.handler.HttpResponseHandler -> com.baidu.inf.iis.bcs.handler.HttpResponseHandler:
    org.apache.commons.logging.Log log -> log
    java.util.Set ignoredHeaders -> ignoredHeaders
    java.lang.String getResponseContentByStr(com.baidu.inf.iis.bcs.http.BCSHttpResponse) -> getResponseContentByStr
    com.baidu.inf.iis.bcs.response.BaiduBCSResponse handle(com.baidu.inf.iis.bcs.http.BCSHttpResponse) -> handle
    com.baidu.inf.iis.bcs.response.BaiduBCSResponse parseResponseMetadata(com.baidu.inf.iis.bcs.http.BCSHttpResponse) -> parseResponseMetadata
    void populateObjectMetadata(com.baidu.inf.iis.bcs.http.BCSHttpResponse,com.baidu.inf.iis.bcs.model.ObjectMetadata) -> populateObjectMetadata
    boolean isNeedsConnectionLeftOpen() -> isNeedsConnectionLeftOpen
com.baidu.inf.iis.bcs.handler.ObjectListResponseHandler -> com.baidu.inf.iis.bcs.handler.ObjectListResponseHandler:
    com.baidu.inf.iis.bcs.response.BaiduBCSResponse handle(com.baidu.inf.iis.bcs.http.BCSHttpResponse) -> handle
com.baidu.inf.iis.bcs.handler.ObjectMetadataResponseHandler -> com.baidu.inf.iis.bcs.handler.ObjectMetadataResponseHandler:
    com.baidu.inf.iis.bcs.response.BaiduBCSResponse handle(com.baidu.inf.iis.bcs.http.BCSHttpResponse) -> handle
com.baidu.inf.iis.bcs.handler.ObjectResponseHandler -> com.baidu.inf.iis.bcs.handler.ObjectResponseHandler:
    com.baidu.inf.iis.bcs.response.BaiduBCSResponse handle(com.baidu.inf.iis.bcs.http.BCSHttpResponse) -> handle
    boolean isNeedsConnectionLeftOpen() -> isNeedsConnectionLeftOpen
com.baidu.inf.iis.bcs.handler.PolicyResponseHandler -> com.baidu.inf.iis.bcs.handler.PolicyResponseHandler:
    com.baidu.inf.iis.bcs.response.BaiduBCSResponse handle(com.baidu.inf.iis.bcs.http.BCSHttpResponse) -> handle
com.baidu.inf.iis.bcs.handler.StringResponseHandler -> com.baidu.inf.iis.bcs.handler.StringResponseHandler:
    com.baidu.inf.iis.bcs.response.BaiduBCSResponse handle(com.baidu.inf.iis.bcs.http.BCSHttpResponse) -> handle
com.baidu.inf.iis.bcs.handler.VoidResponseHandler -> com.baidu.inf.iis.bcs.handler.VoidResponseHandler:
    com.baidu.inf.iis.bcs.response.BaiduBCSResponse handle(com.baidu.inf.iis.bcs.http.BCSHttpResponse) -> handle
com.baidu.inf.iis.bcs.http.BCSHttpClient -> com.baidu.inf.iis.bcs.http.BCSHttpClient:
    int MAX_BACKOFF_IN_MILLISECONDS -> MAX_BACKOFF_IN_MILLISECONDS
    org.apache.commons.logging.Log log -> log
    com.baidu.inf.iis.bcs.http.HttpRequestFactory httpRequestFactory -> httpRequestFactory
    com.baidu.inf.iis.bcs.http.HttpClientFactory httpClientFactory -> httpClientFactory
    com.baidu.inf.iis.bcs.http.ClientConfiguration config -> config
    org.apache.http.client.HttpClient httpClient -> httpClient
    com.baidu.inf.iis.bcs.handler.ErrorResponseHandler errorResponseHandler -> errorResponseHandler
    com.baidu.inf.iis.bcs.http.BCSHttpResponse createBCSHttpResponse(org.apache.http.HttpResponse) -> createBCSHttpResponse
    com.baidu.inf.iis.bcs.response.BaiduBCSResponse execute(com.baidu.inf.iis.bcs.http.BCSHttpRequest,com.baidu.inf.iis.bcs.handler.HttpResponseHandler) -> execute
    com.baidu.inf.iis.bcs.response.BaiduBCSResponse handleErrorHttpResponse(com.baidu.inf.iis.bcs.http.BCSHttpRequest,org.apache.http.HttpResponse,com.baidu.inf.iis.bcs.handler.HttpResponseHandler) -> handleErrorHttpResponse
    com.baidu.inf.iis.bcs.response.BaiduBCSResponse handleHttpResponse(com.baidu.inf.iis.bcs.http.BCSHttpRequest,org.apache.http.HttpResponse,com.baidu.inf.iis.bcs.handler.HttpResponseHandler) -> handleHttpResponse
    boolean isRequestSuccessful(org.apache.http.HttpResponse) -> isRequestSuccessful
    com.baidu.inf.iis.bcs.http.HttpRequestFactory getHttpRequestFactory() -> getHttpRequestFactory
    void setHttpRequestFactory(com.baidu.inf.iis.bcs.http.HttpRequestFactory) -> setHttpRequestFactory
    com.baidu.inf.iis.bcs.http.ClientConfiguration getConfig() -> getConfig
    boolean shouldRetry(java.lang.Exception,int) -> shouldRetry
    void pauseExponentially(int) -> pauseExponentially
    void shutdown() -> shutdown
    void finalize() -> finalize
com.baidu.inf.iis.bcs.http.BCSHttpRequest -> com.baidu.inf.iis.bcs.http.BCSHttpRequest:
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    void addParameter(java.lang.String,java.lang.String) -> addParameter
    java.io.InputStream getContent() -> getContent
    java.lang.String getEndpoint() -> getEndpoint
    java.util.Map getHeaders() -> getHeaders
    com.baidu.inf.iis.bcs.http.HttpMethodName getHttpMethod() -> getHttpMethod
    com.baidu.inf.iis.bcs.request.BaiduBCSRequest getOriginalRequest() -> getOriginalRequest
    java.util.Map getParameters() -> getParameters
    java.lang.String getResourcePath() -> getResourcePath
    java.lang.String getServiceName() -> getServiceName
    void setContent(java.io.InputStream) -> setContent
    void setEndpoint(java.lang.String) -> setEndpoint
    void setHttpMethod(com.baidu.inf.iis.bcs.http.HttpMethodName) -> setHttpMethod
    void setResourcePath(java.lang.String) -> setResourcePath
    com.baidu.inf.iis.bcs.http.BCSHttpRequest withParameter(java.lang.String,java.lang.String) -> withParameter
com.baidu.inf.iis.bcs.http.BCSHttpResponse -> com.baidu.inf.iis.bcs.http.BCSHttpResponse:
    com.baidu.inf.iis.bcs.http.BCSHttpRequest request -> request
    java.lang.String statusText -> statusText
    int statusCode -> statusCode
    java.io.InputStream content -> content
    java.util.Map headers -> headers
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    java.io.InputStream getContent() -> getContent
    java.util.Map getHeaders() -> getHeaders
    com.baidu.inf.iis.bcs.http.BCSHttpRequest getRequest() -> getRequest
    int getStatusCode() -> getStatusCode
    java.lang.String getStatusText() -> getStatusText
    void setContent(java.io.InputStream) -> setContent
    void setRequest(com.baidu.inf.iis.bcs.http.BCSHttpRequest) -> setRequest
    void setStatusCode(int) -> setStatusCode
    void setStatusText(java.lang.String) -> setStatusText
com.baidu.inf.iis.bcs.http.ClientConfiguration -> com.baidu.inf.iis.bcs.http.ClientConfiguration:
    java.lang.String userAgent -> userAgent
    int maxErrorRetry -> maxErrorRetry
    com.baidu.inf.iis.bcs.http.Protocol protocol -> protocol
    java.lang.String proxyHost -> proxyHost
    int proxyPort -> proxyPort
    java.lang.String proxyUsername -> proxyUsername
    java.lang.String proxyPassword -> proxyPassword
    java.lang.String proxyDomain -> proxyDomain
    java.lang.String proxyWorkstation -> proxyWorkstation
    int maxConnections -> maxConnections
    int maxConnectionsPerRoute -> maxConnectionsPerRoute
    int socketTimeout -> socketTimeout
    int connectionTimeout -> connectionTimeout
    int socketSendBufferSizeHint -> socketSendBufferSizeHint
    int socketReceiveBufferSizeHint -> socketReceiveBufferSizeHint
    int getConnectionTimeout() -> getConnectionTimeout
    int getMaxConnections() -> getMaxConnections
    int getMaxConnectionsPerRoute() -> getMaxConnectionsPerRoute
    int getMaxErrorRetry() -> getMaxErrorRetry
    com.baidu.inf.iis.bcs.http.Protocol getProtocol() -> getProtocol
    java.lang.String getProxyDomain() -> getProxyDomain
    java.lang.String getProxyHost() -> getProxyHost
    java.lang.String getProxyPassword() -> getProxyPassword
    int getProxyPort() -> getProxyPort
    java.lang.String getProxyUsername() -> getProxyUsername
    java.lang.String getProxyWorkstation() -> getProxyWorkstation
    int[] getSocketBufferSizeHints() -> getSocketBufferSizeHints
    int getSocketTimeout() -> getSocketTimeout
    java.lang.String getUserAgent() -> getUserAgent
    void setUserAgent(java.lang.String) -> setUserAgent
    void setConnectionTimeout(int) -> setConnectionTimeout
    void setMaxConnections(int) -> setMaxConnections
    void setMaxConnectionsPerRoute(int) -> setMaxConnectionsPerRoute
    void setMaxErrorRetry(int) -> setMaxErrorRetry
    void setProtocol(com.baidu.inf.iis.bcs.http.Protocol) -> setProtocol
    void setProxyDomain(java.lang.String) -> setProxyDomain
    void setProxyHost(java.lang.String) -> setProxyHost
    void setProxyPassword(java.lang.String) -> setProxyPassword
    void setProxyPort(int) -> setProxyPort
    void setProxyUsername(java.lang.String) -> setProxyUsername
    void setProxyWorkstation(java.lang.String) -> setProxyWorkstation
    void setSocketBufferSizeHints(int,int) -> setSocketBufferSizeHints
    void setSocketTimeout(int) -> setSocketTimeout
    com.baidu.inf.iis.bcs.http.ClientConfiguration withConnectionTimeout(int) -> withConnectionTimeout
    com.baidu.inf.iis.bcs.http.ClientConfiguration withMaxConnections(int) -> withMaxConnections
    com.baidu.inf.iis.bcs.http.ClientConfiguration withMaxConnectionsPerRoute(int) -> withMaxConnectionsPerRoute
    com.baidu.inf.iis.bcs.http.ClientConfiguration withMaxErrorRetry(int) -> withMaxErrorRetry
    com.baidu.inf.iis.bcs.http.ClientConfiguration withProtocol(com.baidu.inf.iis.bcs.http.Protocol) -> withProtocol
    com.baidu.inf.iis.bcs.http.ClientConfiguration withProxyDomain(java.lang.String) -> withProxyDomain
    com.baidu.inf.iis.bcs.http.ClientConfiguration withProxyHost(java.lang.String) -> withProxyHost
    com.baidu.inf.iis.bcs.http.ClientConfiguration withProxyPassword(java.lang.String) -> withProxyPassword
    com.baidu.inf.iis.bcs.http.ClientConfiguration withProxyPort(int) -> withProxyPort
    com.baidu.inf.iis.bcs.http.ClientConfiguration withProxyUsername(java.lang.String) -> withProxyUsername
    com.baidu.inf.iis.bcs.http.ClientConfiguration withProxyWorkstation(java.lang.String) -> withProxyWorkstation
    com.baidu.inf.iis.bcs.http.ClientConfiguration withSocketBufferSizeHints(int,int) -> withSocketBufferSizeHints
    com.baidu.inf.iis.bcs.http.ClientConfiguration withSocketTimeout(int) -> withSocketTimeout
com.baidu.inf.iis.bcs.http.DefaultBCSHttpRequest -> com.baidu.inf.iis.bcs.http.DefaultBCSHttpRequest:
    java.lang.String resourcePath -> resourcePath
    java.util.Map parameters -> parameters
    java.util.Map headers -> headers
    java.lang.String endpoint -> endpoint
    java.lang.String serviceName -> serviceName
    com.baidu.inf.iis.bcs.request.BaiduBCSRequest originalRequest -> originalRequest
    com.baidu.inf.iis.bcs.http.HttpMethodName httpMethod -> httpMethod
    java.io.InputStream content -> content
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    void addParameter(java.lang.String,java.lang.String) -> addParameter
    java.io.InputStream getContent() -> getContent
    java.lang.String getEndpoint() -> getEndpoint
    java.util.Map getHeaders() -> getHeaders
    com.baidu.inf.iis.bcs.http.HttpMethodName getHttpMethod() -> getHttpMethod
    com.baidu.inf.iis.bcs.request.BaiduBCSRequest getOriginalRequest() -> getOriginalRequest
    java.util.Map getParameters() -> getParameters
    java.lang.String getResourcePath() -> getResourcePath
    java.lang.String getServiceName() -> getServiceName
    void setContent(java.io.InputStream) -> setContent
    void setEndpoint(java.lang.String) -> setEndpoint
    void setHttpMethod(com.baidu.inf.iis.bcs.http.HttpMethodName) -> setHttpMethod
    void setResourcePath(java.lang.String) -> setResourcePath
    java.lang.String toString() -> toString
    com.baidu.inf.iis.bcs.http.BCSHttpRequest withParameter(java.lang.String,java.lang.String) -> withParameter
com.baidu.inf.iis.bcs.http.HttpClientFactory -> com.baidu.inf.iis.bcs.http.HttpClientFactory:
    org.apache.http.client.HttpClient createHttpClient(com.baidu.inf.iis.bcs.http.ClientConfiguration) -> createHttpClient
com.baidu.inf.iis.bcs.http.HttpClientFactory$1 -> com.baidu.inf.iis.bcs.http.HttpClientFactory$1:
com.baidu.inf.iis.bcs.http.HttpClientFactory$TrustAllSSLSocketFactory -> com.baidu.inf.iis.bcs.http.HttpClientFactory$TrustAllSSLSocketFactory:
    javax.net.ssl.SSLContext sslContext -> sslContext
    com.baidu.inf.iis.bcs.http.HttpClientFactory this$0 -> this$0
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    java.net.Socket createSocket() -> createSocket
com.baidu.inf.iis.bcs.http.HttpClientFactory$TrustingSocketFactory -> com.baidu.inf.iis.bcs.http.HttpClientFactory$TrustingSocketFactory:
    javax.net.ssl.SSLContext sslcontext -> sslcontext
    javax.net.ssl.SSLContext createSSLContext() -> createSSLContext
    javax.net.ssl.SSLContext getSSLContext() -> getSSLContext
    java.net.Socket createSocket(org.apache.http.params.HttpParams) -> createSocket
    java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams) -> connectSocket
    boolean isSecure(java.net.Socket) -> isSecure
    java.net.Socket createLayeredSocket(java.net.Socket,java.lang.String,int,boolean) -> createLayeredSocket
com.baidu.inf.iis.bcs.http.HttpClientFactory$TrustingX509TrustManager -> com.baidu.inf.iis.bcs.http.HttpClientFactory$TrustingX509TrustManager:
    java.security.cert.X509Certificate[] X509_CERTIFICATES -> X509_CERTIFICATES
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
com.baidu.inf.iis.bcs.http.HttpMethodName -> com.baidu.inf.iis.bcs.http.HttpMethodName:
    com.baidu.inf.iis.bcs.http.HttpMethodName GET -> GET
    com.baidu.inf.iis.bcs.http.HttpMethodName POST -> POST
    com.baidu.inf.iis.bcs.http.HttpMethodName PUT -> PUT
    com.baidu.inf.iis.bcs.http.HttpMethodName DELETE -> DELETE
    com.baidu.inf.iis.bcs.http.HttpMethodName HEAD -> HEAD
    com.baidu.inf.iis.bcs.http.HttpMethodName[] $VALUES -> $VALUES
    com.baidu.inf.iis.bcs.http.HttpMethodName[] values() -> values
    com.baidu.inf.iis.bcs.http.HttpMethodName valueOf(java.lang.String) -> valueOf
com.baidu.inf.iis.bcs.http.HttpRequestFactory -> com.baidu.inf.iis.bcs.http.HttpRequestFactory:
    org.apache.commons.logging.Log log -> log
    org.apache.http.client.methods.HttpRequestBase createHttpRequestBase(com.baidu.inf.iis.bcs.http.ClientConfiguration,com.baidu.inf.iis.bcs.http.BCSHttpRequest) -> createHttpRequestBase
    java.lang.String buildUri(com.baidu.inf.iis.bcs.http.ClientConfiguration,com.baidu.inf.iis.bcs.http.BCSHttpRequest) -> buildUri
    java.lang.String encodeParameters(com.baidu.inf.iis.bcs.http.BCSHttpRequest) -> encodeParameters
com.baidu.inf.iis.bcs.http.MD5DigestCalculatingInputStream -> com.baidu.inf.iis.bcs.http.MD5DigestCalculatingInputStream:
    java.security.MessageDigest digest -> digest
    byte[] getMd5Digest() -> getMd5Digest
    int read() -> read
    int read(byte[],int,int) -> read
    void reset() -> reset
com.baidu.inf.iis.bcs.http.Protocol -> com.baidu.inf.iis.bcs.http.Protocol:
    com.baidu.inf.iis.bcs.http.Protocol HTTP -> HTTP
    com.baidu.inf.iis.bcs.http.Protocol HTTPS -> HTTPS
    java.lang.String protocol -> protocol
    com.baidu.inf.iis.bcs.http.Protocol[] $VALUES -> $VALUES
    com.baidu.inf.iis.bcs.http.Protocol[] values() -> values
    com.baidu.inf.iis.bcs.http.Protocol valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
com.baidu.inf.iis.bcs.http.RepeatableFileInputStream -> com.baidu.inf.iis.bcs.http.RepeatableFileInputStream:
    org.apache.commons.logging.Log log -> log
    java.io.File file -> file
    java.io.FileInputStream fis -> fis
    long bytesReadPastMarkPoint -> bytesReadPastMarkPoint
    long markPoint -> markPoint
    int available() -> available
    void close() -> close
    java.io.InputStream getWrappedInputStream() -> getWrappedInputStream
    void mark(int) -> mark
    boolean markSupported() -> markSupported
    int read() -> read
    int read(byte[],int,int) -> read
    void reset() -> reset
    long skip(long) -> skip
com.baidu.inf.iis.bcs.http.RepeatableInputStream -> com.baidu.inf.iis.bcs.http.RepeatableInputStream:
    org.apache.commons.logging.Log log -> log
    java.io.InputStream is -> is
    int bufferSize -> bufferSize
    int bufferOffset -> bufferOffset
    long bytesReadPastMark -> bytesReadPastMark
    byte[] buffer -> buffer
    int available() -> available
    void close() -> close
    java.io.InputStream getWrappedInputStream() -> getWrappedInputStream
    void mark(int) -> mark
    boolean markSupported() -> markSupported
    int read() -> read
    int read(byte[],int,int) -> read
    void reset() -> reset
com.baidu.inf.iis.bcs.http.RepeatableInputStreamRequestEntity -> com.baidu.inf.iis.bcs.http.RepeatableInputStreamRequestEntity:
    boolean firstAttempt -> firstAttempt
    org.apache.http.entity.InputStreamEntity inputStreamRequestEntity -> inputStreamRequestEntity
    java.io.InputStream content -> content
    org.apache.commons.logging.Log log -> log
    boolean isChunked() -> isChunked
    boolean isRepeatable() -> isRepeatable
    void writeTo(java.io.OutputStream) -> writeTo
com.baidu.inf.iis.bcs.model.BCSClientException -> com.baidu.inf.iis.bcs.model.BCSClientException:
    long serialVersionUID -> serialVersionUID
com.baidu.inf.iis.bcs.model.BCSServiceException -> com.baidu.inf.iis.bcs.model.BCSServiceException:
    long serialVersionUID -> serialVersionUID
    java.lang.String requestId -> requestId
    int httpErrorCode -> httpErrorCode
    int bcsErrorCode -> bcsErrorCode
    java.lang.String bcsErrorMessage -> bcsErrorMessage
    int getBcsErrorCode() -> getBcsErrorCode
    java.lang.String getBcsErrorMessage() -> getBcsErrorMessage
    java.lang.String getRequestId() -> getRequestId
    void setBcsErrorCode(int) -> setBcsErrorCode
    void setBcsErrorMessage(java.lang.String) -> setBcsErrorMessage
    void setRequestId(java.lang.String) -> setRequestId
    int getHttpErrorCode() -> getHttpErrorCode
    void setHttpErrorCode(int) -> setHttpErrorCode
com.baidu.inf.iis.bcs.model.BucketSummary -> com.baidu.inf.iis.bcs.model.BucketSummary:
    java.lang.String bucket -> bucket
    java.lang.Long cdatatime -> cdatatime
    java.lang.Long usedCapacity -> usedCapacity
    java.lang.Long totalCapacity -> totalCapacity
    java.lang.String getBucket() -> getBucket
    java.lang.Long getCdatatime() -> getCdatatime
    java.lang.Long getTotalCapacity() -> getTotalCapacity
    java.lang.Long getUsedCapacity() -> getUsedCapacity
    void setBucket(java.lang.String) -> setBucket
    void setCdatatime(java.lang.Long) -> setCdatatime
    void setTotalCapacity(java.lang.Long) -> setTotalCapacity
    void setUsedCapacity(java.lang.Long) -> setUsedCapacity
    java.lang.String toString() -> toString
com.baidu.inf.iis.bcs.model.DownloadObject -> com.baidu.inf.iis.bcs.model.DownloadObject:
    java.lang.String object -> object
    java.lang.String bucket -> bucket
    com.baidu.inf.iis.bcs.model.ObjectMetadata objectMetadata -> objectMetadata
    java.io.InputStream content -> content
    java.lang.String getBucket() -> getBucket
    java.io.InputStream getContent() -> getContent
    java.lang.String getObject() -> getObject
    com.baidu.inf.iis.bcs.model.ObjectMetadata getObjectMetadata() -> getObjectMetadata
    void setBucket(java.lang.String) -> setBucket
    void setContent(java.io.InputStream) -> setContent
    void setObject(java.lang.String) -> setObject
    void setObjectMetadata(com.baidu.inf.iis.bcs.model.ObjectMetadata) -> setObjectMetadata
com.baidu.inf.iis.bcs.model.Empty -> com.baidu.inf.iis.bcs.model.Empty:
com.baidu.inf.iis.bcs.model.ObjectListing -> com.baidu.inf.iis.bcs.model.ObjectListing:
    java.util.List objectSummaries -> objectSummaries
    java.lang.String bucket -> bucket
    int objectTotal -> objectTotal
    java.lang.String prefix -> prefix
    int start -> start
    int limit -> limit
    com.baidu.inf.iis.bcs.model.ObjectListing addObjectSummary(com.baidu.inf.iis.bcs.model.ObjectSummary) -> addObjectSummary
    java.lang.String getBucket() -> getBucket
    int getLimit() -> getLimit
    java.util.List getObjectSummaries() -> getObjectSummaries
    int getObjectTotal() -> getObjectTotal
    java.lang.String getPrefix() -> getPrefix
    int getStart() -> getStart
    void setBucket(java.lang.String) -> setBucket
    void setLimit(int) -> setLimit
    void setObjectSummaries(java.util.List) -> setObjectSummaries
    void setObjectTotal(int) -> setObjectTotal
    void setPrefix(java.lang.String) -> setPrefix
    void setStart(int) -> setStart
com.baidu.inf.iis.bcs.model.ObjectMetadata -> com.baidu.inf.iis.bcs.model.ObjectMetadata:
    java.util.Map userMetadata -> userMetadata
    java.util.Map metadata -> metadata
    void addUserMetadata(java.lang.String,java.lang.String) -> addUserMetadata
    java.lang.String getCacheControl() -> getCacheControl
    java.lang.String getContentDisposition() -> getContentDisposition
    java.lang.String getContentEncoding() -> getContentEncoding
    long getContentLength() -> getContentLength
    java.util.Date getLastModified() -> getLastModified
    void setLastModified(java.util.Date) -> setLastModified
    java.lang.String getContentMD5() -> getContentMD5
    java.lang.String getContentType() -> getContentType
    java.lang.String getETag() -> getETag
    java.util.Map getRawMetadata() -> getRawMetadata
    java.util.Map getUserMetadata() -> getUserMetadata
    java.lang.String getVersionId() -> getVersionId
    void setCacheControl(java.lang.String) -> setCacheControl
    void setContentDisposition(java.lang.String) -> setContentDisposition
    void setContentEncoding(java.lang.String) -> setContentEncoding
    void setContentLength(long) -> setContentLength
    void setContentMD5(java.lang.String) -> setContentMD5
    void setContentType(java.lang.String) -> setContentType
    void setHeader(java.lang.String,java.lang.Object) -> setHeader
    void setUserMetadata(java.util.Map) -> setUserMetadata
    java.lang.String toString() -> toString
com.baidu.inf.iis.bcs.model.ObjectSummary -> com.baidu.inf.iis.bcs.model.ObjectSummary:
    java.lang.String name -> name
    java.lang.Long size -> size
    java.lang.Long lastModifiedTime -> lastModifiedTime
    java.lang.String versionKey -> versionKey
    boolean isSuperfile -> isSuperfile
    java.lang.String parentDir -> parentDir
    boolean isDir -> isDir
    java.lang.Long getLastModifiedTime() -> getLastModifiedTime
    java.lang.String getName() -> getName
    java.lang.String getParentDir() -> getParentDir
    java.lang.Long getSize() -> getSize
    java.lang.String getVersionKey() -> getVersionKey
    boolean isDir() -> isDir
    boolean isSuperfile() -> isSuperfile
    void setIsDir(boolean) -> setIsDir
    void setLastModifiedTime(java.lang.Long) -> setLastModifiedTime
    void setName(java.lang.String) -> setName
    void setParentDir(java.lang.String) -> setParentDir
    void setSize(java.lang.Long) -> setSize
    void setSuperfile(boolean) -> setSuperfile
    void setVersionKey(java.lang.String) -> setVersionKey
    java.lang.String toString() -> toString
com.baidu.inf.iis.bcs.model.Pair -> com.baidu.inf.iis.bcs.model.Pair:
    java.lang.Object first -> first
    java.lang.Object second -> second
    java.lang.Object getFirst() -> getFirst
    java.lang.Object getSecond() -> getSecond
    void setFirst(java.lang.Object) -> setFirst
    void setSecond(java.lang.Object) -> setSecond
    java.util.List toArrayList() -> toArrayList
com.baidu.inf.iis.bcs.model.Resource -> com.baidu.inf.iis.bcs.model.Resource:
    java.lang.String bucket -> bucket
    java.lang.String object -> object
    java.lang.String getBucket() -> getBucket
    java.lang.String getObject() -> getObject
    void setBucket(java.lang.String) -> setBucket
    void setObject(java.lang.String) -> setObject
com.baidu.inf.iis.bcs.model.SuperfileSubObject -> com.baidu.inf.iis.bcs.model.SuperfileSubObject:
    java.lang.String bucket -> bucket
    java.lang.String object -> object
    java.lang.String etag -> etag
    java.lang.String getBucket() -> getBucket
    java.lang.String getEtag() -> getEtag
    java.lang.String getObject() -> getObject
    void setBucket(java.lang.String) -> setBucket
    void setEtag(java.lang.String) -> setEtag
    void setObject(java.lang.String) -> setObject
com.baidu.inf.iis.bcs.model.X_BS_ACL -> com.baidu.inf.iis.bcs.model.X_BS_ACL:
    com.baidu.inf.iis.bcs.model.X_BS_ACL Private -> Private
    com.baidu.inf.iis.bcs.model.X_BS_ACL PublicRead -> PublicRead
    com.baidu.inf.iis.bcs.model.X_BS_ACL PublicWrite -> PublicWrite
    com.baidu.inf.iis.bcs.model.X_BS_ACL PublicReadWrite -> PublicReadWrite
    com.baidu.inf.iis.bcs.model.X_BS_ACL PublicControl -> PublicControl
    java.lang.String x_bs_acl -> x_bs_acl
    com.baidu.inf.iis.bcs.model.X_BS_ACL[] $VALUES -> $VALUES
    com.baidu.inf.iis.bcs.model.X_BS_ACL[] values() -> values
    com.baidu.inf.iis.bcs.model.X_BS_ACL valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
com.baidu.inf.iis.bcs.policy.Policy -> com.baidu.inf.iis.bcs.policy.Policy:
    org.apache.commons.logging.Log log -> log
    java.util.List statements -> statements
    java.lang.String originalJsonStr -> originalJsonStr
    void main(java.lang.String[]) -> main
    com.baidu.inf.iis.bcs.policy.Policy addStatements(com.baidu.inf.iis.bcs.policy.Statement) -> addStatements
    com.baidu.inf.iis.bcs.policy.Policy buildJsonStr(java.lang.String) -> buildJsonStr
    java.lang.String getOriginalJsonStr() -> getOriginalJsonStr
    java.util.List getStatements() -> getStatements
    void setStatements(java.util.List) -> setStatements
    java.lang.String toJson() -> toJson
com.baidu.inf.iis.bcs.policy.PolicyAction -> com.baidu.inf.iis.bcs.policy.PolicyAction:
    com.baidu.inf.iis.bcs.policy.PolicyAction all -> all
    com.baidu.inf.iis.bcs.policy.PolicyAction put_bucket_policy -> put_bucket_policy
    com.baidu.inf.iis.bcs.policy.PolicyAction get_bucket_policy -> get_bucket_policy
    com.baidu.inf.iis.bcs.policy.PolicyAction list_object -> list_object
    com.baidu.inf.iis.bcs.policy.PolicyAction delete_bucket -> delete_bucket
    com.baidu.inf.iis.bcs.policy.PolicyAction get_object -> get_object
    com.baidu.inf.iis.bcs.policy.PolicyAction put_object -> put_object
    com.baidu.inf.iis.bcs.policy.PolicyAction delete_object -> delete_object
    com.baidu.inf.iis.bcs.policy.PolicyAction put_object_policy -> put_object_policy
    com.baidu.inf.iis.bcs.policy.PolicyAction get_object_policy -> get_object_policy
    java.lang.String value -> value
    com.baidu.inf.iis.bcs.policy.PolicyAction[] $VALUES -> $VALUES
    com.baidu.inf.iis.bcs.policy.PolicyAction[] values() -> values
    com.baidu.inf.iis.bcs.policy.PolicyAction valueOf(java.lang.String) -> valueOf
    com.baidu.inf.iis.bcs.policy.PolicyAction toPolicyAction(java.lang.String) -> toPolicyAction
    java.lang.String toString() -> toString
com.baidu.inf.iis.bcs.policy.PolicyEffect -> com.baidu.inf.iis.bcs.policy.PolicyEffect:
    com.baidu.inf.iis.bcs.policy.PolicyEffect allow -> allow
    com.baidu.inf.iis.bcs.policy.PolicyEffect deny -> deny
    com.baidu.inf.iis.bcs.policy.PolicyEffect[] $VALUES -> $VALUES
    com.baidu.inf.iis.bcs.policy.PolicyEffect[] values() -> values
    com.baidu.inf.iis.bcs.policy.PolicyEffect valueOf(java.lang.String) -> valueOf
com.baidu.inf.iis.bcs.policy.PolicyIP -> com.baidu.inf.iis.bcs.policy.PolicyIP:
    java.util.List singleIpList -> singleIpList
    java.util.List cidrIpList -> cidrIpList
    java.util.List ipRangeList -> ipRangeList
    com.baidu.inf.iis.bcs.policy.PolicyIP addCidrIp(java.lang.String) -> addCidrIp
    com.baidu.inf.iis.bcs.policy.PolicyIP addIpRange(com.baidu.inf.iis.bcs.model.Pair) -> addIpRange
    com.baidu.inf.iis.bcs.policy.PolicyIP addSingleIp(java.lang.String) -> addSingleIp
    java.util.List getCidrIpList() -> getCidrIpList
    java.util.List getIpRangeList() -> getIpRangeList
    java.util.List getSingleIpList() -> getSingleIpList
    boolean isEmpty() -> isEmpty
    void setCidrIpList(java.util.List) -> setCidrIpList
    void setIpRangeList(java.util.List) -> setIpRangeList
    void setSingleIpList(java.util.List) -> setSingleIpList
com.baidu.inf.iis.bcs.policy.PolicyTime -> com.baidu.inf.iis.bcs.policy.PolicyTime:
    java.util.List singleTimeList -> singleTimeList
    java.util.List timeRangeList -> timeRangeList
    com.baidu.inf.iis.bcs.policy.PolicyTime addSingleTime(java.lang.String) -> addSingleTime
    com.baidu.inf.iis.bcs.policy.PolicyTime addTimeRange(com.baidu.inf.iis.bcs.model.Pair) -> addTimeRange
    java.util.List getSingleTimeList() -> getSingleTimeList
    java.util.List getTimeRangeList() -> getTimeRangeList
    boolean isEmpty() -> isEmpty
    void setSingleTimeList(java.util.List) -> setSingleTimeList
    void setTimeRangeList(java.util.List) -> setTimeRangeList
com.baidu.inf.iis.bcs.policy.Statement -> com.baidu.inf.iis.bcs.policy.Statement:
    java.util.List user -> user
    java.util.List resource -> resource
    java.util.List action -> action
    com.baidu.inf.iis.bcs.policy.PolicyEffect effect -> effect
    com.baidu.inf.iis.bcs.policy.PolicyTime time -> time
    com.baidu.inf.iis.bcs.policy.PolicyIP ip -> ip
    com.baidu.inf.iis.bcs.policy.Statement addAction(com.baidu.inf.iis.bcs.policy.PolicyAction) -> addAction
    com.baidu.inf.iis.bcs.policy.Statement addResource(java.lang.String) -> addResource
    com.baidu.inf.iis.bcs.policy.Statement addUser(java.lang.String) -> addUser
    java.util.List getAction() -> getAction
    com.baidu.inf.iis.bcs.policy.PolicyEffect getEffect() -> getEffect
    com.baidu.inf.iis.bcs.policy.PolicyIP getIp() -> getIp
    java.util.List getResource() -> getResource
    com.baidu.inf.iis.bcs.policy.PolicyTime getTime() -> getTime
    java.util.List getUser() -> getUser
    void setAction(java.util.List) -> setAction
    void setEffect(com.baidu.inf.iis.bcs.policy.PolicyEffect) -> setEffect
    void setIp(com.baidu.inf.iis.bcs.policy.PolicyIP) -> setIp
    void setResource(java.util.List) -> setResource
    void setTime(com.baidu.inf.iis.bcs.policy.PolicyTime) -> setTime
    void setUser(java.util.List) -> setUser
com.baidu.inf.iis.bcs.request.BaiduBCSRequest -> com.baidu.inf.iis.bcs.request.BaiduBCSRequest:
    java.lang.String bucket -> bucket
    java.lang.String object -> object
    com.baidu.inf.iis.bcs.http.HttpMethodName httpMethod -> httpMethod
    java.lang.String getBucket() -> getBucket
    com.baidu.inf.iis.bcs.http.HttpMethodName getHttpMethod() -> getHttpMethod
    java.lang.String getObject() -> getObject
    void setBucket(java.lang.String) -> setBucket
    void setHttpMethod(com.baidu.inf.iis.bcs.http.HttpMethodName) -> setHttpMethod
    void setObject(java.lang.String) -> setObject
com.baidu.inf.iis.bcs.request.CopyObjectRequest -> com.baidu.inf.iis.bcs.request.CopyObjectRequest:
    com.baidu.inf.iis.bcs.model.ObjectMetadata destMetadata -> destMetadata
    com.baidu.inf.iis.bcs.model.Resource source -> source
    com.baidu.inf.iis.bcs.model.Resource dest -> dest
    java.lang.String sourceEtag -> sourceEtag
    java.lang.String sourceDirective -> sourceDirective
    com.baidu.inf.iis.bcs.model.Resource getDest() -> getDest
    com.baidu.inf.iis.bcs.model.ObjectMetadata getDestMetadata() -> getDestMetadata
    com.baidu.inf.iis.bcs.model.Resource getSource() -> getSource
    void setDest(com.baidu.inf.iis.bcs.model.Resource) -> setDest
    void setDestMetadata(com.baidu.inf.iis.bcs.model.ObjectMetadata) -> setDestMetadata
    void setSource(com.baidu.inf.iis.bcs.model.Resource) -> setSource
    java.lang.String getSourceEtag() -> getSourceEtag
    void setSourceEtag(java.lang.String) -> setSourceEtag
    java.lang.String getSourceDirective() -> getSourceDirective
    void setSourceDirective(java.lang.String) -> setSourceDirective
com.baidu.inf.iis.bcs.request.CreateBucketRequest -> com.baidu.inf.iis.bcs.request.CreateBucketRequest:
    com.baidu.inf.iis.bcs.model.X_BS_ACL acl -> acl
    com.baidu.inf.iis.bcs.model.X_BS_ACL getAcl() -> getAcl
    void setAcl(com.baidu.inf.iis.bcs.model.X_BS_ACL) -> setAcl
com.baidu.inf.iis.bcs.request.DeleteBucketRequest -> com.baidu.inf.iis.bcs.request.DeleteBucketRequest:
com.baidu.inf.iis.bcs.request.DeleteObjectRequest -> com.baidu.inf.iis.bcs.request.DeleteObjectRequest:
com.baidu.inf.iis.bcs.request.GenerateUrlRequest -> com.baidu.inf.iis.bcs.request.GenerateUrlRequest:
    com.baidu.inf.iis.bcs.auth.BCSSignCondition bcsSignCondition -> bcsSignCondition
    com.baidu.inf.iis.bcs.auth.BCSSignCondition getBcsSignCondition() -> getBcsSignCondition
    void setBcsSignCondition(com.baidu.inf.iis.bcs.auth.BCSSignCondition) -> setBcsSignCondition
com.baidu.inf.iis.bcs.request.GetBucketPolicyRequest -> com.baidu.inf.iis.bcs.request.GetBucketPolicyRequest:
com.baidu.inf.iis.bcs.request.GetObjectMetadataRequest -> com.baidu.inf.iis.bcs.request.GetObjectMetadataRequest:
com.baidu.inf.iis.bcs.request.GetObjectPolicyRequest -> com.baidu.inf.iis.bcs.request.GetObjectPolicyRequest:
com.baidu.inf.iis.bcs.request.GetObjectRequest -> com.baidu.inf.iis.bcs.request.GetObjectRequest:
    java.lang.String versionKey -> versionKey
    com.baidu.inf.iis.bcs.model.Pair range -> range
    com.baidu.inf.iis.bcs.model.ObjectMetadata objectMetadata -> objectMetadata
    com.baidu.inf.iis.bcs.model.ObjectMetadata getObjectMetadata() -> getObjectMetadata
    void setObjectMetadata(com.baidu.inf.iis.bcs.model.ObjectMetadata) -> setObjectMetadata
    com.baidu.inf.iis.bcs.model.Pair getRange() -> getRange
    void setRange(com.baidu.inf.iis.bcs.model.Pair) -> setRange
    java.lang.String getVersionKey() -> getVersionKey
    void setVersionKey(java.lang.String) -> setVersionKey
com.baidu.inf.iis.bcs.request.IsObjectExistRequest -> com.baidu.inf.iis.bcs.request.IsObjectExistRequest:
com.baidu.inf.iis.bcs.request.ListBucketRequest -> com.baidu.inf.iis.bcs.request.ListBucketRequest:
com.baidu.inf.iis.bcs.request.ListObjectRequest -> com.baidu.inf.iis.bcs.request.ListObjectRequest:
    java.lang.String prefix -> prefix
    int start -> start
    int limit -> limit
    int listModel -> listModel
    int getLimit() -> getLimit
    int getListModel() -> getListModel
    java.lang.String getPrefix() -> getPrefix
    int getStart() -> getStart
    void setLimit(int) -> setLimit
    void setListModel(int) -> setListModel
    void setPrefix(java.lang.String) -> setPrefix
    void setStart(int) -> setStart
com.baidu.inf.iis.bcs.request.ListObjectVersionRequest -> com.baidu.inf.iis.bcs.request.ListObjectVersionRequest:
com.baidu.inf.iis.bcs.request.PutBucketPolicyRequest -> com.baidu.inf.iis.bcs.request.PutBucketPolicyRequest:
    com.baidu.inf.iis.bcs.policy.Policy policy -> policy
    com.baidu.inf.iis.bcs.model.X_BS_ACL acl -> acl
    com.baidu.inf.iis.bcs.model.X_BS_ACL getAcl() -> getAcl
    com.baidu.inf.iis.bcs.policy.Policy getPolicy() -> getPolicy
    void setAcl(com.baidu.inf.iis.bcs.model.X_BS_ACL) -> setAcl
    void setPolicy(com.baidu.inf.iis.bcs.policy.Policy) -> setPolicy
com.baidu.inf.iis.bcs.request.PutObjectPolicyRequest -> com.baidu.inf.iis.bcs.request.PutObjectPolicyRequest:
    com.baidu.inf.iis.bcs.policy.Policy policy -> policy
    com.baidu.inf.iis.bcs.model.X_BS_ACL acl -> acl
    com.baidu.inf.iis.bcs.model.X_BS_ACL getAcl() -> getAcl
    com.baidu.inf.iis.bcs.policy.Policy getPolicy() -> getPolicy
    void setAcl(com.baidu.inf.iis.bcs.model.X_BS_ACL) -> setAcl
    void setPolicy(com.baidu.inf.iis.bcs.policy.Policy) -> setPolicy
com.baidu.inf.iis.bcs.request.PutObjectRequest -> com.baidu.inf.iis.bcs.request.PutObjectRequest:
    java.io.File file -> file
    java.io.InputStream objectContent -> objectContent
    com.baidu.inf.iis.bcs.model.ObjectMetadata metadata -> metadata
    com.baidu.inf.iis.bcs.model.X_BS_ACL acl -> acl
    com.baidu.inf.iis.bcs.model.X_BS_ACL getAcl() -> getAcl
    java.io.File getFile() -> getFile
    com.baidu.inf.iis.bcs.model.ObjectMetadata getMetadata() -> getMetadata
    java.io.InputStream getObjectContent() -> getObjectContent
    void setAcl(com.baidu.inf.iis.bcs.model.X_BS_ACL) -> setAcl
    void setFile(java.io.File) -> setFile
    void setMetadata(com.baidu.inf.iis.bcs.model.ObjectMetadata) -> setMetadata
    void setObjectContent(java.io.InputStream) -> setObjectContent
com.baidu.inf.iis.bcs.request.PutSuperfileRequest -> com.baidu.inf.iis.bcs.request.PutSuperfileRequest:
    java.util.List subObjectList -> subObjectList
    com.baidu.inf.iis.bcs.model.ObjectMetadata objectMetadata -> objectMetadata
    com.baidu.inf.iis.bcs.model.X_BS_ACL acl -> acl
    com.baidu.inf.iis.bcs.model.X_BS_ACL getAcl() -> getAcl
    com.baidu.inf.iis.bcs.model.ObjectMetadata getObjectMetadata() -> getObjectMetadata
    java.util.List getSubObjectList() -> getSubObjectList
    void setAcl(com.baidu.inf.iis.bcs.model.X_BS_ACL) -> setAcl
    void setObjectMetadata(com.baidu.inf.iis.bcs.model.ObjectMetadata) -> setObjectMetadata
    void setSubObjectList(java.util.List) -> setSubObjectList
com.baidu.inf.iis.bcs.request.SetObjectMetadataRequest -> com.baidu.inf.iis.bcs.request.SetObjectMetadataRequest:
    com.baidu.inf.iis.bcs.model.ObjectMetadata metadata -> metadata
    com.baidu.inf.iis.bcs.model.ObjectMetadata getMetadata() -> getMetadata
    void setMetadata(com.baidu.inf.iis.bcs.model.ObjectMetadata) -> setMetadata
com.baidu.inf.iis.bcs.response.BaiduBCSResponse -> com.baidu.inf.iis.bcs.response.BaiduBCSResponse:
    java.lang.Object result -> result
    java.lang.String requestId -> requestId
    java.lang.String getRequestId() -> getRequestId
    java.lang.Object getResult() -> getResult
    void setRequestId(java.lang.String) -> setRequestId
    void setResult(java.lang.Object) -> setResult
com.baidu.inf.iis.bcs.utils.Constants -> com.baidu.inf.iis.bcs.utils.Constants:
    java.lang.String DEFAULT_ENCODING -> DEFAULT_ENCODING
    java.lang.String NULL_VERSION_ID -> NULL_VERSION_ID
    int KB -> KB
    int MB -> MB
    long GB -> GB
com.baidu.inf.iis.bcs.utils.DateUtils -> com.baidu.inf.iis.bcs.utils.DateUtils:
    java.text.SimpleDateFormat iso8601DateParser -> iso8601DateParser
    java.text.SimpleDateFormat alternateIo8601DateParser -> alternateIo8601DateParser
    java.text.SimpleDateFormat rfc822DateParser -> rfc822DateParser
    java.lang.String formatIso8601Date(java.util.Date) -> formatIso8601Date
    java.lang.String formatRfc822Date(java.util.Date) -> formatRfc822Date
    java.util.Date parseIso8601Date(java.lang.String) -> parseIso8601Date
    java.util.Date parseRfc822Date(java.lang.String) -> parseRfc822Date
com.baidu.inf.iis.bcs.utils.Mimetypes -> com.baidu.inf.iis.bcs.utils.Mimetypes:
    org.apache.commons.logging.Log log -> log
    java.lang.String MIMETYPE_XML -> MIMETYPE_XML
    java.lang.String MIMETYPE_HTML -> MIMETYPE_HTML
    java.lang.String MIMETYPE_OCTET_STREAM -> MIMETYPE_OCTET_STREAM
    java.lang.String MIMETYPE_GZIP -> MIMETYPE_GZIP
    com.baidu.inf.iis.bcs.utils.Mimetypes mimetypes -> mimetypes
    java.util.HashMap extensionToMimetypeMap -> extensionToMimetypeMap
    com.baidu.inf.iis.bcs.utils.Mimetypes getInstance() -> getInstance
    java.lang.String getMimetype(java.io.File) -> getMimetype
    java.lang.String getMimetype(java.lang.String) -> getMimetype
    void loadAndReplaceMimetypes(java.io.InputStream) -> loadAndReplaceMimetypes
com.baidu.inf.iis.bcs.utils.ServiceUtils -> com.baidu.inf.iis.bcs.utils.ServiceUtils:
    org.apache.commons.logging.Log log -> log
    com.baidu.inf.iis.bcs.utils.DateUtils dateUtils -> dateUtils
    byte[] computeMD5Hash(byte[]) -> computeMD5Hash
    byte[] computeMD5Hash(java.io.InputStream) -> computeMD5Hash
    java.net.URL convertRequestToUrl(com.baidu.inf.iis.bcs.http.BCSHttpRequest) -> convertRequestToUrl
    java.lang.String formatIso8601Date(java.util.Date) -> formatIso8601Date
    java.lang.String formatRfc822Date(java.util.Date) -> formatRfc822Date
    byte[] fromBase64(java.lang.String) -> fromBase64
    byte[] fromHex(java.lang.String) -> fromHex
    java.lang.String join(java.util.List) -> join
    java.util.Date parseIso8601Date(java.lang.String) -> parseIso8601Date
    java.util.Date parseRfc822Date(java.lang.String) -> parseRfc822Date
    java.lang.String removeQuotes(java.lang.String) -> removeQuotes
    java.lang.String toBase64(byte[]) -> toBase64
    byte[] toByteArray(java.lang.String) -> toByteArray
    java.lang.String toHex(byte[]) -> toHex
    java.lang.String urlEncode(java.lang.String) -> urlEncode
com.baidu.inf.iis.bcs.utils.StringUtils -> com.baidu.inf.iis.bcs.utils.StringUtils:
    java.lang.String trimSlash(java.lang.String) -> trimSlash
com.esotericsoftware.tablelayout.BaseTableLayout -> com.a.a.a:
    int CENTER -> CENTER
    int TOP -> TOP
    int BOTTOM -> BOTTOM
    int LEFT -> LEFT
    int RIGHT -> RIGHT
    com.esotericsoftware.tablelayout.Toolkit toolkit -> toolkit
    java.lang.Object table -> table
    int columns -> columns
    int rows -> rows
    java.util.ArrayList cells -> cells
    com.esotericsoftware.tablelayout.Cell cellDefaults -> cellDefaults
    java.util.ArrayList columnDefaults -> columnDefaults
    com.esotericsoftware.tablelayout.Cell rowDefaults -> rowDefaults
    boolean sizeInvalid -> sizeInvalid
    float[] columnMinWidth -> columnMinWidth
    float[] rowMinHeight -> rowMinHeight
    float[] columnPrefWidth -> columnPrefWidth
    float[] rowPrefHeight -> rowPrefHeight
    float tableMinWidth -> tableMinWidth
    float tableMinHeight -> tableMinHeight
    float tablePrefWidth -> tablePrefWidth
    float tablePrefHeight -> tablePrefHeight
    float[] columnWidth -> columnWidth
    float[] rowHeight -> rowHeight
    float[] expandWidth -> expandWidth
    float[] expandHeight -> expandHeight
    float[] columnWeightedWidth -> columnWeightedWidth
    float[] rowWeightedHeight -> rowWeightedHeight
    com.esotericsoftware.tablelayout.Value padTop -> padTop
    com.esotericsoftware.tablelayout.Value padLeft -> padLeft
    com.esotericsoftware.tablelayout.Value padBottom -> padBottom
    com.esotericsoftware.tablelayout.Value padRight -> padRight
    int align -> align
    int debug$18f23810 -> debug$18f23810
    void invalidate() -> invalidate
    void invalidateHierarchy() -> invalidateHierarchy
    com.esotericsoftware.tablelayout.Cell add(java.lang.Object) -> add
    com.esotericsoftware.tablelayout.Cell row() -> row
    void endRow() -> endRow
    com.esotericsoftware.tablelayout.Cell columnDefaults(int) -> columnDefaults
    void reset() -> reset
    void clear() -> clear
    com.esotericsoftware.tablelayout.Cell getCell(java.lang.Object) -> getCell
    java.util.List getCells() -> getCells
    void setToolkit(com.esotericsoftware.tablelayout.Toolkit) -> setToolkit
    java.lang.Object getTable() -> getTable
    void setTable(java.lang.Object) -> setTable
    float getMinWidth() -> getMinWidth
    float getMinHeight() -> getMinHeight
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    com.esotericsoftware.tablelayout.Cell defaults() -> defaults
    com.esotericsoftware.tablelayout.BaseTableLayout pad(com.esotericsoftware.tablelayout.Value) -> pad
    com.esotericsoftware.tablelayout.BaseTableLayout pad(com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value) -> pad
    com.esotericsoftware.tablelayout.BaseTableLayout padTop(com.esotericsoftware.tablelayout.Value) -> padTop
    com.esotericsoftware.tablelayout.BaseTableLayout padLeft(com.esotericsoftware.tablelayout.Value) -> padLeft
    com.esotericsoftware.tablelayout.BaseTableLayout padBottom(com.esotericsoftware.tablelayout.Value) -> padBottom
    com.esotericsoftware.tablelayout.BaseTableLayout padRight(com.esotericsoftware.tablelayout.Value) -> padRight
    com.esotericsoftware.tablelayout.BaseTableLayout pad(float) -> pad
    com.esotericsoftware.tablelayout.BaseTableLayout pad(float,float,float,float) -> pad
    com.esotericsoftware.tablelayout.BaseTableLayout padTop(float) -> padTop
    com.esotericsoftware.tablelayout.BaseTableLayout padLeft(float) -> padLeft
    com.esotericsoftware.tablelayout.BaseTableLayout padBottom(float) -> padBottom
    com.esotericsoftware.tablelayout.BaseTableLayout padRight(float) -> padRight
    com.esotericsoftware.tablelayout.BaseTableLayout align(int) -> align
    com.esotericsoftware.tablelayout.BaseTableLayout center() -> center
    com.esotericsoftware.tablelayout.BaseTableLayout top() -> top
    com.esotericsoftware.tablelayout.BaseTableLayout left() -> left
    com.esotericsoftware.tablelayout.BaseTableLayout bottom() -> bottom
    com.esotericsoftware.tablelayout.BaseTableLayout right() -> right
    com.esotericsoftware.tablelayout.BaseTableLayout debug() -> debug
    com.esotericsoftware.tablelayout.BaseTableLayout debugTable() -> debugTable
    com.esotericsoftware.tablelayout.BaseTableLayout debugCell() -> debugCell
    com.esotericsoftware.tablelayout.BaseTableLayout debugWidget() -> debugWidget
    com.esotericsoftware.tablelayout.BaseTableLayout debug$7f15fa70(int) -> debug$7f15fa70
    int getDebug$f312a0f() -> getDebug$f312a0f
    com.esotericsoftware.tablelayout.Value getPadTopValue() -> getPadTopValue
    float getPadTop() -> getPadTop
    com.esotericsoftware.tablelayout.Value getPadLeftValue() -> getPadLeftValue
    float getPadLeft() -> getPadLeft
    com.esotericsoftware.tablelayout.Value getPadBottomValue() -> getPadBottomValue
    float getPadBottom() -> getPadBottom
    com.esotericsoftware.tablelayout.Value getPadRightValue() -> getPadRightValue
    float getPadRight() -> getPadRight
    int getAlign() -> getAlign
    int getRow(float) -> getRow
    float[] ensureSize(float[],int) -> ensureSize
    float w(com.esotericsoftware.tablelayout.Value) -> w
    float h(com.esotericsoftware.tablelayout.Value) -> h
    float w(com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Cell) -> w
    float h(com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Cell) -> h
    void computeSize() -> computeSize
    void layout(float,float,float,float) -> layout
com.esotericsoftware.tablelayout.Cell -> com.a.a.b:
    com.esotericsoftware.tablelayout.Value minWidth -> a
    com.esotericsoftware.tablelayout.Value minHeight -> b
    com.esotericsoftware.tablelayout.Value prefWidth -> c
    com.esotericsoftware.tablelayout.Value prefHeight -> d
    com.esotericsoftware.tablelayout.Value maxWidth -> e
    com.esotericsoftware.tablelayout.Value maxHeight -> f
    com.esotericsoftware.tablelayout.Value spaceTop -> g
    com.esotericsoftware.tablelayout.Value spaceLeft -> h
    com.esotericsoftware.tablelayout.Value spaceBottom -> i
    com.esotericsoftware.tablelayout.Value spaceRight -> j
    com.esotericsoftware.tablelayout.Value padTop -> k
    com.esotericsoftware.tablelayout.Value padLeft -> l
    com.esotericsoftware.tablelayout.Value padBottom -> m
    com.esotericsoftware.tablelayout.Value padRight -> n
    java.lang.Float fillX -> o
    java.lang.Float fillY -> p
    java.lang.Integer align -> q
    java.lang.Integer expandX -> r
    java.lang.Integer expandY -> s
    java.lang.Boolean ignore -> t
    java.lang.Integer colspan -> u
    java.lang.Boolean uniformX -> v
    java.lang.Boolean uniformY -> w
    java.lang.Object widget -> x
    float widgetX -> y
    float widgetY -> z
    float widgetWidth -> A
    float widgetHeight -> B
    com.esotericsoftware.tablelayout.BaseTableLayout layout -> K
    boolean endRow -> C
    int column -> D
    int row -> E
    int cellAboveIndex -> F
    float computedPadTop -> G
    float computedPadLeft -> H
    float computedPadBottom -> I
    float computedPadRight -> J
    void setLayout(com.esotericsoftware.tablelayout.BaseTableLayout) -> a
    void merge(com.esotericsoftware.tablelayout.Cell) -> a
    com.esotericsoftware.tablelayout.Cell setWidget(java.lang.Object) -> a
    java.lang.Object getWidget() -> a
    com.esotericsoftware.tablelayout.Cell space(float) -> a
    com.esotericsoftware.tablelayout.Cell fill() -> b
    com.esotericsoftware.tablelayout.Cell expand() -> c
    boolean getIgnore() -> d
    void setWidgetBounds(float,float,float,float) -> a
    float getWidgetX() -> e
    float getWidgetY() -> f
    void setWidgetY(float) -> b
    float getWidgetWidth() -> g
    float getWidgetHeight() -> h
    void clear() -> i
    void free() -> j
    void defaults() -> k
com.esotericsoftware.tablelayout.Toolkit -> com.a.a.c:
    com.esotericsoftware.tablelayout.Toolkit instance -> instance
    com.esotericsoftware.tablelayout.Cell obtainCell(com.esotericsoftware.tablelayout.BaseTableLayout) -> obtainCell
    void freeCell(com.esotericsoftware.tablelayout.Cell) -> freeCell
    void addChild(java.lang.Object,java.lang.Object) -> addChild
    void removeChild(java.lang.Object,java.lang.Object) -> removeChild
    float getMinWidth(java.lang.Object) -> getMinWidth
    float getMinHeight(java.lang.Object) -> getMinHeight
    float getPrefWidth(java.lang.Object) -> getPrefWidth
    float getPrefHeight(java.lang.Object) -> getPrefHeight
    float getMaxWidth(java.lang.Object) -> getMaxWidth
    float getMaxHeight(java.lang.Object) -> getMaxHeight
    float getWidth(java.lang.Object) -> getWidth
    float getHeight(java.lang.Object) -> getHeight
    void clearDebugRectangles(com.esotericsoftware.tablelayout.BaseTableLayout) -> clearDebugRectangles
    void addDebugRectangle$d3cbc44(com.esotericsoftware.tablelayout.BaseTableLayout,int,float,float,float,float) -> addDebugRectangle$d3cbc44
    void setWidget(com.esotericsoftware.tablelayout.BaseTableLayout,com.esotericsoftware.tablelayout.Cell,java.lang.Object) -> setWidget
    float width(float) -> width
    float height(float) -> height
com.esotericsoftware.tablelayout.Value -> com.a.a.d:
    com.esotericsoftware.tablelayout.Value zero -> a
    com.esotericsoftware.tablelayout.Value minWidth -> b
    com.esotericsoftware.tablelayout.Value minHeight -> c
    com.esotericsoftware.tablelayout.Value prefWidth -> d
    com.esotericsoftware.tablelayout.Value prefHeight -> e
    com.esotericsoftware.tablelayout.Value maxWidth -> f
    com.esotericsoftware.tablelayout.Value maxHeight -> g
    float get$5d527801() -> a
    float get(com.esotericsoftware.tablelayout.Cell) -> a
    float width(java.lang.Object) -> a
    float height(java.lang.Object) -> b
com.esotericsoftware.tablelayout.Value$1 -> com.a.a.e:
    float get(com.esotericsoftware.tablelayout.Cell) -> a
    float get$5d527801() -> a
com.esotericsoftware.tablelayout.Value$2 -> com.a.a.f:
    float get(com.esotericsoftware.tablelayout.Cell) -> a
com.esotericsoftware.tablelayout.Value$3 -> com.a.a.g:
    float get(com.esotericsoftware.tablelayout.Cell) -> a
com.esotericsoftware.tablelayout.Value$4 -> com.a.a.h:
    float get(com.esotericsoftware.tablelayout.Cell) -> a
com.esotericsoftware.tablelayout.Value$5 -> com.a.a.i:
    float get(com.esotericsoftware.tablelayout.Cell) -> a
com.esotericsoftware.tablelayout.Value$6 -> com.a.a.j:
    float get(com.esotericsoftware.tablelayout.Cell) -> a
com.esotericsoftware.tablelayout.Value$7 -> com.a.a.k:
    float get(com.esotericsoftware.tablelayout.Cell) -> a
com.esotericsoftware.tablelayout.Value$CellValue -> com.a.a.l:
    float get$5d527801() -> a
com.esotericsoftware.tablelayout.Value$FixedValue -> com.a.a.m:
    float value -> h
    float get$5d527801() -> a
    float get(com.esotericsoftware.tablelayout.Cell) -> a
com.unionpay.UPPayAssistEx -> com.unionpay.UPPayAssistEx:
    int PLUGIN_VALID -> PLUGIN_VALID
    int PLUGIN_NOT_FOUND -> PLUGIN_NOT_FOUND
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    int l -> l
    void startPayByJAR(android.app.Activity,java.lang.Class,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> startPayByJAR
    void a(java.lang.String,android.os.Bundle,java.lang.String) -> a
    int startPay(android.app.Activity,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> startPay
    int startPayFromBrowser(android.app.Activity,java.lang.String,java.lang.String) -> startPayFromBrowser
    int a(android.app.Activity,java.lang.String,java.lang.String) -> a
    int a(android.app.Activity,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    boolean a(android.app.Activity) -> a
    boolean installUPPayPlugin(android.content.Context) -> installUPPayPlugin
com.unionpay.mpay.global.a -> com.unionpay.mpay.global.a:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    int j -> j
    int k -> k
    int l -> l
    int m -> m
    int n -> n
    int o -> o
    int p -> p
    int q -> q
    int r -> r
    int s -> s
    int t -> t
    int u -> u
    int v -> v
    int w -> w
    int x -> x
    int y -> y
    int z -> z
    int A -> A
    int B -> B
    int C -> C
    int D -> D
    int E -> E
    int F -> F
    int G -> G
    int H -> H
    int I -> I
    int J -> J
    int K -> K
    boolean L -> L
    void a(android.content.Context) -> a
com.unionpay.mpay.languages.a -> com.unionpay.mpay.languages.a:
com.unionpay.mpay.languages.b -> com.unionpay.mpay.languages.b:
com.unionpay.mpay.languages.c -> com.unionpay.mpay.languages.c:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    java.lang.String t -> t
    java.lang.String u -> u
    java.lang.String v -> v
    java.lang.String w -> w
    java.lang.String x -> x
    java.lang.String y -> y
    java.lang.String z -> z
    java.lang.String A -> A
    java.lang.String B -> B
    java.lang.String C -> C
    java.lang.String D -> D
    java.lang.String E -> E
    java.lang.String F -> F
    java.lang.String G -> G
    java.lang.String H -> H
    java.lang.String I -> I
    java.lang.String J -> J
    java.lang.String K -> K
    java.lang.String L -> L
    java.lang.String M -> M
    java.lang.String N -> N
    java.lang.String O -> O
    java.lang.String P -> P
    java.lang.String Q -> Q
    java.lang.String R -> R
    java.lang.String S -> S
    java.lang.String T -> T
    java.lang.String U -> U
    java.lang.String V -> V
    java.lang.String W -> W
    java.lang.String X -> X
    java.lang.String Y -> Y
    java.lang.String Z -> Z
    java.lang.String aa -> aa
    java.lang.String ab -> ab
    java.lang.String ac -> ac
    java.lang.String ad -> ad
    java.lang.String ae -> ae
    java.lang.String af -> af
    java.lang.String ag -> ag
    java.lang.String ah -> ah
    java.lang.String ai -> ai
    java.lang.String aj -> aj
    java.lang.String ak -> ak
    java.lang.String al -> al
    java.lang.String am -> am
    java.lang.String an -> an
    java.lang.String ao -> ao
    java.lang.String ap -> ap
    java.lang.String aq -> aq
    com.unionpay.mpay.languages.c ar -> ar
    void a() -> a
com.unionpay.mpay.net.HttpNative -> com.unionpay.mpay.net.HttpNative:
    com.unionpay.mpay.net.HttpNative a -> a
    com.unionpay.mpay.net.HttpNative a() -> a
    java.lang.String getIssuer() -> getIssuer
    java.lang.String getSubject() -> getSubject
com.unionpay.mpay.net.a -> com.unionpay.mpay.net.a:
    javax.net.ssl.SSLContext a -> a
    javax.net.ssl.SSLContext a() -> a
    javax.net.ssl.SSLContext b() -> b
    java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams) -> connectSocket
    java.net.Socket createSocket() -> createSocket
    boolean isSecure(java.net.Socket) -> isSecure
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.unionpay.mpay.net.b -> com.unionpay.mpay.net.b:
    javax.net.ssl.X509TrustManager a -> a
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
com.unionpay.mpay.net.c -> com.unionpay.mpay.net.c:
    org.apache.http.client.HttpClient a -> a
    org.apache.http.HttpResponse b -> b
    org.apache.http.HttpEntity c -> c
    byte[] d -> d
    java.io.InputStream e -> e
    com.unionpay.mpay.net.d f -> f
    int a() -> a
    byte[] b() -> b
    java.lang.String c() -> c
com.unionpay.mpay.net.d -> com.unionpay.mpay.net.d:
    int a -> a
    java.lang.String b -> b
    java.util.HashMap c -> c
    byte[] d -> d
    int a() -> a
    void a(java.lang.String) -> a
    java.lang.String b() -> b
    java.util.HashMap c() -> c
    void a(java.util.HashMap) -> a
    byte[] d() -> d
com.unionpay.mpay.resource.a -> com.unionpay.mpay.resource.a:
com.unionpay.mpay.resource.b -> com.unionpay.mpay.resource.b:
    int[][] a -> a
    float[][] b -> b
    float[][] c -> c
    int[][] d -> d
    int[] e -> e
    int[] f -> f
    int[] g -> g
    float[] h -> h
com.unionpay.mpay.resource.c -> com.unionpay.mpay.resource.c:
    java.util.HashMap a -> a
    android.content.Context b -> b
    com.unionpay.mpay.resource.c c -> c
    com.unionpay.mpay.resource.c a(android.content.Context) -> a
    android.graphics.drawable.Drawable a() -> a
    android.graphics.drawable.Drawable a(int) -> a
    android.graphics.drawable.Drawable a(int,int,int) -> a
    void b() -> b
com.unionpay.mpay.utils.UPPayEngine -> com.unionpay.mpay.utils.UPPayEngine:
    com.unionpay.mpay.net.d a -> a
    java.lang.String b -> b
    android.content.Context c -> c
    android.os.Handler d -> d
    com.unionpay.mpay.utils.l e -> e
    com.unionpay.uppay.d f -> f
    int g -> g
    void a(com.unionpay.uppay.d) -> a
    void a(com.unionpay.mpay.utils.l) -> a
    void a() -> a
    void a(java.lang.String) -> a
    void a(int) -> a
    int b() -> b
    boolean a(java.lang.String,java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void b(java.lang.String,java.lang.String) -> b
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    void c(java.lang.String,java.lang.String) -> c
    void a(java.lang.String,java.lang.String,int) -> a
    void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void g(java.lang.String) -> g
    void c() -> c
    void run() -> run
    boolean handleMessage(android.os.Message) -> handleMessage
    void h(java.lang.String) -> h
    int initJNIEnv(android.app.Activity,boolean,boolean) -> initJNIEnv
    java.lang.String getServerUrl(int) -> getServerUrl
    void setSessionKey(int,java.lang.String) -> setSessionKey
    java.lang.String decryptResponse(int,java.lang.String) -> decryptResponse
    java.lang.String retrieveInitializeKey(int) -> retrieveInitializeKey
    boolean verifySign(int,java.lang.String,java.lang.String) -> verifySign
    java.lang.String initMessage(int,java.lang.String) -> initMessage
    java.lang.String unBoundMessage(int,java.lang.String) -> unBoundMessage
    java.lang.String ruleMessage(int,java.lang.String) -> ruleMessage
    java.lang.String followRulesMessage(int,java.lang.String) -> followRulesMessage
    java.lang.String openRuleMessage(int,java.lang.String,java.lang.String) -> openRuleMessage
    java.lang.String openupgradeMessage(int,java.lang.String) -> openupgradeMessage
    java.lang.String getloginrules(int) -> getloginrules
    java.lang.String getUserInfo(int,java.lang.String) -> getUserInfo
    java.lang.String commonMessage(int,java.lang.String,java.lang.String) -> commonMessage
    java.lang.String payingMessage(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> payingMessage
com.unionpay.mpay.utils.a -> com.unionpay.mpay.utils.a:
    byte[] b -> b
    byte[] c -> c
    byte[] d -> d
    byte[] e -> e
    byte[] f -> f
    byte[] g -> g
    boolean a -> a
    byte[] a(byte[],int) -> a
    byte[] a(java.lang.String) -> a
    byte[] b(java.lang.String) -> b
com.unionpay.mpay.utils.b -> com.unionpay.mpay.utils.b:
    java.lang.String a(android.content.Context) -> a
com.unionpay.mpay.utils.c -> com.unionpay.mpay.utils.c:
    int a(android.content.Context,float) -> a
com.unionpay.mpay.utils.d -> com.unionpay.mpay.utils.d:
    int[] a -> a
    int[] b -> b
    int[] c -> c
    int[] d -> d
    int[] e -> e
    int[] f -> f
    android.content.res.ColorStateList a(int,int) -> a
    android.graphics.drawable.ShapeDrawable a(int,int,float) -> a
    android.graphics.drawable.Drawable b(int,int) -> b
    android.graphics.drawable.Drawable a(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> a
    android.graphics.drawable.Drawable a(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> a
    android.graphics.drawable.Drawable a(int,int[],float[],float,float,float,float) -> a
    float[] a(int,float) -> a
    android.graphics.drawable.Drawable a(boolean) -> a
com.unionpay.mpay.utils.e -> com.unionpay.mpay.utils.e:
    java.lang.String a(android.content.Context) -> a
com.unionpay.mpay.utils.f -> com.unionpay.mpay.utils.f:
    boolean a(android.content.Intent,com.unionpay.uppay.d) -> a
    boolean a(java.lang.String,com.unionpay.uppay.d) -> a
    boolean b(java.lang.String,com.unionpay.uppay.d) -> b
    java.lang.String a(java.lang.String) -> a
com.unionpay.mpay.utils.g -> com.unionpay.mpay.utils.g:
    java.lang.String a(java.lang.String) -> a
com.unionpay.mpay.utils.h -> com.unionpay.mpay.utils.h:
    java.lang.String a(org.json.JSONObject,java.lang.String) -> a
    java.lang.String a(org.json.JSONArray,int) -> a
    org.json.JSONObject b(org.json.JSONObject,java.lang.String) -> b
    org.json.JSONArray c(org.json.JSONObject,java.lang.String) -> c
    java.util.List d(org.json.JSONObject,java.lang.String) -> d
    java.lang.Object b(org.json.JSONArray,int) -> b
    boolean e(org.json.JSONObject,java.lang.String) -> e
com.unionpay.mpay.utils.i -> com.unionpay.mpay.utils.i:
    boolean a -> a
    int b -> b
    int a(java.lang.String,java.lang.String) -> a
    int b(java.lang.String,java.lang.String) -> b
    int c(java.lang.String,java.lang.String) -> c
    int a(int,java.lang.String,java.lang.String) -> a
com.unionpay.mpay.utils.j -> com.unionpay.mpay.utils.j:
    void a(android.content.Context,com.unionpay.uppay.d) -> a
com.unionpay.mpay.utils.k -> com.unionpay.mpay.utils.k:
    java.lang.String a -> a
    java.lang.String b -> b
    void run() -> run
com.unionpay.mpay.utils.l -> com.unionpay.mpay.utils.l:
    void a(int,java.lang.String) -> a
com.unionpay.mpay.utils.m -> com.unionpay.mpay.utils.m:
    int a -> a
    java.lang.String b -> b
    com.unionpay.mpay.utils.UPPayEngine c -> c
com.unionpay.mpay.utils.n -> com.unionpay.mpay.utils.n:
    boolean a(byte[]) -> a
com.unionpay.mpay.utils.o -> com.unionpay.mpay.utils.o:
    com.unionpay.mpay.net.d a -> a
    android.os.Handler b -> b
    com.unionpay.mpay.utils.p c -> c
    void a() -> a
    void run() -> run
    boolean handleMessage(android.os.Message) -> handleMessage
com.unionpay.mpay.utils.p -> com.unionpay.mpay.utils.p:
    void a(int,byte[]) -> a
com.unionpay.mpay.views.a -> com.unionpay.mpay.views.a:
    void a(org.json.JSONObject) -> a
com.unionpay.mpay.views.aa -> com.unionpay.mpay.views.aa:
    com.unionpay.mpay.views.x a -> a
    void onClick(android.view.View) -> onClick
com.unionpay.mpay.views.ab -> com.unionpay.mpay.views.ab:
    com.unionpay.mpay.views.x a -> a
    void onClick(android.view.View) -> onClick
com.unionpay.mpay.views.ac -> com.unionpay.mpay.views.ac:
    android.widget.ProgressBar a -> a
    java.lang.String o -> o
    int p -> p
    void d() -> d
    void c(int) -> c
    void b(int,java.lang.String) -> b
    void a(org.json.JSONObject) -> a
    void e() -> e
    void a(java.lang.String,java.lang.String,java.lang.String) -> a
    void c() -> c
    void a(java.lang.String) -> a
    void a(int,byte[]) -> a
com.unionpay.mpay.views.ad -> com.unionpay.mpay.views.ad:
    java.lang.String a -> a
    com.unionpay.mpay.views.ac b -> b
    void onClick(android.view.View) -> onClick
com.unionpay.mpay.views.ae -> com.unionpay.mpay.views.ae:
    com.unionpay.mpay.views.ac a -> a
    void onClick(android.view.View) -> onClick
com.unionpay.mpay.views.af -> com.unionpay.mpay.views.af:
    int p -> p
    com.unionpay.mpay_2.upview.a q -> q
    android.view.View$OnClickListener r -> r
    android.view.View$OnClickListener s -> s
    android.widget.TextView t -> t
    com.unionpay.mpay_2.upview.listview.g a -> a
    android.widget.LinearLayout o -> o
    int u -> u
    int v -> v
    int w -> w
    com.unionpay.mpay_2.upwidget.c x -> x
    void a() -> a
    void b() -> b
    boolean e() -> e
    void a(android.widget.LinearLayout,org.json.JSONArray) -> a
    void a(android.view.View) -> a
    void f(int) -> f
    void a(com.unionpay.mpay_2.upview.b) -> a
    void a(boolean) -> a
    void a(org.json.JSONObject) -> a
    boolean b(java.lang.String) -> b
    void g(int) -> g
    void f() -> f
    void c() -> c
    void a(java.lang.String) -> a
    com.unionpay.mpay_2.upview.a a(com.unionpay.mpay.views.af) -> a
    com.unionpay.mpay_2.upwidget.c b(com.unionpay.mpay.views.af) -> b
    void a(com.unionpay.mpay.views.af,java.lang.String) -> a
com.unionpay.mpay.views.ag -> com.unionpay.mpay.views.ag:
    com.unionpay.mpay.views.af a -> a
    void onClick(android.view.View) -> onClick
com.unionpay.mpay.views.ah -> com.unionpay.mpay.views.ah:
    com.unionpay.mpay.views.af a -> a
    void onClick(android.view.View) -> onClick
com.unionpay.mpay.views.ai -> com.unionpay.mpay.views.ai:
    java.lang.String a -> a
    com.unionpay.mpay.views.af b -> b
    void onClick(android.view.View) -> onClick
com.unionpay.mpay.views.aj -> com.unionpay.mpay.views.aj:
    java.lang.String a -> a
    com.unionpay.mpay.views.af b -> b
    void onClick(android.view.View) -> onClick
com.unionpay.mpay.views.ak -> com.unionpay.mpay.views.ak:
    android.widget.TextView a -> a
    android.view.View$OnClickListener o -> o
    com.unionpay.mpay_2.upview.a p -> p
    void a() -> a
    void b() -> b
    void a(org.json.JSONObject) -> a
    void a(com.unionpay.mpay_2.upview.b) -> a
    void a(boolean) -> a
    void a(java.lang.String) -> a
    void a(com.unionpay.mpay.views.ak) -> a
com.unionpay.mpay.views.al -> com.unionpay.mpay.views.al:
    com.unionpay.mpay.views.ak a -> a
    void onClick(android.view.View) -> onClick
com.unionpay.mpay.views.am -> com.unionpay.mpay.views.am:
    java.lang.String a -> a
    com.unionpay.mpay.views.ak b -> b
    void onClick(android.view.View) -> onClick
com.unionpay.mpay.views.an -> com.unionpay.mpay.views.an:
    android.widget.TextView a -> a
    android.view.View$OnClickListener o -> o
    void b() -> b
    void a() -> a
    void c() -> c
    void a(org.json.JSONObject) -> a
    void e() -> e
    void a(com.unionpay.mpay.views.an) -> a
com.unionpay.mpay.views.ao -> com.unionpay.mpay.views.ao:
    com.unionpay.mpay.views.an a -> a
    void onClick(android.view.View) -> onClick
com.unionpay.mpay.views.ap -> com.unionpay.mpay.views.ap:
    int a -> a
    int o -> o
    com.unionpay.mpay_2.upwidget.a p -> p
    android.widget.TextView q -> q
    com.unionpay.mpay_2.upview.a r -> r
    android.view.View$OnClickListener s -> s
    android.view.View$OnClickListener t -> t
    void a() -> a
    void b() -> b
    void c() -> c
    void a(org.json.JSONObject) -> a
    void e() -> e
    void a(com.unionpay.mpay_2.upview.b) -> a
    void a(boolean) -> a
    void a(java.lang.String) -> a
    com.unionpay.mpay_2.upview.a a(com.unionpay.mpay.views.ap) -> a
    com.unionpay.mpay_2.upwidget.a b(com.unionpay.mpay.views.ap) -> b
    int c(com.unionpay.mpay.views.ap) -> c
com.unionpay.mpay.views.aq -> com.unionpay.mpay.views.aq:
    com.unionpay.mpay.views.ap a -> a
    void onClick(android.view.View) -> onClick
com.unionpay.mpay.views.ar -> com.unionpay.mpay.views.ar:
    com.unionpay.mpay.views.ap a -> a
    void onClick(android.view.View) -> onClick
com.unionpay.mpay.views.as -> com.unionpay.mpay.views.as:
    com.unionpay.mpay.views.ap a -> a
    void onClick(android.view.View) -> onClick
com.unionpay.mpay.views.b -> com.unionpay.mpay.views.b:
    int o -> o
    int p -> p
    android.widget.Button q -> q
    com.unionpay.mpay_2.upview.a r -> r
    com.unionpay.mpay_2.upview.listview.j a -> a
    void a() -> a
    void b() -> b
    android.widget.Button e() -> e
    void a_(int) -> a_
    void c() -> c
    void a(org.json.JSONObject) -> a
    void a(com.unionpay.mpay_2.upview.b) -> a
    void a(boolean) -> a
    void a(java.lang.String) -> a
    com.unionpay.mpay_2.upview.a a(com.unionpay.mpay.views.b) -> a
    void b(com.unionpay.mpay.views.b) -> b
    void c(com.unionpay.mpay.views.b) -> c
com.unionpay.mpay.views.c -> com.unionpay.mpay.views.c:
    com.unionpay.mpay.views.b a -> a
    void onClick(android.view.View) -> onClick
com.unionpay.mpay.views.d -> com.unionpay.mpay.views.d:
    com.unionpay.mpay.views.b a -> a
    void onClick(android.view.View) -> onClick
com.unionpay.mpay.views.e -> com.unionpay.mpay.views.e:
    com.unionpay.mpay.views.b a -> a
    void onClick(android.view.View) -> onClick
com.unionpay.mpay.views.f -> com.unionpay.mpay.views.f:
    com.unionpay.mpay.views.b a -> a
    void onClick(android.view.View) -> onClick
com.unionpay.mpay.views.g -> com.unionpay.mpay.views.g:
    com.unionpay.mpay.views.b a -> a
    void onClick(android.view.View) -> onClick
com.unionpay.mpay.views.h -> com.unionpay.mpay.views.h:
    com.unionpay.mpay.views.b a -> a
    void onClick(android.view.View) -> onClick
com.unionpay.mpay.views.i -> com.unionpay.mpay.views.i:
    com.unionpay.mpay.views.b a -> a
    void onClick(android.view.View) -> onClick
com.unionpay.mpay.views.j -> com.unionpay.mpay.views.j:
    java.lang.String a -> a
    int o -> o
    int p -> p
    int q -> q
    com.unionpay.mpay_2.upwidget.a r -> r
    com.unionpay.mpay_2.upwidget.a s -> s
    android.widget.TextView t -> t
    com.unionpay.mpay_2.upview.a u -> u
    boolean v -> v
    boolean w -> w
    android.view.View$OnClickListener x -> x
    android.view.View$OnClickListener y -> y
    void b() -> b
    void a() -> a
    void onDetachedFromWindow() -> onDetachedFromWindow
    void c() -> c
    void e(java.lang.String) -> e
    void f(int) -> f
    boolean b(java.lang.String) -> b
    void a(org.json.JSONObject) -> a
    void a(com.unionpay.mpay_2.upview.b) -> a
    void a(java.lang.String) -> a
    void a(boolean) -> a
    com.unionpay.mpay_2.upview.a a(com.unionpay.mpay.views.j) -> a
    com.unionpay.mpay_2.upwidget.a b(com.unionpay.mpay.views.j) -> b
    com.unionpay.mpay_2.upwidget.a c(com.unionpay.mpay.views.j) -> c
    boolean d(com.unionpay.mpay.views.j) -> d
    void a(com.unionpay.mpay.views.j,boolean,java.lang.String) -> a
    void a(com.unionpay.mpay.views.j,java.lang.String) -> a
    int e(com.unionpay.mpay.views.j) -> e
com.unionpay.mpay.views.k -> com.unionpay.mpay.views.k:
    com.unionpay.mpay.views.j a -> a
    void onClick(android.view.View) -> onClick
com.unionpay.mpay.views.l -> com.unionpay.mpay.views.l:
    com.unionpay.mpay.views.j a -> a
    void onClick(android.view.View) -> onClick
com.unionpay.mpay.views.m -> com.unionpay.mpay.views.m:
    com.unionpay.mpay.views.j a -> a
    void onClick(android.view.View) -> onClick
com.unionpay.mpay.views.n -> com.unionpay.mpay.views.n:
    com.unionpay.mpay.views.j a -> a
    void onClick(android.view.View) -> onClick
com.unionpay.mpay.views.o -> com.unionpay.mpay.views.o:
    android.widget.TextView a -> a
    android.view.View$OnClickListener o -> o
    android.view.View$OnClickListener p -> p
    void a(int) -> a
    void b() -> b
    boolean e() -> e
    void a() -> a
    void c() -> c
    void a(org.json.JSONObject) -> a
    void f() -> f
    void a(com.unionpay.mpay.views.o) -> a
    java.lang.String b(com.unionpay.mpay.views.o) -> b
    boolean c(com.unionpay.mpay.views.o) -> c
com.unionpay.mpay.views.p -> com.unionpay.mpay.views.p:
    com.unionpay.mpay.views.o a -> a
    void onClick(android.view.View) -> onClick
com.unionpay.mpay.views.q -> com.unionpay.mpay.views.q:
    com.unionpay.mpay.views.o a -> a
    void onClick(android.view.View) -> onClick
com.unionpay.mpay.views.r -> com.unionpay.mpay.views.r:
    android.widget.LinearLayout a -> a
    com.unionpay.mpay.views.o b -> b
    void onClick(android.view.View) -> onClick
com.unionpay.mpay.views.s -> com.unionpay.mpay.views.s:
    java.lang.String a(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String a(org.json.JSONObject) -> a
    android.widget.LinearLayout a(android.content.Context,org.json.JSONArray,int,int) -> a
    java.lang.String a(java.util.List,int) -> a
    java.lang.String b(java.util.List,int) -> b
    boolean a(java.util.List) -> a
    java.lang.String a(java.util.List,int,int) -> a
com.unionpay.mpay.views.t -> com.unionpay.mpay.views.t:
    com.unionpay.mpay_2.upview.d a -> a
    android.view.ViewGroup o -> o
    void a() -> a
    void d() -> d
    void a(org.json.JSONObject) -> a
    void e() -> e
    void f() -> f
com.unionpay.mpay.views.u -> com.unionpay.mpay.views.u:
    com.unionpay.uppay.d b -> b
    com.unionpay.mpay.widgets.t c -> c
    com.unionpay.mpay.resource.c d -> d
    android.content.Context e -> e
    com.unionpay.mpay.utils.UPPayEngine f -> f
    int g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    boolean j -> j
    android.widget.RelativeLayout k -> k
    android.view.ViewGroup l -> l
    android.widget.RelativeLayout m -> m
    com.unionpay.mpay.widgets.h n -> n
    android.widget.RelativeLayout g() -> g
    android.widget.RelativeLayout e() -> e
    void a() -> a
    void b() -> b
    void d() -> d
    void b(int) -> b
    void a(int) -> a
    com.unionpay.mpay.widgets.ac b(org.json.JSONObject) -> b
    void c(java.lang.String) -> c
    int h() -> h
    boolean i() -> i
    void j() -> j
    void a(int,java.lang.String) -> a
    boolean b(java.lang.String) -> b
    void k() -> k
    void c() -> c
    void l() -> l
    void m() -> m
    void c(int) -> c
    java.lang.String d(int) -> d
    void onAttachedToWindow() -> onAttachedToWindow
    boolean n() -> n
    void d(java.lang.String) -> d
    void a(java.lang.String,boolean) -> a
    void e(int) -> e
    void a(java.lang.String,java.lang.String) -> a
com.unionpay.mpay.views.v -> com.unionpay.mpay.views.v:
    android.widget.LinearLayout a -> a
    com.unionpay.mpay.views.u b -> b
    void onClick(android.view.View) -> onClick
com.unionpay.mpay.views.w -> com.unionpay.mpay.views.w:
    boolean a -> a
    com.unionpay.mpay.views.u b -> b
    void onClick(android.view.View) -> onClick
com.unionpay.mpay.views.x -> com.unionpay.mpay.views.x:
    int a -> a
    int o -> o
    com.unionpay.mpay_2.upwidget.a p -> p
    android.widget.TextView q -> q
    com.unionpay.mpay_2.upview.a r -> r
    boolean s -> s
    boolean t -> t
    android.view.View$OnClickListener u -> u
    android.view.View$OnClickListener v -> v
    void a() -> a
    void b() -> b
    void c() -> c
    void e() -> e
    boolean b(java.lang.String) -> b
    void a(org.json.JSONObject) -> a
    void f() -> f
    void a(com.unionpay.mpay_2.upview.b) -> a
    void a(boolean) -> a
    void a(java.lang.String) -> a
    com.unionpay.mpay_2.upview.a a(com.unionpay.mpay.views.x) -> a
    com.unionpay.mpay_2.upwidget.a b(com.unionpay.mpay.views.x) -> b
    boolean c(com.unionpay.mpay.views.x) -> c
    int a(com.unionpay.mpay.views.x,int) -> a
    void d(com.unionpay.mpay.views.x) -> d
com.unionpay.mpay.views.y -> com.unionpay.mpay.views.y:
    com.unionpay.mpay.views.x a -> a
    void onClick(android.view.View) -> onClick
com.unionpay.mpay.views.z -> com.unionpay.mpay.views.z:
    com.unionpay.mpay.views.x a -> a
    void onClick(android.view.View) -> onClick
com.unionpay.mpay.widgets.UPPinWidget -> com.unionpay.mpay.widgets.UPPinWidget:
    int i -> i
    int j -> j
    java.util.ArrayList k -> k
    boolean l -> l
    android.view.ViewTreeObserver$OnGlobalLayoutListener m -> m
    com.unionpay.mpay.widgets.o n -> n
    android.view.View$OnClickListener o -> o
    void a(int) -> a
    void t() -> t
    java.lang.String encryptPwdOnce(int,java.lang.String) -> encryptPwdOnce
    java.lang.String decryptPwd(int,java.util.ArrayList) -> decryptPwd
    java.lang.String a() -> a
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean b() -> b
    void c() -> c
    void d() -> d
    void a(boolean) -> a
    void e() -> e
    boolean f() -> f
    void u() -> u
    android.view.View v() -> v
    void g() -> g
    android.view.View a(com.unionpay.mpay.widgets.UPPinWidget) -> a
    int h() -> h
    java.util.ArrayList b(com.unionpay.mpay.widgets.UPPinWidget) -> b
    void c(com.unionpay.mpay.widgets.UPPinWidget) -> c
    int d(com.unionpay.mpay.widgets.UPPinWidget) -> d
com.unionpay.mpay.widgets.a -> com.unionpay.mpay.widgets.a:
    boolean f() -> f
com.unionpay.mpay.widgets.aa -> com.unionpay.mpay.widgets.aa:
    void d() -> d
    void a(boolean) -> a
    void e() -> e
com.unionpay.mpay.widgets.ab -> com.unionpay.mpay.widgets.ab:
    java.lang.String a() -> a
    boolean f() -> f
    boolean i() -> i
com.unionpay.mpay.widgets.ac -> com.unionpay.mpay.widgets.ac:
    java.lang.String p() -> p
    void q() -> q
    void r() -> r
    java.lang.String l() -> l
com.unionpay.mpay.widgets.ad -> com.unionpay.mpay.widgets.ad:
    int g -> g
    com.unionpay.mpay.widgets.w h -> h
    com.unionpay.mpay.widgets.ag i -> i
    void a(com.unionpay.mpay.widgets.ag) -> a
    java.lang.String a() -> a
    boolean i() -> i
    void s() -> s
    com.unionpay.mpay.widgets.ag a(com.unionpay.mpay.widgets.ad) -> a
com.unionpay.mpay.widgets.ae -> com.unionpay.mpay.widgets.ae:
    com.unionpay.mpay.widgets.ad a -> a
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
com.unionpay.mpay.widgets.af -> com.unionpay.mpay.widgets.af:
    com.unionpay.mpay.widgets.ad a -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.unionpay.mpay.widgets.ag -> com.unionpay.mpay.widgets.ag:
    void c(java.lang.String) -> c
com.unionpay.mpay.widgets.ah -> com.unionpay.mpay.widgets.ah:
    int g -> g
    java.lang.String a() -> a
    boolean f() -> f
    boolean i() -> i
com.unionpay.mpay.widgets.ai -> com.unionpay.mpay.widgets.ai:
    boolean f() -> f
com.unionpay.mpay.widgets.aj -> com.unionpay.mpay.widgets.aj:
    android.text.TextWatcher i -> i
    java.lang.String a() -> a
    boolean f() -> f
com.unionpay.mpay.widgets.ak -> com.unionpay.mpay.widgets.ak:
    boolean b -> b
    int c -> c
    boolean d -> d
    com.unionpay.mpay.widgets.aj a -> a
    java.lang.String a(java.lang.CharSequence,int) -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.unionpay.mpay.widgets.al -> com.unionpay.mpay.widgets.al:
    com.unionpay.mpay.widgets.an i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    void a(com.unionpay.mpay.widgets.an) -> a
    java.lang.String a() -> a
    boolean f() -> f
    com.unionpay.mpay.widgets.an a(com.unionpay.mpay.widgets.al) -> a
    java.lang.String b(com.unionpay.mpay.widgets.al) -> b
com.unionpay.mpay.widgets.am -> com.unionpay.mpay.widgets.am:
    com.unionpay.mpay.widgets.al a -> a
    void onClick(android.view.View) -> onClick
com.unionpay.mpay.widgets.an -> com.unionpay.mpay.widgets.an:
    void a(java.lang.String) -> a
com.unionpay.mpay.widgets.ao -> com.unionpay.mpay.widgets.ao:
    com.unionpay.mpay.widgets.UPPinWidget a -> a
    void onGlobalLayout() -> onGlobalLayout
com.unionpay.mpay.widgets.b -> com.unionpay.mpay.widgets.b:
    com.unionpay.mpay.widgets.UPPinWidget a -> a
    void onClick(android.view.View) -> onClick
com.unionpay.mpay.widgets.c -> com.unionpay.mpay.widgets.c:
    boolean f() -> f
com.unionpay.mpay.widgets.d -> com.unionpay.mpay.widgets.d:
    com.unionpay.mpay.widgets.g i -> i
    android.widget.TextView j -> j
    android.os.Handler k -> k
    int l -> l
    void a(com.unionpay.mpay.widgets.g) -> a
    void c() -> c
    boolean f() -> f
    void a(boolean,java.lang.String) -> a
    void b() -> b
    boolean handleMessage(android.os.Message) -> handleMessage
    com.unionpay.mpay.widgets.g a(com.unionpay.mpay.widgets.d) -> a
    android.os.Handler b(com.unionpay.mpay.widgets.d) -> b
com.unionpay.mpay.widgets.e -> com.unionpay.mpay.widgets.e:
    com.unionpay.mpay.widgets.d a -> a
    void onClick(android.view.View) -> onClick
com.unionpay.mpay.widgets.f -> com.unionpay.mpay.widgets.f:
    int a -> a
    com.unionpay.mpay.widgets.d b -> b
    void run() -> run
com.unionpay.mpay.widgets.g -> com.unionpay.mpay.widgets.g:
    void a(com.unionpay.mpay.widgets.ac) -> a
com.unionpay.mpay.widgets.h -> com.unionpay.mpay.widgets.h:
    com.unionpay.mpay.resource.c a -> a
    android.widget.ImageView b -> b
    android.widget.ImageView c -> c
    void a(boolean) -> a
com.unionpay.mpay.widgets.i -> com.unionpay.mpay.widgets.i:
    int i -> i
    boolean f() -> f
com.unionpay.mpay.widgets.j -> com.unionpay.mpay.widgets.j:
    boolean f() -> f
com.unionpay.mpay.widgets.k -> com.unionpay.mpay.widgets.k:
    java.lang.String a() -> a
    boolean f() -> f
com.unionpay.mpay.widgets.l -> com.unionpay.mpay.widgets.l:
    android.content.Context a -> a
    android.widget.TextView b -> b
    int c -> c
com.unionpay.mpay.widgets.m -> com.unionpay.mpay.widgets.m:
    android.content.Context a -> a
    int b -> b
    int c -> c
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    boolean d -> d
    java.lang.String e -> e
    android.widget.TextView m -> m
    android.widget.RelativeLayout f -> f
    boolean n -> n
    java.lang.String a_() -> a_
    java.lang.String j() -> j
    java.lang.String k() -> k
    java.lang.String l() -> l
    void m() -> m
    void n() -> n
    void o() -> o
    void a() -> a
com.unionpay.mpay.widgets.n -> com.unionpay.mpay.widgets.n:
    java.lang.String a() -> a
    boolean f() -> f
    boolean i() -> i
com.unionpay.mpay.widgets.o -> com.unionpay.mpay.widgets.o:
    int a -> a
    int b -> b
    android.content.Context c -> c
    android.view.View$OnClickListener d -> d
    android.widget.PopupWindow e -> e
    android.view.View f -> f
    android.widget.ScrollView g -> g
    int h -> h
    java.util.List i -> i
    android.widget.PopupWindow$OnDismissListener j -> j
    void a(android.view.View) -> a
    int c() -> c
    void a() -> a
    void b(android.view.View) -> b
    android.widget.LinearLayout a(android.content.Context) -> a
    void a(android.widget.LinearLayout,int) -> a
    boolean b() -> b
    android.widget.ScrollView a(com.unionpay.mpay.widgets.o) -> a
    int b(com.unionpay.mpay.widgets.o) -> b
com.unionpay.mpay.widgets.p -> com.unionpay.mpay.widgets.p:
    com.unionpay.mpay.widgets.o a -> a
    void onDismiss() -> onDismiss
com.unionpay.mpay.widgets.q -> com.unionpay.mpay.widgets.q:
    boolean f() -> f
com.unionpay.mpay.widgets.r -> com.unionpay.mpay.widgets.r:
    android.widget.Spinner g -> g
    android.widget.ArrayAdapter h -> h
    java.lang.String i -> i
    int j -> j
    int k -> k
    java.util.ArrayList l -> l
    android.widget.AdapterView$OnItemSelectedListener m -> m
    java.lang.String a() -> a
    boolean f() -> f
    boolean i() -> i
    int a(java.lang.String) -> a
    java.lang.String a(com.unionpay.mpay.widgets.r,java.lang.String) -> a
    android.widget.Spinner a(com.unionpay.mpay.widgets.r) -> a
    int a(com.unionpay.mpay.widgets.r,int) -> a
com.unionpay.mpay.widgets.s -> com.unionpay.mpay.widgets.s:
    com.unionpay.mpay.widgets.r a -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.unionpay.mpay.widgets.t -> com.unionpay.mpay.widgets.t:
    android.content.Context a -> a
    android.widget.TextView b -> b
    android.view.View$OnClickListener c -> c
    android.widget.TextView d -> d
    android.view.View$OnClickListener e -> e
    int f -> f
    com.unionpay.mpay.resource.c g -> g
    android.app.Dialog h -> h
    android.graphics.drawable.Drawable i -> i
    android.content.DialogInterface$OnDismissListener j -> j
    void a(android.view.View$OnClickListener,android.view.View$OnClickListener) -> a
    void a(java.lang.String) -> a
    void a(java.lang.String,java.lang.String,java.lang.String) -> a
    void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    boolean a() -> a
    void b() -> b
    void c() -> c
    boolean d() -> d
    android.widget.RelativeLayout a(android.content.Context) -> a
com.unionpay.mpay.widgets.u -> com.unionpay.mpay.widgets.u:
    com.unionpay.mpay.widgets.t a -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
com.unionpay.mpay.widgets.v -> com.unionpay.mpay.widgets.v:
    android.graphics.Paint a -> a
    int b -> b
    void onDraw(android.graphics.Canvas) -> onDraw
com.unionpay.mpay.widgets.w -> com.unionpay.mpay.widgets.w:
    android.content.Context a -> a
    android.widget.EditText b -> b
    android.widget.ImageView c -> c
    boolean d -> d
    com.unionpay.mpay.widgets.aa e -> e
    com.unionpay.mpay.resource.c f -> f
    android.graphics.Paint g -> g
    android.graphics.RectF h -> h
    int i -> i
    java.lang.String j -> j
    android.graphics.drawable.Drawable k -> k
    android.view.View$OnClickListener l -> l
    android.text.TextWatcher m -> m
    android.view.View$OnFocusChangeListener n -> n
    void a(com.unionpay.mpay.widgets.aa) -> a
    void a(java.lang.String) -> a
    void a(android.text.TextWatcher) -> a
    void a() -> a
    java.lang.String b() -> b
    void a(int) -> a
    void a(android.text.InputFilter) -> a
    void setOnTouchListener(android.view.View$OnTouchListener) -> setOnTouchListener
    void c() -> c
    void b(int) -> b
    void b(java.lang.String) -> b
    void a(android.widget.TextView$OnEditorActionListener) -> a
    void d() -> d
    void onClick(android.view.View) -> onClick
    android.widget.ImageView a(com.unionpay.mpay.widgets.w) -> a
    boolean b(com.unionpay.mpay.widgets.w) -> b
    android.widget.EditText c(com.unionpay.mpay.widgets.w) -> c
    com.unionpay.mpay.widgets.aa d(com.unionpay.mpay.widgets.w) -> d
    void a(com.unionpay.mpay.widgets.w,boolean) -> a
com.unionpay.mpay.widgets.x -> com.unionpay.mpay.widgets.x:
    com.unionpay.mpay.widgets.w a -> a
    void onClick(android.view.View) -> onClick
com.unionpay.mpay.widgets.y -> com.unionpay.mpay.widgets.y:
    com.unionpay.mpay.widgets.w a -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.unionpay.mpay.widgets.z -> com.unionpay.mpay.widgets.z:
    com.unionpay.mpay.widgets.w a -> a
    void onFocusChange(android.view.View,boolean) -> onFocusChange
com.unionpay.mpay_2.uputils.a -> com.unionpay.mpay_2.uputils.a:
    int a(com.unionpay.uppay.d,org.json.JSONObject) -> a
    int b(com.unionpay.uppay.d,org.json.JSONObject) -> b
com.unionpay.mpay_2.upview.a -> com.unionpay.mpay_2.upview.a:
    android.content.Context a -> a
    java.util.ArrayList b -> b
    int c -> c
    com.unionpay.mpay_2.upview.c d -> d
    void a(org.json.JSONArray) -> a
    void a() -> a
    com.unionpay.mpay_2.upview.b b() -> b
    boolean c() -> c
    void d() -> d
    void a(com.unionpay.mpay.widgets.ac) -> a
    void c(java.lang.String) -> c
    boolean e() -> e
    boolean g() -> g
    java.lang.String b(java.lang.String) -> b
    void f() -> f
    com.unionpay.mpay.widgets.ac a(java.util.List,java.lang.String) -> a
    void a(java.lang.String) -> a
com.unionpay.mpay_2.upview.b -> com.unionpay.mpay_2.upview.b:
    int a -> a
    java.lang.String b -> b
    com.unionpay.mpay_2.upview.a c -> c
    void a(int,java.lang.String) -> a
    boolean a() -> a
com.unionpay.mpay_2.upview.c -> com.unionpay.mpay_2.upview.c:
    void a(com.unionpay.mpay_2.upview.b) -> a
    void a(boolean) -> a
    void a(java.lang.String) -> a
com.unionpay.mpay_2.upview.d -> com.unionpay.mpay_2.upview.d:
    android.webkit.WebSettings a -> a
    android.os.Handler b -> b
    com.unionpay.mpay_2.upview.e c -> c
    java.util.Timer d -> d
    void a(java.lang.String) -> a
    boolean handleMessage(android.os.Message) -> handleMessage
    void a() -> a
    android.os.Handler a(com.unionpay.mpay_2.upview.d) -> a
    java.util.Timer a(com.unionpay.mpay_2.upview.d,java.util.Timer) -> a
    java.util.Timer b(com.unionpay.mpay_2.upview.d) -> b
    void c(com.unionpay.mpay_2.upview.d) -> c
com.unionpay.mpay_2.upview.e -> com.unionpay.mpay_2.upview.e:
    void e() -> e
    void f() -> f
com.unionpay.mpay_2.upview.f -> com.unionpay.mpay_2.upview.f:
    com.unionpay.mpay_2.upview.d a -> a
    void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
com.unionpay.mpay_2.upview.g -> com.unionpay.mpay_2.upview.g:
    com.unionpay.mpay_2.upview.d a -> a
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
com.unionpay.mpay_2.upview.h -> com.unionpay.mpay_2.upview.h:
    android.webkit.WebView a -> a
    com.unionpay.mpay_2.upview.g b -> b
    void run() -> run
com.unionpay.mpay_2.upview.listview.a -> com.unionpay.mpay_2.upview.listview.a:
    int a -> a
    android.content.Context b -> b
    java.util.List c -> c
    com.unionpay.mpay_2.upview.listview.c d -> d
    int e -> e
    com.unionpay.mpay_2.upview.listview.e f -> f
    android.graphics.drawable.Drawable g -> g
    android.graphics.drawable.Drawable h -> h
    android.graphics.drawable.Drawable i -> i
    void a(android.graphics.drawable.Drawable) -> a
    void a() -> a
    void b() -> b
    void a(com.unionpay.mpay_2.upview.listview.a,android.view.View) -> a
    java.util.List a(com.unionpay.mpay_2.upview.listview.a) -> a
    android.content.Context b(com.unionpay.mpay_2.upview.listview.a) -> b
    android.graphics.drawable.Drawable c(com.unionpay.mpay_2.upview.listview.a) -> c
    android.graphics.drawable.Drawable d(com.unionpay.mpay_2.upview.listview.a) -> d
    android.graphics.drawable.Drawable e(com.unionpay.mpay_2.upview.listview.a) -> e
    java.lang.String a(com.unionpay.mpay_2.upview.listview.a,int) -> a
    void b(com.unionpay.mpay_2.upview.listview.a,android.view.View) -> b
com.unionpay.mpay_2.upview.listview.b -> com.unionpay.mpay_2.upview.listview.b:
    com.unionpay.mpay_2.upview.listview.a a -> a
    void onClick(android.view.View) -> onClick
com.unionpay.mpay_2.upview.listview.c -> com.unionpay.mpay_2.upview.listview.c:
    com.unionpay.mpay_2.upview.listview.a a -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.unionpay.mpay_2.upview.listview.d -> com.unionpay.mpay_2.upview.listview.d:
    com.unionpay.mpay_2.upview.listview.c a -> a
    void onClick(android.view.View) -> onClick
com.unionpay.mpay_2.upview.listview.e -> com.unionpay.mpay_2.upview.listview.e:
    void a(int) -> a
    void b(int) -> b
com.unionpay.mpay_2.upview.listview.f -> com.unionpay.mpay_2.upview.listview.f:
    android.content.Context a -> a
    android.widget.TextView b -> b
    android.widget.ImageView c -> c
    void a(java.lang.String) -> a
    void a(android.view.View$OnClickListener) -> a
    void a(int) -> a
com.unionpay.mpay_2.upview.listview.g -> com.unionpay.mpay_2.upview.listview.g:
    com.unionpay.mpay_2.upview.listview.f a -> a
    com.unionpay.mpay_2.upview.listview.a b -> b
    com.unionpay.uppay.d c -> c
    com.unionpay.mpay_2.upview.listview.i d -> d
    void c(int) -> c
    void a() -> a
    void a(int) -> a
    void b(int) -> b
    int getId() -> getId
com.unionpay.mpay_2.upview.listview.h -> com.unionpay.mpay_2.upview.listview.h:
    com.unionpay.mpay_2.upview.listview.g a -> a
    void onClick(android.view.View) -> onClick
com.unionpay.mpay_2.upview.listview.i -> com.unionpay.mpay_2.upview.listview.i:
    void a(android.view.View) -> a
    void f(int) -> f
com.unionpay.mpay_2.upview.listview.j -> com.unionpay.mpay_2.upview.listview.j:
    com.unionpay.mpay_2.upview.listview.f a -> a
    com.unionpay.mpay_2.upview.listview.a b -> b
    com.unionpay.uppay.d c -> c
    com.unionpay.mpay_2.upview.listview.l d -> d
    void a() -> a
    void a(int) -> a
    void b(int) -> b
    void c(int) -> c
    void a(com.unionpay.mpay_2.upview.listview.j) -> a
com.unionpay.mpay_2.upview.listview.k -> com.unionpay.mpay_2.upview.listview.k:
    com.unionpay.mpay_2.upview.listview.j a -> a
    void onClick(android.view.View) -> onClick
com.unionpay.mpay_2.upview.listview.l -> com.unionpay.mpay_2.upview.listview.l:
    void a_(int) -> a_
com.unionpay.mpay_2.upwidget.a -> com.unionpay.mpay_2.upwidget.a:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    android.widget.Button j -> j
    boolean k -> k
    android.content.Context l -> l
    float m -> m
    android.view.View$OnClickListener n -> n
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    boolean e() -> e
    void f() -> f
    boolean a(java.lang.String) -> a
    void a(com.unionpay.mpay_2.upwidget.a) -> a
com.unionpay.mpay_2.upwidget.b -> com.unionpay.mpay_2.upwidget.b:
    com.unionpay.mpay_2.upwidget.a a -> a
    void onClick(android.view.View) -> onClick
com.unionpay.mpay_2.upwidget.c -> com.unionpay.mpay_2.upwidget.c:
    android.content.Context b -> b
    android.widget.CheckBox c -> c
    com.unionpay.mpay.resource.c a -> a
    com.unionpay.mpay_2.upwidget.c a(android.content.Context,java.lang.String) -> a
    void a(com.unionpay.mpay_2.upwidget.d) -> a
    boolean a() -> a
com.unionpay.mpay_2.upwidget.d -> com.unionpay.mpay_2.upwidget.d:
    java.lang.String a -> a
    com.unionpay.mpay_2.upwidget.e b -> b
    com.unionpay.mpay_2.upwidget.d a(android.content.Context,org.json.JSONObject,android.graphics.drawable.Drawable) -> a
    java.lang.String a() -> a
    void a(android.view.View$OnClickListener) -> a
com.unionpay.mpay_2.upwidget.e -> com.unionpay.mpay_2.upwidget.e:
    android.content.Context a -> a
    android.widget.TextView b -> b
    com.unionpay.mpay_2.upwidget.e a(android.content.Context,android.graphics.drawable.Drawable) -> a
    void a(java.lang.String) -> a
    void a(android.content.res.ColorStateList) -> a
    void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
com.unionpay.mpay_2.upwidget.f -> com.unionpay.mpay_2.upwidget.f:
    android.widget.TextView a -> a
    com.unionpay.mpay_2.upwidget.f a(android.content.Context,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> a
    void a(java.lang.CharSequence) -> a
    void a(float) -> a
com.unionpay.pluginEx.a -> com.unionpay.pluginEx.a:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    void a(android.app.Activity,com.unionpay.uppay.model.a) -> a
com.unionpay.pluginEx.b -> com.unionpay.pluginEx.b:
    java.lang.String a -> a
    java.lang.String b -> b
    void a(android.app.Activity,java.lang.String,java.lang.String,java.lang.String) -> a
    void a(android.app.Activity,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void b(android.app.Activity,java.lang.String,java.lang.String,java.lang.String) -> b
    void a(android.app.Activity,java.lang.String,java.lang.String) -> a
com.unionpay.uppay.PayActivity -> com.unionpay.uppay.PayActivity:
    int a -> a
    java.lang.Runnable b -> b
    com.unionpay.uppay.model.a c -> c
    boolean d -> d
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void a(java.lang.Runnable) -> a
    void b() -> b
    java.lang.Object a() -> a
    void c() -> c
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
com.unionpay.uppay.PayActivityEx -> com.unionpay.uppay.PayActivityEx:
    java.util.ArrayList a -> a
    com.unionpay.mpay.views.ac b -> b
    com.unionpay.uppay.e c -> c
    com.unionpay.mpay.widgets.t d -> d
    int e -> e
    void onCreate(android.os.Bundle) -> onCreate
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void a(com.unionpay.mpay.views.u) -> a
    void a() -> a
    void b() -> b
    void onDestroy() -> onDestroy
    java.lang.Object a(java.lang.String) -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onResume() -> onResume
    void onDismiss(android.content.DialogInterface) -> onDismiss
com.unionpay.uppay.a -> com.unionpay.uppay.a:
    java.lang.Object a() -> a
com.unionpay.uppay.auxutil.a -> com.unionpay.uppay.auxutil.a:
    java.util.List c -> c
    int a -> a
    int b -> b
    void a(java.lang.Object) -> a
    int a() -> a
    void a(com.unionpay.uppay.auxutil.b) -> a
    java.util.List b() -> b
com.unionpay.uppay.auxutil.b -> com.unionpay.uppay.auxutil.b:
    com.unionpay.uppay.auxutil.b a -> a
    com.unionpay.uppay.auxutil.b b -> b
    com.unionpay.uppay.auxutil.b c -> c
    com.unionpay.uppay.auxutil.b d -> d
    com.unionpay.uppay.auxutil.b e -> e
    com.unionpay.uppay.auxutil.b f -> f
    com.unionpay.uppay.auxutil.b g -> g
    int h -> h
    com.unionpay.uppay.auxutil.b[] i -> i
    com.unionpay.uppay.auxutil.b[] values() -> values
    com.unionpay.uppay.auxutil.b valueOf(java.lang.String) -> valueOf
com.unionpay.uppay.b -> com.unionpay.uppay.b:
    com.unionpay.uppay.widget.m a -> a
    com.unionpay.uppay.PayActivity b -> b
    void onClick(android.view.View) -> onClick
com.unionpay.uppay.c -> com.unionpay.uppay.c:
    com.unionpay.uppay.widget.m a -> a
    com.unionpay.uppay.PayActivity b -> b
    void onClick(android.view.View) -> onClick
com.unionpay.uppay.d -> com.unionpay.uppay.d:
    java.lang.String a -> a
    java.lang.String b -> b
    boolean c -> c
    org.json.JSONArray d -> d
    org.json.JSONObject e -> e
    org.json.JSONObject f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.util.List i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    org.json.JSONArray l -> l
    java.lang.String m -> m
    org.json.JSONObject n -> n
    org.json.JSONObject o -> o
    org.json.JSONArray p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    org.json.JSONObject s -> s
    org.json.JSONArray t -> t
    java.lang.String u -> u
    boolean v -> v
    org.json.JSONArray w -> w
    com.unionpay.uppay.f x -> x
    boolean y -> y
    boolean z -> z
    java.lang.String A -> A
    int B -> B
    java.lang.String C -> C
    java.lang.String D -> D
    java.lang.String E -> E
    java.lang.String F -> F
    java.lang.String G -> G
    org.json.JSONArray H -> H
    boolean I -> I
    java.lang.String J -> J
    java.lang.String K -> K
    org.json.JSONArray L -> L
    org.json.JSONObject M -> M
    org.json.JSONObject N -> N
    org.json.JSONObject O -> O
    java.util.List P -> P
    org.json.JSONArray Q -> Q
    java.lang.String R -> R
    java.lang.String S -> S
    java.lang.String T -> T
    java.lang.String U -> U
    int V -> V
    java.lang.String W -> W
    java.lang.String X -> X
    java.lang.String Y -> Y
    org.json.JSONObject Z -> Z
    org.json.JSONObject aa -> aa
com.unionpay.uppay.e -> com.unionpay.uppay.e:
    com.unionpay.uppay.d a -> a
    com.unionpay.mpay.utils.UPPayEngine b -> b
    com.unionpay.uppay.PayActivityEx c -> c
com.unionpay.uppay.f -> com.unionpay.uppay.f:
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    boolean d -> d
    boolean e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
com.unionpay.uppay.model.BankCardInfo -> com.unionpay.uppay.model.BankCardInfo:
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    android.graphics.drawable.BitmapDrawable g -> g
    int getIndex() -> getIndex
    java.lang.String getName() -> getName
    java.lang.String getId() -> getId
    void setId(java.lang.String) -> setId
    java.lang.String getType() -> getType
    void setType(java.lang.String) -> setType
    java.lang.String getLogoImageFileName() -> getLogoImageFileName
    java.lang.String getUniqueID() -> getUniqueID
    void setUniqueID(java.lang.String) -> setUniqueID
    android.graphics.drawable.BitmapDrawable getDrawable(android.content.Context) -> getDrawable
    void copyTo(com.unionpay.uppay.model.BankCardInfo) -> copyTo
com.unionpay.uppay.model.PAAInfo -> com.unionpay.uppay.model.PAAInfo:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    java.lang.String t -> t
    java.lang.String u -> u
    java.lang.String v -> v
    java.lang.String w -> w
    boolean x -> x
    java.lang.String getUserProvide() -> getUserProvide
    void setUserProvide(java.lang.String) -> setUserProvide
    java.lang.String getMerchantId() -> getMerchantId
    java.lang.String getMerchantName() -> getMerchantName
    java.lang.String getMerchantCountry() -> getMerchantCountry
    java.lang.String getTerminalId() -> getTerminalId
    java.lang.String getOrderId() -> getOrderId
    java.lang.String getTransCurrency() -> getTransCurrency
    java.lang.String getTransAmount() -> getTransAmount
    java.lang.String getServiceInfo() -> getServiceInfo
    java.lang.String getSpId() -> getSpId
    java.lang.String getSecurityChipType() -> getSecurityChipType
    java.lang.String getDigest() -> getDigest
    java.lang.String getSignature() -> getSignature
    java.lang.String getType() -> getType
    java.lang.String getSubmitTime() -> getSubmitTime
    java.lang.String getSysProvide() -> getSysProvide
    void setSysProvide(java.lang.String) -> setSysProvide
    java.lang.String getOrderContent() -> getOrderContent
    void setOrderContent(java.lang.String) -> setOrderContent
    java.lang.String getAccountUniqueID() -> getAccountUniqueID
    java.lang.String getOrderGeneratedTime() -> getOrderGeneratedTime
    java.lang.String getCardholderIdInfo() -> getCardholderIdInfo
    void setOrderGeneratedTime(java.lang.String) -> setOrderGeneratedTime
    java.lang.String getAccountNumber2() -> getAccountNumber2
    void setAccountNumber2(java.lang.String) -> setAccountNumber2
    java.lang.String getContentProvide() -> getContentProvide
    void setContentProvide(java.lang.String) -> setContentProvide
    void setAccountUniqueID(java.lang.String) -> setAccountUniqueID
    void setMerchantId(java.lang.String) -> setMerchantId
    void setMerchantName(java.lang.String) -> setMerchantName
    void setMerchantCountry(java.lang.String) -> setMerchantCountry
    void setTerminalId(java.lang.String) -> setTerminalId
    void setOrderId(java.lang.String) -> setOrderId
    void setTransCurrency(java.lang.String) -> setTransCurrency
    void setTransAmount(java.lang.String) -> setTransAmount
    void setServiceInfo(java.lang.String) -> setServiceInfo
    void setSpId(java.lang.String) -> setSpId
    void setSecurityChipType(java.lang.String) -> setSecurityChipType
    void setDigest(java.lang.String) -> setDigest
    void setSignature(java.lang.String) -> setSignature
    void setType(java.lang.String) -> setType
    void setSubmitTime(java.lang.String) -> setSubmitTime
    java.lang.String getSignatureEncoding() -> getSignatureEncoding
    void setSignatureEncoding(java.lang.String) -> setSignatureEncoding
    void setCardholderIdInfo(java.lang.String) -> setCardholderIdInfo
    boolean isUseTestUrl() -> isUseTestUrl
    void setUseTestUrl(boolean) -> setUseTestUrl
com.unionpay.uppay.model.PurchaseInfo -> com.unionpay.uppay.model.PurchaseInfo:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String getBankCardNumber() -> getBankCardNumber
    java.lang.String getUniqueIDCode() -> getUniqueIDCode
    java.lang.String getPhoneNumber() -> getPhoneNumber
    java.lang.String getMsgVerfiyCode() -> getMsgVerfiyCode
    java.lang.String getCvn2() -> getCvn2
    java.lang.String getExpireDate() -> getExpireDate
    java.lang.String getPassword() -> getPassword
    void setBankCardNumber(java.lang.String) -> setBankCardNumber
    void setUniqueIDCode(java.lang.String) -> setUniqueIDCode
    void setPhoneNumber(java.lang.String) -> setPhoneNumber
    void setMsgVerfiyCode(java.lang.String) -> setMsgVerfiyCode
    void setCvn2(java.lang.String) -> setCvn2
    void setExpireDate(java.lang.String) -> setExpireDate
    void setPassword(java.lang.String) -> setPassword
com.unionpay.uppay.model.ResponseInfo -> com.unionpay.uppay.model.ResponseInfo:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    int e -> e
    java.lang.String getErrMessage() -> getErrMessage
    void setErrMessage(java.lang.String) -> setErrMessage
    java.lang.String getResponseCode() -> getResponseCode
    void setResponseCode(java.lang.String) -> setResponseCode
    java.lang.String getTsn() -> getTsn
    void setTsn(java.lang.String) -> setTsn
    java.lang.String getBalance() -> getBalance
    void setBalance(java.lang.String) -> setBalance
    int getOperationCode() -> getOperationCode
    void setOperationCode(int) -> setOperationCode
com.unionpay.uppay.model.a -> com.unionpay.uppay.model.a:
    com.unionpay.uppay.model.PAAInfo v -> v
    com.unionpay.uppay.model.BankCardInfo w -> w
    com.unionpay.uppay.model.PurchaseInfo x -> x
    com.unionpay.uppay.model.ResponseInfo y -> y
    java.util.List z -> z
    com.unionpay.uppay.model.PAAInfo a -> a
    com.unionpay.uppay.model.BankCardInfo b -> b
    com.unionpay.uppay.model.BankCardInfo c -> c
    com.unionpay.uppay.model.PurchaseInfo d -> d
    com.unionpay.uppay.model.ResponseInfo e -> e
    java.util.List f -> f
    com.unionpay.uppay.util.n g -> g
    com.unionpay.uppay.util.PayEngine h -> h
    java.util.List i -> i
    java.util.List j -> j
    java.util.List k -> k
    float l -> l
    com.unionpay.uppay.util.d m -> m
    com.unionpay.uppay.util.h n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    java.lang.String t -> t
    boolean u -> u
    void a() -> a
    void b() -> b
com.unionpay.uppay.model.b -> com.unionpay.uppay.model.b:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    int j -> j
    int k -> k
    int l -> l
    int m -> m
    int n -> n
    int o -> o
    int p -> p
    int q -> q
    int r -> r
    int s -> s
    int t -> t
    boolean u -> u
    void a(android.content.Context) -> a
com.unionpay.uppay.net.HttpConnection -> com.unionpay.uppay.net.HttpConnection:
    org.apache.http.client.HttpClient a -> a
    org.apache.http.conn.ClientConnectionManager b -> b
    android.content.Context c -> c
    org.apache.http.HttpResponse d -> d
    com.unionpay.uppay.net.HttpParameters e -> e
    java.io.InputStream f -> f
    org.apache.http.HttpEntity g -> g
    byte[] h -> h
    void setContext(android.content.Context) -> setContext
    int connect() -> connect
    byte[] getResponseData() -> getResponseData
com.unionpay.uppay.net.HttpParameters -> com.unionpay.uppay.net.HttpParameters:
    int a -> a
    java.lang.String b -> b
    java.util.HashMap c -> c
    byte[] d -> d
    int getHttpMethod() -> getHttpMethod
    java.lang.String getUrlStr() -> getUrlStr
    void setUrlStr(java.lang.String) -> setUrlStr
    java.util.HashMap getHeaders() -> getHeaders
    byte[] getPostData() -> getPostData
com.unionpay.uppay.net.a -> com.unionpay.uppay.net.a:
    boolean a -> a
    java.lang.Thread b -> b
    boolean a(android.content.Context) -> a
    boolean a(android.content.Context,java.lang.String) -> a
    void b(android.content.Context) -> b
    void a() -> a
    void c(android.content.Context) -> c
    java.lang.Thread b() -> b
com.unionpay.uppay.net.b -> com.unionpay.uppay.net.b:
    android.content.Context a -> a
    void run() -> run
com.unionpay.uppay.net.c -> com.unionpay.uppay.net.c:
    javax.net.ssl.SSLContext a -> a
    javax.net.ssl.SSLContext a() -> a
    javax.net.ssl.SSLContext b() -> b
    java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams) -> connectSocket
    java.net.Socket createSocket() -> createSocket
    boolean isSecure(java.net.Socket) -> isSecure
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.unionpay.uppay.net.d -> com.unionpay.uppay.net.d:
    javax.net.ssl.X509TrustManager a -> a
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
com.unionpay.uppay.resource.a -> com.unionpay.uppay.resource.a:
com.unionpay.uppay.resource.b -> com.unionpay.uppay.resource.b:
    int a -> a
    int b -> b
    void a(int) -> a
    int available() -> available
    int read(byte[],int,int) -> read
    int read(byte[]) -> read
    int read() -> read
    void a() -> a
    int b() -> b
com.unionpay.uppay.task.a -> com.unionpay.uppay.task.a:
    android.content.Context a -> a
    com.unionpay.uppay.model.a b -> b
    com.unionpay.uppay.widget.m e -> e
    com.unionpay.uppay.widget.m c -> c
    com.unionpay.uppay.PayActivity d -> d
    void a(java.lang.String) -> a
    void a() -> a
    void a(com.unionpay.uppay.task.r) -> a
    void a(com.unionpay.uppay.task.r,boolean) -> a
    void b(com.unionpay.uppay.task.r) -> b
    void a(com.unionpay.uppay.util.n) -> a
    void a(com.unionpay.uppay.task.a,com.unionpay.uppay.task.r) -> a
    void b(com.unionpay.uppay.task.a,com.unionpay.uppay.task.r) -> b
com.unionpay.uppay.task.b -> com.unionpay.uppay.task.b:
    com.unionpay.uppay.task.r a -> a
    com.unionpay.uppay.task.a b -> b
    void onClick(android.view.View) -> onClick
com.unionpay.uppay.task.c -> com.unionpay.uppay.task.c:
    com.unionpay.uppay.task.r a -> a
    com.unionpay.uppay.task.a b -> b
    void onClick(android.view.View) -> onClick
com.unionpay.uppay.task.d -> com.unionpay.uppay.task.d:
    com.unionpay.uppay.task.r a -> a
    com.unionpay.uppay.task.a b -> b
    void onClick(android.view.View) -> onClick
com.unionpay.uppay.task.e -> com.unionpay.uppay.task.e:
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.unionpay.uppay.task.f -> com.unionpay.uppay.task.f:
    void b() -> b
    void c() -> c
    boolean d() -> d
    void a(android.app.Activity) -> a
    void b(com.unionpay.uppay.task.r) -> b
    void a(com.unionpay.uppay.task.r) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void a(com.unionpay.uppay.task.f,android.app.Activity) -> a
com.unionpay.uppay.task.g -> com.unionpay.uppay.task.g:
    com.unionpay.uppay.widget.m a -> a
    com.unionpay.uppay.task.r b -> b
    com.unionpay.uppay.PayActivity c -> c
    com.unionpay.uppay.task.f d -> d
    void onClick(android.view.View) -> onClick
com.unionpay.uppay.task.h -> com.unionpay.uppay.task.h:
    com.unionpay.uppay.widget.m a -> a
    com.unionpay.uppay.PayActivity b -> b
    com.unionpay.uppay.task.f c -> c
    void onClick(android.view.View) -> onClick
com.unionpay.uppay.task.i -> com.unionpay.uppay.task.i:
    void onPreExecute() -> onPreExecute
    void a(com.unionpay.uppay.task.r,boolean) -> a
    void b() -> b
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.unionpay.uppay.task.j -> com.unionpay.uppay.task.j:
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.unionpay.uppay.task.k -> com.unionpay.uppay.task.k:
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.unionpay.uppay.task.l -> com.unionpay.uppay.task.l:
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.unionpay.uppay.task.m -> com.unionpay.uppay.task.m:
    com.unionpay.uppay.widget.m a -> a
    com.unionpay.uppay.task.l b -> b
    void onClick(android.view.View) -> onClick
com.unionpay.uppay.task.n -> com.unionpay.uppay.task.n:
    void onPreExecute() -> onPreExecute
    com.unionpay.uppay.model.BankCardInfo b(java.lang.String) -> b
    void b(com.unionpay.uppay.task.r) -> b
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.unionpay.uppay.task.o -> com.unionpay.uppay.task.o:
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.unionpay.uppay.task.p -> com.unionpay.uppay.task.p:
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.unionpay.uppay.task.q -> com.unionpay.uppay.task.q:
    com.unionpay.uppay.widget.m a -> a
    com.unionpay.uppay.task.p b -> b
    void onClick(android.view.View) -> onClick
com.unionpay.uppay.task.r -> com.unionpay.uppay.task.r:
    java.lang.Object a -> a
    java.lang.Object b -> b
    boolean c -> c
    java.lang.String d -> d
    int e -> e
    java.lang.Object a() -> a
    java.lang.Object b() -> b
    boolean c() -> c
    void d() -> d
    java.lang.String e() -> e
    void a(java.lang.String) -> a
    int f() -> f
    void a(int) -> a
com.unionpay.uppay.task.s -> com.unionpay.uppay.task.s:
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.unionpay.uppay.util.DeviceInfo -> com.unionpay.uppay.util.DeviceInfo:
    boolean isSdCardExist() -> isSdCardExist
    int dip2px(android.content.Context,float) -> dip2px
    java.lang.String[] getRootDirectory() -> getRootDirectory
    java.lang.String[] getExternalStorageDirectory() -> getExternalStorageDirectory
    java.lang.String getMobilePlatformVersion() -> getMobilePlatformVersion
    int getScreenWidth(android.app.Activity) -> getScreenWidth
    int getScreenHeight(android.app.Activity) -> getScreenHeight
    int screenOrientation(android.content.Context) -> screenOrientation
    boolean isTermKindOfMobile(android.content.Context) -> isTermKindOfMobile
    int getApiLevel() -> getApiLevel
    java.lang.String getIMEI(android.content.Context) -> getIMEI
com.unionpay.uppay.util.PayEngine -> com.unionpay.uppay.util.PayEngine:
    int a -> a
    void setNativePayEngine(int) -> setNativePayEngine
    int getNativePayEngine() -> getNativePayEngine
    java.lang.String createStringFromGbk(byte[]) -> createStringFromGbk
    void initJNIEnv(android.app.Activity,boolean,boolean) -> initJNIEnv
    void freeNativeData() -> freeNativeData
    int init(com.unionpay.uppay.model.PAAInfo,java.lang.String,java.lang.String,java.lang.String,int) -> init
    java.lang.String encryptPwdOnce(int,int) -> encryptPwdOnce
    java.lang.String decryptPwd(int,java.lang.String) -> decryptPwd
    boolean powerOn() -> powerOn
    boolean powerDown() -> powerDown
    boolean getBankCardList(java.lang.String,java.util.List,com.unionpay.uppay.model.ResponseInfo) -> getBankCardList
    boolean balanceEnquiry(java.lang.String,int,java.lang.String,java.lang.String,com.unionpay.uppay.model.ResponseInfo) -> balanceEnquiry
    boolean remotePurchase(com.unionpay.uppay.model.PAAInfo,int,java.lang.String,java.lang.String,com.unionpay.uppay.model.ResponseInfo) -> remotePurchase
    boolean remotePreAuth(com.unionpay.uppay.model.PAAInfo,int,java.lang.String,java.lang.String,com.unionpay.uppay.model.ResponseInfo) -> remotePreAuth
    int requestSupportBankList() -> requestSupportBankList
    int sendMobileVerifyCode(java.lang.String) -> sendMobileVerifyCode
    int verifySmsCode(java.lang.String,java.lang.String) -> verifySmsCode
    int requestCardInfo(java.lang.String,java.lang.String,java.lang.String) -> requestCardInfo
    int purchase(int,com.unionpay.uppay.model.PurchaseInfo) -> purchase
    byte[] getBankLogo() -> getBankLogo
    java.lang.String getBankName() -> getBankName
    java.lang.String getCardType() -> getCardType
    java.lang.String getCardNumber() -> getCardNumber
    java.lang.String getResponseCode() -> getResponseCode
    java.lang.String getResponseMsg(int[]) -> getResponseMsg
    java.lang.String getPayType() -> getPayType
    java.lang.String getTransSerialNumber() -> getTransSerialNumber
    java.lang.String[] getCreditCardBankList() -> getCreditCardBankList
    java.lang.String[] getDebitCardBankList() -> getDebitCardBankList
    java.lang.String[] getPrepaidCardBankList() -> getPrepaidCardBankList
    java.lang.String getBillAmount() -> getBillAmount
    java.lang.String getAccountUniqueID() -> getAccountUniqueID
    java.lang.String getSettleDate() -> getSettleDate
    java.lang.String getAccountUniqueIDState() -> getAccountUniqueIDState
    java.lang.String getBillconvertRate() -> getBillconvertRate
    java.lang.String getBillcurrency() -> getBillcurrency
    java.lang.String getLimitedAmout() -> getLimitedAmout
    java.lang.String getMerchantLimitedAmount() -> getMerchantLimitedAmount
    java.lang.String getMerchantRemainingAmount() -> getMerchantRemainingAmount
    java.lang.String getPhoneNumber() -> getPhoneNumber
    java.lang.String getUpgradeURL() -> getUpgradeURL
com.unionpay.uppay.util.a -> com.unionpay.uppay.util.a:
    char[] a -> a
    byte[] a(java.lang.String) -> a
com.unionpay.uppay.util.b -> com.unionpay.uppay.util.b:
    java.text.SimpleDateFormat a -> a
    java.lang.String a() -> a
    java.lang.String a(java.lang.String) -> a
    boolean b(java.lang.String) -> b
    java.lang.String c(java.lang.String) -> c
    com.unionpay.uppay.model.a a(java.lang.Object) -> a
    android.graphics.Paint b() -> b
    java.lang.String d(java.lang.String) -> d
com.unionpay.uppay.util.c -> com.unionpay.uppay.util.c:
    int a -> a
    int b -> b
    float h -> h
    float i -> i
    float j -> j
    float c -> c
    int d -> d
    int e -> e
    int f -> f
    boolean g -> g
    void a(int,int) -> a
    int a(int) -> a
    int b(int) -> b
    int c(int) -> c
com.unionpay.uppay.util.d -> com.unionpay.uppay.util.d:
    boolean a -> a
    boolean b -> b
    boolean c -> c
    boolean d -> d
    boolean e -> e
    int f -> f
    int g -> g
    int h -> h
    boolean i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
com.unionpay.uppay.util.e -> com.unionpay.uppay.util.e:
    com.unionpay.uppay.model.a a -> a
    boolean a(com.unionpay.uppay.model.a,android.os.Bundle) -> a
    boolean b(com.unionpay.uppay.model.a,android.os.Bundle) -> b
    boolean a(com.unionpay.uppay.model.PAAInfo,android.os.Bundle) -> a
    boolean a(com.unionpay.uppay.model.a,java.lang.String) -> a
    java.lang.String a(java.lang.String) -> a
    boolean b(com.unionpay.uppay.model.a,java.lang.String) -> b
    java.lang.String a(android.os.Bundle,java.lang.String) -> a
com.unionpay.uppay.util.f -> com.unionpay.uppay.util.f:
    com.unionpay.uppay.util.f a -> a
    com.unionpay.uppay.util.f b -> b
    com.unionpay.uppay.util.f c -> c
    com.unionpay.uppay.util.f d -> d
    com.unionpay.uppay.util.f e -> e
    com.unionpay.uppay.util.f f -> f
    com.unionpay.uppay.util.f g -> g
    com.unionpay.uppay.util.f h -> h
    com.unionpay.uppay.util.f i -> i
    com.unionpay.uppay.util.f j -> j
    int k -> k
    com.unionpay.uppay.util.f[] l -> l
    com.unionpay.uppay.util.f[] values() -> values
    com.unionpay.uppay.util.f valueOf(java.lang.String) -> valueOf
com.unionpay.uppay.util.g -> com.unionpay.uppay.util.g:
    void a(android.content.Context) -> a
com.unionpay.uppay.util.h -> com.unionpay.uppay.util.h:
    int[] a -> a
    int[] b -> b
    int[] c -> c
    int[] d -> d
    int[] e -> e
    int[] f -> f
    int[] g -> g
    int[] h -> h
    int[] i -> i
    int[] j -> j
    int[] k -> k
    int[] l -> l
    int[] m -> m
    int[] n -> n
    int[] o -> o
    int[] p -> p
    int[] q -> q
    java.util.HashMap r -> r
    android.graphics.drawable.BitmapDrawable s -> s
    java.lang.Thread t -> t
    void a() -> a
    android.graphics.drawable.StateListDrawable a(android.content.Context,int[]) -> a
    android.content.res.ColorStateList a(int[]) -> a
    android.graphics.drawable.StateListDrawable b(android.content.Context,int[]) -> b
    android.graphics.drawable.Drawable a(int) -> a
    android.graphics.drawable.BitmapDrawable a(android.content.Context,java.lang.String) -> a
    android.graphics.drawable.Drawable b(java.io.InputStream) -> b
    android.graphics.drawable.Drawable b(android.graphics.drawable.Drawable,int) -> b
    void b() -> b
    android.graphics.drawable.Drawable a(java.io.InputStream) -> a
    java.util.HashMap a(com.unionpay.uppay.util.h) -> a
    android.graphics.drawable.Drawable a(android.graphics.drawable.Drawable,int) -> a
com.unionpay.uppay.util.i -> com.unionpay.uppay.util.i:
    com.unionpay.uppay.util.h a -> a
    void run() -> run
com.unionpay.uppay.util.j -> com.unionpay.uppay.util.j:
    boolean a(com.unionpay.uppay.model.a) -> a
com.unionpay.uppay.util.k -> com.unionpay.uppay.util.k:
    android.graphics.drawable.StateListDrawable a(android.content.Context,int[]) -> a
    android.content.res.ColorStateList a(int[]) -> a
    android.graphics.drawable.StateListDrawable b(android.content.Context,int[]) -> b
com.unionpay.uppay.util.l -> com.unionpay.uppay.util.l:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    java.lang.String t -> t
    java.lang.String u -> u
    java.lang.String v -> v
    java.lang.String w -> w
    java.lang.String x -> x
    java.lang.String y -> y
    java.lang.String z -> z
    java.lang.String A -> A
    java.lang.String B -> B
    java.lang.String C -> C
    java.lang.String D -> D
    java.lang.String E -> E
    java.lang.String F -> F
    java.lang.String G -> G
    java.lang.String H -> H
    java.lang.String I -> I
    java.lang.String J -> J
    java.lang.String K -> K
    java.lang.String L -> L
    java.lang.String M -> M
    java.lang.String N -> N
    java.lang.String O -> O
    java.lang.String P -> P
    java.lang.String Q -> Q
    java.lang.String R -> R
    java.lang.String S -> S
    java.lang.String T -> T
    java.lang.String U -> U
    java.lang.String V -> V
    java.lang.String W -> W
    java.lang.String X -> X
    java.lang.String Y -> Y
    java.lang.String Z -> Z
    java.lang.String aa -> aa
    java.lang.String ab -> ab
    java.lang.String ac -> ac
    java.lang.String ad -> ad
    java.lang.String ae -> ae
    java.lang.String af -> af
    java.lang.String ag -> ag
    java.lang.String ah -> ah
    java.lang.String ai -> ai
    java.lang.String aj -> aj
    java.lang.String ak -> ak
    java.lang.String al -> al
    java.lang.String am -> am
    java.lang.String an -> an
    java.lang.String ao -> ao
    java.lang.String ap -> ap
    java.lang.String aq -> aq
    java.lang.String ar -> ar
    java.lang.String as -> as
    java.lang.String at -> at
    java.lang.String au -> au
    java.lang.String av -> av
    java.lang.String aw -> aw
    java.lang.String ax -> ax
    java.lang.String ay -> ay
    java.lang.String az -> az
    java.lang.String aA -> aA
    java.lang.String aB -> aB
    java.lang.String aC -> aC
    java.lang.String aD -> aD
    java.lang.String aE -> aE
    java.lang.String aF -> aF
    java.lang.String aG -> aG
    java.lang.String aH -> aH
    java.lang.String aI -> aI
    java.lang.String aJ -> aJ
    java.lang.String aK -> aK
    java.lang.String aL -> aL
    java.lang.String aM -> aM
    java.lang.String aN -> aN
    java.lang.String aO -> aO
    java.lang.String aP -> aP
    java.lang.String aQ -> aQ
    java.lang.String aR -> aR
    java.lang.String aS -> aS
    java.lang.String aT -> aT
    java.lang.String aU -> aU
    java.lang.String aV -> aV
    java.lang.String aW -> aW
    java.lang.String aX -> aX
    java.lang.String aY -> aY
    int aZ -> aZ
    int ba -> ba
    int bb -> bb
    int bc -> bc
    int bd -> bd
    int be -> be
    int bf -> bf
    java.lang.String bg -> bg
    java.lang.String bh -> bh
    java.lang.String bi -> bi
    java.lang.String bj -> bj
    java.lang.String bk -> bk
    java.lang.String bl -> bl
    java.lang.String bm -> bm
    java.lang.String bn -> bn
    java.lang.String bo -> bo
    java.lang.String bp -> bp
    java.lang.String bq -> bq
    java.lang.String br -> br
    java.lang.String bs -> bs
    java.lang.String bt -> bt
    java.lang.String bu -> bu
    java.lang.String bv -> bv
    java.lang.String bw -> bw
    java.lang.String bx -> bx
    java.lang.String by -> by
    java.lang.String bz -> bz
    int bA -> bA
    float[] bB -> bB
    float[] bC -> bC
    float[] bD -> bD
    float[] bE -> bE
    int bF -> bF
    int bG -> bG
    int bH -> bH
    int bI -> bI
    int bJ -> bJ
    int bK -> bK
    int bL -> bL
    int bM -> bM
    int bN -> bN
    int bO -> bO
    int bP -> bP
    int bQ -> bQ
    int bR -> bR
    int bS -> bS
    int bT -> bT
    int bU -> bU
    int bV -> bV
    int bW -> bW
    int bX -> bX
    int bY -> bY
    int bZ -> bZ
    int ca -> ca
    int cb -> cb
    int cc -> cc
    int cd -> cd
    int ce -> ce
    int cf -> cf
    int cg -> cg
    int ch -> ch
    int ci -> ci
    int cj -> cj
com.unionpay.uppay.util.m -> com.unionpay.uppay.util.m:
    boolean a -> a
    int b -> b
    int a(java.lang.String,java.lang.String) -> a
    int b(java.lang.String,java.lang.String) -> b
    int c(java.lang.String,java.lang.String) -> c
    void a(java.lang.String) -> a
com.unionpay.uppay.util.n -> com.unionpay.uppay.util.n:
    java.util.HashMap a -> a
    android.view.View a(int) -> a
    void a(int,android.view.View) -> a
    com.unionpay.uppay.view.aj a(android.content.Context) -> a
    void a() -> a
com.unionpay.uppay.view.a -> com.unionpay.uppay.view.a:
    android.content.Context a -> a
    com.unionpay.uppay.model.a b -> b
    void a() -> a
    void a(android.widget.Button,android.widget.Button) -> a
    void onDetachedFromWindow() -> onDetachedFromWindow
com.unionpay.uppay.view.aa -> com.unionpay.uppay.view.aa:
    com.unionpay.uppay.widget.c c -> c
    com.unionpay.uppay.widget.o d -> d
    com.unionpay.uppay.widget.o e -> e
    android.widget.Button f -> f
    android.widget.Button g -> g
    android.widget.ImageView h -> h
    android.view.View$OnClickListener i -> i
    android.view.View$OnClickListener j -> j
    void b() -> b
    void c() -> c
    void d() -> d
    void a(android.widget.EditText) -> a
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    com.unionpay.uppay.widget.o a(com.unionpay.uppay.view.aa) -> a
    com.unionpay.uppay.widget.o b(com.unionpay.uppay.view.aa) -> b
    boolean a(java.lang.String) -> a
    void a(com.unionpay.uppay.view.aa,android.widget.EditText) -> a
    void a(com.unionpay.uppay.view.aa,android.content.Context,android.view.View,android.graphics.drawable.Drawable) -> a
    android.widget.ImageView c(com.unionpay.uppay.view.aa) -> c
com.unionpay.uppay.view.ab -> com.unionpay.uppay.view.ab:
    com.unionpay.uppay.view.aa a -> a
    void onClick(android.view.View) -> onClick
com.unionpay.uppay.view.ac -> com.unionpay.uppay.view.ac:
    com.unionpay.uppay.view.aa a -> a
    void onClick(android.view.View) -> onClick
com.unionpay.uppay.view.ad -> com.unionpay.uppay.view.ad:
    com.unionpay.uppay.widget.m a -> a
    com.unionpay.uppay.view.ac b -> b
    void onClick(android.view.View) -> onClick
com.unionpay.uppay.view.ae -> com.unionpay.uppay.view.ae:
    android.widget.EditText a -> a
    com.unionpay.uppay.view.ac b -> b
    void onDismiss(android.content.DialogInterface) -> onDismiss
com.unionpay.uppay.view.af -> com.unionpay.uppay.view.af:
    android.graphics.drawable.Drawable a -> a
    com.unionpay.uppay.view.aa b -> b
    void onClick(android.view.View) -> onClick
com.unionpay.uppay.view.ag -> com.unionpay.uppay.view.ag:
    com.unionpay.uppay.PayActivity a -> a
    com.unionpay.uppay.view.aa b -> b
    void run() -> run
com.unionpay.uppay.view.ah -> com.unionpay.uppay.view.ah:
    android.widget.PopupWindow a -> a
    com.unionpay.uppay.view.aa b -> b
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.unionpay.uppay.view.ai -> com.unionpay.uppay.view.ai:
    com.unionpay.uppay.view.aa a -> a
    void onDismiss() -> onDismiss
com.unionpay.uppay.view.aj -> com.unionpay.uppay.view.aj:
    boolean c -> c
    android.widget.Button d -> d
    android.widget.Button e -> e
    com.unionpay.uppay.widget.o f -> f
    com.unionpay.uppay.widget.o g -> g
    com.unionpay.uppay.widget.o h -> h
    com.unionpay.uppay.widget.i i -> i
    com.unionpay.uppay.widget.p j -> j
    com.unionpay.uppay.widget.p k -> k
    android.text.TextWatcher l -> l
    android.view.View$OnClickListener m -> m
    android.view.View$OnClickListener n -> n
    android.view.View$OnClickListener o -> o
    android.view.View$OnClickListener p -> p
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean a(java.lang.String) -> a
    boolean b(java.lang.String) -> b
    void b() -> b
    void a(int) -> a
    void a(android.widget.EditText) -> a
    void b(int) -> b
    void c() -> c
    com.unionpay.uppay.widget.o a(com.unionpay.uppay.view.aj) -> a
    com.unionpay.uppay.widget.o b(com.unionpay.uppay.view.aj) -> b
    com.unionpay.uppay.widget.o c(com.unionpay.uppay.view.aj) -> c
    com.unionpay.uppay.widget.i d(com.unionpay.uppay.view.aj) -> d
    void a(com.unionpay.uppay.view.aj,android.widget.EditText) -> a
    com.unionpay.uppay.widget.p e(com.unionpay.uppay.view.aj) -> e
com.unionpay.uppay.view.ak -> com.unionpay.uppay.view.ak:
    boolean b -> b
    int c -> c
    boolean d -> d
    com.unionpay.uppay.view.aj a -> a
    java.lang.String a(java.lang.CharSequence,int) -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.unionpay.uppay.view.al -> com.unionpay.uppay.view.al:
    com.unionpay.uppay.view.aj a -> a
    void onClick(android.view.View) -> onClick
com.unionpay.uppay.view.am -> com.unionpay.uppay.view.am:
    com.unionpay.uppay.view.aj a -> a
    void onClick(android.view.View) -> onClick
com.unionpay.uppay.view.an -> com.unionpay.uppay.view.an:
    com.unionpay.uppay.widget.m a -> a
    com.unionpay.uppay.view.am b -> b
    void onClick(android.view.View) -> onClick
com.unionpay.uppay.view.ao -> com.unionpay.uppay.view.ao:
    android.widget.EditText a -> a
    com.unionpay.uppay.view.am b -> b
    void onDismiss(android.content.DialogInterface) -> onDismiss
com.unionpay.uppay.view.ap -> com.unionpay.uppay.view.ap:
    com.unionpay.uppay.view.aj a -> a
    void onClick(android.view.View) -> onClick
com.unionpay.uppay.view.aq -> com.unionpay.uppay.view.aq:
    com.unionpay.uppay.view.aj a -> a
    void onClick(android.view.View) -> onClick
com.unionpay.uppay.view.ar -> com.unionpay.uppay.view.ar:
    com.unionpay.uppay.widget.m a -> a
    com.unionpay.uppay.view.aq b -> b
    void onClick(android.view.View) -> onClick
com.unionpay.uppay.view.as -> com.unionpay.uppay.view.as:
    com.unionpay.uppay.view.aq a -> a
    void onDismiss(android.content.DialogInterface) -> onDismiss
com.unionpay.uppay.view.at -> com.unionpay.uppay.view.at:
    com.unionpay.uppay.PayActivity a -> a
    com.unionpay.uppay.view.aj b -> b
    void run() -> run
com.unionpay.uppay.view.au -> com.unionpay.uppay.view.au:
    com.unionpay.uppay.widget.c c -> c
    com.unionpay.uppay.widget.o d -> d
    com.unionpay.uppay.widget.o e -> e
    com.unionpay.uppay.widget.p f -> f
    android.widget.Button g -> g
    android.widget.Button h -> h
    android.view.View$OnClickListener i -> i
    android.view.View$OnClickListener j -> j
    void onDraw(android.graphics.Canvas) -> onDraw
    void b() -> b
    void c() -> c
    void d() -> d
    void a(android.widget.EditText) -> a
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    com.unionpay.uppay.widget.o a(com.unionpay.uppay.view.au) -> a
    void a(com.unionpay.uppay.view.au,android.widget.EditText) -> a
    com.unionpay.uppay.widget.p b(com.unionpay.uppay.view.au) -> b
    com.unionpay.uppay.widget.o c(com.unionpay.uppay.view.au) -> c
com.unionpay.uppay.view.av -> com.unionpay.uppay.view.av:
    com.unionpay.uppay.view.au a -> a
    void onClick(android.view.View) -> onClick
com.unionpay.uppay.view.aw -> com.unionpay.uppay.view.aw:
    com.unionpay.uppay.widget.m a -> a
    com.unionpay.uppay.view.av b -> b
    void onClick(android.view.View) -> onClick
com.unionpay.uppay.view.ax -> com.unionpay.uppay.view.ax:
    com.unionpay.uppay.view.av a -> a
    void onDismiss(android.content.DialogInterface) -> onDismiss
com.unionpay.uppay.view.ay -> com.unionpay.uppay.view.ay:
    com.unionpay.uppay.view.au a -> a
    void onClick(android.view.View) -> onClick
com.unionpay.uppay.view.az -> com.unionpay.uppay.view.az:
    com.unionpay.uppay.widget.m a -> a
    com.unionpay.uppay.view.ay b -> b
    void onClick(android.view.View) -> onClick
com.unionpay.uppay.view.b -> com.unionpay.uppay.view.b:
    java.util.List c -> c
    com.unionpay.uppay.widget.u d -> d
    com.unionpay.uppay.widget.o e -> e
    com.unionpay.uppay.widget.s f -> f
    android.widget.Button g -> g
    android.widget.Button h -> h
    boolean i -> i
    com.unionpay.uppay.widget.c j -> j
    java.util.List k -> k
    android.view.View$OnClickListener l -> l
    android.view.View$OnTouchListener m -> m
    android.view.View$OnClickListener n -> n
    android.view.View$OnClickListener o -> o
    void b() -> b
    void d() -> d
    void c() -> c
    void a(boolean) -> a
    void onAttachedToWindow() -> onAttachedToWindow
    java.util.List a(com.unionpay.uppay.view.b) -> a
    void b(com.unionpay.uppay.view.b) -> b
    boolean c(com.unionpay.uppay.view.b) -> c
    void d(com.unionpay.uppay.view.b) -> d
    com.unionpay.uppay.widget.o e(com.unionpay.uppay.view.b) -> e
com.unionpay.uppay.view.ba -> com.unionpay.uppay.view.ba:
    android.widget.EditText a -> a
    com.unionpay.uppay.view.ay b -> b
    void onDismiss(android.content.DialogInterface) -> onDismiss
com.unionpay.uppay.view.bb -> com.unionpay.uppay.view.bb:
    com.unionpay.uppay.view.au a -> a
    void onClick(android.view.View) -> onClick
com.unionpay.uppay.view.bc -> com.unionpay.uppay.view.bc:
    com.unionpay.uppay.PayActivity a -> a
    com.unionpay.uppay.view.au b -> b
    void run() -> run
com.unionpay.uppay.view.c -> com.unionpay.uppay.view.c:
    com.unionpay.uppay.view.b a -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.unionpay.uppay.view.d -> com.unionpay.uppay.view.d:
    com.unionpay.uppay.view.b a -> a
    void onClick(android.view.View) -> onClick
com.unionpay.uppay.view.e -> com.unionpay.uppay.view.e:
    com.unionpay.uppay.widget.m a -> a
    com.unionpay.uppay.view.d b -> b
    void onClick(android.view.View) -> onClick
com.unionpay.uppay.view.f -> com.unionpay.uppay.view.f:
    com.unionpay.uppay.view.b a -> a
    void onClick(android.view.View) -> onClick
com.unionpay.uppay.view.g -> com.unionpay.uppay.view.g:
    com.unionpay.uppay.view.b a -> a
    void onClick(android.view.View) -> onClick
com.unionpay.uppay.view.h -> com.unionpay.uppay.view.h:
    com.unionpay.uppay.PayActivity a -> a
    com.unionpay.uppay.view.b b -> b
    void run() -> run
com.unionpay.uppay.view.i -> com.unionpay.uppay.view.i:
    android.widget.ProgressBar a -> a
    void a() -> a
com.unionpay.uppay.view.j -> com.unionpay.uppay.view.j:
    com.unionpay.uppay.widget.g a -> a
    android.view.View$OnClickListener b -> b
    android.view.View$OnClickListener c -> c
    void onAttachedToWindow() -> onAttachedToWindow
    void a() -> a
    com.unionpay.uppay.widget.g a(com.unionpay.uppay.view.j) -> a
com.unionpay.uppay.view.k -> com.unionpay.uppay.view.k:
    com.unionpay.uppay.view.j a -> a
    void onClick(android.view.View) -> onClick
com.unionpay.uppay.view.l -> com.unionpay.uppay.view.l:
    com.unionpay.uppay.view.j a -> a
    void onClick(android.view.View) -> onClick
com.unionpay.uppay.view.m -> com.unionpay.uppay.view.m:
    com.unionpay.uppay.view.j a -> a
    void run() -> run
com.unionpay.uppay.view.n -> com.unionpay.uppay.view.n:
    android.widget.Button c -> c
    android.widget.Button d -> d
    com.unionpay.uppay.widget.ab e -> e
    android.view.View$OnClickListener f -> f
    android.view.View$OnClickListener g -> g
    void b() -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void a(com.unionpay.uppay.view.n) -> a
com.unionpay.uppay.view.o -> com.unionpay.uppay.view.o:
    com.unionpay.uppay.view.n a -> a
    void onClick(android.view.View) -> onClick
com.unionpay.uppay.view.p -> com.unionpay.uppay.view.p:
    com.unionpay.uppay.view.n a -> a
    void onClick(android.view.View) -> onClick
com.unionpay.uppay.view.q -> com.unionpay.uppay.view.q:
    com.unionpay.uppay.view.n a -> a
    void run() -> run
com.unionpay.uppay.view.r -> com.unionpay.uppay.view.r:
    com.unionpay.uppay.widget.m a -> a
    com.unionpay.uppay.PayActivity b -> b
    com.unionpay.uppay.view.n c -> c
    void onClick(android.view.View) -> onClick
com.unionpay.uppay.view.s -> com.unionpay.uppay.view.s:
    com.unionpay.uppay.widget.m a -> a
    com.unionpay.uppay.view.n b -> b
    void onClick(android.view.View) -> onClick
com.unionpay.uppay.view.t -> com.unionpay.uppay.view.t:
    com.unionpay.uppay.widget.i c -> c
    android.view.View$OnClickListener d -> d
    void onAttachedToWindow() -> onAttachedToWindow
    com.unionpay.uppay.widget.i a(com.unionpay.uppay.view.t) -> a
    void b(com.unionpay.uppay.view.t) -> b
com.unionpay.uppay.view.u -> com.unionpay.uppay.view.u:
    com.unionpay.uppay.view.t a -> a
    void onClick(android.view.View) -> onClick
com.unionpay.uppay.view.v -> com.unionpay.uppay.view.v:
    com.unionpay.uppay.PayActivity a -> a
    com.unionpay.uppay.view.t b -> b
    void run() -> run
com.unionpay.uppay.view.w -> com.unionpay.uppay.view.w:
    void onAttachedToWindow() -> onAttachedToWindow
com.unionpay.uppay.view.x -> com.unionpay.uppay.view.x:
    com.unionpay.uppay.PayActivity a -> a
    com.unionpay.uppay.view.w b -> b
    void run() -> run
com.unionpay.uppay.view.y -> com.unionpay.uppay.view.y:
    java.util.List a -> a
    void a(android.content.Context) -> a
    void onAttachedToWindow() -> onAttachedToWindow
    java.lang.String a(java.lang.String) -> a
com.unionpay.uppay.view.z -> com.unionpay.uppay.view.z:
    com.unionpay.uppay.PayActivity a -> a
    com.unionpay.uppay.view.y b -> b
    void run() -> run
com.unionpay.uppay.widget.a -> com.unionpay.uppay.widget.a:
    android.view.View$OnClickListener a -> a
    void onDraw(android.graphics.Canvas) -> onDraw
com.unionpay.uppay.widget.aa -> com.unionpay.uppay.widget.aa:
    android.graphics.drawable.Drawable a -> a
    java.util.List b -> b
    boolean c -> c
    int d -> d
    void a(android.content.Context) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
com.unionpay.uppay.widget.ab -> com.unionpay.uppay.widget.ab:
    android.content.Context a -> a
    int b -> b
    android.widget.LinearLayout c -> c
    int d -> d
    int e -> e
    void a(int) -> a
    void onAttachedToWindow() -> onAttachedToWindow
    void b(int) -> b
com.unionpay.uppay.widget.ac -> com.unionpay.uppay.widget.ac:
    int a -> a
    com.unionpay.uppay.widget.z b -> b
    void a() -> a
com.unionpay.uppay.widget.ad -> com.unionpay.uppay.widget.ad:
com.unionpay.uppay.widget.b -> com.unionpay.uppay.widget.b:
    com.unionpay.uppay.widget.a a -> a
    void onClick(android.view.View) -> onClick
com.unionpay.uppay.widget.c -> com.unionpay.uppay.widget.c:
    android.widget.Button a -> a
    com.unionpay.uppay.widget.z b -> b
    com.unionpay.uppay.widget.z c -> c
    com.unionpay.uppay.widget.z d -> d
    com.unionpay.uppay.widget.ac e -> e
    com.unionpay.uppay.widget.m f -> f
    android.view.View$OnClickListener g -> g
    void a() -> a
    void a(boolean) -> a
    com.unionpay.uppay.widget.m a(com.unionpay.uppay.widget.c,com.unionpay.uppay.widget.m) -> a
    com.unionpay.uppay.widget.m a(com.unionpay.uppay.widget.c) -> a
com.unionpay.uppay.widget.d -> com.unionpay.uppay.widget.d:
    com.unionpay.uppay.widget.c a -> a
    void onClick(android.view.View) -> onClick
com.unionpay.uppay.widget.e -> com.unionpay.uppay.widget.e:
    com.unionpay.uppay.PayActivity a -> a
    com.unionpay.uppay.widget.d b -> b
    void onClick(android.view.View) -> onClick
com.unionpay.uppay.widget.f -> com.unionpay.uppay.widget.f:
    com.unionpay.uppay.widget.d a -> a
    void onClick(android.view.View) -> onClick
com.unionpay.uppay.widget.g -> com.unionpay.uppay.widget.g:
    int a -> a
    void a(android.content.Context,java.util.List) -> a
    int a() -> a
    void a(int) -> a
com.unionpay.uppay.widget.h -> com.unionpay.uppay.widget.h:
    android.widget.RadioButton a -> a
    com.unionpay.uppay.widget.z b -> b
    com.unionpay.uppay.widget.z c -> c
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void a(boolean) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
com.unionpay.uppay.widget.i -> com.unionpay.uppay.widget.i:
    int a -> a
    android.widget.ImageView b -> b
    boolean c -> c
    com.unionpay.uppay.model.a d -> d
    boolean a() -> a
    void a(boolean) -> a
    void setOnFocusChangeListener(android.view.View$OnFocusChangeListener) -> setOnFocusChangeListener
    void b() -> b
    boolean a(com.unionpay.uppay.widget.i,boolean) -> a
    boolean a(com.unionpay.uppay.widget.i) -> a
    com.unionpay.uppay.model.a b(com.unionpay.uppay.widget.i) -> b
    android.widget.ImageView c(com.unionpay.uppay.widget.i) -> c
    void d(com.unionpay.uppay.widget.i) -> d
com.unionpay.uppay.widget.j -> com.unionpay.uppay.widget.j:
    com.unionpay.uppay.widget.i a -> a
    void onClick(android.view.View) -> onClick
com.unionpay.uppay.widget.k -> com.unionpay.uppay.widget.k:
    com.unionpay.uppay.widget.i a -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
com.unionpay.uppay.widget.l -> com.unionpay.uppay.widget.l:
    android.content.Context a -> a
    com.unionpay.uppay.widget.i b -> b
    void onClick(android.view.View) -> onClick
com.unionpay.uppay.widget.m -> com.unionpay.uppay.widget.m:
    com.unionpay.uppay.widget.m b -> b
    boolean a -> a
    int c -> c
    android.widget.Button d -> d
    android.widget.Button e -> e
    android.content.Context f -> f
    void a(android.view.View$OnClickListener) -> a
    void b(android.view.View$OnClickListener) -> b
    void a(java.lang.String,boolean) -> a
    void a(java.lang.String,java.lang.String,java.lang.String,boolean) -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void a(android.widget.RelativeLayout) -> a
    void b(android.widget.RelativeLayout) -> b
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    android.widget.RelativeLayout b() -> b
    void dismiss() -> dismiss
    void show() -> show
    void a() -> a
    void a(com.unionpay.uppay.widget.m) -> a
com.unionpay.uppay.widget.n -> com.unionpay.uppay.widget.n:
    com.unionpay.uppay.widget.m a -> a
    void onAttachedToWindow() -> onAttachedToWindow
com.unionpay.uppay.widget.o -> com.unionpay.uppay.widget.o:
    android.widget.EditText a -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    void a() -> a
    android.widget.EditText b() -> b
    void a(java.lang.CharSequence) -> a
    void a(int) -> a
com.unionpay.uppay.widget.p -> com.unionpay.uppay.widget.p:
    com.unionpay.uppay.widget.z a -> a
    android.widget.Button b -> b
    java.lang.Thread c -> c
    int d -> d
    int e -> e
    void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    void setEnabled(boolean) -> setEnabled
    void a(java.lang.String) -> a
    void a(int) -> a
    com.unionpay.uppay.widget.z a(com.unionpay.uppay.widget.p) -> a
    void a(android.os.Handler) -> a
    java.lang.Thread b(com.unionpay.uppay.widget.p) -> b
com.unionpay.uppay.widget.q -> com.unionpay.uppay.widget.q:
    java.lang.String a -> a
    java.lang.String b -> b
    com.unionpay.uppay.widget.p c -> c
    void handleMessage(android.os.Message) -> handleMessage
com.unionpay.uppay.widget.r -> com.unionpay.uppay.widget.r:
    android.os.Handler a -> a
    com.unionpay.uppay.widget.p b -> b
    void run() -> run
com.unionpay.uppay.widget.s -> com.unionpay.uppay.widget.s:
    android.content.Context a -> a
    android.widget.GridView b -> b
    android.view.View$OnClickListener c -> c
    android.widget.PopupWindow d -> d
    int e -> e
    java.util.List f -> f
    void a(android.view.View) -> a
    void a() -> a
    java.util.List b() -> b
    android.content.Context a(com.unionpay.uppay.widget.s) -> a
    android.view.View$OnClickListener b(com.unionpay.uppay.widget.s) -> b
com.unionpay.uppay.widget.t -> com.unionpay.uppay.widget.t:
    java.util.HashMap b -> b
    int c -> c
    com.unionpay.uppay.widget.s a -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.unionpay.uppay.widget.u -> com.unionpay.uppay.widget.u:
    java.lang.String a -> a
    int b -> b
    android.widget.TextView c -> c
    android.content.Context d -> d
    void a(java.lang.String) -> a
com.unionpay.uppay.widget.v -> com.unionpay.uppay.widget.v:
    com.unionpay.uppay.widget.u a -> a
    void onClick(android.view.View) -> onClick
com.unionpay.uppay.widget.w -> com.unionpay.uppay.widget.w:
    int a -> a
    int b -> b
    int c -> c
    java.lang.String d -> d
    java.lang.String[] e -> e
    android.view.ViewGroup f -> f
    android.widget.RelativeLayout a(int,android.content.Context) -> a
    int a(java.lang.String,android.text.TextPaint) -> a
    android.view.ViewGroup a(com.unionpay.uppay.widget.w,android.view.ViewGroup) -> a
    java.lang.String[] a(com.unionpay.uppay.widget.w) -> a
    android.widget.RelativeLayout a(com.unionpay.uppay.widget.w,int,android.content.Context) -> a
    android.view.ViewGroup b(com.unionpay.uppay.widget.w) -> b
com.unionpay.uppay.widget.x -> com.unionpay.uppay.widget.x:
    android.widget.RelativeLayout a -> a
    android.app.Activity b -> b
    com.unionpay.uppay.widget.w c -> c
    void onClick(android.view.View) -> onClick
com.unionpay.uppay.widget.y -> com.unionpay.uppay.widget.y:
    int a -> a
    int b -> b
    java.util.List c -> c
    boolean d -> d
    void a(android.content.Context) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
com.unionpay.uppay.widget.z -> com.unionpay.uppay.widget.z:
    java.lang.String a -> a
    void a(java.lang.String) -> a
    void a() -> a
flexjson.BasicType -> flexjson.BasicType:
    flexjson.BasicType OBJECT -> OBJECT
    flexjson.BasicType ARRAY -> ARRAY
    flexjson.BasicType[] $VALUES -> $VALUES
    flexjson.BasicType[] values() -> values
    flexjson.BasicType valueOf(java.lang.String) -> valueOf
flexjson.BeanAnalyzer -> flexjson.BeanAnalyzer:
    java.lang.ThreadLocal cache -> cache
    java.lang.Class clazz -> clazz
    flexjson.BeanAnalyzer superBean -> superBean
    java.util.Map properties -> properties
    flexjson.BeanAnalyzer analyze(java.lang.Class) -> analyze
    void clearCache() -> clearCache
    void populateProperties() -> populateProperties
    flexjson.BeanAnalyzer getSuperBean() -> getSuperBean
    java.lang.String uncapitalize(java.lang.String) -> uncapitalize
    flexjson.BeanProperty getProperty(java.lang.String) -> getProperty
    java.util.Collection getProperties() -> getProperties
    void merge(java.util.Map,java.util.Map) -> merge
    boolean hasProperty(java.lang.String) -> hasProperty
    java.lang.reflect.Field getDeclaredField(java.lang.String) -> getDeclaredField
flexjson.BeanProperty -> flexjson.BeanProperty:
    java.lang.String name -> name
    flexjson.BeanAnalyzer bean -> bean
    java.lang.Class propertyType -> propertyType
    java.lang.reflect.Field property -> property
    java.lang.reflect.Method readMethod -> readMethod
    java.lang.reflect.Method writeMethod -> writeMethod
    java.util.Map writeMethods -> writeMethods
    java.lang.String getName() -> getName
    java.lang.reflect.Field getProperty() -> getProperty
    java.lang.Class getPropertyType() -> getPropertyType
    java.lang.reflect.Method getReadMethod() -> getReadMethod
    java.lang.reflect.Method getWriteMethod() -> getWriteMethod
    java.util.Collection getWriteMethods() -> getWriteMethods
    void addWriteMethod(java.lang.reflect.Method) -> addWriteMethod
    void setReadMethod(java.lang.reflect.Method) -> setReadMethod
    java.lang.Boolean isAnnotated() -> isAnnotated
    java.lang.Object getValue(java.lang.Object) -> getValue
    java.lang.Boolean isReadable() -> isReadable
    java.lang.Boolean isWritable() -> isWritable
flexjson.ChainedIterator -> flexjson.ChainedIterator:
    java.util.Iterator[] iterators -> iterators
    int current -> current
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
flexjson.ChainedSet -> flexjson.ChainedSet:
    java.util.Set parent -> parent
    java.util.Set child -> child
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    java.util.Iterator iterator() -> iterator
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean add(java.lang.Object) -> add
    boolean remove(java.lang.Object) -> remove
    boolean containsAll(java.util.Collection) -> containsAll
    boolean addAll(java.util.Collection) -> addAll
    boolean retainAll(java.util.Collection) -> retainAll
    boolean removeAll(java.util.Collection) -> removeAll
    void clear() -> clear
    java.util.Set getParent() -> getParent
flexjson.ClassLocator -> flexjson.ClassLocator:
    java.lang.Class locate(flexjson.ObjectBinder,flexjson.Path) -> locate
flexjson.JSON -> flexjson.JSON:
    boolean include() -> include
flexjson.JSONContext -> flexjson.JSONContext:
    java.lang.ThreadLocal context -> context
    java.lang.String rootName -> rootName
    flexjson.OutputHandler out -> out
    boolean prettyPrint -> prettyPrint
    java.util.Stack typeContextStack -> typeContextStack
    int indent -> indent
    flexjson.transformer.TypeTransformerMap typeTransformerMap -> typeTransformerMap
    java.util.Map pathTransformerMap -> pathTransformerMap
    java.util.List pathExpressions -> pathExpressions
    flexjson.SerializationType serializationType -> serializationType
    flexjson.ChainedSet visits -> visits
    java.util.LinkedList objectStack -> objectStack
    flexjson.Path path -> path
    void serializationType(flexjson.SerializationType) -> serializationType
    void transform(java.lang.Object) -> transform
    flexjson.transformer.Transformer getTransformer(java.lang.Object) -> getTransformer
    flexjson.transformer.Transformer getPathTransformer(java.lang.Object) -> getPathTransformer
    flexjson.transformer.Transformer getTypeTransformer(java.lang.Object) -> getTypeTransformer
    void setTypeTransformers(flexjson.transformer.TypeTransformerMap) -> setTypeTransformers
    void setPathTransformers(java.util.Map) -> setPathTransformers
    void setPrettyPrint(boolean) -> setPrettyPrint
    void pushTypeContext(flexjson.TypeContext) -> pushTypeContext
    void popTypeContext() -> popTypeContext
    flexjson.TypeContext peekTypeContext() -> peekTypeContext
    void setOut(flexjson.OutputHandler) -> setOut
    flexjson.OutputHandler getOut() -> getOut
    void write(java.lang.String) -> write
    flexjson.TypeContext writeOpenObject() -> writeOpenObject
    void writeCloseObject() -> writeCloseObject
    void writeName(java.lang.String) -> writeName
    void writeComma() -> writeComma
    flexjson.TypeContext writeOpenArray() -> writeOpenArray
    void writeCloseArray() -> writeCloseArray
    void writeIndent() -> writeIndent
    void writeQuoted(java.lang.String) -> writeQuoted
    void unicode(char) -> unicode
    flexjson.JSONContext get() -> get
    void cleanup() -> cleanup
    flexjson.ChainedSet getVisits() -> getVisits
    void setVisits(flexjson.ChainedSet) -> setVisits
    java.util.LinkedList getObjectStack() -> getObjectStack
    java.lang.String getRootName() -> getRootName
    void setRootName(java.lang.String) -> setRootName
    flexjson.Path getPath() -> getPath
    void setPathExpressions(java.util.List) -> setPathExpressions
    boolean isIncluded(flexjson.BeanProperty) -> isIncluded
    boolean isIncluded(java.lang.String,java.lang.Object) -> isIncluded
    boolean isIncluded(java.lang.reflect.Field) -> isIncluded
    boolean isValidField(java.lang.reflect.Field) -> isValidField
    flexjson.PathExpression matches(java.util.List) -> matches
flexjson.JSONContext$1 -> flexjson.JSONContext$1:
    flexjson.JSONContext initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
flexjson.JSONDeserializer -> flexjson.JSONDeserializer:
    java.util.Map typeFactories -> typeFactories
    java.util.Map pathFactories -> pathFactories
    java.lang.Object deserialize(java.lang.String) -> deserialize
    java.lang.Object deserialize(java.io.Reader) -> deserialize
    java.lang.Object deserialize(java.lang.String,java.lang.Class) -> deserialize
    java.lang.Object deserialize(java.io.Reader,java.lang.Class) -> deserialize
    java.lang.Object deserialize(java.lang.String,flexjson.ObjectFactory) -> deserialize
    java.lang.Object deserialize(java.io.Reader,flexjson.ObjectFactory) -> deserialize
    java.lang.Object deserializeInto(java.lang.String,java.lang.Object) -> deserializeInto
    java.lang.Object deserializeInto(java.io.Reader,java.lang.Object) -> deserializeInto
    flexjson.JSONDeserializer use(java.lang.String,flexjson.ClassLocator) -> use
    flexjson.JSONDeserializer use(java.lang.String,java.lang.Class) -> use
    flexjson.JSONDeserializer use(java.lang.Class,flexjson.ObjectFactory) -> use
    flexjson.JSONDeserializer use(java.lang.String,flexjson.ObjectFactory) -> use
    flexjson.JSONDeserializer use(flexjson.ObjectFactory,java.lang.String[]) -> use
    flexjson.ObjectBinder createObjectBinder() -> createObjectBinder
flexjson.JSONException -> flexjson.JSONException:
flexjson.JSONParameterizedType -> flexjson.JSONParameterizedType:
    java.lang.Class clazz -> clazz
    java.lang.reflect.Type[] types -> types
    java.lang.reflect.Type[] getActualTypeArguments() -> getActualTypeArguments
    java.lang.reflect.Type getRawType() -> getRawType
    java.lang.reflect.Type getOwnerType() -> getOwnerType
flexjson.JSONSerializer -> flexjson.JSONSerializer:
    char[] HEX -> HEX
    flexjson.transformer.TypeTransformerMap typeTransformerMap -> typeTransformerMap
    java.util.Map pathTransformerMap -> pathTransformerMap
    java.util.List pathExpressions -> pathExpressions
    boolean prettyPrint -> prettyPrint
    java.lang.String rootName -> rootName
    flexjson.JSONSerializer prettyPrint(boolean) -> prettyPrint
    flexjson.JSONSerializer rootName(java.lang.String) -> rootName
    java.lang.String serialize(java.lang.Object) -> serialize
    void serialize(java.lang.Object,java.io.Writer) -> serialize
    java.lang.String serialize(java.lang.Object,java.lang.StringBuilder) -> serialize
    java.lang.String serialize(java.lang.Object,java.lang.StringBuffer) -> serialize
    java.lang.String serialize(java.lang.Object,flexjson.OutputHandler) -> serialize
    java.lang.String deepSerialize(java.lang.Object) -> deepSerialize
    void deepSerialize(java.lang.Object,java.io.Writer) -> deepSerialize
    java.lang.String deepSerialize(java.lang.Object,java.lang.StringBuilder) -> deepSerialize
    java.lang.String deepSerialize(java.lang.Object,java.lang.StringBuffer) -> deepSerialize
    java.lang.String deepSerialize(java.lang.Object,flexjson.OutputHandler) -> deepSerialize
    java.lang.String serialize(java.lang.Object,flexjson.SerializationType,flexjson.OutputHandler) -> serialize
    flexjson.JSONSerializer transform(flexjson.transformer.Transformer,java.lang.String[]) -> transform
    flexjson.JSONSerializer transform(flexjson.transformer.Transformer,java.lang.Class[]) -> transform
    void addExclude(java.lang.String) -> addExclude
    void addInclude(java.lang.String) -> addInclude
    flexjson.JSONSerializer exclude(java.lang.String[]) -> exclude
    flexjson.JSONSerializer include(java.lang.String[]) -> include
    java.util.List getIncludes() -> getIncludes
    java.util.List getExcludes() -> getExcludes
    void setIncludes(java.util.List) -> setIncludes
    void setExcludes(java.util.List) -> setExcludes
flexjson.JSONTokener -> flexjson.JSONTokener:
    int index -> index
    java.io.Reader reader -> reader
    char lastChar -> lastChar
    boolean useLastChar -> useLastChar
    void back() -> back
    int dehexchar(char) -> dehexchar
    boolean more() -> more
    char next() -> next
    char next(char) -> next
    java.lang.String next(int) -> next
    char nextClean() -> nextClean
    java.lang.String nextString(char) -> nextString
    java.lang.String nextTo(char) -> nextTo
    java.lang.String nextTo(java.lang.String) -> nextTo
    java.lang.Object nextValue() -> nextValue
    char skipTo(char) -> skipTo
    flexjson.JSONException syntaxError(java.lang.String) -> syntaxError
    java.lang.String toString() -> toString
    java.util.Map parseObject() -> parseObject
    void putOnce(java.util.Map,java.lang.String,java.lang.Object) -> putOnce
    java.util.List parseArray() -> parseArray
    java.lang.Object stringToValue(java.lang.String) -> stringToValue
flexjson.ObjectBinder -> flexjson.ObjectBinder:
    java.util.LinkedList objectStack -> objectStack
    java.util.LinkedList jsonStack -> jsonStack
    flexjson.Path currentPath -> currentPath
    java.util.Map factories -> factories
    java.util.Map pathFactories -> pathFactories
    flexjson.ObjectBinder use(flexjson.Path,flexjson.ObjectFactory) -> use
    flexjson.ObjectBinder use(java.lang.Class,flexjson.ObjectFactory) -> use
    flexjson.Path getCurrentPath() -> getCurrentPath
    java.lang.Object bind(java.lang.Object) -> bind
    java.lang.Object bind(java.lang.Object,java.lang.Object) -> bind
    java.lang.Object bind(java.lang.Object,java.lang.reflect.Type) -> bind
    java.util.Collection bindIntoCollection(java.util.Collection,java.util.Collection,java.lang.reflect.Type) -> bindIntoCollection
    java.lang.Object bindIntoMap(java.util.Map,java.util.Map,java.lang.reflect.Type,java.lang.reflect.Type) -> bindIntoMap
    java.lang.Object bindIntoObject(java.util.Map,java.lang.Object,java.lang.reflect.Type) -> bindIntoObject
    flexjson.JSONException cannotConvertValueToTargetType(java.lang.Object,java.lang.Class) -> cannotConvertValueToTargetType
    java.lang.Class getTargetClass(java.lang.reflect.Type) -> getTargetClass
    java.lang.reflect.Type resolveParameterizedTypes(java.lang.reflect.Type,java.lang.reflect.Type) -> resolveParameterizedTypes
    java.lang.Class findClassName(java.lang.Object,java.lang.Class) -> findClassName
    java.lang.Class useMostSpecific(java.lang.Class,java.lang.Class) -> useMostSpecific
    java.lang.Class findClassInMap(java.util.Map,java.lang.Class) -> findClassInMap
    flexjson.ObjectFactory findFactoryFor(java.lang.Class) -> findFactoryFor
    flexjson.ObjectFactory findFactoryByTargetClass(java.lang.Class) -> findFactoryByTargetClass
    java.lang.Object instantiate(java.lang.Class) -> instantiate
    java.lang.Object findFieldInJson(java.util.Map,flexjson.BeanProperty) -> findFieldInJson
    java.lang.String upperCase(java.lang.String) -> upperCase
    java.lang.Object getTarget() -> getTarget
    java.lang.Object getSource() -> getSource
    java.lang.Object bindPrimitive(java.lang.Object,java.lang.Class) -> bindPrimitive
    java.lang.Class findClassAtPath(flexjson.Path) -> findClassAtPath
flexjson.ObjectFactory -> flexjson.ObjectFactory:
    java.lang.Object instantiate(flexjson.ObjectBinder,java.lang.Object,java.lang.reflect.Type,java.lang.Class) -> instantiate
flexjson.OutputHandler -> flexjson.OutputHandler:
    flexjson.OutputHandler write(java.lang.String) -> write
    int write(java.lang.String,int,int,java.lang.String) -> write
    int write(java.lang.String,int,int) -> write
flexjson.Path -> flexjson.Path:
    java.util.LinkedList path -> path
    flexjson.Path enqueue(java.lang.String) -> enqueue
    java.lang.String pop() -> pop
    java.util.List getPath() -> getPath
    int length() -> length
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    flexjson.Path parse(java.lang.String) -> parse
flexjson.PathExpression -> flexjson.PathExpression:
    java.lang.String[] expression -> expression
    boolean wildcard -> wildcard
    boolean included -> included
    java.lang.String toString() -> toString
    boolean matches(flexjson.Path) -> matches
    boolean isWildcard() -> isWildcard
    boolean isIncluded() -> isIncluded
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
flexjson.SerializationType -> flexjson.SerializationType:
    flexjson.SerializationType DEEP -> DEEP
    flexjson.SerializationType SHALLOW -> SHALLOW
    flexjson.SerializationType[] $VALUES -> $VALUES
    flexjson.SerializationType[] values() -> values
    flexjson.SerializationType valueOf(java.lang.String) -> valueOf
flexjson.StringBufferOutputHandler -> flexjson.StringBufferOutputHandler:
    java.lang.StringBuffer out -> out
    flexjson.OutputHandler write(java.lang.String) -> write
    int write(java.lang.String,int,int,java.lang.String) -> write
    int write(java.lang.String,int,int) -> write
    java.lang.String toString() -> toString
flexjson.StringBuilderOutputHandler -> flexjson.StringBuilderOutputHandler:
    java.lang.StringBuilder out -> out
    flexjson.OutputHandler write(java.lang.String) -> write
    int write(java.lang.String,int,int,java.lang.String) -> write
    int write(java.lang.String,int,int) -> write
    java.lang.String toString() -> toString
flexjson.TransformerUtil -> flexjson.TransformerUtil:
    flexjson.transformer.TypeTransformerMap defaultTransformers -> defaultTransformers
    flexjson.transformer.TypeTransformerMap getDefaultTypeTransformers() -> getDefaultTypeTransformers
flexjson.TypeContext -> flexjson.TypeContext:
    flexjson.BasicType basicType -> basicType
    boolean isFirst -> isFirst
    java.lang.String propertyName -> propertyName
    flexjson.BasicType getBasicType() -> getBasicType
    void setBasicType(flexjson.BasicType) -> setBasicType
    boolean isFirst() -> isFirst
    void setFirst(boolean) -> setFirst
    java.lang.String getPropertyName() -> getPropertyName
    void setPropertyName(java.lang.String) -> setPropertyName
flexjson.WriterOutputHandler -> flexjson.WriterOutputHandler:
    java.io.Writer out -> out
    flexjson.OutputHandler write(java.lang.String) -> write
    int write(java.lang.String,int,int,java.lang.String) -> write
    int write(java.lang.String,int,int) -> write
    java.lang.String toString() -> toString
flexjson.factories.ArrayObjectFactory -> flexjson.factories.ArrayObjectFactory:
    java.lang.Object instantiate(flexjson.ObjectBinder,java.lang.Object,java.lang.reflect.Type,java.lang.Class) -> instantiate
flexjson.factories.BeanObjectFactory -> flexjson.factories.BeanObjectFactory:
    java.lang.Object instantiate(flexjson.ObjectBinder,java.lang.Object,java.lang.reflect.Type,java.lang.Class) -> instantiate
    java.lang.Object instantiate(java.lang.Class) -> instantiate
flexjson.factories.BigDecimalFactory -> flexjson.factories.BigDecimalFactory:
    java.lang.Object instantiate(flexjson.ObjectBinder,java.lang.Object,java.lang.reflect.Type,java.lang.Class) -> instantiate
flexjson.factories.BigIntegerFactory -> flexjson.factories.BigIntegerFactory:
    java.lang.Object instantiate(flexjson.ObjectBinder,java.lang.Object,java.lang.reflect.Type,java.lang.Class) -> instantiate
flexjson.factories.BooleanObjectFactory -> flexjson.factories.BooleanObjectFactory:
    java.lang.Object instantiate(flexjson.ObjectBinder,java.lang.Object,java.lang.reflect.Type,java.lang.Class) -> instantiate
flexjson.factories.ByteObjectFactory -> flexjson.factories.ByteObjectFactory:
    java.lang.Object instantiate(flexjson.ObjectBinder,java.lang.Object,java.lang.reflect.Type,java.lang.Class) -> instantiate
flexjson.factories.CharacterObjectFactory -> flexjson.factories.CharacterObjectFactory:
    java.lang.Object instantiate(flexjson.ObjectBinder,java.lang.Object,java.lang.reflect.Type,java.lang.Class) -> instantiate
flexjson.factories.ClassLocatorObjectFactory -> flexjson.factories.ClassLocatorObjectFactory:
    flexjson.ClassLocator locator -> locator
    java.lang.Object instantiate(flexjson.ObjectBinder,java.lang.Object,java.lang.reflect.Type,java.lang.Class) -> instantiate
    java.lang.Object createTargetObject(java.lang.Class) -> createTargetObject
    flexjson.ClassLocator getLocator() -> getLocator
flexjson.factories.DateObjectFactory -> flexjson.factories.DateObjectFactory:
    java.util.List dateFormats -> dateFormats
    java.lang.Object instantiate(flexjson.ObjectBinder,java.lang.Object,java.lang.reflect.Type,java.lang.Class) -> instantiate
    java.util.Date instantiateDate(java.lang.Class,java.lang.Long,flexjson.ObjectBinder) -> instantiateDate
flexjson.factories.DoubleObjectFactory -> flexjson.factories.DoubleObjectFactory:
    java.lang.Object instantiate(flexjson.ObjectBinder,java.lang.Object,java.lang.reflect.Type,java.lang.Class) -> instantiate
flexjson.factories.EnumObjectFactory -> flexjson.factories.EnumObjectFactory:
    java.lang.Object instantiate(flexjson.ObjectBinder,java.lang.Object,java.lang.reflect.Type,java.lang.Class) -> instantiate
flexjson.factories.ExistingObjectFactory -> flexjson.factories.ExistingObjectFactory:
    java.lang.Object source -> source
    java.lang.Object instantiate(flexjson.ObjectBinder,java.lang.Object,java.lang.reflect.Type,java.lang.Class) -> instantiate
flexjson.factories.FloatObjectFactory -> flexjson.factories.FloatObjectFactory:
    java.lang.Object instantiate(flexjson.ObjectBinder,java.lang.Object,java.lang.reflect.Type,java.lang.Class) -> instantiate
flexjson.factories.IntegerObjectFactory -> flexjson.factories.IntegerObjectFactory:
    java.lang.Object instantiate(flexjson.ObjectBinder,java.lang.Object,java.lang.reflect.Type,java.lang.Class) -> instantiate
flexjson.factories.ListObjectFactory -> flexjson.factories.ListObjectFactory:
    java.lang.Object instantiate(flexjson.ObjectBinder,java.lang.Object,java.lang.reflect.Type,java.lang.Class) -> instantiate
flexjson.factories.LongObjectFactory -> flexjson.factories.LongObjectFactory:
    java.lang.Object instantiate(flexjson.ObjectBinder,java.lang.Object,java.lang.reflect.Type,java.lang.Class) -> instantiate
flexjson.factories.MapObjectFactory -> flexjson.factories.MapObjectFactory:
    java.lang.Object instantiate(flexjson.ObjectBinder,java.lang.Object,java.lang.reflect.Type,java.lang.Class) -> instantiate
flexjson.factories.SetObjectFactory -> flexjson.factories.SetObjectFactory:
    java.lang.Object instantiate(flexjson.ObjectBinder,java.lang.Object,java.lang.reflect.Type,java.lang.Class) -> instantiate
flexjson.factories.ShortObjectFactory -> flexjson.factories.ShortObjectFactory:
    java.lang.Object instantiate(flexjson.ObjectBinder,java.lang.Object,java.lang.reflect.Type,java.lang.Class) -> instantiate
flexjson.factories.SortedSetObjectFactory -> flexjson.factories.SortedSetObjectFactory:
    java.lang.Object instantiate(flexjson.ObjectBinder,java.lang.Object,java.lang.reflect.Type,java.lang.Class) -> instantiate
flexjson.factories.StringObjectFactory -> flexjson.factories.StringObjectFactory:
    java.lang.Object instantiate(flexjson.ObjectBinder,java.lang.Object,java.lang.reflect.Type,java.lang.Class) -> instantiate
flexjson.locators.StaticClassLocator -> flexjson.locators.StaticClassLocator:
    java.lang.Class target -> target
    java.lang.Class locate(flexjson.ObjectBinder,flexjson.Path) -> locate
flexjson.locators.TypeLocator -> flexjson.locators.TypeLocator:
    java.lang.String fieldname -> fieldname
    java.util.Map types -> types
    flexjson.locators.TypeLocator add(java.lang.Object,java.lang.Class) -> add
    java.lang.Class locate(flexjson.ObjectBinder,flexjson.Path) -> locate
flexjson.transformer.AbstractTransformer -> flexjson.transformer.AbstractTransformer:
    flexjson.JSONContext getContext() -> getContext
    java.lang.Boolean isInline() -> isInline
flexjson.transformer.ArrayTransformer -> flexjson.transformer.ArrayTransformer:
    void transform(java.lang.Object) -> transform
flexjson.transformer.BasicDateTransformer -> flexjson.transformer.BasicDateTransformer:
    void transform(java.lang.Object) -> transform
flexjson.transformer.BooleanTransformer -> flexjson.transformer.BooleanTransformer:
    void transform(java.lang.Object) -> transform
flexjson.transformer.CharacterTransformer -> flexjson.transformer.CharacterTransformer:
    void transform(java.lang.Object) -> transform
flexjson.transformer.ClassTransformer -> flexjson.transformer.ClassTransformer:
    void transform(java.lang.Object) -> transform
flexjson.transformer.DateTransformer -> flexjson.transformer.DateTransformer:
    java.text.SimpleDateFormat simpleDateFormatter -> simpleDateFormatter
    void transform(java.lang.Object) -> transform
    java.lang.Object instantiate(flexjson.ObjectBinder,java.lang.Object,java.lang.reflect.Type,java.lang.Class) -> instantiate
flexjson.transformer.EnumTransformer -> flexjson.transformer.EnumTransformer:
    void transform(java.lang.Object) -> transform
flexjson.transformer.HibernateTransformer -> flexjson.transformer.HibernateTransformer:
    java.lang.Class resolveClass(java.lang.Object) -> resolveClass
    java.lang.Class findBeanClass(java.lang.Object) -> findBeanClass
flexjson.transformer.HtmlEncoderTransformer -> flexjson.transformer.HtmlEncoderTransformer:
    java.util.Map htmlEntities -> htmlEntities
    void transform(java.lang.Object) -> transform
flexjson.transformer.Inline -> flexjson.transformer.Inline:
    java.lang.Boolean isInline() -> isInline
flexjson.transformer.IterableTransformer -> flexjson.transformer.IterableTransformer:
    void transform(java.lang.Object) -> transform
flexjson.transformer.MapTransformer -> flexjson.transformer.MapTransformer:
    void transform(java.lang.Object) -> transform
flexjson.transformer.NullTransformer -> flexjson.transformer.NullTransformer:
    void transform(java.lang.Object) -> transform
flexjson.transformer.NumberTransformer -> flexjson.transformer.NumberTransformer:
    void transform(java.lang.Object) -> transform
flexjson.transformer.ObjectTransformer -> flexjson.transformer.ObjectTransformer:
    void transform(java.lang.Object) -> transform
    java.lang.Class resolveClass(java.lang.Object) -> resolveClass
flexjson.transformer.StringTransformer -> flexjson.transformer.StringTransformer:
    void transform(java.lang.Object) -> transform
flexjson.transformer.Transformer -> flexjson.transformer.Transformer:
    void transform(java.lang.Object) -> transform
flexjson.transformer.TransformerWrapper -> flexjson.transformer.TransformerWrapper:
    flexjson.transformer.Transformer transformer -> transformer
    java.lang.Boolean isInterceptorTransformer -> isInterceptorTransformer
    void transform(java.lang.Object) -> transform
    java.lang.Boolean isInline() -> isInline
flexjson.transformer.TypeTransformerMap -> flexjson.transformer.TypeTransformerMap:
    flexjson.transformer.TypeTransformerMap parentTransformerMap -> parentTransformerMap
    flexjson.transformer.Transformer getTransformer(java.lang.Object) -> getTransformer
    flexjson.transformer.Transformer findTransformer(java.lang.Class,java.lang.Class) -> findTransformer
    flexjson.transformer.Transformer updateTransformers(java.lang.Class,flexjson.transformer.Transformer) -> updateTransformers
flexjson.transformer.ValueTransformer -> flexjson.transformer.ValueTransformer:
    void transform(java.lang.Object) -> transform
japa.parser.ASTParser -> b.a.a:
    japa.parser.ASTParserTokenManager token_source -> b
    japa.parser.JavaCharStream jj_input_stream -> c
    japa.parser.Token token -> d
    japa.parser.Token jj_nt -> e
    int jj_ntk -> f
    japa.parser.Token jj_scanpos -> g
    japa.parser.Token jj_lastpos -> h
    int jj_la -> i
    boolean jj_lookingAhead -> j
    boolean jj_semLA -> k
    int jj_gen -> l
    int[] jj_la1 -> m
    int[] jj_la1_0 -> n
    int[] jj_la1_1 -> o
    int[] jj_la1_2 -> p
    int[] jj_la1_3 -> q
    int[] jj_la1_4 -> r
    japa.parser.ASTParser$JJCalls[] jj_2_rtns -> s
    boolean jj_rescan -> t
    int jj_gc -> u
    japa.parser.ASTParser$LookaheadSuccess jj_ls -> v
    java.util.List jj_expentries -> w
    int[] jj_expentry -> x
    int jj_kind -> y
    int[] jj_lasttokens -> z
    int jj_endpos -> A
    void reset(java.io.InputStream,java.lang.String) -> a
    java.util.List add(java.util.List,java.lang.Object) -> a
    int addModifier(int,int,japa.parser.Token) -> a
    void throwParseException(japa.parser.Token,java.lang.String) -> a
    japa.parser.ast.CompilationUnit CompilationUnit() -> a
    japa.parser.ASTParser$Modifier Modifiers() -> b
    japa.parser.ast.body.ClassOrInterfaceDeclaration ClassOrInterfaceDeclaration(japa.parser.ASTParser$Modifier) -> a
    java.util.List ImplementsList(boolean) -> a
    japa.parser.ast.body.EnumDeclaration EnumDeclaration(japa.parser.ASTParser$Modifier) -> b
    japa.parser.ast.body.EnumConstantDeclaration EnumConstantDeclaration() -> c
    java.util.List TypeParameters() -> d
    japa.parser.ast.TypeParameter TypeParameter() -> e
    java.util.List ClassOrInterfaceBody(boolean) -> b
    japa.parser.ast.body.BodyDeclaration ClassOrInterfaceBodyDeclaration(boolean) -> c
    japa.parser.ast.body.FieldDeclaration FieldDeclaration(japa.parser.ASTParser$Modifier) -> c
    japa.parser.ast.body.VariableDeclarator VariableDeclarator() -> f
    japa.parser.ast.body.VariableDeclaratorId VariableDeclaratorId() -> g
    japa.parser.ast.expr.Expression VariableInitializer() -> h
    japa.parser.ast.expr.ArrayInitializerExpr ArrayInitializer() -> i
    japa.parser.ast.body.MethodDeclaration MethodDeclaration(japa.parser.ASTParser$Modifier) -> d
    java.util.List FormalParameters() -> j
    japa.parser.ast.body.Parameter FormalParameter() -> k
    java.util.List Statements() -> l
    japa.parser.ast.type.Type Type() -> m
    japa.parser.ast.type.ReferenceType ReferenceType() -> n
    japa.parser.ast.type.ClassOrInterfaceType ClassOrInterfaceType() -> o
    java.util.List TypeArguments() -> p
    japa.parser.ast.type.Type TypeArgument() -> q
    japa.parser.ast.type.PrimitiveType PrimitiveType() -> r
    japa.parser.ast.type.Type ResultType() -> s
    japa.parser.ast.expr.NameExpr Name() -> t
    java.util.List NameList() -> u
    japa.parser.ast.expr.Expression Expression() -> v
    japa.parser.ast.expr.AssignExpr$Operator AssignmentOperator() -> w
    japa.parser.ast.expr.Expression ConditionalExpression() -> x
    japa.parser.ast.expr.Expression ConditionalAndExpression() -> y
    japa.parser.ast.expr.Expression InclusiveOrExpression() -> z
    japa.parser.ast.expr.Expression ExclusiveOrExpression() -> A
    japa.parser.ast.expr.Expression AndExpression() -> B
    japa.parser.ast.expr.Expression EqualityExpression() -> C
    japa.parser.ast.expr.Expression InstanceOfExpression() -> D
    japa.parser.ast.expr.Expression ShiftExpression() -> E
    japa.parser.ast.expr.Expression AdditiveExpression() -> F
    japa.parser.ast.expr.Expression MultiplicativeExpression() -> G
    japa.parser.ast.expr.Expression UnaryExpression() -> H
    japa.parser.ast.expr.Expression PreIncrementExpression() -> I
    japa.parser.ast.expr.Expression PreDecrementExpression() -> J
    japa.parser.ast.expr.Expression UnaryExpressionNotPlusMinus() -> K
    japa.parser.ast.expr.Expression PrimaryExpression() -> L
    japa.parser.ast.expr.Expression PrimaryPrefix() -> M
    japa.parser.ast.expr.Expression PrimarySuffixWithoutSuper(japa.parser.ast.expr.Expression) -> a
    java.util.List Arguments() -> N
    japa.parser.ast.expr.Expression AllocationExpression(japa.parser.ast.expr.Expression) -> b
    java.lang.Object[] ArrayDimsAndInits() -> O
    japa.parser.ast.stmt.Statement Statement() -> P
    japa.parser.ast.stmt.BlockStmt Block() -> Q
    japa.parser.ast.expr.VariableDeclarationExpr VariableDeclarationExpression() -> R
    java.util.List ExpressionList() -> S
    japa.parser.ast.stmt.TryStmt TryStatement() -> T
    japa.parser.ast.expr.AnnotationExpr Annotation() -> U
    japa.parser.ast.expr.MemberValuePair MemberValuePair() -> V
    japa.parser.ast.expr.Expression MemberValue() -> W
    japa.parser.ast.body.AnnotationDeclaration AnnotationTypeDeclaration(japa.parser.ASTParser$Modifier) -> e
    boolean jj_2_1(int) -> a
    boolean jj_2_2(int) -> b
    boolean jj_2_3(int) -> c
    boolean jj_2_4(int) -> d
    boolean jj_2_5(int) -> e
    boolean jj_2_6(int) -> f
    boolean jj_2_7(int) -> g
    boolean jj_2_8(int) -> h
    boolean jj_2_9(int) -> i
    boolean jj_2_10(int) -> j
    boolean jj_2_11(int) -> k
    boolean jj_2_12(int) -> l
    boolean jj_2_13(int) -> m
    boolean jj_2_14(int) -> n
    boolean jj_2_15(int) -> o
    boolean jj_2_16(int) -> p
    boolean jj_2_17(int) -> q
    boolean jj_2_18(int) -> r
    boolean jj_2_19(int) -> s
    boolean jj_2_20(int) -> t
    boolean jj_2_21(int) -> u
    boolean jj_2_22(int) -> v
    boolean jj_2_23(int) -> w
    boolean jj_2_24(int) -> x
    boolean jj_2_25(int) -> y
    boolean jj_2_26(int) -> z
    boolean jj_2_27(int) -> A
    boolean jj_2_28(int) -> B
    boolean jj_2_29(int) -> C
    boolean jj_2_30(int) -> D
    boolean jj_2_31(int) -> E
    boolean jj_2_32(int) -> F
    boolean jj_2_33(int) -> G
    boolean jj_2_34(int) -> H
    boolean jj_2_35(int) -> I
    boolean jj_2_36(int) -> J
    boolean jj_2_37(int) -> K
    boolean jj_2_38(int) -> L
    boolean jj_2_39(int) -> M
    boolean jj_2_40(int) -> N
    boolean jj_2_41(int) -> O
    boolean jj_2_42(int) -> P
    boolean jj_2_43(int) -> Q
    boolean jj_3R_66() -> X
    boolean jj_3R_175() -> Y
    boolean jj_3_29() -> Z
    boolean jj_3R_141() -> aa
    boolean jj_3_5() -> ab
    boolean jj_3_4() -> ac
    boolean jj_3R_249() -> ad
    boolean jj_3R_82() -> ae
    boolean jj_3_28() -> af
    boolean jj_3_27() -> ag
    boolean jj_3_6() -> ah
    boolean jj_3_43() -> ai
    boolean jj_3R_173() -> aj
    boolean jj_3_42() -> ak
    boolean jj_3_26() -> al
    boolean jj_3R_85() -> am
    boolean jj_3_3() -> an
    boolean jj_3R_105() -> ao
    boolean jj_3_25() -> ap
    boolean jj_3R_149() -> aq
    boolean jj_3R_68() -> ar
    boolean jj_3R_247() -> as
    boolean jj_3R_97() -> at
    boolean jj_3R_243() -> au
    boolean jj_3_24() -> av
    boolean jj_3R_61() -> aw
    boolean jj_3R_77() -> ax
    boolean jj_3R_93() -> ay
    boolean jj_3_23() -> az
    boolean jj_3_22() -> aA
    boolean jj_3R_262() -> aB
    boolean jj_3R_246() -> aC
    boolean jj_3R_169() -> aD
    boolean jj_3R_326() -> aE
    boolean jj_3R_219() -> aF
    boolean jj_3_41() -> aG
    boolean jj_3R_218() -> aH
    boolean jj_3_40() -> aI
    boolean jj_3R_245() -> aJ
    boolean jj_3R_95() -> aK
    boolean jj_3R_168() -> aL
    boolean jj_3R_376() -> aM
    boolean jj_3R_323() -> aN
    boolean jj_3R_305() -> aO
    boolean jj_3_21() -> aP
    boolean jj_3_20() -> aQ
    boolean jj_3_19() -> aR
    boolean jj_3_2() -> aS
    boolean jj_3R_303() -> aT
    boolean jj_3R_89() -> aU
    boolean jj_3R_296() -> aV
    boolean jj_3_1() -> aW
    boolean jj_3R_279() -> aX
    boolean jj_3R_257() -> aY
    boolean jj_3R_242() -> aZ
    boolean jj_3_39() -> ba
    boolean jj_3R_387() -> bb
    boolean jj_3R_217() -> bc
    boolean jj_3R_190() -> bd
    boolean jj_3_38() -> be
    boolean jj_3R_122() -> bf
    boolean jj_3R_72() -> bg
    boolean jj_3_18() -> bh
    boolean jj_3R_73() -> bi
    boolean jj_3R_330() -> bj
    boolean jj_3_17() -> bk
    boolean jj_3R_91() -> bl
    boolean jj_3R_83() -> bm
    boolean jj_3R_80() -> bn
    boolean jj_3_37() -> bo
    boolean jj_3R_90() -> bp
    boolean jj_3_36() -> bq
    boolean jj_3R_109() -> br
    boolean jj_3_13() -> bs
    boolean jj_3R_71() -> bt
    boolean jj_3_16() -> bu
    boolean jj_3_15() -> bv
    boolean jj_3_12() -> bw
    boolean jj_3_14() -> bx
    boolean jj_3R_86() -> by
    boolean jj_3_33() -> bz
    boolean jj_3R_100() -> bA
    boolean jj_3R_70() -> bB
    boolean jj_3_11() -> bC
    boolean jj_3R_63() -> bD
    boolean jj_3R_151() -> bE
    boolean jj_3_9() -> bF
    boolean jj_3_7() -> bG
    boolean jj_3_10() -> bH
    boolean jj_3_35() -> bI
    boolean jj_3R_252() -> bJ
    boolean jj_3R_174() -> bK
    boolean jj_3R_67() -> bL
    boolean jj_3_32() -> bM
    boolean jj_3_34() -> bN
    boolean jj_3_30() -> bO
    boolean jj_3_8() -> bP
    boolean jj_3R_87() -> bQ
    boolean jj_3_31() -> bR
    boolean jj_3R_340() -> bS
    boolean jj_3R_187() -> bT
    boolean jj_3R_316() -> bU
    boolean jj_3R_154() -> bV
    boolean jj_3R_152() -> bW
    japa.parser.Token jj_consume_token(int) -> R
    boolean jj_scan_token(int) -> S
    japa.parser.Token getToken(int) -> T
    int jj_ntk() -> bX
    void jj_add_error_token(int,int) -> a
    void jj_rescan_token() -> bY
    void jj_save(int,int) -> b
japa.parser.ASTParser$GTToken -> b.a.b:
    int realKind -> a
japa.parser.ASTParser$JJCalls -> b.a.c:
    int gen -> a
    japa.parser.Token first -> b
    int arg -> c
    japa.parser.ASTParser$JJCalls next -> d
japa.parser.ASTParser$LookaheadSuccess -> b.a.d:
japa.parser.ASTParser$Modifier -> b.a.e:
    int modifiers -> a
    java.util.List annotations -> b
    int beginLine -> c
    int beginColumn -> d
japa.parser.ASTParserConstants -> b.a.f:
    java.lang.String[] tokenImage -> a
japa.parser.ASTParserTokenManager -> b.a.g:
    java.util.List comments -> b
    java.util.Stack javadocStack -> c
    japa.parser.ast.body.JavadocComment lastJavadoc -> d
    long[] jjbitVec0 -> e
    long[] jjbitVec2 -> f
    long[] jjbitVec3 -> g
    long[] jjbitVec4 -> h
    long[] jjbitVec5 -> i
    long[] jjbitVec6 -> j
    long[] jjbitVec7 -> k
    long[] jjbitVec8 -> l
    long[] jjbitVec9 -> m
    long[] jjbitVec10 -> n
    long[] jjbitVec11 -> o
    long[] jjbitVec12 -> p
    long[] jjbitVec13 -> q
    long[] jjbitVec14 -> r
    long[] jjbitVec15 -> s
    long[] jjbitVec16 -> t
    long[] jjbitVec17 -> u
    long[] jjbitVec18 -> v
    long[] jjbitVec19 -> w
    long[] jjbitVec20 -> x
    long[] jjbitVec21 -> y
    long[] jjbitVec22 -> z
    long[] jjbitVec23 -> A
    long[] jjbitVec24 -> B
    long[] jjbitVec25 -> C
    long[] jjbitVec26 -> D
    long[] jjbitVec27 -> E
    long[] jjbitVec28 -> F
    long[] jjbitVec29 -> G
    long[] jjbitVec30 -> H
    long[] jjbitVec31 -> I
    long[] jjbitVec32 -> J
    long[] jjbitVec33 -> K
    long[] jjbitVec34 -> L
    long[] jjbitVec35 -> M
    long[] jjbitVec36 -> N
    long[] jjbitVec37 -> O
    long[] jjbitVec38 -> P
    long[] jjbitVec39 -> Q
    long[] jjbitVec40 -> R
    long[] jjbitVec41 -> S
    long[] jjbitVec42 -> T
    long[] jjbitVec43 -> U
    long[] jjbitVec44 -> V
    long[] jjbitVec45 -> W
    long[] jjbitVec46 -> X
    long[] jjbitVec47 -> Y
    long[] jjbitVec48 -> Z
    long[] jjbitVec49 -> aa
    long[] jjbitVec50 -> ab
    long[] jjbitVec51 -> ac
    long[] jjbitVec52 -> ad
    long[] jjbitVec53 -> ae
    long[] jjbitVec54 -> af
    long[] jjbitVec55 -> ag
    long[] jjbitVec56 -> ah
    long[] jjbitVec57 -> ai
    long[] jjbitVec58 -> aj
    long[] jjbitVec59 -> ak
    long[] jjbitVec60 -> al
    long[] jjbitVec61 -> am
    long[] jjbitVec62 -> an
    long[] jjbitVec63 -> ao
    long[] jjbitVec64 -> ap
    long[] jjbitVec65 -> aq
    long[] jjbitVec66 -> ar
    long[] jjbitVec67 -> as
    long[] jjbitVec68 -> at
    int[] jjnextStates -> au
    java.lang.String[] jjstrLiteralImages -> av
    int[] jjnewLexState -> aw
    long[] jjtoToken -> ax
    long[] jjtoSkip -> ay
    long[] jjtoSpecial -> az
    japa.parser.JavaCharStream input_stream -> aA
    int[] jjrounds -> aB
    int[] jjstateSet -> aC
    java.lang.StringBuilder jjimage -> aD
    java.lang.StringBuilder image -> aE
    int jjimageLen -> aF
    char curChar -> aG
    int curLexState -> aH
    int defaultLexState -> aI
    int jjnewStateCnt -> aJ
    int jjround -> aK
    int jjmatchedPos -> aL
    int jjmatchedKind -> aM
    void pushJavadoc() -> a
    japa.parser.ast.body.JavadocComment popJavadoc() -> b
    java.util.List getComments() -> c
    void clearComments() -> d
    void CommonTokenAction(japa.parser.Token) -> a
    int jjStopStringLiteralDfa_0$3b3f6eb7(int,long,long) -> a
    int jjStartNfa_0(int,long,long,long) -> a
    int jjStopAtPos(int,int) -> a
    int jjMoveStringLiteralDfa1_0(long,long) -> a
    int jjMoveStringLiteralDfa2_0(long,long,long,long) -> a
    int jjMoveStringLiteralDfa3_0(long,long,long,long) -> b
    int jjMoveStringLiteralDfa4_0(long,long,long,long) -> c
    int jjMoveStringLiteralDfa5_0(long,long,long,long) -> d
    int jjMoveStringLiteralDfa6_0(long,long) -> b
    int jjMoveStringLiteralDfa7_0(long,long) -> c
    int jjMoveStringLiteralDfa8_0(long,long) -> d
    int jjMoveStringLiteralDfa9_0(long,long) -> e
    int jjMoveStringLiteralDfa10_0(long,long) -> f
    int jjMoveStringLiteralDfa11_0(long,long) -> g
    int jjStartNfaWithStates_0(int,int,int) -> a
    int jjMoveNfa_0(int,int) -> b
    int jjMoveStringLiteralDfa1_2(long) -> a
    int jjMoveStringLiteralDfa1_1(long) -> b
    boolean jjCanMove_0(int,int,int,long,long) -> a
    void ReInit(japa.parser.JavaCharStream) -> a
    void ReInitRounds() -> f
    japa.parser.Token jjFillToken() -> g
    japa.parser.Token getNextToken() -> e
    void jjCheckNAdd(int) -> a
    void jjAddStates(int,int) -> c
    void jjCheckNAddTwoStates(int,int) -> d
    void jjCheckNAddStates(int,int) -> e
japa.parser.JavaCharStream -> b.a.h:
    int bufpos -> a
    int bufsize -> b
    int available -> c
    int tokenBegin -> d
    int[] bufline -> e
    int[] bufcolumn -> f
    int column -> g
    int line -> h
    boolean prevCharIsCR -> i
    boolean prevCharIsLF -> j
    java.io.Reader inputStream -> k
    char[] nextCharBuf -> l
    char[] buffer -> m
    int maxNextCharInd -> n
    int nextCharInd -> o
    int inBuf -> p
    int tabSize -> q
    int hexval(char) -> a
    void ExpandBuff(boolean) -> a
    char ReadByte() -> h
    char BeginToken() -> a
    void AdjustBuffSize() -> i
    void UpdateLineColumn(char) -> b
    char readChar() -> b
    int getEndColumn() -> c
    int getEndLine() -> d
    int getBeginColumn() -> e
    int getBeginLine() -> f
    void backup(int) -> a
    void ReInit(java.io.Reader,int,int,int) -> a
    java.lang.String GetImage() -> g
    char[] GetSuffix(int) -> b
japa.parser.JavaParser -> b.a.i:
    japa.parser.ASTParser parser -> a
    boolean cacheParser -> b
    japa.parser.ast.CompilationUnit parse(java.io.InputStream) -> a
japa.parser.ParseException -> b.a.j:
    boolean specialConstructor -> b
    japa.parser.Token currentToken -> a
    int[][] expectedTokenSequences -> c
    java.lang.String[] tokenImage -> d
    java.lang.String eol -> e
    java.lang.String getMessage() -> getMessage
    java.lang.String add_escapes(java.lang.String) -> a
japa.parser.Token -> b.a.k:
    int kind -> b
    int beginLine -> c
    int beginColumn -> d
    int endLine -> e
    int endColumn -> f
    java.lang.String image -> g
    japa.parser.Token next -> h
    japa.parser.Token specialToken -> i
    java.lang.String toString() -> toString
japa.parser.TokenMgrError -> b.a.l:
    java.lang.String addEscapes(java.lang.String) -> a
    java.lang.String getMessage() -> getMessage
japa.parser.ast.BlockComment -> b.a.a.a:
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
japa.parser.ast.Comment -> b.a.a.b:
    java.lang.String content -> a
    java.lang.String getContent() -> a
japa.parser.ast.CompilationUnit -> b.a.a.c:
    japa.parser.ast.PackageDeclaration pakage -> a
    java.util.List imports -> b
    java.util.List types -> c
    java.util.List comments -> d
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
    java.util.List getComments() -> a
    java.util.List getImports() -> b
    japa.parser.ast.PackageDeclaration getPackage() -> c
    java.util.List getTypes() -> d
japa.parser.ast.ImportDeclaration -> b.a.a.d:
    japa.parser.ast.expr.NameExpr name -> a
    boolean static_ -> b
    boolean asterisk -> c
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
    japa.parser.ast.expr.NameExpr getName() -> a
    boolean isAsterisk() -> b
    boolean isStatic() -> c
japa.parser.ast.LineComment -> b.a.a.e:
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
japa.parser.ast.Node -> b.a.a.f:
    int beginLine -> a
    int beginColumn -> b
    int endLine -> c
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
    int getBeginColumn() -> e
    int getBeginLine() -> f
    int getEndLine() -> g
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
japa.parser.ast.PackageDeclaration -> b.a.a.g:
    java.util.List annotations -> a
    japa.parser.ast.expr.NameExpr name -> b
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
    java.util.List getAnnotations() -> a
    japa.parser.ast.expr.NameExpr getName() -> b
japa.parser.ast.TypeParameter -> b.a.a.h:
    java.lang.String name -> a
    java.util.List typeBound -> b
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
    java.lang.String getName() -> a
    java.util.List getTypeBound() -> b
japa.parser.ast.body.AnnotationDeclaration -> b.a.a.a.a:
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
japa.parser.ast.body.AnnotationMemberDeclaration -> b.a.a.a.b:
    int modifiers -> a
    japa.parser.ast.type.Type type -> b
    java.lang.String name -> c
    japa.parser.ast.expr.Expression defaultValue -> d
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
    japa.parser.ast.expr.Expression getDefaultValue() -> a
    int getModifiers() -> b
    java.lang.String getName() -> c
    japa.parser.ast.type.Type getType() -> d
japa.parser.ast.body.BodyDeclaration -> b.a.a.a.c:
    japa.parser.ast.body.JavadocComment javaDoc -> a
    java.util.List annotations -> b
    japa.parser.ast.body.JavadocComment getJavaDoc() -> h
    java.util.List getAnnotations() -> i
japa.parser.ast.body.ClassOrInterfaceDeclaration -> b.a.a.a.d:
    boolean interface_ -> a
    java.util.List typeParameters -> b
    java.util.List extendsList -> c
    java.util.List implementsList -> d
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
    java.util.List getExtends() -> a
    java.util.List getImplements() -> b
    java.util.List getTypeParameters() -> c
    boolean isInterface() -> d
japa.parser.ast.body.ConstructorDeclaration -> b.a.a.a.e:
    int modifiers -> a
    java.util.List typeParameters -> b
    java.lang.String name -> c
    java.util.List parameters -> d
    java.util.List throws_ -> e
    japa.parser.ast.stmt.BlockStmt block -> f
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
    japa.parser.ast.stmt.BlockStmt getBlock() -> a
    int getModifiers() -> b
    java.lang.String getName() -> c
    java.util.List getParameters() -> d
    java.util.List getThrows() -> j
    java.util.List getTypeParameters() -> k
japa.parser.ast.body.EmptyMemberDeclaration -> b.a.a.a.f:
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
japa.parser.ast.body.EmptyTypeDeclaration -> b.a.a.a.g:
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
japa.parser.ast.body.EnumConstantDeclaration -> b.a.a.a.h:
    java.lang.String name -> a
    java.util.List args -> b
    java.util.List classBody -> c
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
    java.util.List getArgs() -> a
    java.util.List getClassBody() -> b
    java.lang.String getName() -> c
japa.parser.ast.body.EnumDeclaration -> b.a.a.a.i:
    java.util.List implementsList -> a
    java.util.List entries -> b
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
    java.util.List getEntries() -> a
    java.util.List getImplements() -> b
japa.parser.ast.body.FieldDeclaration -> b.a.a.a.j:
    int modifiers -> a
    japa.parser.ast.type.Type type -> b
    java.util.List variables -> c
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
    int getModifiers() -> a
    japa.parser.ast.type.Type getType() -> b
    java.util.List getVariables() -> c
japa.parser.ast.body.InitializerDeclaration -> b.a.a.a.k:
    boolean isStatic -> a
    japa.parser.ast.stmt.BlockStmt block -> b
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
    japa.parser.ast.stmt.BlockStmt getBlock() -> a
    boolean isStatic() -> b
japa.parser.ast.body.JavadocComment -> b.a.a.a.l:
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
japa.parser.ast.body.MethodDeclaration -> b.a.a.a.m:
    int modifiers -> a
    java.util.List typeParameters -> b
    japa.parser.ast.type.Type type -> c
    java.lang.String name -> d
    java.util.List parameters -> e
    int arrayCount -> f
    java.util.List throws_ -> g
    japa.parser.ast.stmt.BlockStmt body -> h
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
    int getArrayCount() -> a
    japa.parser.ast.stmt.BlockStmt getBody() -> b
    int getModifiers() -> c
    java.lang.String getName() -> d
    java.util.List getParameters() -> j
    java.util.List getThrows() -> k
    japa.parser.ast.type.Type getType() -> l
    java.util.List getTypeParameters() -> m
japa.parser.ast.body.Parameter -> b.a.a.a.n:
    int modifiers -> a
    java.util.List annotations -> b
    japa.parser.ast.type.Type type -> c
    boolean isVarArgs -> d
    japa.parser.ast.body.VariableDeclaratorId id -> e
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
    java.util.List getAnnotations() -> a
    japa.parser.ast.body.VariableDeclaratorId getId() -> b
    int getModifiers() -> c
    japa.parser.ast.type.Type getType() -> d
    boolean isVarArgs() -> h
japa.parser.ast.body.TypeDeclaration -> b.a.a.a.o:
    java.lang.String name -> a
    int modifiers -> b
    java.util.List members -> c
    java.util.List getMembers() -> j
    int getModifiers() -> k
    java.lang.String getName() -> l
japa.parser.ast.body.VariableDeclarator -> b.a.a.a.p:
    japa.parser.ast.body.VariableDeclaratorId id -> a
    japa.parser.ast.expr.Expression init -> b
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
    japa.parser.ast.body.VariableDeclaratorId getId() -> a
    japa.parser.ast.expr.Expression getInit() -> b
japa.parser.ast.body.VariableDeclaratorId -> b.a.a.a.q:
    java.lang.String name -> a
    int arrayCount -> b
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
    int getArrayCount() -> a
    java.lang.String getName() -> b
japa.parser.ast.expr.AnnotationExpr -> b.a.a.b.a:
    japa.parser.ast.expr.NameExpr name -> a
    japa.parser.ast.expr.NameExpr getName() -> a
japa.parser.ast.expr.ArrayAccessExpr -> b.a.a.b.b:
    japa.parser.ast.expr.Expression name -> a
    japa.parser.ast.expr.Expression index -> b
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
    japa.parser.ast.expr.Expression getIndex() -> a
    japa.parser.ast.expr.Expression getName() -> b
japa.parser.ast.expr.ArrayCreationExpr -> b.a.a.b.c:
    japa.parser.ast.type.Type type -> a
    int arrayCount -> b
    japa.parser.ast.expr.ArrayInitializerExpr initializer -> c
    java.util.List dimensions -> d
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
    int getArrayCount() -> a
    java.util.List getDimensions() -> b
    japa.parser.ast.expr.ArrayInitializerExpr getInitializer() -> c
    japa.parser.ast.type.Type getType() -> d
japa.parser.ast.expr.ArrayInitializerExpr -> b.a.a.b.d:
    java.util.List values -> a
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
    java.util.List getValues() -> a
japa.parser.ast.expr.AssignExpr -> b.a.a.b.e:
    japa.parser.ast.expr.Expression target -> a
    japa.parser.ast.expr.Expression value -> b
    japa.parser.ast.expr.AssignExpr$Operator op -> c
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
    japa.parser.ast.expr.AssignExpr$Operator getOperator() -> a
    japa.parser.ast.expr.Expression getTarget() -> b
    japa.parser.ast.expr.Expression getValue() -> c
japa.parser.ast.expr.AssignExpr$Operator -> b.a.a.b.f:
    japa.parser.ast.expr.AssignExpr$Operator assign -> a
    japa.parser.ast.expr.AssignExpr$Operator plus -> b
    japa.parser.ast.expr.AssignExpr$Operator minus -> c
    japa.parser.ast.expr.AssignExpr$Operator star -> d
    japa.parser.ast.expr.AssignExpr$Operator slash -> e
    japa.parser.ast.expr.AssignExpr$Operator and -> f
    japa.parser.ast.expr.AssignExpr$Operator or -> g
    japa.parser.ast.expr.AssignExpr$Operator xor -> h
    japa.parser.ast.expr.AssignExpr$Operator rem -> i
    japa.parser.ast.expr.AssignExpr$Operator lShift -> j
    japa.parser.ast.expr.AssignExpr$Operator rSignedShift -> k
    japa.parser.ast.expr.AssignExpr$Operator rUnsignedShift -> l
    japa.parser.ast.expr.AssignExpr$Operator[] ENUM$VALUES -> m
    japa.parser.ast.expr.AssignExpr$Operator[] values() -> a
japa.parser.ast.expr.BinaryExpr -> b.a.a.b.g:
    japa.parser.ast.expr.Expression left -> a
    japa.parser.ast.expr.Expression right -> b
    japa.parser.ast.expr.BinaryExpr$Operator op -> c
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
    japa.parser.ast.expr.Expression getLeft() -> a
    japa.parser.ast.expr.BinaryExpr$Operator getOperator() -> b
    japa.parser.ast.expr.Expression getRight() -> c
japa.parser.ast.expr.BinaryExpr$Operator -> b.a.a.b.h:
    japa.parser.ast.expr.BinaryExpr$Operator or -> a
    japa.parser.ast.expr.BinaryExpr$Operator and -> b
    japa.parser.ast.expr.BinaryExpr$Operator binOr -> c
    japa.parser.ast.expr.BinaryExpr$Operator binAnd -> d
    japa.parser.ast.expr.BinaryExpr$Operator xor -> e
    japa.parser.ast.expr.BinaryExpr$Operator equals -> f
    japa.parser.ast.expr.BinaryExpr$Operator notEquals -> g
    japa.parser.ast.expr.BinaryExpr$Operator less -> h
    japa.parser.ast.expr.BinaryExpr$Operator greater -> i
    japa.parser.ast.expr.BinaryExpr$Operator lessEquals -> j
    japa.parser.ast.expr.BinaryExpr$Operator greaterEquals -> k
    japa.parser.ast.expr.BinaryExpr$Operator lShift -> l
    japa.parser.ast.expr.BinaryExpr$Operator rSignedShift -> m
    japa.parser.ast.expr.BinaryExpr$Operator rUnsignedShift -> n
    japa.parser.ast.expr.BinaryExpr$Operator plus -> o
    japa.parser.ast.expr.BinaryExpr$Operator minus -> p
    japa.parser.ast.expr.BinaryExpr$Operator times -> q
    japa.parser.ast.expr.BinaryExpr$Operator divide -> r
    japa.parser.ast.expr.BinaryExpr$Operator remainder -> s
    japa.parser.ast.expr.BinaryExpr$Operator[] ENUM$VALUES -> t
    japa.parser.ast.expr.BinaryExpr$Operator[] values() -> a
japa.parser.ast.expr.BooleanLiteralExpr -> b.a.a.b.i:
    boolean value -> a
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
    boolean getValue() -> a
japa.parser.ast.expr.CastExpr -> b.a.a.b.j:
    japa.parser.ast.type.Type type -> a
    japa.parser.ast.expr.Expression expr -> b
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
    japa.parser.ast.expr.Expression getExpr() -> a
    japa.parser.ast.type.Type getType() -> b
japa.parser.ast.expr.CharLiteralExpr -> b.a.a.b.k:
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
japa.parser.ast.expr.ClassExpr -> b.a.a.b.l:
    japa.parser.ast.type.Type type -> a
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
    japa.parser.ast.type.Type getType() -> a
japa.parser.ast.expr.ConditionalExpr -> b.a.a.b.m:
    japa.parser.ast.expr.Expression condition -> a
    japa.parser.ast.expr.Expression thenExpr -> b
    japa.parser.ast.expr.Expression elseExpr -> c
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
    japa.parser.ast.expr.Expression getCondition() -> a
    japa.parser.ast.expr.Expression getElseExpr() -> b
    japa.parser.ast.expr.Expression getThenExpr() -> c
japa.parser.ast.expr.DoubleLiteralExpr -> b.a.a.b.n:
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
japa.parser.ast.expr.EnclosedExpr -> b.a.a.b.o:
    japa.parser.ast.expr.Expression inner -> a
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
    japa.parser.ast.expr.Expression getInner() -> a
japa.parser.ast.expr.Expression -> b.a.a.b.p:
japa.parser.ast.expr.FieldAccessExpr -> b.a.a.b.q:
    japa.parser.ast.expr.Expression scope -> a
    java.util.List typeArgs -> b
    java.lang.String field -> c
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
    java.lang.String getField() -> a
    japa.parser.ast.expr.Expression getScope() -> b
    java.util.List getTypeArgs() -> c
japa.parser.ast.expr.InstanceOfExpr -> b.a.a.b.r:
    japa.parser.ast.expr.Expression expr -> a
    japa.parser.ast.type.Type type -> b
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
    japa.parser.ast.expr.Expression getExpr() -> a
    japa.parser.ast.type.Type getType() -> b
japa.parser.ast.expr.IntegerLiteralExpr -> b.a.a.b.s:
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
    boolean isMinValue() -> a
japa.parser.ast.expr.IntegerLiteralMinValueExpr -> b.a.a.b.t:
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
japa.parser.ast.expr.LiteralExpr -> b.a.a.b.u:
japa.parser.ast.expr.LongLiteralExpr -> b.a.a.b.v:
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
    boolean isMinValue() -> a
japa.parser.ast.expr.LongLiteralMinValueExpr -> b.a.a.b.w:
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
japa.parser.ast.expr.MarkerAnnotationExpr -> b.a.a.b.x:
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
japa.parser.ast.expr.MemberValuePair -> b.a.a.b.y:
    java.lang.String name -> a
    japa.parser.ast.expr.Expression value -> b
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
    java.lang.String getName() -> a
    japa.parser.ast.expr.Expression getValue() -> b
japa.parser.ast.expr.MethodCallExpr -> b.a.a.b.z:
    japa.parser.ast.expr.Expression scope -> a
    java.util.List typeArgs -> b
    java.lang.String name -> c
    java.util.List args -> d
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
    java.util.List getArgs() -> a
    java.lang.String getName() -> b
    japa.parser.ast.expr.Expression getScope() -> c
    java.util.List getTypeArgs() -> d
japa.parser.ast.expr.NameExpr -> b.a.a.b.A:
    java.lang.String name -> a
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
    java.lang.String getName() -> a
japa.parser.ast.expr.NormalAnnotationExpr -> b.a.a.b.B:
    java.util.List pairs -> b
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
    java.util.List getPairs() -> b
japa.parser.ast.expr.NullLiteralExpr -> b.a.a.b.C:
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
japa.parser.ast.expr.ObjectCreationExpr -> b.a.a.b.D:
    japa.parser.ast.expr.Expression scope -> a
    japa.parser.ast.type.ClassOrInterfaceType type -> b
    java.util.List typeArgs -> c
    java.util.List args -> d
    java.util.List anonymousClassBody -> e
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
    java.util.List getAnonymousClassBody() -> a
    java.util.List getArgs() -> b
    japa.parser.ast.expr.Expression getScope() -> c
    japa.parser.ast.type.ClassOrInterfaceType getType() -> d
    java.util.List getTypeArgs() -> h
japa.parser.ast.expr.QualifiedNameExpr -> b.a.a.b.E:
    japa.parser.ast.expr.NameExpr qualifier -> a
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
    japa.parser.ast.expr.NameExpr getQualifier() -> b
japa.parser.ast.expr.SingleMemberAnnotationExpr -> b.a.a.b.F:
    japa.parser.ast.expr.Expression memberValue -> b
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
    japa.parser.ast.expr.Expression getMemberValue() -> b
japa.parser.ast.expr.StringLiteralExpr -> b.a.a.b.G:
    java.lang.String value -> a
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
    java.lang.String getValue() -> b
japa.parser.ast.expr.SuperExpr -> b.a.a.b.H:
    japa.parser.ast.expr.Expression classExpr -> a
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
    japa.parser.ast.expr.Expression getClassExpr() -> a
japa.parser.ast.expr.ThisExpr -> b.a.a.b.I:
    japa.parser.ast.expr.Expression classExpr -> a
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
    japa.parser.ast.expr.Expression getClassExpr() -> a
japa.parser.ast.expr.UnaryExpr -> b.a.a.b.J:
    japa.parser.ast.expr.Expression expr -> a
    japa.parser.ast.expr.UnaryExpr$Operator op -> b
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
    japa.parser.ast.expr.Expression getExpr() -> a
    japa.parser.ast.expr.UnaryExpr$Operator getOperator() -> b
japa.parser.ast.expr.UnaryExpr$Operator -> b.a.a.b.K:
    japa.parser.ast.expr.UnaryExpr$Operator positive -> a
    japa.parser.ast.expr.UnaryExpr$Operator negative -> b
    japa.parser.ast.expr.UnaryExpr$Operator preIncrement -> c
    japa.parser.ast.expr.UnaryExpr$Operator preDecrement -> d
    japa.parser.ast.expr.UnaryExpr$Operator not -> e
    japa.parser.ast.expr.UnaryExpr$Operator inverse -> f
    japa.parser.ast.expr.UnaryExpr$Operator posIncrement -> g
    japa.parser.ast.expr.UnaryExpr$Operator posDecrement -> h
    japa.parser.ast.expr.UnaryExpr$Operator[] ENUM$VALUES -> i
    japa.parser.ast.expr.UnaryExpr$Operator[] values() -> a
japa.parser.ast.expr.VariableDeclarationExpr -> b.a.a.b.L:
    int modifiers -> a
    java.util.List annotations -> b
    japa.parser.ast.type.Type type -> c
    java.util.List vars -> d
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
    java.util.List getAnnotations() -> a
    int getModifiers() -> b
    japa.parser.ast.type.Type getType() -> c
    java.util.List getVars() -> d
japa.parser.ast.stmt.AssertStmt -> b.a.a.c.a:
    japa.parser.ast.expr.Expression check -> a
    japa.parser.ast.expr.Expression msg -> b
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
    japa.parser.ast.expr.Expression getCheck() -> a
    japa.parser.ast.expr.Expression getMessage() -> b
japa.parser.ast.stmt.BlockStmt -> b.a.a.c.b:
    java.util.List stmts -> a
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
    java.util.List getStmts() -> a
japa.parser.ast.stmt.BreakStmt -> b.a.a.c.c:
    java.lang.String id -> a
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
    java.lang.String getId() -> a
japa.parser.ast.stmt.CatchClause -> b.a.a.c.d:
    japa.parser.ast.body.Parameter except -> a
    japa.parser.ast.stmt.BlockStmt catchBlock -> b
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
    japa.parser.ast.stmt.BlockStmt getCatchBlock() -> a
    japa.parser.ast.body.Parameter getExcept() -> b
japa.parser.ast.stmt.ContinueStmt -> b.a.a.c.e:
    java.lang.String id -> a
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
    java.lang.String getId() -> a
japa.parser.ast.stmt.DoStmt -> b.a.a.c.f:
    japa.parser.ast.stmt.Statement body -> a
    japa.parser.ast.expr.Expression condition -> b
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
    japa.parser.ast.stmt.Statement getBody() -> a
    japa.parser.ast.expr.Expression getCondition() -> b
japa.parser.ast.stmt.EmptyStmt -> b.a.a.c.g:
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
japa.parser.ast.stmt.ExplicitConstructorInvocationStmt -> b.a.a.c.h:
    java.util.List typeArgs -> a
    boolean isThis -> b
    japa.parser.ast.expr.Expression expr -> c
    java.util.List args -> d
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
    java.util.List getArgs() -> a
    japa.parser.ast.expr.Expression getExpr() -> b
    java.util.List getTypeArgs() -> c
    boolean isThis() -> d
japa.parser.ast.stmt.ExpressionStmt -> b.a.a.c.i:
    japa.parser.ast.expr.Expression expr -> a
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
    japa.parser.ast.expr.Expression getExpression() -> a
japa.parser.ast.stmt.ForStmt -> b.a.a.c.j:
    java.util.List init -> a
    japa.parser.ast.expr.Expression compare -> b
    java.util.List update -> c
    japa.parser.ast.stmt.Statement body -> d
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
    japa.parser.ast.stmt.Statement getBody() -> a
    japa.parser.ast.expr.Expression getCompare() -> b
    java.util.List getInit() -> c
    java.util.List getUpdate() -> d
japa.parser.ast.stmt.ForeachStmt -> b.a.a.c.k:
    japa.parser.ast.expr.VariableDeclarationExpr var -> a
    japa.parser.ast.expr.Expression iterable -> b
    japa.parser.ast.stmt.Statement body -> c
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
    japa.parser.ast.stmt.Statement getBody() -> a
    japa.parser.ast.expr.Expression getIterable() -> b
    japa.parser.ast.expr.VariableDeclarationExpr getVariable() -> c
japa.parser.ast.stmt.IfStmt -> b.a.a.c.l:
    japa.parser.ast.expr.Expression condition -> a
    japa.parser.ast.stmt.Statement thenStmt -> b
    japa.parser.ast.stmt.Statement elseStmt -> c
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
    japa.parser.ast.expr.Expression getCondition() -> a
    japa.parser.ast.stmt.Statement getElseStmt() -> b
    japa.parser.ast.stmt.Statement getThenStmt() -> c
japa.parser.ast.stmt.LabeledStmt -> b.a.a.c.m:
    java.lang.String label -> a
    japa.parser.ast.stmt.Statement stmt -> b
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
    java.lang.String getLabel() -> a
    japa.parser.ast.stmt.Statement getStmt() -> b
japa.parser.ast.stmt.ReturnStmt -> b.a.a.c.n:
    japa.parser.ast.expr.Expression expr -> a
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
    japa.parser.ast.expr.Expression getExpr() -> a
japa.parser.ast.stmt.Statement -> b.a.a.c.o:
japa.parser.ast.stmt.SwitchEntryStmt -> b.a.a.c.p:
    japa.parser.ast.expr.Expression label -> a
    java.util.List stmts -> b
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
    japa.parser.ast.expr.Expression getLabel() -> a
    java.util.List getStmts() -> b
japa.parser.ast.stmt.SwitchStmt -> b.a.a.c.q:
    japa.parser.ast.expr.Expression selector -> a
    java.util.List entries -> b
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
    java.util.List getEntries() -> a
    japa.parser.ast.expr.Expression getSelector() -> b
japa.parser.ast.stmt.SynchronizedStmt -> b.a.a.c.r:
    japa.parser.ast.expr.Expression expr -> a
    japa.parser.ast.stmt.BlockStmt block -> b
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
    japa.parser.ast.stmt.BlockStmt getBlock() -> a
    japa.parser.ast.expr.Expression getExpr() -> b
japa.parser.ast.stmt.ThrowStmt -> b.a.a.c.s:
    japa.parser.ast.expr.Expression expr -> a
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
    japa.parser.ast.expr.Expression getExpr() -> a
japa.parser.ast.stmt.TryStmt -> b.a.a.c.t:
    japa.parser.ast.stmt.BlockStmt tryBlock -> a
    java.util.List catchs -> b
    japa.parser.ast.stmt.BlockStmt finallyBlock -> c
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
    java.util.List getCatchs() -> a
    japa.parser.ast.stmt.BlockStmt getFinallyBlock() -> b
    japa.parser.ast.stmt.BlockStmt getTryBlock() -> c
japa.parser.ast.stmt.TypeDeclarationStmt -> b.a.a.c.u:
    japa.parser.ast.body.TypeDeclaration typeDecl -> a
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
    japa.parser.ast.body.TypeDeclaration getTypeDeclaration() -> a
japa.parser.ast.stmt.WhileStmt -> b.a.a.c.v:
    japa.parser.ast.expr.Expression condition -> a
    japa.parser.ast.stmt.Statement body -> b
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
    japa.parser.ast.stmt.Statement getBody() -> a
    japa.parser.ast.expr.Expression getCondition() -> b
japa.parser.ast.type.ClassOrInterfaceType -> b.a.a.d.a:
    japa.parser.ast.type.ClassOrInterfaceType scope -> a
    java.lang.String name -> b
    java.util.List typeArgs -> c
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
    java.lang.String getName() -> a
    japa.parser.ast.type.ClassOrInterfaceType getScope() -> b
    java.util.List getTypeArgs() -> c
japa.parser.ast.type.PrimitiveType -> b.a.a.d.b:
    japa.parser.ast.type.PrimitiveType$Primitive type -> a
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
    japa.parser.ast.type.PrimitiveType$Primitive getType() -> a
japa.parser.ast.type.PrimitiveType$Primitive -> b.a.a.d.c:
    japa.parser.ast.type.PrimitiveType$Primitive Boolean -> a
    japa.parser.ast.type.PrimitiveType$Primitive Char -> b
    japa.parser.ast.type.PrimitiveType$Primitive Byte -> c
    japa.parser.ast.type.PrimitiveType$Primitive Short -> d
    japa.parser.ast.type.PrimitiveType$Primitive Int -> e
    japa.parser.ast.type.PrimitiveType$Primitive Long -> f
    japa.parser.ast.type.PrimitiveType$Primitive Float -> g
    japa.parser.ast.type.PrimitiveType$Primitive Double -> h
    japa.parser.ast.type.PrimitiveType$Primitive[] ENUM$VALUES -> i
    japa.parser.ast.type.PrimitiveType$Primitive[] values() -> a
japa.parser.ast.type.ReferenceType -> b.a.a.d.d:
    japa.parser.ast.type.Type type -> a
    int arrayCount -> b
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
    int getArrayCount() -> a
    japa.parser.ast.type.Type getType() -> b
japa.parser.ast.type.Type -> b.a.a.d.e:
japa.parser.ast.type.VoidType -> b.a.a.d.f:
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
japa.parser.ast.type.WildcardType -> b.a.a.d.g:
    japa.parser.ast.type.ReferenceType ext -> a
    japa.parser.ast.type.ReferenceType sup -> b
    java.lang.Object accept(japa.parser.ast.visitor.GenericVisitor,java.lang.Object) -> a
    void accept(japa.parser.ast.visitor.VoidVisitor,java.lang.Object) -> a
    japa.parser.ast.type.ReferenceType getExtends() -> a
    japa.parser.ast.type.ReferenceType getSuper() -> b
japa.parser.ast.visitor.DumpVisitor -> b.a.a.e.a:
    japa.parser.ast.visitor.DumpVisitor$SourcePrinter printer -> a
    int[] $SWITCH_TABLE$japa$parser$ast$type$PrimitiveType$Primitive -> b
    int[] $SWITCH_TABLE$japa$parser$ast$expr$AssignExpr$Operator -> c
    int[] $SWITCH_TABLE$japa$parser$ast$expr$BinaryExpr$Operator -> d
    int[] $SWITCH_TABLE$japa$parser$ast$expr$UnaryExpr$Operator -> e
    java.lang.String getSource() -> a
    void printModifiers(int) -> a
    void printMembers(java.util.List,java.lang.Object) -> a
    void printMemberAnnotations(java.util.List,java.lang.Object) -> b
    void printAnnotations(java.util.List,java.lang.Object) -> c
    void printTypeArgs(java.util.List,java.lang.Object) -> d
    void printTypeParameters(java.util.List,java.lang.Object) -> e
    void printArguments(java.util.List,java.lang.Object) -> f
    void printJavadoc(japa.parser.ast.body.JavadocComment,java.lang.Object) -> a
    void visit(japa.parser.ast.CompilationUnit,java.lang.Object) -> a
    void visit(japa.parser.ast.PackageDeclaration,java.lang.Object) -> a
    void visit$2da29edc(japa.parser.ast.expr.NameExpr) -> a
    void visit(japa.parser.ast.expr.QualifiedNameExpr,java.lang.Object) -> a
    void visit(japa.parser.ast.ImportDeclaration,java.lang.Object) -> a
    void visit(japa.parser.ast.body.ClassOrInterfaceDeclaration,java.lang.Object) -> a
    void visit(japa.parser.ast.body.EmptyTypeDeclaration,java.lang.Object) -> a
    void visit$7f720768(japa.parser.ast.body.JavadocComment) -> a
    void visit(japa.parser.ast.type.ClassOrInterfaceType,java.lang.Object) -> a
    void visit(japa.parser.ast.TypeParameter,java.lang.Object) -> a
    void visit$23f8b77e(japa.parser.ast.type.PrimitiveType) -> a
    void visit(japa.parser.ast.type.ReferenceType,java.lang.Object) -> a
    void visit(japa.parser.ast.type.WildcardType,java.lang.Object) -> a
    void visit(japa.parser.ast.body.FieldDeclaration,java.lang.Object) -> a
    void visit(japa.parser.ast.body.VariableDeclarator,java.lang.Object) -> a
    void visit$2802a4e9(japa.parser.ast.body.VariableDeclaratorId) -> a
    void visit(japa.parser.ast.expr.ArrayInitializerExpr,java.lang.Object) -> a
    void visit$4a1afc9b() -> b
    void visit(japa.parser.ast.expr.ArrayAccessExpr,java.lang.Object) -> a
    void visit(japa.parser.ast.expr.ArrayCreationExpr,java.lang.Object) -> a
    void visit(japa.parser.ast.expr.AssignExpr,java.lang.Object) -> a
    void visit(japa.parser.ast.expr.BinaryExpr,java.lang.Object) -> a
    void visit(japa.parser.ast.expr.CastExpr,java.lang.Object) -> a
    void visit(japa.parser.ast.expr.ClassExpr,java.lang.Object) -> a
    void visit(japa.parser.ast.expr.ConditionalExpr,java.lang.Object) -> a
    void visit(japa.parser.ast.expr.EnclosedExpr,java.lang.Object) -> a
    void visit(japa.parser.ast.expr.FieldAccessExpr,java.lang.Object) -> a
    void visit(japa.parser.ast.expr.InstanceOfExpr,java.lang.Object) -> a
    void visit$5ce747b6(japa.parser.ast.expr.CharLiteralExpr) -> a
    void visit$ef7ec31(japa.parser.ast.expr.DoubleLiteralExpr) -> a
    void visit$60f4cf22(japa.parser.ast.expr.IntegerLiteralExpr) -> a
    void visit$a9a9d24(japa.parser.ast.expr.LongLiteralExpr) -> a
    void visit$3281285f(japa.parser.ast.expr.IntegerLiteralMinValueExpr) -> a
    void visit$3bff83a3(japa.parser.ast.expr.LongLiteralMinValueExpr) -> a
    void visit$e34d071(japa.parser.ast.expr.StringLiteralExpr) -> a
    void visit$6cc50c38(japa.parser.ast.expr.BooleanLiteralExpr) -> a
    void visit$41ef75e7() -> c
    void visit(japa.parser.ast.expr.ThisExpr,java.lang.Object) -> a
    void visit(japa.parser.ast.expr.SuperExpr,java.lang.Object) -> a
    void visit(japa.parser.ast.expr.MethodCallExpr,java.lang.Object) -> a
    void visit(japa.parser.ast.expr.ObjectCreationExpr,java.lang.Object) -> a
    void visit(japa.parser.ast.expr.UnaryExpr,java.lang.Object) -> a
    void visit(japa.parser.ast.body.ConstructorDeclaration,java.lang.Object) -> a
    void visit(japa.parser.ast.body.MethodDeclaration,java.lang.Object) -> a
    void visit(japa.parser.ast.body.Parameter,java.lang.Object) -> a
    void visit(japa.parser.ast.stmt.ExplicitConstructorInvocationStmt,java.lang.Object) -> a
    void visit(japa.parser.ast.expr.VariableDeclarationExpr,java.lang.Object) -> a
    void visit(japa.parser.ast.stmt.TypeDeclarationStmt,java.lang.Object) -> a
    void visit(japa.parser.ast.stmt.AssertStmt,java.lang.Object) -> a
    void visit(japa.parser.ast.stmt.BlockStmt,java.lang.Object) -> a
    void visit(japa.parser.ast.stmt.LabeledStmt,java.lang.Object) -> a
    void visit$7208eac4() -> d
    void visit(japa.parser.ast.stmt.ExpressionStmt,java.lang.Object) -> a
    void visit(japa.parser.ast.stmt.SwitchStmt,java.lang.Object) -> a
    void visit(japa.parser.ast.stmt.SwitchEntryStmt,java.lang.Object) -> a
    void visit$59619236(japa.parser.ast.stmt.BreakStmt) -> a
    void visit(japa.parser.ast.stmt.ReturnStmt,java.lang.Object) -> a
    void visit(japa.parser.ast.body.EnumDeclaration,java.lang.Object) -> a
    void visit(japa.parser.ast.body.EnumConstantDeclaration,java.lang.Object) -> a
    void visit(japa.parser.ast.body.EmptyMemberDeclaration,java.lang.Object) -> a
    void visit(japa.parser.ast.body.InitializerDeclaration,java.lang.Object) -> a
    void visit(japa.parser.ast.stmt.IfStmt,java.lang.Object) -> a
    void visit(japa.parser.ast.stmt.WhileStmt,java.lang.Object) -> a
    void visit$2a7e0c58(japa.parser.ast.stmt.ContinueStmt) -> a
    void visit(japa.parser.ast.stmt.DoStmt,java.lang.Object) -> a
    void visit(japa.parser.ast.stmt.ForeachStmt,java.lang.Object) -> a
    void visit(japa.parser.ast.stmt.ForStmt,java.lang.Object) -> a
    void visit(japa.parser.ast.stmt.ThrowStmt,java.lang.Object) -> a
    void visit(japa.parser.ast.stmt.SynchronizedStmt,java.lang.Object) -> a
    void visit(japa.parser.ast.stmt.TryStmt,java.lang.Object) -> a
    void visit(japa.parser.ast.stmt.CatchClause,java.lang.Object) -> a
    void visit(japa.parser.ast.body.AnnotationDeclaration,java.lang.Object) -> a
    void visit(japa.parser.ast.body.AnnotationMemberDeclaration,java.lang.Object) -> a
    void visit(japa.parser.ast.expr.MarkerAnnotationExpr,java.lang.Object) -> a
    void visit(japa.parser.ast.expr.SingleMemberAnnotationExpr,java.lang.Object) -> a
    void visit(japa.parser.ast.expr.NormalAnnotationExpr,java.lang.Object) -> a
    void visit(japa.parser.ast.expr.MemberValuePair,java.lang.Object) -> a
    void visit$281d054d(japa.parser.ast.LineComment) -> a
    void visit$15f992e8(japa.parser.ast.BlockComment) -> a
    int[] $SWITCH_TABLE$japa$parser$ast$type$PrimitiveType$Primitive() -> e
    int[] $SWITCH_TABLE$japa$parser$ast$expr$AssignExpr$Operator() -> f
    int[] $SWITCH_TABLE$japa$parser$ast$expr$BinaryExpr$Operator() -> g
    int[] $SWITCH_TABLE$japa$parser$ast$expr$UnaryExpr$Operator() -> h
japa.parser.ast.visitor.DumpVisitor$SourcePrinter -> b.a.a.e.b:
    int level -> a
    boolean indented -> b
    java.lang.StringBuilder buf -> c
    void indent() -> a
    void unindent() -> b
    void print(java.lang.String) -> a
    void printLn(java.lang.String) -> b
    void printLn() -> c
    java.lang.String getSource() -> d
    java.lang.String toString() -> toString
japa.parser.ast.visitor.EqualsVisitor -> b.a.a.e.c:
    japa.parser.ast.visitor.EqualsVisitor SINGLETON -> a
    boolean equals(japa.parser.ast.Node,japa.parser.ast.Node) -> a
    boolean nodesEquals(java.util.List,java.util.List) -> a
    boolean nodeEquals(japa.parser.ast.Node,japa.parser.ast.Node) -> b
    boolean objEquals(java.lang.Object,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.stmt.CatchClause,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.stmt.TryStmt,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.stmt.SynchronizedStmt,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.stmt.ThrowStmt,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.stmt.ForStmt,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.stmt.ForeachStmt,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.stmt.DoStmt,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.stmt.ContinueStmt,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.stmt.WhileStmt,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.stmt.IfStmt,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.stmt.ReturnStmt,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.stmt.BreakStmt,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.stmt.SwitchEntryStmt,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.stmt.SwitchStmt,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.stmt.ExpressionStmt,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.stmt.EmptyStmt,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.stmt.LabeledStmt,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.stmt.BlockStmt,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.stmt.AssertStmt,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.stmt.TypeDeclarationStmt,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.stmt.ExplicitConstructorInvocationStmt,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.expr.MemberValuePair,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.expr.NormalAnnotationExpr,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.expr.SingleMemberAnnotationExpr,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.expr.MarkerAnnotationExpr,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.expr.VariableDeclarationExpr,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.expr.UnaryExpr,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.expr.SuperExpr,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.expr.ThisExpr,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.expr.QualifiedNameExpr,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.expr.ObjectCreationExpr,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.expr.NameExpr,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.expr.MethodCallExpr,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.expr.NullLiteralExpr,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.expr.BooleanLiteralExpr,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.expr.DoubleLiteralExpr,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.expr.CharLiteralExpr,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.expr.LongLiteralMinValueExpr,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.expr.IntegerLiteralMinValueExpr,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.expr.LongLiteralExpr,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.expr.IntegerLiteralExpr,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.expr.StringLiteralExpr,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.expr.InstanceOfExpr,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.expr.FieldAccessExpr,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.expr.EnclosedExpr,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.expr.ConditionalExpr,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.expr.ClassExpr,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.expr.CastExpr,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.expr.BinaryExpr,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.expr.AssignExpr,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.expr.ArrayInitializerExpr,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.expr.ArrayCreationExpr,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.expr.ArrayAccessExpr,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.type.WildcardType,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.type.VoidType,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.type.ReferenceType,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.type.PrimitiveType,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.type.ClassOrInterfaceType,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.body.JavadocComment,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.body.InitializerDeclaration,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.body.EmptyMemberDeclaration,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.body.Parameter,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.body.MethodDeclaration,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.body.ConstructorDeclaration,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.body.VariableDeclaratorId,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.body.VariableDeclarator,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.body.FieldDeclaration,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.body.AnnotationMemberDeclaration,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.body.AnnotationDeclaration,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.body.EnumConstantDeclaration,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.body.EmptyTypeDeclaration,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.body.EnumDeclaration,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.body.ClassOrInterfaceDeclaration,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.BlockComment,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.LineComment,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.TypeParameter,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.ImportDeclaration,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.PackageDeclaration,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.CompilationUnit,java.lang.Object) -> a
japa.parser.ast.visitor.GenericVisitor -> b.a.a.e.d:
    java.lang.Object visit(japa.parser.ast.CompilationUnit,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.PackageDeclaration,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.ImportDeclaration,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.TypeParameter,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.LineComment,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.BlockComment,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.body.ClassOrInterfaceDeclaration,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.body.EnumDeclaration,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.body.EmptyTypeDeclaration,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.body.EnumConstantDeclaration,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.body.AnnotationDeclaration,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.body.AnnotationMemberDeclaration,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.body.FieldDeclaration,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.body.VariableDeclarator,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.body.VariableDeclaratorId,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.body.ConstructorDeclaration,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.body.MethodDeclaration,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.body.Parameter,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.body.EmptyMemberDeclaration,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.body.InitializerDeclaration,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.body.JavadocComment,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.type.ClassOrInterfaceType,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.type.PrimitiveType,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.type.ReferenceType,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.type.VoidType,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.type.WildcardType,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.expr.ArrayAccessExpr,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.expr.ArrayCreationExpr,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.expr.ArrayInitializerExpr,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.expr.AssignExpr,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.expr.BinaryExpr,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.expr.CastExpr,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.expr.ClassExpr,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.expr.ConditionalExpr,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.expr.EnclosedExpr,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.expr.FieldAccessExpr,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.expr.InstanceOfExpr,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.expr.StringLiteralExpr,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.expr.IntegerLiteralExpr,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.expr.LongLiteralExpr,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.expr.IntegerLiteralMinValueExpr,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.expr.LongLiteralMinValueExpr,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.expr.CharLiteralExpr,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.expr.DoubleLiteralExpr,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.expr.BooleanLiteralExpr,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.expr.NullLiteralExpr,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.expr.MethodCallExpr,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.expr.NameExpr,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.expr.ObjectCreationExpr,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.expr.QualifiedNameExpr,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.expr.ThisExpr,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.expr.SuperExpr,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.expr.UnaryExpr,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.expr.VariableDeclarationExpr,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.expr.MarkerAnnotationExpr,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.expr.SingleMemberAnnotationExpr,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.expr.NormalAnnotationExpr,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.expr.MemberValuePair,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.stmt.ExplicitConstructorInvocationStmt,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.stmt.TypeDeclarationStmt,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.stmt.AssertStmt,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.stmt.BlockStmt,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.stmt.LabeledStmt,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.stmt.EmptyStmt,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.stmt.ExpressionStmt,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.stmt.SwitchStmt,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.stmt.SwitchEntryStmt,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.stmt.BreakStmt,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.stmt.ReturnStmt,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.stmt.IfStmt,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.stmt.WhileStmt,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.stmt.ContinueStmt,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.stmt.DoStmt,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.stmt.ForeachStmt,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.stmt.ForStmt,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.stmt.ThrowStmt,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.stmt.SynchronizedStmt,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.stmt.TryStmt,java.lang.Object) -> a
    java.lang.Object visit(japa.parser.ast.stmt.CatchClause,java.lang.Object) -> a
japa.parser.ast.visitor.VoidVisitor -> b.a.a.e.e:
    void visit(japa.parser.ast.CompilationUnit,java.lang.Object) -> a
    void visit(japa.parser.ast.PackageDeclaration,java.lang.Object) -> a
    void visit(japa.parser.ast.ImportDeclaration,java.lang.Object) -> a
    void visit(japa.parser.ast.TypeParameter,java.lang.Object) -> a
    void visit$281d054d(japa.parser.ast.LineComment) -> a
    void visit$15f992e8(japa.parser.ast.BlockComment) -> a
    void visit(japa.parser.ast.body.ClassOrInterfaceDeclaration,java.lang.Object) -> a
    void visit(japa.parser.ast.body.EnumDeclaration,java.lang.Object) -> a
    void visit(japa.parser.ast.body.EmptyTypeDeclaration,java.lang.Object) -> a
    void visit(japa.parser.ast.body.EnumConstantDeclaration,java.lang.Object) -> a
    void visit(japa.parser.ast.body.AnnotationDeclaration,java.lang.Object) -> a
    void visit(japa.parser.ast.body.AnnotationMemberDeclaration,java.lang.Object) -> a
    void visit(japa.parser.ast.body.FieldDeclaration,java.lang.Object) -> a
    void visit(japa.parser.ast.body.VariableDeclarator,java.lang.Object) -> a
    void visit$2802a4e9(japa.parser.ast.body.VariableDeclaratorId) -> a
    void visit(japa.parser.ast.body.ConstructorDeclaration,java.lang.Object) -> a
    void visit(japa.parser.ast.body.MethodDeclaration,java.lang.Object) -> a
    void visit(japa.parser.ast.body.Parameter,java.lang.Object) -> a
    void visit(japa.parser.ast.body.EmptyMemberDeclaration,java.lang.Object) -> a
    void visit(japa.parser.ast.body.InitializerDeclaration,java.lang.Object) -> a
    void visit$7f720768(japa.parser.ast.body.JavadocComment) -> a
    void visit(japa.parser.ast.type.ClassOrInterfaceType,java.lang.Object) -> a
    void visit$23f8b77e(japa.parser.ast.type.PrimitiveType) -> a
    void visit(japa.parser.ast.type.ReferenceType,java.lang.Object) -> a
    void visit$4a1afc9b() -> b
    void visit(japa.parser.ast.type.WildcardType,java.lang.Object) -> a
    void visit(japa.parser.ast.expr.ArrayAccessExpr,java.lang.Object) -> a
    void visit(japa.parser.ast.expr.ArrayCreationExpr,java.lang.Object) -> a
    void visit(japa.parser.ast.expr.ArrayInitializerExpr,java.lang.Object) -> a
    void visit(japa.parser.ast.expr.AssignExpr,java.lang.Object) -> a
    void visit(japa.parser.ast.expr.BinaryExpr,java.lang.Object) -> a
    void visit(japa.parser.ast.expr.CastExpr,java.lang.Object) -> a
    void visit(japa.parser.ast.expr.ClassExpr,java.lang.Object) -> a
    void visit(japa.parser.ast.expr.ConditionalExpr,java.lang.Object) -> a
    void visit(japa.parser.ast.expr.EnclosedExpr,java.lang.Object) -> a
    void visit(japa.parser.ast.expr.FieldAccessExpr,java.lang.Object) -> a
    void visit(japa.parser.ast.expr.InstanceOfExpr,java.lang.Object) -> a
    void visit$e34d071(japa.parser.ast.expr.StringLiteralExpr) -> a
    void visit$60f4cf22(japa.parser.ast.expr.IntegerLiteralExpr) -> a
    void visit$a9a9d24(japa.parser.ast.expr.LongLiteralExpr) -> a
    void visit$3281285f(japa.parser.ast.expr.IntegerLiteralMinValueExpr) -> a
    void visit$3bff83a3(japa.parser.ast.expr.LongLiteralMinValueExpr) -> a
    void visit$5ce747b6(japa.parser.ast.expr.CharLiteralExpr) -> a
    void visit$ef7ec31(japa.parser.ast.expr.DoubleLiteralExpr) -> a
    void visit$6cc50c38(japa.parser.ast.expr.BooleanLiteralExpr) -> a
    void visit$41ef75e7() -> c
    void visit(japa.parser.ast.expr.MethodCallExpr,java.lang.Object) -> a
    void visit$2da29edc(japa.parser.ast.expr.NameExpr) -> a
    void visit(japa.parser.ast.expr.ObjectCreationExpr,java.lang.Object) -> a
    void visit(japa.parser.ast.expr.QualifiedNameExpr,java.lang.Object) -> a
    void visit(japa.parser.ast.expr.ThisExpr,java.lang.Object) -> a
    void visit(japa.parser.ast.expr.SuperExpr,java.lang.Object) -> a
    void visit(japa.parser.ast.expr.UnaryExpr,java.lang.Object) -> a
    void visit(japa.parser.ast.expr.VariableDeclarationExpr,java.lang.Object) -> a
    void visit(japa.parser.ast.expr.MarkerAnnotationExpr,java.lang.Object) -> a
    void visit(japa.parser.ast.expr.SingleMemberAnnotationExpr,java.lang.Object) -> a
    void visit(japa.parser.ast.expr.NormalAnnotationExpr,java.lang.Object) -> a
    void visit(japa.parser.ast.expr.MemberValuePair,java.lang.Object) -> a
    void visit(japa.parser.ast.stmt.ExplicitConstructorInvocationStmt,java.lang.Object) -> a
    void visit(japa.parser.ast.stmt.TypeDeclarationStmt,java.lang.Object) -> a
    void visit(japa.parser.ast.stmt.AssertStmt,java.lang.Object) -> a
    void visit(japa.parser.ast.stmt.BlockStmt,java.lang.Object) -> a
    void visit(japa.parser.ast.stmt.LabeledStmt,java.lang.Object) -> a
    void visit$7208eac4() -> d
    void visit(japa.parser.ast.stmt.ExpressionStmt,java.lang.Object) -> a
    void visit(japa.parser.ast.stmt.SwitchStmt,java.lang.Object) -> a
    void visit(japa.parser.ast.stmt.SwitchEntryStmt,java.lang.Object) -> a
    void visit$59619236(japa.parser.ast.stmt.BreakStmt) -> a
    void visit(japa.parser.ast.stmt.ReturnStmt,java.lang.Object) -> a
    void visit(japa.parser.ast.stmt.IfStmt,java.lang.Object) -> a
    void visit(japa.parser.ast.stmt.WhileStmt,java.lang.Object) -> a
    void visit$2a7e0c58(japa.parser.ast.stmt.ContinueStmt) -> a
    void visit(japa.parser.ast.stmt.DoStmt,java.lang.Object) -> a
    void visit(japa.parser.ast.stmt.ForeachStmt,java.lang.Object) -> a
    void visit(japa.parser.ast.stmt.ForStmt,java.lang.Object) -> a
    void visit(japa.parser.ast.stmt.ThrowStmt,java.lang.Object) -> a
    void visit(japa.parser.ast.stmt.SynchronizedStmt,java.lang.Object) -> a
    void visit(japa.parser.ast.stmt.TryStmt,java.lang.Object) -> a
    void visit(japa.parser.ast.stmt.CatchClause,java.lang.Object) -> a
m.framework.network.NetworkHelper -> c.a.a.a:
    void download(java.lang.String,m.framework.network.ResponseCallback) -> a
m.framework.network.ResponseCallback -> c.a.a.b:
    void onResponse(java.io.InputStream) -> a
m.framework.network.SSLSocketFactoryEx -> c.a.a.c:
    javax.net.ssl.SSLContext sslContext -> a
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    java.net.Socket createSocket() -> createSocket
m.framework.network.SSLSocketFactoryEx$1 -> c.a.a.d:
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
m.framework.ui.widget.asyncview.AsyncImageView -> c.a.b.a.a.a:
    android.graphics.Bitmap DEFAULT_TRANSPARENT_BITMAP -> a
    java.util.Random rnd -> b
    java.lang.String cacheDir -> c
    java.lang.String url -> d
    int defaultRes -> e
    m.framework.ui.widget.asyncview.OnImageGotListener onImageGotListener -> f
    java.lang.String getUrl() -> a
    void execute(java.lang.String,int) -> a
    void onImageGot(java.lang.String,android.graphics.Bitmap) -> a
    boolean handleMessage(android.os.Message) -> handleMessage
m.framework.ui.widget.asyncview.AsyncView -> c.a.b.a.a.b:
    java.lang.String getUrl() -> a
m.framework.ui.widget.asyncview.BitmapCallback -> c.a.b.a.a.c:
    void onImageGot(java.lang.String,android.graphics.Bitmap) -> a
m.framework.ui.widget.asyncview.BitmapProcessor -> c.a.b.a.a.d:
    m.framework.ui.widget.asyncview.BitmapProcessor instance -> a
    java.util.WeakHashMap cacheMap -> b
    boolean work -> c
    java.util.Vector reqList -> d
    java.io.File cacheDir -> e
    m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread[] workerList -> f
    java.util.Vector netReqTPS -> g
    void prepare(java.lang.String) -> a
    void process(java.lang.String,m.framework.ui.widget.asyncview.BitmapCallback) -> a
    android.graphics.Bitmap getBitmapFromCache(java.lang.String) -> b
    boolean access$0(m.framework.ui.widget.asyncview.BitmapProcessor) -> a
    m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread[] access$1(m.framework.ui.widget.asyncview.BitmapProcessor) -> b
    java.util.Vector access$2(m.framework.ui.widget.asyncview.BitmapProcessor) -> c
    java.util.WeakHashMap access$3(m.framework.ui.widget.asyncview.BitmapProcessor) -> d
    java.io.File access$4(m.framework.ui.widget.asyncview.BitmapProcessor) -> e
    java.util.Vector access$5(m.framework.ui.widget.asyncview.BitmapProcessor) -> f
m.framework.ui.widget.asyncview.BitmapProcessor$ImageReq -> c.a.b.a.a.e:
    java.lang.String url -> a
    m.framework.ui.widget.asyncview.BitmapCallback callback -> b
    m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread worker -> c
    long reqTime -> d
    android.graphics.Bitmap image -> e
    java.lang.String toString() -> toString
    java.lang.String access$0(m.framework.ui.widget.asyncview.BitmapProcessor$ImageReq) -> a
    void access$1(m.framework.ui.widget.asyncview.BitmapProcessor$ImageReq,m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread) -> a
    void access$2(m.framework.ui.widget.asyncview.BitmapProcessor$ImageReq,android.graphics.Bitmap) -> a
    void access$3(m.framework.ui.widget.asyncview.BitmapProcessor$ImageReq,java.lang.String) -> a
    void access$4(m.framework.ui.widget.asyncview.BitmapProcessor$ImageReq,m.framework.ui.widget.asyncview.BitmapCallback) -> a
m.framework.ui.widget.asyncview.BitmapProcessor$ManagerThread -> c.a.b.a.a.f:
    m.framework.ui.widget.asyncview.BitmapProcessor processor -> a
    m.framework.ui.widget.asyncview.BitmapProcessor access$0(m.framework.ui.widget.asyncview.BitmapProcessor$ManagerThread) -> a
    void access$1(m.framework.ui.widget.asyncview.BitmapProcessor$ManagerThread) -> b
m.framework.ui.widget.asyncview.BitmapProcessor$ManagerThread$1 -> c.a.b.a.a.g:
    int counter -> a
    m.framework.ui.widget.asyncview.BitmapProcessor$ManagerThread this$1 -> b
    void run() -> run
m.framework.ui.widget.asyncview.BitmapProcessor$PatchInputStream -> c.a.b.a.a.h:
    java.io.InputStream in -> a
    long skip(long) -> skip
m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread -> c.a.b.a.a.i:
    m.framework.ui.widget.asyncview.BitmapProcessor processor -> a
    long lastReport -> b
    boolean localType -> c
    m.framework.ui.widget.asyncview.BitmapProcessor$ImageReq curReq -> d
    void run() -> run
    void doTask(m.framework.ui.widget.asyncview.BitmapProcessor$ImageReq) -> a
    void interrupt() -> interrupt
    void access$0(m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread,boolean) -> a
    long access$1(m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread) -> a
    boolean access$2(m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread) -> b
    void access$3(m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread,m.framework.ui.widget.asyncview.BitmapProcessor$ImageReq) -> a
    void access$4(m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread,android.graphics.Bitmap,java.io.File) -> a
    m.framework.ui.widget.asyncview.BitmapProcessor access$5(m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread) -> c
m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread$1 -> c.a.b.a.a.j:
    m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread this$1 -> a
    java.io.File val$file -> b
    m.framework.ui.widget.asyncview.BitmapProcessor$ImageReq val$req -> c
    void onResponse(java.io.InputStream) -> a
m.framework.ui.widget.asyncview.OnImageGotListener -> c.a.b.a.a.k:
    android.graphics.Bitmap onImageGot(m.framework.ui.widget.asyncview.AsyncView,android.graphics.Bitmap,java.lang.String) -> a
m.framework.ui.widget.asyncview.SimpleOnImageGotListener -> c.a.b.a.a.l:
    m.framework.ui.widget.asyncview.SimpleOnImageGotListener INSTANCE -> a
    android.graphics.Bitmap onImageGot(m.framework.ui.widget.asyncview.AsyncView,android.graphics.Bitmap,java.lang.String) -> a
m.framework.ui.widget.pulltorefresh.ListInnerAdapter -> c.a.b.a.b.a:
    m.framework.ui.widget.pulltorefresh.PullToRefreshBaseListAdapter adapter -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
m.framework.ui.widget.pulltorefresh.OnScrollListener -> c.a.b.a.b.b:
    void onScrollChanged$7a0b6c26(int,int) -> a
m.framework.ui.widget.pulltorefresh.PullToRefreshAdatper -> c.a.b.a.b.c:
    android.content.Context context -> context
    m.framework.ui.widget.pulltorefresh.PullToRefreshView parent -> parent
    android.content.Context getContext() -> getContext
    m.framework.ui.widget.pulltorefresh.PullToRefreshView getParent() -> getParent
    void notifyDataSetChanged() -> notifyDataSetChanged
    android.view.View getHeaderView() -> getHeaderView
    android.support.v4.content.Loader$OnLoadCompleteListener getBodyView$58621dce() -> getBodyView$58621dce
    boolean isPullReady() -> isPullReady
    void onPullDown(int) -> onPullDown
    void onRequest() -> onRequest
    void onReversed() -> onReversed
m.framework.ui.widget.pulltorefresh.PullToRefreshBaseListAdapter -> c.a.b.a.b.d:
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    long getItemId(int) -> getItemId
    java.lang.Object getItem(int) -> getItem
    int getCount() -> getCount
    boolean isFling() -> isFling
    void onScroll$3efd67d(android.support.v4.content.Loader$OnLoadCompleteListener,int,int,int) -> onScroll$3efd67d
m.framework.ui.widget.pulltorefresh.PullToRefreshListAdapter -> c.a.b.a.b.e:
    m.framework.ui.widget.pulltorefresh.ScrollableListView listView -> listView
    m.framework.ui.widget.pulltorefresh.ListInnerAdapter adapter -> adapter
    boolean fling -> fling
    android.support.v4.app.FragmentManager$OnBackStackChangedListener osListener$2b632008 -> osListener$2b632008
    android.support.v4.content.Loader$OnLoadCompleteListener getBodyView$58621dce() -> getBodyView$58621dce
    boolean isPullReady() -> isPullReady
    android.widget.ListView getListView() -> getListView
    boolean isFling() -> isFling
    void onScroll$3efd67d(android.support.v4.content.Loader$OnLoadCompleteListener,int,int,int) -> onScroll$3efd67d
    void notifyDataSetChanged() -> notifyDataSetChanged
    void access$0(m.framework.ui.widget.pulltorefresh.PullToRefreshListAdapter,boolean) -> access$0
    android.support.v4.app.FragmentManager$OnBackStackChangedListener access$1$3690ea49(m.framework.ui.widget.pulltorefresh.PullToRefreshListAdapter) -> access$1$3690ea49
    m.framework.ui.widget.pulltorefresh.ListInnerAdapter access$2(m.framework.ui.widget.pulltorefresh.PullToRefreshListAdapter) -> access$2
    m.framework.ui.widget.pulltorefresh.ScrollableListView access$3(m.framework.ui.widget.pulltorefresh.PullToRefreshListAdapter) -> access$3
m.framework.ui.widget.pulltorefresh.PullToRefreshListAdapter$1 -> c.a.b.a.b.f:
    int firstVisibleItem -> a
    int visibleItemCount -> b
    m.framework.ui.widget.pulltorefresh.PullToRefreshListAdapter this$0 -> c
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
m.framework.ui.widget.pulltorefresh.PullToRefreshView -> c.a.b.a.b.g:
    m.framework.ui.widget.pulltorefresh.PullToRefreshAdatper adapter -> a
    android.view.View headerView -> b
    android.view.View bodyView -> c
    int headerHeight -> d
    int top -> e
    float downY -> f
    boolean requesting -> g
    java.lang.Runnable stopAct -> h
    long refreshTime -> i
    void setAdapter(m.framework.ui.widget.pulltorefresh.PullToRefreshAdatper) -> a
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    android.view.MotionEvent getCancelEvent(android.view.MotionEvent) -> a
    void performRequest() -> b
    void performPulling(boolean) -> a
    void reversePulling() -> c
    void stopPulling() -> a
    void access$0(m.framework.ui.widget.pulltorefresh.PullToRefreshView) -> a
    void access$1(m.framework.ui.widget.pulltorefresh.PullToRefreshView) -> b
m.framework.ui.widget.pulltorefresh.PullToRefreshView$1 -> c.a.b.a.b.h:
    m.framework.ui.widget.pulltorefresh.PullToRefreshView this$0 -> a
    void run() -> run
m.framework.ui.widget.pulltorefresh.ScrollableListView -> c.a.b.a.b.i:
    m.framework.ui.widget.pulltorefresh.OnScrollListener osListener -> a
    boolean pullEnable -> b
    boolean isReadyToPull() -> a
    int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    void access$0(m.framework.ui.widget.pulltorefresh.ScrollableListView,boolean) -> a
m.framework.ui.widget.pulltorefresh.ScrollableListView$1 -> c.a.b.a.b.j:
    m.framework.ui.widget.pulltorefresh.ScrollableListView this$0 -> a
    void onScrollChanged$7a0b6c26(int,int) -> a
m.framework.ui.widget.viewpager.ViewPagerAdapter -> c.a.b.a.c.a:
    int getCount() -> getCount
    void onScreenChange(int,int) -> onScreenChange
    android.view.View getView(int,android.view.ViewGroup) -> getView
m.framework.ui.widget.viewpager.ViewPagerClassic -> c.a.b.a.c.b:
    int currentScreen -> a
    android.widget.Scroller scroller -> b
    android.view.VelocityTracker mVelocityTracker -> c
    float lastMotionX -> d
    float lastMotionY -> e
    int touchState -> f
    int touchSlop -> g
    int mMaximumVelocity -> h
    m.framework.ui.widget.viewpager.ViewPagerAdapter adapter -> i
    int getCurrentScreen() -> a
    void setCurrentScreen(int) -> a
    void computeScroll() -> computeScroll
    void setAdapter(m.framework.ui.widget.viewpager.ViewPagerAdapter) -> a
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    boolean dispatchUnhandledMove(android.view.View,int) -> dispatchUnhandledMove
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void handleScrollMove(android.view.MotionEvent) -> a
    void scrollToScreen(int) -> b
m.framework.ui.widget.viewpager.ViewPagerClassic$1 -> c.a.b.a.c.c:
    float[] values -> a
    float getInterpolation(float) -> getInterpolation
m.framework.utils.Data -> c.a.c.a:
    java.lang.String MD5(java.lang.String) -> a
    byte[] rawMD5(java.lang.String) -> b
m.framework.utils.DeviceHelper -> c.a.c.b:
    android.content.Context context -> a
    android.os.Handler handler -> b
    java.lang.String getPackageName() -> a
    void prepare() -> b
    boolean sendMessageDelayed(android.os.Message,long,android.os.Handler$Callback) -> a
    void access$0(android.os.Message) -> a
m.framework.utils.HEX -> c.a.c.c:
    java.lang.String toHex(byte[]) -> a
m.framework.utils.Hashon -> c.a.c.d:
m.framework.utils.UIHandler$1 -> c.a.c.e:
    boolean handleMessage(android.os.Message) -> handleMessage
net.owan.android.Djy -> net.owan.android.Djy:
    void updateLog() -> updateLog
net.owan.android.a -> net.owan.android.a:
    net.owan.android.a.k.a.i a -> a
    net.owan.android.a.g.l b -> b
    net.owan.android.f.a c -> c
    android.widget.RelativeLayout d -> d
    net.owan.android.f.b e -> e
    net.owan.android.d.f.a f -> f
    void onCreate(android.os.Bundle) -> onCreate
    void i() -> i
    void setWebTitle(java.lang.String) -> setWebTitle
    void a(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> a
    void a(android.webkit.WebView,int,java.lang.String,java.lang.String) -> a
    void a(android.webkit.WebView,java.lang.String) -> a
    void a() -> a
    void onClick(android.view.View) -> onClick
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void b() -> b
    void c() -> c
    void d() -> d
    void e() -> e
    void f() -> f
    boolean g() -> g
    boolean a(java.lang.String) -> a
    boolean a(java.lang.String,byte[]) -> a
    boolean h() -> h
net.owan.android.a.a.a -> net.owan.android.a.a.a:
    java.lang.String a -> a
    java.lang.String b -> b
    net.owan.android.a.a.b c -> c
    net.owan.android.a.a.c d -> d
    java.lang.String e -> e
    boolean f -> f
    java.lang.String g -> g
    long h -> h
    java.lang.String i -> i
    long j -> j
    boolean k -> k
    net.owan.android.a.g.j l -> l
    java.lang.String m -> m
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    boolean b() -> b
    void a(boolean) -> a
    void b(java.lang.String) -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    void c(java.lang.String) -> c
    boolean e() -> e
    void b(boolean) -> b
    net.owan.android.a.a.c f() -> f
    void a(net.owan.android.a.a.c) -> a
    void a(long) -> a
    net.owan.android.a.g.j g() -> g
    void a(net.owan.android.a.g.j) -> a
    java.lang.String serialize() -> serialize
    boolean deserialize(java.lang.String) -> deserialize
    long getValidCacheTime_ms() -> getValidCacheTime_ms
    java.lang.String getCacheKey() -> getCacheKey
    java.lang.String d(java.lang.String) -> d
net.owan.android.a.a.a.a -> net.owan.android.a.a.a.a:
    int a -> a
    int b -> b
    long c -> c
    java.lang.String d -> d
    net.owan.android.a.a.a.f e -> e
    net.owan.android.a.a.a.c f -> f
    net.owan.android.a.a.a.g g -> g
    net.owan.android.a.a.a.e h -> h
    net.owan.android.a.a.a.d i -> i
    net.owan.android.a.a.a.j j -> j
    net.owan.android.a.a.a.h k -> k
    int a() -> a
    int b() -> b
    long c() -> c
    void a(long) -> a
    java.lang.String d() -> d
    java.lang.String a(int,int) -> a
    net.owan.android.a.a.a.f e() -> e
    void a(net.owan.android.a.a.a.f) -> a
    net.owan.android.a.a.a.c f() -> f
    void a(net.owan.android.a.a.a.c) -> a
    net.owan.android.a.a.a.g g() -> g
    void a(net.owan.android.a.a.a.g) -> a
    void a(net.owan.android.a.a.a.e) -> a
    net.owan.android.a.a.a.e h() -> h
    void a(net.owan.android.a.a.a.d) -> a
    net.owan.android.a.a.a.d i() -> i
    net.owan.android.a.a.a.j j() -> j
    void a(net.owan.android.a.a.a.j) -> a
    net.owan.android.a.a.a.h k() -> k
    void a(net.owan.android.a.a.a.h) -> a
    java.lang.String toString() -> toString
    java.lang.String serialize() -> serialize
    boolean deserialize(java.lang.String) -> deserialize
    long getValidCacheTime_ms() -> getValidCacheTime_ms
    java.lang.String getCacheKey() -> getCacheKey
net.owan.android.a.a.a.b -> net.owan.android.a.a.a.b:
    java.lang.String a(net.owan.android.a.a.a.a) -> a
    boolean a(net.owan.android.a.a.a.a,java.lang.String) -> a
net.owan.android.a.a.a.c -> net.owan.android.a.a.a.c:
    long a -> a
    java.util.ArrayList b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.util.ArrayList a() -> a
    void a(java.lang.String) -> a
    java.lang.String b() -> b
    void b(java.lang.String) -> b
    java.lang.String c() -> c
    void c(java.lang.String) -> c
    java.lang.String d() -> d
    void d(java.lang.String) -> d
    java.lang.String e() -> e
    void e(java.lang.String) -> e
    java.lang.String f() -> f
    void f(java.lang.String) -> f
    java.lang.String g() -> g
    void g(java.lang.String) -> g
    void h(java.lang.String) -> h
    java.lang.String h() -> h
    java.lang.String i() -> i
    void i(java.lang.String) -> i
    long j() -> j
    void a(long) -> a
    java.lang.String toString() -> toString
net.owan.android.a.a.a.d -> net.owan.android.a.a.a.d:
    long a -> a
    int b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    int e -> e
    long a() -> a
    void a(long) -> a
    int b() -> b
    void a(int) -> a
    java.lang.String c() -> c
    void a(java.lang.String) -> a
    java.lang.String d() -> d
    void b(java.lang.String) -> b
    int e() -> e
    void b(int) -> b
    java.lang.String toString() -> toString
net.owan.android.a.a.a.e -> net.owan.android.a.a.a.e:
    long a -> a
    long b -> b
    java.lang.String c -> c
    long a() -> a
    void a(long) -> a
    void b(long) -> b
    long b() -> b
    java.lang.String c() -> c
    void a(java.lang.String) -> a
    java.lang.String toString() -> toString
net.owan.android.a.a.a.f -> net.owan.android.a.a.a.f:
    boolean a -> a
    boolean b -> b
    boolean c -> c
    int d -> d
    long e -> e
    boolean a(android.content.Context,java.lang.String) -> a
    void a(boolean) -> a
    boolean a() -> a
    boolean b() -> b
    int c() -> c
    java.lang.String toString() -> toString
net.owan.android.a.a.a.g -> net.owan.android.a.a.a.g:
    long b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    int a -> a
    java.lang.String g -> g
    long a() -> a
    void a(long) -> a
    java.lang.String b() -> b
    void a(java.lang.String) -> a
    java.lang.String c() -> c
    void b(java.lang.String) -> b
    java.lang.String d() -> d
    void c(java.lang.String) -> c
    java.lang.String e() -> e
    void d(java.lang.String) -> d
    java.lang.String f() -> f
    void e(java.lang.String) -> e
    java.lang.String toString() -> toString
    int g() -> g
    void a(int) -> a
net.owan.android.a.a.a.h -> net.owan.android.a.a.a.h:
    long a -> a
    int b -> b
    long a() -> a
    void a(long) -> a
    int b() -> b
    void a(int) -> a
net.owan.android.a.a.a.i -> net.owan.android.a.a.a.i:
    int a -> a
    java.lang.String b -> b
    int c -> c
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    int b() -> b
    void a(int) -> a
    int c() -> c
    void b(int) -> b
net.owan.android.a.a.a.j -> net.owan.android.a.a.a.j:
    long a -> a
    java.util.List b -> b
    long a() -> a
    void a(long) -> a
    java.util.List b() -> b
    void a(net.owan.android.a.a.a.i) -> a
    java.lang.String toString() -> toString
net.owan.android.a.a.b -> net.owan.android.a.a.b:
    net.owan.android.a.a.c a() -> a
    net.owan.android.a.a.c a(org.json.JSONObject,net.owan.android.a.a.c) -> a
net.owan.android.a.a.c -> net.owan.android.a.a.c:
    org.json.JSONObject a() -> a
    boolean a(org.json.JSONObject) -> a
net.owan.android.a.a.d -> net.owan.android.a.a.d:
    net.owan.android.a.a.d a -> a
    net.owan.android.a.a.d a(android.content.Context) -> a
    net.owan.android.a.a.a a(android.content.Context,java.lang.String,net.owan.android.a.a.b) -> a
    boolean a(android.content.Context,net.owan.android.a.a.a) -> a
    boolean a(java.lang.String) -> a
net.owan.android.a.a.e -> net.owan.android.a.a.e:
    void a(android.content.Context,net.owan.android.a.g.e,java.util.List) -> a
net.owan.android.a.b.a -> net.owan.android.a.b.a:
    net.owan.android.e.a.g a -> a
    net.owan.android.e.a.f b -> b
    void a(android.content.Context) -> a
    boolean a(android.content.Context,net.owan.android.e.a.a) -> a
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String) -> a
    boolean b(android.content.Context,net.owan.android.e.a.a) -> b
net.owan.android.a.c.a -> net.owan.android.a.c.a:
    android.webkit.WebViewClient a(net.owan.android.a.k.a.h) -> a
    int a() -> a
    android.webkit.WebChromeClient a(android.content.Context,net.owan.android.a.k.a.b) -> a
    void a(android.content.Context,android.webkit.WebSettings) -> a
    void a(android.content.Context) -> a
net.owan.android.a.c.b -> net.owan.android.a.c.b:
    void a(android.content.Context) -> a
net.owan.android.a.c.c -> net.owan.android.a.c.c:
    int a() -> a
net.owan.android.a.c.d -> net.owan.android.a.c.d:
    net.owan.android.a.k.a.b a -> a
    net.owan.android.a.c.d a(net.owan.android.a.k.a.b) -> a
    void onReceivedTitle(android.webkit.WebView,java.lang.String) -> onReceivedTitle
    void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
    boolean onJsAlert(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsAlert
    boolean onJsConfirm(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsConfirm
    boolean onJsPrompt(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsPromptResult) -> onJsPrompt
net.owan.android.a.c.e -> net.owan.android.a.c.e:
    net.owan.android.a.c.e b(net.owan.android.a.k.a.b) -> b
    void onExceededDatabaseQuota(java.lang.String,java.lang.String,long,long,long,android.webkit.WebStorage$QuotaUpdater) -> onExceededDatabaseQuota
    void onGeolocationPermissionsShowPrompt(java.lang.String,android.webkit.GeolocationPermissions$Callback) -> onGeolocationPermissionsShowPrompt
net.owan.android.a.c.f -> net.owan.android.a.c.f:
    android.webkit.GeolocationPermissions$Callback a -> a
    java.lang.String b -> b
    net.owan.android.a.c.e c -> c
    void onClick(android.content.DialogInterface,int) -> onClick
net.owan.android.a.c.g -> net.owan.android.a.c.g:
    android.webkit.GeolocationPermissions$Callback a -> a
    java.lang.String b -> b
    net.owan.android.a.c.e c -> c
    void onClick(android.content.DialogInterface,int) -> onClick
net.owan.android.a.c.h -> net.owan.android.a.c.h:
    android.webkit.GeolocationPermissions$Callback a -> a
    java.lang.String b -> b
    net.owan.android.a.c.e c -> c
    void onClick(android.content.DialogInterface,int) -> onClick
net.owan.android.a.c.i -> net.owan.android.a.c.i:
    net.owan.android.a.c.i c(net.owan.android.a.k.a.b) -> c
    void onShowCustomView(android.view.View,android.webkit.WebChromeClient$CustomViewCallback) -> onShowCustomView
    void onHideCustomView() -> onHideCustomView
    android.graphics.Bitmap getDefaultVideoPoster() -> getDefaultVideoPoster
    android.view.View getVideoLoadingProgressView() -> getVideoLoadingProgressView
    void onReachedMaxAppCacheSize(long,long,android.webkit.WebStorage$QuotaUpdater) -> onReachedMaxAppCacheSize
net.owan.android.a.c.j -> net.owan.android.a.c.j:
    net.owan.android.a.k.a.h a -> a
    net.owan.android.a.c.j a(net.owan.android.a.k.a.h) -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
net.owan.android.a.c.k -> net.owan.android.a.c.k:
    net.owan.android.a.k.a.h a -> a
    net.owan.android.a.c.k a(net.owan.android.a.k.a.h) -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError) -> onReceivedSslError
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
net.owan.android.a.c.l -> net.owan.android.a.c.l:
    void a(android.content.Context,android.webkit.WebSettings) -> a
net.owan.android.a.c.m -> net.owan.android.a.c.m:
    void a(android.content.Context,android.webkit.WebSettings) -> a
net.owan.android.a.d.a -> net.owan.android.a.d.a:
    net.owan.android.e.a.d a -> a
    net.owan.android.e.a.d b -> b
    net.owan.android.e.a.d a(android.content.Context) -> a
    net.owan.android.e.a.d b(android.content.Context) -> b
net.owan.android.a.e.a -> net.owan.android.a.e.a:
    net.owan.android.c.e.a a(net.owan.android.e.b.b) -> a
    net.owan.android.e.b.d a() -> a
net.owan.android.a.e.b -> net.owan.android.a.e.b:
    net.owan.android.a.e.b a -> a
    net.owan.android.a.e.b a(android.content.Context) -> a
net.owan.android.a.f.a -> net.owan.android.a.f.a:
    net.owan.android.a.f.a a -> a
    net.owan.android.a.f.a b -> b
    net.owan.android.a.f.a c -> c
    net.owan.android.a.f.a d -> d
    java.lang.String b() -> b
    java.io.File d(java.lang.String) -> d
    net.owan.android.a.f.a a(android.content.Context,net.owan.android.a.f.a,net.owan.android.a.f.a,int,long) -> a
    net.owan.android.a.f.a a(android.content.Context,int) -> a
    net.owan.android.a.f.a b(android.content.Context,int) -> b
    net.owan.android.a.f.a a(android.content.Context) -> a
    net.owan.android.a.f.a b(android.content.Context) -> b
net.owan.android.a.g.a -> net.owan.android.a.g.a:
net.owan.android.a.g.a.a -> net.owan.android.a.g.a.a:
    java.lang.String a -> a
    java.lang.String b -> b
    long c -> c
    boolean d -> d
    boolean a() -> a
    java.lang.String serialize() -> serialize
    boolean deserialize(java.lang.String) -> deserialize
    void a(java.lang.String) -> a
    java.lang.String b() -> b
    void a(long) -> a
    long getValidCacheTime_ms() -> getValidCacheTime_ms
    java.lang.String getCacheKey() -> getCacheKey
net.owan.android.a.g.a.b -> net.owan.android.a.g.a.b:
    net.owan.android.a.g.a.b a -> a
    net.owan.android.a.g.a.b a(android.content.Context) -> a
    net.owan.android.a.g.a.a a(java.lang.String) -> a
    boolean a(java.lang.String,java.lang.String,long) -> a
    boolean a(java.util.List) -> a
    boolean b(java.lang.String) -> b
net.owan.android.a.g.b -> net.owan.android.a.g.b:
    net.owan.android.a.g.f a() -> a
    boolean a(java.lang.Runnable) -> a
net.owan.android.a.g.b.a -> net.owan.android.a.g.b.a:
    java.lang.String handle(net.owan.android.a.g.e,net.owan.android.a.g.b,java.lang.String) -> handle
net.owan.android.a.g.b.a.a -> net.owan.android.a.g.b.a.a:
    org.json.JSONObject toHandler(net.owan.android.a.g.e,net.owan.android.a.g.b,org.json.JSONObject) -> toHandler
net.owan.android.a.g.b.a.b -> net.owan.android.a.g.b.a.b:
    org.json.JSONObject toHandler(net.owan.android.a.g.e,net.owan.android.a.g.b,org.json.JSONObject) -> toHandler
net.owan.android.a.g.b.a.c -> net.owan.android.a.g.b.a.c:
    org.json.JSONObject toHandler(net.owan.android.a.g.e,net.owan.android.a.g.b,org.json.JSONObject) -> toHandler
net.owan.android.a.g.b.a.d -> net.owan.android.a.g.b.a.d:
    org.json.JSONObject toHandler(net.owan.android.a.g.e,net.owan.android.a.g.b,org.json.JSONObject) -> toHandler
net.owan.android.a.g.b.a.e -> net.owan.android.a.g.b.a.e:
    int[] a -> a
net.owan.android.a.g.b.a.f -> net.owan.android.a.g.b.a.f:
    org.json.JSONObject toHandler(net.owan.android.a.g.e,net.owan.android.a.g.b,org.json.JSONObject) -> toHandler
net.owan.android.a.g.b.a.g -> net.owan.android.a.g.b.a.g:
    org.json.JSONObject toHandler(net.owan.android.a.g.e,net.owan.android.a.g.b,org.json.JSONObject) -> toHandler
net.owan.android.a.g.b.a.h -> net.owan.android.a.g.b.a.h:
    org.json.JSONObject toHandler(net.owan.android.a.g.e,net.owan.android.a.g.b,org.json.JSONObject) -> toHandler
net.owan.android.a.g.b.a.i -> net.owan.android.a.g.b.a.i:
    org.json.JSONObject toHandler(net.owan.android.a.g.e,net.owan.android.a.g.b,org.json.JSONObject) -> toHandler
net.owan.android.a.g.b.a.j -> net.owan.android.a.g.b.a.j:
    org.json.JSONObject toHandler(net.owan.android.a.g.e,net.owan.android.a.g.b,org.json.JSONObject) -> toHandler
net.owan.android.a.g.b.a.k -> net.owan.android.a.g.b.a.k:
    org.json.JSONObject toHandler(net.owan.android.a.g.e,net.owan.android.a.g.b) -> toHandler
net.owan.android.a.g.b.b -> net.owan.android.a.g.b.b:
    int OK -> OK
    int Err_Psw -> Err_Psw
    int Err_Params -> Err_Params
    int Err_Exception -> Err_Exception
    int Err_Undefine -> Err_Undefine
    int Err_Permission -> Err_Permission
    net.owan.android.a.g.y mBrowser -> mBrowser
    net.owan.android.a.g.a mExtendJsObject -> mExtendJsObject
    void setYmWebBrowser(net.owan.android.a.g.y) -> setYmWebBrowser
    void setExtendJsObject(net.owan.android.a.g.a) -> setExtendJsObject
    java.lang.String toJsonString(org.json.JSONObject) -> toJsonString
    org.json.JSONObject toSimpleCodeJson(int) -> toSimpleCodeJson
    java.lang.String toSimpleCodeJsonString(int) -> toSimpleCodeJsonString
net.owan.android.a.g.b.b.a -> net.owan.android.a.g.b.b.a:
    org.json.JSONObject toHandler(net.owan.android.a.g.e,net.owan.android.a.g.b) -> toHandler
net.owan.android.a.g.b.b.b -> net.owan.android.a.g.b.b.b:
    int[] a -> a
net.owan.android.a.g.b.b.c -> net.owan.android.a.g.b.b.c:
    org.json.JSONObject toHandler(net.owan.android.a.g.e,net.owan.android.a.g.b,org.json.JSONObject) -> toHandler
net.owan.android.a.g.b.b.d -> net.owan.android.a.g.b.b.d:
    org.json.JSONObject toHandler(net.owan.android.a.g.e,net.owan.android.a.g.b,org.json.JSONObject) -> toHandler
net.owan.android.a.g.b.b.e -> net.owan.android.a.g.b.b.e:
    int[] a -> a
net.owan.android.a.g.b.b.f -> net.owan.android.a.g.b.b.f:
    org.json.JSONObject toHandler(net.owan.android.a.g.e,net.owan.android.a.g.b) -> toHandler
net.owan.android.a.g.b.b.g -> net.owan.android.a.g.b.b.g:
    int[] a -> a
net.owan.android.a.g.b.b.h -> net.owan.android.a.g.b.b.h:
    org.json.JSONObject toHandler(net.owan.android.a.g.e,net.owan.android.a.g.b,org.json.JSONObject) -> toHandler
net.owan.android.a.g.b.b.i -> net.owan.android.a.g.b.b.i:
    int[] a -> a
net.owan.android.a.g.b.b.j -> net.owan.android.a.g.b.b.j:
    org.json.JSONObject toHandler(net.owan.android.a.g.e,net.owan.android.a.g.b,org.json.JSONObject) -> toHandler
net.owan.android.a.g.b.b.k -> net.owan.android.a.g.b.b.k:
    int[] a -> a
net.owan.android.a.g.b.b.l -> net.owan.android.a.g.b.b.l:
    org.json.JSONObject toHandler(net.owan.android.a.g.e,net.owan.android.a.g.b,org.json.JSONObject) -> toHandler
net.owan.android.a.g.b.b.m -> net.owan.android.a.g.b.b.m:
    int[] a -> a
net.owan.android.a.g.b.b.n -> net.owan.android.a.g.b.b.n:
    org.json.JSONObject toHandler(net.owan.android.a.g.e,net.owan.android.a.g.b) -> toHandler
net.owan.android.a.g.b.b.o -> net.owan.android.a.g.b.b.o:
    int[] a -> a
net.owan.android.a.g.b.b.p -> net.owan.android.a.g.b.b.p:
    org.json.JSONObject toHandler(net.owan.android.a.g.e,net.owan.android.a.g.b,org.json.JSONObject) -> toHandler
net.owan.android.a.g.b.b.q -> net.owan.android.a.g.b.b.q:
    android.content.Context a -> a
    net.owan.android.a.g.c.a.a b -> b
    net.owan.android.a.g.b.b.p c -> c
    void run() -> run
net.owan.android.a.g.b.b.r -> net.owan.android.a.g.b.b.r:
    org.json.JSONObject toHandler(net.owan.android.a.g.e,net.owan.android.a.g.b,org.json.JSONObject) -> toHandler
net.owan.android.a.g.b.b.s -> net.owan.android.a.g.b.b.s:
    int[] a -> a
net.owan.android.a.g.b.c -> net.owan.android.a.g.b.c:
    java.lang.String handle(net.owan.android.a.g.e,net.owan.android.a.g.b,java.lang.String) -> handle
    org.json.JSONObject toHandler(net.owan.android.a.g.e,net.owan.android.a.g.b) -> toHandler
net.owan.android.a.g.b.c.a -> net.owan.android.a.g.b.c.a:
    org.json.JSONObject toHandler(net.owan.android.a.g.e,net.owan.android.a.g.b,org.json.JSONObject) -> toHandler
net.owan.android.a.g.b.c.b -> net.owan.android.a.g.b.c.b:
    org.json.JSONObject toHandler(net.owan.android.a.g.e,net.owan.android.a.g.b,org.json.JSONObject) -> toHandler
net.owan.android.a.g.b.c.c -> net.owan.android.a.g.b.c.c:
    org.json.JSONObject toHandler(net.owan.android.a.g.e,net.owan.android.a.g.b,org.json.JSONObject) -> toHandler
net.owan.android.a.g.b.c.d -> net.owan.android.a.g.b.c.d:
    org.json.JSONObject toHandler(net.owan.android.a.g.e,net.owan.android.a.g.b,org.json.JSONObject) -> toHandler
net.owan.android.a.g.b.d -> net.owan.android.a.g.b.d:
    java.lang.String handle(net.owan.android.a.g.e,net.owan.android.a.g.b,java.lang.String) -> handle
    org.json.JSONObject toHandler(net.owan.android.a.g.e,net.owan.android.a.g.b,org.json.JSONObject) -> toHandler
net.owan.android.a.g.b.d.a -> net.owan.android.a.g.b.d.a:
    org.json.JSONObject toHandler(net.owan.android.a.g.e,net.owan.android.a.g.b) -> toHandler
net.owan.android.a.g.b.d.b -> net.owan.android.a.g.b.d.b:
    org.json.JSONObject toHandler(net.owan.android.a.g.e,net.owan.android.a.g.b) -> toHandler
net.owan.android.a.g.b.e.a -> net.owan.android.a.g.b.e.a:
    org.json.JSONObject toHandler(net.owan.android.a.g.e,net.owan.android.a.g.b) -> toHandler
net.owan.android.a.g.b.e.b -> net.owan.android.a.g.b.e.b:
    org.json.JSONObject toHandler(net.owan.android.a.g.e,net.owan.android.a.g.b,org.json.JSONObject) -> toHandler
net.owan.android.a.g.b.e.c -> net.owan.android.a.g.b.e.c:
    org.json.JSONObject toHandler(net.owan.android.a.g.e,net.owan.android.a.g.b,org.json.JSONObject) -> toHandler
net.owan.android.a.g.b.e.d -> net.owan.android.a.g.b.e.d:
    org.json.JSONObject toHandler(net.owan.android.a.g.e,net.owan.android.a.g.b,org.json.JSONObject) -> toHandler
net.owan.android.a.g.b.e.e -> net.owan.android.a.g.b.e.e:
    org.json.JSONObject toHandler(net.owan.android.a.g.e,net.owan.android.a.g.b,org.json.JSONObject) -> toHandler
net.owan.android.a.g.b.f.a -> net.owan.android.a.g.b.f.a:
    org.json.JSONObject toHandler(net.owan.android.a.g.e,net.owan.android.a.g.b,org.json.JSONObject) -> toHandler
net.owan.android.a.g.b.f.b -> net.owan.android.a.g.b.f.b:
    android.content.Context a -> a
    java.lang.String b -> b
    int c -> c
    net.owan.android.a.g.b.f.a d -> d
    void run() -> run
net.owan.android.a.g.b.f.c -> net.owan.android.a.g.b.f.c:
    org.json.JSONObject toHandler(net.owan.android.a.g.e,net.owan.android.a.g.b,org.json.JSONObject) -> toHandler
net.owan.android.a.g.b.g.a -> net.owan.android.a.g.b.g.a:
    org.json.JSONObject toHandler(net.owan.android.a.g.e,net.owan.android.a.g.b) -> toHandler
net.owan.android.a.g.b.g.b -> net.owan.android.a.g.b.g.b:
    org.json.JSONObject toHandler(net.owan.android.a.g.e,net.owan.android.a.g.b,org.json.JSONObject) -> toHandler
net.owan.android.a.g.b.g.c -> net.owan.android.a.g.b.g.c:
    int[] a -> a
net.owan.android.a.g.b.g.d -> net.owan.android.a.g.b.g.d:
    org.json.JSONObject toHandler(net.owan.android.a.g.e,net.owan.android.a.g.b,org.json.JSONObject) -> toHandler
net.owan.android.a.g.b.g.e -> net.owan.android.a.g.b.g.e:
    int[] a -> a
net.owan.android.a.g.b.h.a -> net.owan.android.a.g.b.h.a:
    org.json.JSONObject toHandler(net.owan.android.a.g.e,net.owan.android.a.g.b,org.json.JSONObject) -> toHandler
net.owan.android.a.g.b.h.b -> net.owan.android.a.g.b.h.b:
    org.json.JSONObject toHandler(net.owan.android.a.g.e,net.owan.android.a.g.b,org.json.JSONObject) -> toHandler
net.owan.android.a.g.b.h.c -> net.owan.android.a.g.b.h.c:
    org.json.JSONObject toHandler(net.owan.android.a.g.e,net.owan.android.a.g.b,org.json.JSONObject) -> toHandler
    java.lang.String a(net.owan.android.b.a.b,java.lang.String) -> a
net.owan.android.a.g.c -> net.owan.android.a.g.c:
    void a(java.lang.String,java.lang.String) -> a
net.owan.android.a.g.c.a.a -> net.owan.android.a.g.c.a.a:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    java.lang.String b() -> b
    void b(java.lang.String) -> b
    java.lang.String c() -> c
    void c(java.lang.String) -> c
    java.lang.String d() -> d
    void d(java.lang.String) -> d
    java.lang.String e() -> e
    void e(java.lang.String) -> e
    java.lang.String f() -> f
    void f(java.lang.String) -> f
    java.lang.String g() -> g
    void g(java.lang.String) -> g
    boolean h() -> h
net.owan.android.a.g.c.b.a -> net.owan.android.a.g.c.b.a:
    net.owan.android.a.g.c.b.a a -> a
    java.util.HashSet b -> b
    net.owan.android.a.g.c.b.a a() -> a
    java.util.HashSet b() -> b
    void a(net.owan.android.a.g.c) -> a
    void b(net.owan.android.a.g.c) -> b
    void a(java.lang.String,java.lang.String) -> a
net.owan.android.a.g.c.b.b -> net.owan.android.a.g.c.b.b:
    net.owan.android.a.g.c a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    net.owan.android.a.g.c.b.a d -> d
    void run() -> run
net.owan.android.a.g.c.b.c -> net.owan.android.a.g.c.b.c:
    android.content.Context a -> a
    net.owan.android.a.g.c.b.c b -> b
    java.util.HashMap c -> c
    net.owan.android.a.g.c.b.c a(android.content.Context) -> a
    boolean a(net.owan.android.a.g.c.a.a) -> a
    void a(net.owan.android.a.g.c.a.a,android.graphics.Bitmap) -> a
    void a(java.lang.String,android.graphics.Bitmap) -> a
    android.graphics.Bitmap a(android.graphics.Bitmap) -> a
    void a(java.lang.String) -> a
net.owan.android.a.g.c.b.d -> net.owan.android.a.g.c.b.d:
    android.content.Context a -> a
    java.util.ArrayList c -> c
    java.lang.String d -> d
    long e -> e
    org.json.JSONArray b -> b
    java.lang.String f -> f
    net.owan.android.a.g.e g -> g
    void run() -> run
net.owan.android.a.g.d -> net.owan.android.a.g.d:
    void setWebTitle(java.lang.String) -> setWebTitle
net.owan.android.a.g.e -> net.owan.android.a.g.e:
    android.content.Context getApplicationContext() -> getApplicationContext
    android.app.Activity getActivity() -> getActivity
    void setSdkHandlerProxy(net.owan.android.a.k.a.d) -> setSdkHandlerProxy
    net.owan.android.a.g.f js_SDK_Handler_CloseCurrentWindow() -> js_SDK_Handler_CloseCurrentWindow
    int js_SDK_Handler_GetSdkVersion() -> js_SDK_Handler_GetSdkVersion
    int js_SDK_Handler_GetSdkID() -> js_SDK_Handler_GetSdkID
    java.lang.String js_SDK_Handler_GetGwExtendUrl_RandomKey(java.lang.String,java.lang.String) -> js_SDK_Handler_GetGwExtendUrl_RandomKey
    java.lang.String js_SDK_Handler_GetGwExtendUrl_RSD(net.owan.android.a.g.j) -> js_SDK_Handler_GetGwExtendUrl_RSD
    net.owan.android.a.g.f js_SDK_Handler_ReloadPage() -> js_SDK_Handler_ReloadPage
    net.owan.android.a.g.f js_SDK_Handler_Browser(net.owan.android.a.g.m) -> js_SDK_Handler_Browser
    net.owan.android.a.g.f js_SDK_Handler_CopyBrowser(net.owan.android.a.g.n) -> js_SDK_Handler_CopyBrowser
    net.owan.android.a.g.f js_SDK_Handler_BrowserInDialog_RunOnUiThread(net.owan.android.a.g.p) -> js_SDK_Handler_BrowserInDialog_RunOnUiThread
    net.owan.android.a.g.f js_SDK_Handler_AsyncStartAppDownload(net.owan.android.a.g.i,net.owan.android.a.g.o) -> js_SDK_Handler_AsyncStartAppDownload
    net.owan.android.a.g.f js_SDK_Handler_AsyncResponseGwAppsLog(android.content.Context,java.util.List) -> js_SDK_Handler_AsyncResponseGwAppsLog
    net.owan.android.a.g.f js_Sdk_Handler_TrackEvent(java.lang.String,java.lang.String,java.lang.String,long) -> js_Sdk_Handler_TrackEvent
    net.owan.android.a.g.f js_Sdk_Handler_TrackView(java.lang.String) -> js_Sdk_Handler_TrackView
    net.owan.android.a.g.f js_Sdk_Handler_AsyncSendEffLog(int,net.owan.android.a.g.j) -> js_Sdk_Handler_AsyncSendEffLog
    net.owan.android.a.g.f js_SDK_Handler_BrowserInDialogOnScreen_RunOnUiThread(net.owan.android.a.g.p) -> js_SDK_Handler_BrowserInDialogOnScreen_RunOnUiThread
net.owan.android.a.g.f -> net.owan.android.a.g.f:
    net.owan.android.a.g.f a -> a
    net.owan.android.a.g.f b -> b
    net.owan.android.a.g.f c -> c
    net.owan.android.a.g.f[] d -> d
    net.owan.android.a.g.f[] values() -> values
    net.owan.android.a.g.f valueOf(java.lang.String) -> valueOf
net.owan.android.a.g.g -> net.owan.android.a.g.g:
    net.owan.android.a.g.e a -> a
    net.owan.android.a.g.b b -> b
    net.owan.android.a.g.k c -> c
    net.owan.android.a.g.y d -> d
    net.owan.android.a.g.a e -> e
    void setYmWebBrowser(net.owan.android.a.g.y) -> setYmWebBrowser
    void setExtendJsObject(net.owan.android.a.g.a) -> setExtendJsObject
    boolean d(java.lang.String) -> d
    boolean i(java.lang.String) -> i
    boolean e(java.lang.String) -> e
    boolean w(java.lang.String) -> w
    boolean dd(java.lang.String) -> dd
    boolean di(java.lang.String) -> di
    boolean de(java.lang.String) -> de
    boolean dw(java.lang.String) -> dw
    java.lang.String a(int,int,java.lang.String) -> a
    net.owan.android.a.g.b.a a(int) -> a
    net.owan.android.a.g.b.a b(int) -> b
    net.owan.android.a.g.b.a c(int) -> c
    net.owan.android.a.g.b.a d(int) -> d
    net.owan.android.a.g.b.a e(int) -> e
    net.owan.android.a.g.b.a f(int) -> f
    net.owan.android.a.g.b.a g(int) -> g
    net.owan.android.a.g.b.a h(int) -> h
net.owan.android.a.g.h -> net.owan.android.a.g.h:
    java.lang.String a(int,int,java.lang.String) -> a
    boolean d(java.lang.String) -> d
    boolean i(java.lang.String) -> i
    boolean w(java.lang.String) -> w
    boolean e(java.lang.String) -> e
    boolean di(java.lang.String) -> di
    boolean de(java.lang.String) -> de
    boolean dw(java.lang.String) -> dw
    boolean dd(java.lang.String) -> dd
    net.owan.android.a.g.b.a a(int) -> a
    net.owan.android.a.g.b.a b(int) -> b
    net.owan.android.a.g.b.a c(int) -> c
    net.owan.android.a.g.b.a d(int) -> d
    net.owan.android.a.g.b.a e(int) -> e
    net.owan.android.a.g.b.a f(int) -> f
    net.owan.android.a.g.b.a g(int) -> g
    net.owan.android.a.g.b.a h(int) -> h
net.owan.android.a.g.i -> net.owan.android.a.g.i:
    net.owan.android.a.a.a.a a -> a
    int b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    boolean g -> g
    boolean h -> h
    net.owan.android.a.g.j i -> i
    void a(int) -> a
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    java.lang.String b() -> b
    void b(java.lang.String) -> b
    java.lang.String c() -> c
    void c(java.lang.String) -> c
    boolean d() -> d
    void a(boolean) -> a
    net.owan.android.a.a.a.a e() -> e
    void a(net.owan.android.a.a.a.a) -> a
    net.owan.android.a.g.j f() -> f
    void a(net.owan.android.a.g.j) -> a
    boolean g() -> g
    void b(boolean) -> b
net.owan.android.a.g.j -> net.owan.android.a.g.j:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    java.lang.String b() -> b
    void b(java.lang.String) -> b
    java.lang.String c() -> c
    void c(java.lang.String) -> c
    java.lang.String d() -> d
    void d(java.lang.String) -> d
    boolean e() -> e
    java.lang.String toString() -> toString
net.owan.android.a.g.k -> net.owan.android.a.g.k:
    long serialVersionUID -> serialVersionUID
    boolean canYouHandleThisCatalog(int) -> canYouHandleThisCatalog
    net.owan.android.a.g.b.a getActionHanlder(int,int) -> getActionHanlder
net.owan.android.a.g.l -> net.owan.android.a.g.l:
    int a -> a
    int b -> b
    java.lang.String c -> c
    int d -> d
    int e -> e
    net.owan.android.a.g.k f -> f
    boolean a() -> a
    java.lang.String b() -> b
    int c() -> c
    void a(int) -> a
    void a(java.lang.String) -> a
    void b(int) -> b
    int d() -> d
    int e() -> e
    int f() -> f
    net.owan.android.a.g.k g() -> g
    void a(net.owan.android.a.g.k) -> a
net.owan.android.a.g.m -> net.owan.android.a.g.m:
    java.util.ArrayList a -> a
    java.lang.String b -> b
    void a(java.lang.String) -> a
    boolean a(net.owan.android.a.g.l) -> a
    net.owan.android.a.g.l a(int) -> a
    int a() -> a
net.owan.android.a.g.n -> net.owan.android.a.g.n:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    int e -> e
    void b(java.lang.String) -> b
    java.lang.String h() -> h
    void c(java.lang.String) -> c
    java.lang.String i() -> i
    java.lang.String j() -> j
    int k() -> k
    void d(java.lang.String) -> d
    java.lang.String l() -> l
    void e(java.lang.String) -> e
net.owan.android.a.g.o -> net.owan.android.a.g.o:
    long a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    int d -> d
    boolean e -> e
    void d() -> d
    java.lang.String a() -> a
    long b() -> b
    java.lang.String c() -> c
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
net.owan.android.a.g.p -> net.owan.android.a.g.p:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    double e -> e
    double f -> f
    boolean g -> g
    void c(int) -> c
    int m() -> m
    void d(int) -> d
    int n() -> n
    void e(int) -> e
    int o() -> o
    void f(int) -> f
    int p() -> p
    int a(android.content.Context) -> a
    int b(android.content.Context) -> b
    boolean q() -> q
    void a(boolean) -> a
    double r() -> r
    void a(double) -> a
    double s() -> s
    void b(double) -> b
net.owan.android.a.g.q -> net.owan.android.a.g.q:
    long a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    void a(java.lang.String) -> a
    java.lang.String a() -> a
    java.lang.String serialize() -> serialize
    boolean deserialize(java.lang.String) -> deserialize
    long getValidCacheTime_ms() -> getValidCacheTime_ms
    java.lang.String getCacheKey() -> getCacheKey
net.owan.android.a.g.r -> net.owan.android.a.g.r:
    java.util.Hashtable a -> a
    net.owan.android.a.g.r b -> b
    void a(android.content.Context,android.webkit.WebView,java.lang.String) -> a
    void a(java.lang.String,java.lang.String) -> a
    net.owan.android.a.g.r a() -> a
    java.lang.String a(java.lang.String) -> a
net.owan.android.a.g.s -> net.owan.android.a.g.s:
    java.util.Hashtable a -> a
    net.owan.android.a.g.s b -> b
    void a(android.content.Context,android.webkit.WebView,java.lang.String) -> a
    void a(java.lang.String,java.lang.String) -> a
    net.owan.android.a.g.s a() -> a
    java.lang.String a(java.lang.String) -> a
net.owan.android.a.g.t -> net.owan.android.a.g.t:
    net.owan.android.e.a.g a -> a
    net.owan.android.e.a.g a(android.content.Context) -> a
    boolean a(android.content.Context,java.lang.String,java.lang.String,long) -> a
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String) -> a
net.owan.android.a.g.u -> net.owan.android.a.g.u:
    net.owan.android.e.a.f a -> a
    net.owan.android.e.a.f a(android.content.Context) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    boolean a(android.content.Context,java.lang.String,java.lang.String,long) -> a
net.owan.android.a.g.v -> net.owan.android.a.g.v:
    android.content.Context a -> a
    long b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    long g -> g
    boolean h -> h
    boolean i -> i
    void run() -> run
    int a() -> a
    void a(int) -> a
net.owan.android.a.g.w -> net.owan.android.a.g.w:
    void a(android.content.Context,android.webkit.WebView,java.lang.String) -> a
net.owan.android.a.g.x -> net.owan.android.a.g.x:
    android.content.Context a -> a
    java.lang.String b -> b
    android.webkit.WebView c -> c
    void run() -> run
net.owan.android.a.g.y -> net.owan.android.a.g.y:
net.owan.android.a.h.a -> net.owan.android.a.h.a:
    android.location.Location a -> a
    net.owan.android.a.h.a b -> b
    android.content.Context c -> c
    net.owan.android.a.h.a a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void a(android.location.Location) -> a
    android.location.Location a() -> a
net.owan.android.a.i.a -> net.owan.android.a.i.a:
    int a -> a
    java.lang.String b -> b
    long c -> c
    java.lang.String a() -> a
net.owan.android.a.j.a -> net.owan.android.a.j.a:
    net.owan.android.c.l.a a -> a
    android.view.animation.Animation b -> b
    net.owan.android.a.j.a a(android.content.Context,android.view.View,int) -> a
    void a() -> a
net.owan.android.a.k.a -> net.owan.android.a.k.a:
    android.webkit.WebView a -> a
    java.lang.String b -> b
    void run() -> run
net.owan.android.a.k.a.a -> net.owan.android.a.k.a.a:
    net.owan.android.a.k.a.i a -> a
    android.content.Context b -> b
    android.widget.RelativeLayout d -> d
    android.widget.RelativeLayout e -> e
    net.owan.android.a.g.e c -> c
    net.owan.android.a.g.p f -> f
    int g -> g
    int h -> h
    void a(android.content.Context,net.owan.android.a.g.p,net.owan.android.a.g.e,boolean) -> a
    void a(int) -> a
    void a(int,int,int,int) -> a
    void onBackPressed() -> onBackPressed
    boolean a(java.lang.Runnable) -> a
    net.owan.android.a.g.f a() -> a
    void setWebTitle(java.lang.String) -> setWebTitle
    boolean g() -> g
    boolean a(java.lang.String) -> a
    boolean a(java.lang.String,byte[]) -> a
    boolean h() -> h
    void b() -> b
net.owan.android.a.k.a.b -> net.owan.android.a.k.a.b:
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    net.owan.android.a.k.a.h d -> d
    net.owan.android.a.k.a.f e -> e
    net.owan.android.a.g.e f -> f
    net.owan.android.a.g.b g -> g
    net.owan.android.a.g.e a() -> a
    void a(net.owan.android.a.g.e) -> a
    net.owan.android.a.g.b b() -> b
    void a(net.owan.android.a.g.b) -> a
    int c() -> c
    void a(int) -> a
    java.lang.String d() -> d
    void a(java.lang.String) -> a
    java.lang.String e() -> e
    void b(java.lang.String) -> b
    net.owan.android.a.k.a.f f() -> f
    void a(net.owan.android.a.k.a.f) -> a
    void a(net.owan.android.a.k.a.h) -> a
    net.owan.android.a.k.a.h g() -> g
    android.app.Activity h() -> h
net.owan.android.a.k.a.c -> net.owan.android.a.k.a.c:
    net.owan.android.a.k.a.a a -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
net.owan.android.a.k.a.d -> net.owan.android.a.k.a.d:
    boolean g() -> g
    boolean a(java.lang.String) -> a
    boolean a(java.lang.String,byte[]) -> a
    boolean h() -> h
net.owan.android.a.k.a.e -> net.owan.android.a.k.a.e:
    boolean b() -> b
    boolean c() -> c
    boolean canGoBack() -> canGoBack
    boolean canGoForward() -> canGoForward
    void loadUrl(java.lang.String) -> loadUrl
    void clearHistory() -> clearHistory
    android.view.View getCurrentView() -> getCurrentView
    void reload() -> reload
    void postUrl(java.lang.String,byte[]) -> postUrl
net.owan.android.a.k.a.f -> net.owan.android.a.k.a.f:
    void a(android.webkit.WebView,int) -> a
    void b(android.webkit.WebView,java.lang.String) -> b
net.owan.android.a.k.a.g -> net.owan.android.a.k.a.g:
    void a(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> a
    void a(android.webkit.WebView,int,java.lang.String,java.lang.String) -> a
    void a(android.webkit.WebView,java.lang.String) -> a
net.owan.android.a.k.a.h -> net.owan.android.a.k.a.h:
    boolean c(android.webkit.WebView,java.lang.String) -> c
net.owan.android.a.k.a.i -> net.owan.android.a.k.a.i:
    net.owan.android.a.k.a.e e -> e
    net.owan.android.a.k.a.m f -> f
    net.owan.android.a.k.a.l g -> g
    net.owan.android.a.k.a.g h -> h
    boolean a -> a
    boolean b -> b
    boolean c -> c
    java.lang.String d -> d
    android.widget.RelativeLayout i -> i
    net.owan.android.a.g.d j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    android.content.Context m -> m
    android.view.View d() -> d
    void a(java.lang.String) -> a
    boolean e() -> e
    void reload() -> reload
    void loadUrl(java.lang.String) -> loadUrl
    void postUrl(java.lang.String,byte[]) -> postUrl
    void a(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> a
    void a(android.webkit.WebView,int,java.lang.String,java.lang.String) -> a
    void a(android.webkit.WebView,java.lang.String) -> a
    void a(android.webkit.WebView,int) -> a
    void a(boolean,int) -> a
    void a(net.owan.android.a.k.a.g) -> a
    void b(android.webkit.WebView,java.lang.String) -> b
    boolean b() -> b
    boolean c() -> c
    boolean canGoBack() -> canGoBack
    boolean canGoForward() -> canGoForward
    void clearHistory() -> clearHistory
    android.view.View getCurrentView() -> getCurrentView
    boolean c(android.webkit.WebView,java.lang.String) -> c
    net.owan.android.a.g.f a() -> a
    boolean a(java.lang.Runnable) -> a
    void onClick(android.view.View) -> onClick
net.owan.android.a.k.a.j -> net.owan.android.a.k.a.j:
    boolean a -> a
    boolean b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    net.owan.android.a.k.a.f f -> f
    net.owan.android.a.k.a.h g -> g
    android.content.Context h -> h
    net.owan.android.a.k.a.b i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    void a(android.content.Context,net.owan.android.a.k.a.b,net.owan.android.a.g.g) -> a
    void a() -> a
    void a(net.owan.android.a.g.g,int) -> a
    void a(int) -> a
    void d() -> d
    void a(net.owan.android.a.k.a.h) -> a
    void a(net.owan.android.a.k.a.f) -> a
    void setEnableOffersJsCodeLoader(boolean) -> setEnableOffersJsCodeLoader
    void setEnableOffersJsFileLoader(boolean) -> setEnableOffersJsFileLoader
    void a(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> a
    void a(android.webkit.WebView,int,java.lang.String,java.lang.String) -> a
    void a(android.webkit.WebView,java.lang.String) -> a
    void a(android.webkit.WebView,int) -> a
    void a(java.lang.String,java.lang.String) -> a
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    void b(android.webkit.WebView,java.lang.String) -> b
    boolean b() -> b
    boolean c() -> c
    android.view.View getCurrentView() -> getCurrentView
    boolean c(android.webkit.WebView,java.lang.String) -> c
    void setUserAgentString(java.lang.String) -> setUserAgentString
    java.lang.String getUserAgentString() -> getUserAgentString
    void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    android.content.Context a(net.owan.android.a.k.a.j) -> a
net.owan.android.a.k.a.k -> net.owan.android.a.k.a.k:
    net.owan.android.a.k.a.j a -> a
    void onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long) -> onDownloadStart
net.owan.android.a.k.a.l -> net.owan.android.a.k.a.l:
    android.widget.TextView a -> a
    android.widget.Button b -> b
    android.widget.Button c -> c
    void setErrTips(java.lang.String) -> setErrTips
    android.widget.TextView getTipsView() -> getTipsView
    android.widget.Button getSetNetworkButton() -> getSetNetworkButton
    android.widget.Button getRefreshButton() -> getRefreshButton
net.owan.android.a.k.a.m -> net.owan.android.a.k.a.m:
    android.widget.ProgressBar a -> a
    android.widget.TextView b -> b
    net.owan.android.a.k.a.o c -> c
    android.widget.LinearLayout d -> d
    void a(java.lang.String) -> a
    net.owan.android.a.k.a.o getStyleConfig() -> getStyleConfig
net.owan.android.a.k.a.n -> net.owan.android.a.k.a.n:
net.owan.android.a.k.a.o -> net.owan.android.a.k.a.o:
    net.owan.android.a.k.a.m a -> a
    float b -> b
    int c -> c
    android.graphics.drawable.Drawable d -> d
    int e -> e
    int f -> f
    net.owan.android.a.k.a.o a(int) -> a
    net.owan.android.a.k.a.o a(float) -> a
    net.owan.android.a.k.a.o a(android.graphics.drawable.Drawable) -> a
    net.owan.android.a.k.a.o b(int) -> b
net.owan.android.b -> net.owan.android.b:
    int a -> a
    int b -> b
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
net.owan.android.b.a.a -> net.owan.android.b.a.a:
    char[] b -> b
    int[] c -> c
    char[] a -> a
    java.lang.String a(byte[],java.lang.String,int) -> a
    java.lang.String a(int) -> a
    java.lang.String a(java.lang.String) -> a
    int a(char) -> a
    char b(int) -> b
net.owan.android.b.a.b -> net.owan.android.b.a.b:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    boolean f -> f
    java.lang.String f() -> f
    java.lang.String a(android.content.Context) -> a
    java.lang.String a(java.lang.String) -> a
    boolean g() -> g
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    boolean e() -> e
net.owan.android.b.a.c -> net.owan.android.b.a.c:
    void a(java.lang.String,java.io.ByteArrayOutputStream) -> a
net.owan.android.b.b.a -> net.owan.android.b.b.a:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    int d -> d
    int e -> e
    java.lang.String f -> f
    boolean g -> g
    java.lang.String a() -> a
    java.lang.String a(android.content.Context) -> a
    void a(android.content.Context,java.lang.String) -> a
    java.lang.String b(android.content.Context) -> b
    void b(android.content.Context,java.lang.String) -> b
    boolean c(android.content.Context) -> c
    java.lang.String d(android.content.Context) -> d
    int e(android.content.Context) -> e
    int f(android.content.Context) -> f
    java.lang.String g(android.content.Context) -> g
    boolean b() -> b
net.owan.android.b.b.b -> net.owan.android.b.b.b:
    boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String b(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> b
net.owan.android.c -> net.owan.android.c:
    void onHandleIntent(android.content.Intent) -> onHandleIntent
net.owan.android.c.a -> net.owan.android.c.a:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    int f -> f
    int g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String a() -> a
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    java.lang.String k(android.content.Context) -> k
    java.lang.String c(android.content.Context) -> c
    java.lang.String l(android.content.Context) -> l
    java.lang.String d(android.content.Context) -> d
    java.lang.String e(android.content.Context) -> e
    java.lang.String f(android.content.Context) -> f
    void a(android.content.Context,java.lang.String) -> a
    java.lang.String g(android.content.Context) -> g
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    void h(android.content.Context) -> h
    java.lang.String i(android.content.Context) -> i
    int j(android.content.Context) -> j
net.owan.android.c.a.a -> net.owan.android.c.a.a:
    android.view.animation.Animation a(android.content.Context,int) -> a
    android.view.animation.AnimationSet a(android.content.Context,int,int,int) -> a
net.owan.android.c.b.a -> net.owan.android.c.b.a:
    char[] a -> a
    char[] b -> b
    byte a(char) -> a
    java.lang.String a(byte[]) -> a
net.owan.android.c.b.b -> net.owan.android.c.b.b:
    org.json.JSONObject a(java.lang.String) -> a
    java.lang.String a(org.json.JSONObject,java.lang.String,java.lang.String) -> a
    boolean a(org.json.JSONObject,java.lang.String,boolean) -> a
    java.lang.String a(org.json.JSONArray,int,java.lang.String) -> a
    int a(org.json.JSONObject,java.lang.String,int) -> a
    long a(org.json.JSONObject,java.lang.String,long) -> a
    double a(org.json.JSONObject,java.lang.String,double) -> a
    org.json.JSONObject a(org.json.JSONObject,java.lang.String,org.json.JSONObject) -> a
    org.json.JSONObject a(org.json.JSONArray,int,org.json.JSONObject) -> a
    org.json.JSONArray a(org.json.JSONObject,java.lang.String,org.json.JSONArray) -> a
net.owan.android.c.b.c -> net.owan.android.c.b.c:
    java.util.Properties a(android.content.Context,java.lang.String) -> a
    boolean a(android.content.Context,java.util.Properties,java.lang.String) -> a
net.owan.android.c.b.d -> net.owan.android.c.b.d:
    java.util.Random a -> a
    int a(int) -> a
    java.lang.String b(int) -> b
net.owan.android.c.b.e -> net.owan.android.c.b.e:
    boolean a(java.lang.String) -> a
    java.lang.String a() -> a
    java.lang.String b(java.lang.String) -> b
net.owan.android.c.c.a -> net.owan.android.c.c.a:
    byte[] a(java.lang.String) -> a
    byte[] a(byte[]) -> a
    byte[] a(byte[],int) -> a
    byte[] b(byte[]) -> b
    void a(java.io.InputStream,java.io.OutputStream,int) -> a
    void a(java.io.InputStream,java.io.OutputStream) -> a
    void b(java.io.InputStream,java.io.OutputStream) -> b
net.owan.android.c.c.b -> net.owan.android.c.c.b:
    java.io.InputStream a -> a
    int[] b -> b
    int c -> c
    boolean d -> d
    int read() -> read
    void a() -> a
    void close() -> close
net.owan.android.c.c.c -> net.owan.android.c.c.c:
    java.io.OutputStream a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    void write(int) -> write
    void close() -> close
    void a() -> a
net.owan.android.c.c.d -> net.owan.android.c.c.d:
    java.lang.String a -> a
    char b -> b
net.owan.android.c.c.e -> net.owan.android.c.c.e:
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(byte[]) -> a
    java.lang.String a(java.io.File) -> a
    boolean a(java.io.File,java.lang.String) -> a
net.owan.android.c.c.f -> net.owan.android.c.c.f:
    byte[] a() -> a
    java.security.Key a(java.lang.String) -> a
    byte[] a(byte[],java.lang.String,byte[]) -> a
    java.lang.String a(java.lang.String,java.lang.String,byte[]) -> a
    byte[] b(byte[],java.lang.String,byte[]) -> b
    java.lang.String b(java.lang.String,java.lang.String,byte[]) -> b
net.owan.android.c.c.g -> net.owan.android.c.c.g:
    java.lang.String a(java.lang.String,java.lang.String) -> a
    java.lang.String b(java.lang.String,java.lang.String) -> b
net.owan.android.c.c.h -> net.owan.android.c.c.h:
    java.lang.String a(java.lang.String) -> a
net.owan.android.c.d.a -> net.owan.android.c.d.a:
    java.lang.String a -> a
    boolean b -> b
    java.lang.String a() -> a
    void a(boolean) -> a
    void a(java.lang.String) -> a
    void a(java.lang.String,java.lang.Object[]) -> a
    void a(java.lang.String,java.lang.Throwable) -> a
    void a(java.lang.Throwable) -> a
    void b(java.lang.String,java.lang.Object[]) -> b
    void c(java.lang.String,java.lang.Object[]) -> c
    void b(java.lang.Throwable) -> b
    void d(java.lang.String,java.lang.Object[]) -> d
    void a(int,java.lang.String,java.lang.String,java.lang.Object[]) -> a
    void a(int,java.lang.String,java.lang.String,java.lang.Throwable) -> a
net.owan.android.c.d.b -> net.owan.android.c.d.b:
    java.lang.String a -> a
    java.lang.String a() -> a
    void a(java.lang.String,java.lang.Throwable) -> a
    void a(java.lang.String) -> a
    void a(java.lang.Throwable) -> a
    void a(java.lang.String,java.lang.String,java.lang.Object[]) -> a
net.owan.android.c.d.c -> net.owan.android.c.d.c:
    java.util.Hashtable a -> a
    java.lang.String a() -> a
    void a(java.lang.String) -> a
net.owan.android.c.e.a -> net.owan.android.c.e.a:
    long a -> a
    long b -> b
    java.io.File c -> c
    void b() -> b
    java.io.File[] a() -> a
    java.lang.String a(java.lang.String) -> a
    java.io.File b(java.lang.String) -> b
    boolean c(java.lang.String) -> c
    boolean a(java.io.File) -> a
    void c() -> c
    java.io.File a(net.owan.android.c.e.a) -> a
    boolean a(net.owan.android.c.e.a,java.io.File) -> a
    long b(net.owan.android.c.e.a) -> b
net.owan.android.c.e.b -> net.owan.android.c.e.b:
    net.owan.android.c.e.a a -> a
    void run() -> run
net.owan.android.c.e.c -> net.owan.android.c.e.c:
    net.owan.android.c.e.a a -> a
    int a(java.io.File,java.io.File) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
net.owan.android.c.f.a -> net.owan.android.c.f.a:
    org.apache.http.client.methods.HttpUriRequest a -> a
    long b -> b
    org.apache.http.client.HttpClient c -> c
    net.owan.android.c.f.b d -> d
    net.owan.android.c.f.c e -> e
    android.content.Context f -> f
    long a() -> a
    void a(net.owan.android.c.f.b) -> a
    void b() -> b
    void a(org.apache.http.HttpResponse) -> a
    void c() -> c
    void a(org.apache.http.HttpResponse,long) -> a
    org.apache.http.HttpResponse d() -> d
    void a(int) -> a
net.owan.android.c.f.b -> net.owan.android.c.f.b:
    org.apache.http.Header[] a -> a
    int b -> b
    int c -> c
    java.lang.String d -> d
    long e -> e
    long f -> f
    boolean g -> g
    boolean h -> h
    org.apache.http.Header[] i -> i
    int a() -> a
    void a(int) -> a
    org.apache.http.Header[] b() -> b
    void a(org.apache.http.Header[]) -> a
    int c() -> c
    void b(int) -> b
    void a(java.lang.String) -> a
    long d() -> d
    void a(long) -> a
    long e() -> e
    void b(long) -> b
    boolean f() -> f
    void a(boolean) -> a
    org.apache.http.Header[] g() -> g
    void b(org.apache.http.Header[]) -> b
net.owan.android.c.f.c -> net.owan.android.c.f.c:
    java.lang.String a -> a
    boolean b -> b
    java.util.List c -> c
    java.util.List d -> d
    java.lang.String e -> e
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    boolean b() -> b
    void a(boolean) -> a
    java.util.List c() -> c
    void a(java.util.List) -> a
    java.util.List d() -> d
    void b(java.util.List) -> b
    java.lang.String e() -> e
net.owan.android.c.f.d -> net.owan.android.c.f.d:
    java.lang.String g -> g
    void a(org.apache.http.HttpResponse) -> a
    void b() -> b
    java.lang.String d() -> d
    java.lang.String a(android.content.Context,org.apache.http.HttpResponse,java.lang.String,boolean) -> a
net.owan.android.c.f.e -> net.owan.android.c.f.e:
    java.lang.String a -> a
    int b -> b
    java.lang.String c -> c
    int d -> d
    java.lang.String e -> e
    int f -> f
    java.lang.String g -> g
    int h -> h
    long i -> i
    void a(android.content.Context) -> a
    boolean a(java.lang.String) -> a
    void a(android.content.Context,org.json.JSONObject) -> a
net.owan.android.c.f.f -> net.owan.android.c.f.f:
    void a(android.content.Context,org.json.JSONObject,java.lang.String,int) -> a
net.owan.android.c.f.g -> net.owan.android.c.f.g:
    void a(android.content.Context,org.json.JSONObject,java.lang.String,int) -> a
net.owan.android.c.g.a -> net.owan.android.c.g.a:
    void a(java.lang.String) -> a
net.owan.android.c.g.b -> net.owan.android.c.g.b:
    java.lang.String a(android.content.Context) -> a
net.owan.android.c.g.c -> net.owan.android.c.g.c:
    android.content.Context a -> a
    long b -> b
    long c -> c
    boolean d -> d
    java.lang.String e -> e
    java.io.File f -> f
    int a() -> a
    long b() -> b
    int c() -> c
    long d() -> d
net.owan.android.c.g.d -> net.owan.android.c.g.d:
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.lang.String a(android.content.Context,java.lang.String,java.util.List) -> a
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String) -> a
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String,boolean,org.apache.http.Header[]) -> a
    java.lang.String a(android.content.Context,java.lang.String,java.util.List,java.lang.String,org.apache.http.Header[]) -> a
net.owan.android.c.g.e -> net.owan.android.c.g.e:
    net.owan.android.c.f.b a -> a
    net.owan.android.c.f.d b -> b
    android.content.Context c -> c
    net.owan.android.c.f.c d -> d
    void run() -> run
net.owan.android.c.g.f -> net.owan.android.c.g.f:
    net.owan.android.c.f.b a -> a
    net.owan.android.c.f.d b -> b
    android.content.Context c -> c
    net.owan.android.c.f.c d -> d
    java.util.List e -> e
    void run() -> run
net.owan.android.c.g.g -> net.owan.android.c.g.g:
    java.lang.String a -> a
    java.lang.String a() -> a
    org.apache.http.params.HttpParams a(android.content.Context) -> a
    org.apache.http.impl.client.DefaultHttpClient b(android.content.Context) -> b
    org.apache.http.impl.client.DefaultHttpClient a(android.content.Context,net.owan.android.c.g.a) -> a
    boolean a(java.lang.String,java.lang.String) -> a
    long a(android.content.Context,java.lang.String) -> a
net.owan.android.c.g.h -> net.owan.android.c.g.h:
    void a(java.lang.String) -> a
net.owan.android.c.g.i -> net.owan.android.c.g.i:
    net.owan.android.c.g.a a -> a
    boolean isRedirectRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isRedirectRequested
    java.net.URI getLocationURI(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getLocationURI
net.owan.android.c.g.j -> net.owan.android.c.g.j:
    boolean a(android.content.Context) -> a
    boolean b(android.content.Context) -> b
net.owan.android.c.h.a -> net.owan.android.c.h.a:
    byte[] a -> a
    android.graphics.drawable.NinePatchDrawable a(android.content.Context) -> a
net.owan.android.c.h.b -> net.owan.android.c.h.b:
    android.graphics.Bitmap b -> b
net.owan.android.c.i.a -> net.owan.android.c.i.a:
    net.owan.android.c.i.a a -> a
    android.os.Handler b -> b
    net.owan.android.c.i.a a() -> a
    boolean b() -> b
    boolean a(java.lang.Runnable) -> a
net.owan.android.c.j.a -> net.owan.android.c.j.a:
    java.lang.String a -> a
    java.lang.String b -> b
    int c -> c
    java.lang.String a() -> a
    java.lang.String b() -> b
    int c() -> c
net.owan.android.c.j.b -> net.owan.android.c.j.b:
    long a() -> a
    long a(android.content.Context) -> a
net.owan.android.c.j.c -> net.owan.android.c.j.c:
    boolean a -> a
    int b -> b
    int c -> c
    float d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    boolean a() -> a
    int b() -> b
    int c() -> c
    int d() -> d
    float e() -> e
    net.owan.android.c.j.c a(android.content.Context) -> a
    net.owan.android.c.j.c b(android.content.Context) -> b
    int f() -> f
    int g() -> g
    int a(int) -> a
    float a(float) -> a
net.owan.android.c.j.d -> net.owan.android.c.j.d:
    boolean a(java.io.File,java.lang.String) -> a
net.owan.android.c.j.e -> net.owan.android.c.j.e:
    boolean a(android.content.Context,java.lang.String,int,java.lang.String) -> a
    boolean a(android.content.Context,java.lang.String,int) -> a
    boolean b(android.content.Context,java.lang.String,int) -> b
    boolean c(android.content.Context,java.lang.String,int) -> c
    boolean d(android.content.Context,java.lang.String,int) -> d
    android.content.Intent a(android.content.Context,java.lang.String) -> a
    boolean b(android.content.Context,java.lang.String) -> b
    boolean b(android.content.Context,java.lang.String,int,java.lang.String) -> b
    boolean c(android.content.Context,java.lang.String) -> c
net.owan.android.c.j.f -> net.owan.android.c.j.f:
    void a(android.content.Context) -> a
    android.content.Intent a(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
net.owan.android.c.j.g -> net.owan.android.c.j.g:
    net.owan.android.c.j.a a(android.content.Context,java.lang.String) -> a
    android.content.pm.PackageInfo b(android.content.Context,java.lang.String) -> b
    int a(android.content.Context,java.lang.String,int) -> a
    android.content.Intent c(android.content.Context,java.lang.String) -> c
    android.content.Intent d(android.content.Context,java.lang.String) -> d
    void e(android.content.Context,java.lang.String) -> e
    void f(android.content.Context,java.lang.String) -> f
net.owan.android.c.j.h -> net.owan.android.c.j.h:
    boolean a(android.content.Context,java.lang.String) -> a
    boolean a(android.content.Context) -> a
    boolean b(android.content.Context) -> b
    boolean c(android.content.Context) -> c
    boolean d(android.content.Context) -> d
    boolean e(android.content.Context) -> e
    boolean f(android.content.Context) -> f
    boolean g(android.content.Context) -> g
    boolean h(android.content.Context) -> h
net.owan.android.c.j.i -> net.owan.android.c.j.i:
    boolean a(android.content.Context) -> a
net.owan.android.c.j.j -> net.owan.android.c.j.j:
    boolean a() -> a
    boolean a(android.content.Context) -> a
    boolean a(android.content.Context,long) -> a
    long b() -> b
    java.lang.String c() -> c
    long b(android.content.Context) -> b
net.owan.android.c.k.a -> net.owan.android.c.k.a:
    java.util.List a -> a
    java.util.List b() -> b
    void a(java.lang.Object) -> a
net.owan.android.c.l.a -> net.owan.android.c.l.a:
    android.view.WindowManager a -> a
    android.view.WindowManager$LayoutParams b -> b
    android.widget.LinearLayout c -> c
    android.view.View d -> d
    boolean a() -> a
    boolean b() -> b
    void a(android.view.animation.Animation) -> a
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
net.owan.android.d.a -> net.owan.android.d.a:
    net.owan.android.f.a d -> d
    net.owan.android.d.b e -> e
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreatePanelView(int) -> onCreatePanelView
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    void onWindowAttributesChanged(android.view.WindowManager$LayoutParams) -> onWindowAttributesChanged
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    android.os.Bundle onSaveInstanceState() -> onSaveInstanceState
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    void onContentChanged() -> onContentChanged
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void a(android.content.Context,net.owan.android.a.g.p) -> a
    net.owan.android.d.a b(android.content.Context,net.owan.android.a.g.p) -> b
    void onClick(android.view.View) -> onClick
net.owan.android.d.a.a -> net.owan.android.d.a.a:
    net.owan.android.d.a.a d -> d
    net.owan.android.d.a.e a -> a
    net.owan.android.d.a.d b -> b
    android.util.SparseArray e -> e
    android.util.SparseArray f -> f
    net.owan.android.d.a.a a(android.content.Context) -> a
    void b(net.owan.android.e.b.b) -> b
    void a(net.owan.android.e.b.b,java.io.File) -> a
    void c(net.owan.android.e.b.b) -> c
    void a(int) -> a
    java.lang.String a(java.io.File) -> a
    void b(net.owan.android.e.b.b,java.io.File) -> b
    void d(java.lang.String) -> d
    void d() -> d
    void a(java.lang.String,net.owan.android.a.g.i,net.owan.android.e.b.b) -> a
    void b(java.io.File) -> b
    void a(net.owan.android.a.g.i,net.owan.android.a.g.o) -> a
    net.owan.android.a.g.j l(net.owan.android.e.b.b) -> l
    net.owan.android.a.g.o d(net.owan.android.e.b.b) -> d
    net.owan.android.a.g.i e(net.owan.android.e.b.b) -> e
    boolean a(java.lang.String) -> a
    boolean a(java.lang.String,java.lang.String) -> a
    int f(net.owan.android.e.b.b) -> f
    android.content.Context a(net.owan.android.d.a.a) -> a
    android.content.Context b(net.owan.android.d.a.a) -> b
net.owan.android.d.a.b -> net.owan.android.d.a.b:
    java.lang.String a -> a
    net.owan.android.d.a.a b -> b
    void run() -> run
net.owan.android.d.a.c -> net.owan.android.d.a.c:
    int a -> a
    android.app.Notification b -> b
    android.app.PendingIntent c -> c
    android.app.PendingIntent d -> d
    android.app.NotificationManager e -> e
    android.content.Context f -> f
    net.owan.android.a.a.a.g g -> g
    net.owan.android.a.a.a.a h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    void b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    boolean e() -> e
    boolean f() -> f
    boolean g() -> g
    boolean c(java.lang.String) -> c
    void a(int,long) -> a
    void a(java.lang.String) -> a
    void a() -> a
    void b(java.lang.String) -> b
net.owan.android.d.a.d -> net.owan.android.d.a.d:
    net.owan.android.d.a.a a -> a
    android.content.Context b -> b
    java.util.HashMap c -> c
    void a(net.owan.android.e.b.b,java.io.File) -> a
    void a(net.owan.android.e.b.b) -> a
    void b(net.owan.android.e.b.b) -> b
    void a(net.owan.android.e.b.b,long,long,int,long) -> a
    net.owan.android.d.a.c d(net.owan.android.e.b.b) -> d
    int c(net.owan.android.e.b.b) -> c
    void a(android.content.Context,int,java.lang.String) -> a
net.owan.android.d.a.e -> net.owan.android.d.a.e:
    net.owan.android.d.a.a a -> a
    void a(net.owan.android.e.b.b,java.io.File) -> a
    void a(net.owan.android.e.b.b) -> a
    void b(net.owan.android.e.b.b) -> b
    void a(net.owan.android.e.b.b,long,long,int,long) -> a
    void a(net.owan.android.a.g.i,net.owan.android.a.g.o) -> a
    void a(net.owan.android.e.b.b,int,int,long) -> a
    void a(net.owan.android.a.g.i,net.owan.android.a.g.o,int,int,long) -> a
net.owan.android.d.a.f -> net.owan.android.d.a.f:
    net.owan.android.b a -> a
    void a(android.content.Context) -> a
net.owan.android.d.a.g -> net.owan.android.d.a.g:
    java.lang.String a -> a
    android.content.Context b -> b
    int c -> c
    int d -> d
    java.lang.String e -> e
    void a(android.content.Context) -> a
    void run() -> run
net.owan.android.d.a.h -> net.owan.android.d.a.h:
    int a -> a
    int b -> b
    org.json.JSONObject a() -> a
    boolean a(org.json.JSONObject) -> a
    int b() -> b
    void a(int) -> a
    int c() -> c
    void b(int) -> b
net.owan.android.d.a.i -> net.owan.android.d.a.i:
    net.owan.android.d.a.i a -> a
    net.owan.android.a.a.c a() -> a
    net.owan.android.d.a.i b() -> b
net.owan.android.d.b -> net.owan.android.d.b:
    void a() -> a
net.owan.android.d.b.a -> net.owan.android.d.b.a:
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.lang.String a(android.content.Context,net.owan.android.a.g.j,int) -> a
    java.lang.String a(android.content.Context,net.owan.android.a.g.j) -> a
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String,int) -> a
    java.lang.String a(android.content.Context,int,java.lang.String) -> a
net.owan.android.d.c -> net.owan.android.d.c:
    android.app.Activity a -> a
    net.owan.android.a.g.p b -> b
    void run() -> run
net.owan.android.d.c.a.a -> net.owan.android.d.c.a.a:
    void a(android.content.Context) -> a
    void a(android.content.Intent) -> a
net.owan.android.d.c.a.b -> net.owan.android.d.c.a.b:
    android.content.Context a -> a
    int b -> b
    java.lang.String c -> c
    void a(android.content.Context,java.util.List) -> a
    void a(android.content.Context,int) -> a
    void run() -> run
    java.lang.String a() -> a
net.owan.android.d.c.a.c -> net.owan.android.d.c.a.c:
    android.content.Context a -> a
    net.owan.android.a.g.j b -> b
    int[] c -> c
    void run() -> run
net.owan.android.d.d.a -> net.owan.android.d.d.a:
    java.util.HashMap a -> a
    java.util.HashMap b -> b
    java.util.HashMap c -> c
    java.util.HashMap b() -> b
    java.util.HashMap c() -> c
    java.util.HashMap d() -> d
    java.util.HashMap a() -> a
net.owan.android.d.d.a.a -> net.owan.android.d.d.a.a:
    android.graphics.drawable.NinePatchDrawable a(android.content.Context) -> a
net.owan.android.d.e.a -> net.owan.android.d.e.a:
    android.content.Context a -> a
    void a(java.lang.String,int,int) -> a
net.owan.android.d.f.a -> net.owan.android.d.f.a:
    android.app.Activity a -> a
    android.content.Context b -> b
    net.owan.android.a.k.a.d c -> c
    net.owan.android.a.g.l d -> d
    android.content.Context getApplicationContext() -> getApplicationContext
    android.app.Activity getActivity() -> getActivity
    android.content.Context a() -> a
    net.owan.android.a.g.f js_SDK_Handler_CloseCurrentWindow() -> js_SDK_Handler_CloseCurrentWindow
    int js_SDK_Handler_GetSdkVersion() -> js_SDK_Handler_GetSdkVersion
    int js_SDK_Handler_GetSdkID() -> js_SDK_Handler_GetSdkID
    java.lang.String js_SDK_Handler_GetGwExtendUrl_RandomKey(java.lang.String,java.lang.String) -> js_SDK_Handler_GetGwExtendUrl_RandomKey
    java.lang.String js_SDK_Handler_GetGwExtendUrl_RSD(net.owan.android.a.g.j) -> js_SDK_Handler_GetGwExtendUrl_RSD
    net.owan.android.a.g.f js_SDK_Handler_ReloadPage() -> js_SDK_Handler_ReloadPage
    net.owan.android.a.g.f js_SDK_Handler_Browser(net.owan.android.a.g.m) -> js_SDK_Handler_Browser
    net.owan.android.a.g.f js_SDK_Handler_BrowserInDialogOnScreen_RunOnUiThread(net.owan.android.a.g.p) -> js_SDK_Handler_BrowserInDialogOnScreen_RunOnUiThread
    net.owan.android.a.g.f js_SDK_Handler_BrowserInDialog_RunOnUiThread(net.owan.android.a.g.p) -> js_SDK_Handler_BrowserInDialog_RunOnUiThread
    net.owan.android.a.g.f js_SDK_Handler_AsyncStartAppDownload(net.owan.android.a.g.i,net.owan.android.a.g.o) -> js_SDK_Handler_AsyncStartAppDownload
    net.owan.android.a.g.f js_SDK_Handler_AsyncResponseGwAppsLog(android.content.Context,java.util.List) -> js_SDK_Handler_AsyncResponseGwAppsLog
    net.owan.android.a.g.f js_Sdk_Handler_TrackEvent(java.lang.String,java.lang.String,java.lang.String,long) -> js_Sdk_Handler_TrackEvent
    net.owan.android.a.g.f js_Sdk_Handler_TrackView(java.lang.String) -> js_Sdk_Handler_TrackView
    net.owan.android.a.g.f js_Sdk_Handler_AsyncSendEffLog(int,net.owan.android.a.g.j) -> js_Sdk_Handler_AsyncSendEffLog
    void setSdkHandlerProxy(net.owan.android.a.k.a.d) -> setSdkHandlerProxy
    net.owan.android.a.g.f js_SDK_Handler_CopyBrowser(net.owan.android.a.g.n) -> js_SDK_Handler_CopyBrowser
net.owan.android.d.f.b -> net.owan.android.d.f.b:
    net.owan.android.d.f.a a -> a
    void run() -> run
net.owan.android.d.f.c -> net.owan.android.d.f.c:
    net.owan.android.d.f.a a -> a
    void run() -> run
net.owan.android.d.f.d -> net.owan.android.d.f.d:
    net.owan.android.d.f.a a -> a
    void run() -> run
net.owan.android.d.f.e -> net.owan.android.d.f.e:
    net.owan.android.a.g.i a -> a
    net.owan.android.a.g.o b -> b
    net.owan.android.d.f.a c -> c
    void run() -> run
net.owan.android.e.a.a -> net.owan.android.e.a.a:
    java.lang.String serialize() -> serialize
    boolean deserialize(java.lang.String) -> deserialize
    long getValidCacheTime_ms() -> getValidCacheTime_ms
    java.lang.String getCacheKey() -> getCacheKey
net.owan.android.e.a.b -> net.owan.android.e.a.b:
    java.lang.String a -> a
    net.owan.android.e.a.d b -> b
    java.lang.String a() -> a
    net.owan.android.e.a.d b() -> b
    byte[] a(byte[],java.lang.String,int) -> a
    boolean a(android.content.Context,java.lang.String,byte[],long,int) -> a
    byte[] a(android.content.Context,java.lang.String,int) -> a
    boolean a(java.lang.String) -> a
net.owan.android.e.a.c -> net.owan.android.e.a.c:
    byte[] a(byte[],java.lang.String) -> a
    byte[] b(byte[],java.lang.String) -> b
net.owan.android.e.a.d -> net.owan.android.e.a.d:
    net.owan.android.e.a.d a -> a
    net.owan.android.e.a.d b -> b
    net.owan.android.e.a.d c -> c
    java.lang.String d -> d
    int e -> e
    android.database.sqlite.SQLiteDatabase f -> f
    net.owan.android.e.a.d c(android.content.Context) -> c
    net.owan.android.e.a.d d(android.content.Context) -> d
    net.owan.android.e.a.d e(android.content.Context) -> e
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    java.lang.String b() -> b
    java.lang.String c(java.lang.String) -> c
    boolean a(java.lang.String,byte[],long) -> a
    boolean a(java.util.List) -> a
    java.lang.String[] a() -> a
    byte[] a(java.lang.String) -> a
    void a(android.content.ContentValues,java.lang.String,java.lang.String) -> a
    void a(android.content.ContentValues,java.lang.String,byte[]) -> a
    void a(android.content.ContentValues,java.lang.String,long) -> a
    boolean a(java.lang.String,java.lang.String,java.lang.String) -> a
    boolean a(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String) -> a
    boolean a(android.content.ContentValues,java.lang.String,java.lang.String,java.lang.String) -> a
    int a(android.database.sqlite.SQLiteDatabase,android.content.ContentValues,java.lang.String,java.lang.String,java.lang.String) -> a
    boolean a(android.content.ContentValues,java.lang.String) -> a
    int a(android.database.sqlite.SQLiteDatabase,android.content.ContentValues,java.lang.String) -> a
    boolean b(java.lang.String) -> b
    boolean d(java.lang.String) -> d
    void close() -> close
net.owan.android.e.a.e -> net.owan.android.e.a.e:
    java.lang.String a -> a
    byte[] b -> b
    long c -> c
    byte[] a() -> a
    java.lang.String b() -> b
    long c() -> c
net.owan.android.e.a.f -> net.owan.android.e.a.f:
    net.owan.android.e.a.g a -> a
    int a() -> a
    net.owan.android.e.a.d b() -> b
    java.lang.String c(java.lang.String) -> c
    boolean a(net.owan.android.e.a.a) -> a
    java.lang.String[] c() -> c
    java.lang.String d() -> d
    boolean b(net.owan.android.e.a.a) -> b
    boolean d(java.lang.String) -> d
net.owan.android.e.a.g -> net.owan.android.e.a.g:
    net.owan.android.e.a.b a -> a
    android.content.Context b -> b
    int c -> c
    java.lang.String a() -> a
    net.owan.android.e.a.d b() -> b
    boolean a(java.lang.String,java.lang.String,long) -> a
    java.lang.String a(java.lang.String,java.lang.String) -> a
    boolean a(java.lang.String) -> a
    int c() -> c
net.owan.android.e.b.a -> net.owan.android.e.b.a:
net.owan.android.e.b.a.a -> net.owan.android.e.b.a.a:
    boolean b(java.lang.String) -> b
    void b(net.owan.android.e.b.b) -> b
    void j(net.owan.android.e.b.b) -> j
    void a(net.owan.android.e.b.b,java.io.File) -> a
    void f(net.owan.android.e.b.b,java.io.File) -> f
    void c(net.owan.android.e.b.b) -> c
    void k(net.owan.android.e.b.b) -> k
    void b(net.owan.android.e.b.b,java.io.File) -> b
    void g(net.owan.android.e.b.b,java.io.File) -> g
    void a(net.owan.android.e.b.c,net.owan.android.e.b.b,java.io.File) -> a
    void a(net.owan.android.e.b.c,net.owan.android.e.b.b) -> a
    void a(net.owan.android.e.b.c,net.owan.android.e.b.b,long,long,int,long) -> a
    void b(net.owan.android.e.b.c,net.owan.android.e.b.b) -> b
    void b(net.owan.android.e.b.c,net.owan.android.e.b.b,java.io.File) -> b
    void a(java.lang.Object,net.owan.android.e.b.b,long,long,int,long) -> a
    void a(java.lang.Object,net.owan.android.e.b.b,java.io.File) -> a
    void a(java.lang.Object,net.owan.android.e.b.b) -> a
    void b(java.lang.Object,net.owan.android.e.b.b,java.io.File) -> b
    void b(java.lang.Object,net.owan.android.e.b.b) -> b
net.owan.android.e.b.a.b -> net.owan.android.e.b.a.b:
    android.content.Context a -> a
    net.owan.android.c.e.a b -> b
    java.util.HashMap c -> c
    java.util.HashSet d -> d
    android.graphics.Bitmap a(java.lang.String) -> a
    android.graphics.Bitmap a(net.owan.android.e.b.b) -> a
    android.graphics.Bitmap a(java.io.File) -> a
    boolean a(net.owan.android.e.b.b,android.graphics.Bitmap) -> a
    void i(net.owan.android.e.b.b) -> i
    void a(net.owan.android.e.b.b,long,long,int,long) -> a
    void h(net.owan.android.e.b.b) -> h
    void d(net.owan.android.e.b.b,java.io.File) -> d
    void e(net.owan.android.e.b.b,java.io.File) -> e
    boolean c(net.owan.android.e.b.b,java.io.File) -> c
    boolean g(net.owan.android.e.b.b) -> g
net.owan.android.e.b.a.c -> net.owan.android.e.b.a.c:
    java.util.HashSet a -> a
    java.util.HashMap b -> b
    java.util.HashMap d -> d
    java.util.HashSet e -> e
    android.content.Context c -> c
    android.content.Context c() -> c
    boolean a(java.lang.String) -> a
    boolean a(java.lang.String,java.lang.String) -> a
    java.io.File a(net.owan.android.e.b.b,java.lang.String) -> a
    net.owan.android.c.e.a a(net.owan.android.e.b.b) -> a
    net.owan.android.e.b.d a() -> a
    boolean b(java.lang.String) -> b
    boolean c(java.lang.String) -> c
    void j(net.owan.android.e.b.b) -> j
    void b(java.lang.Object,net.owan.android.e.b.b) -> b
    void h(net.owan.android.e.b.b) -> h
    void f(net.owan.android.e.b.b,java.io.File) -> f
    void d(net.owan.android.e.b.b,java.io.File) -> d
    void b(java.lang.Object,net.owan.android.e.b.b,java.io.File) -> b
    void k(net.owan.android.e.b.b) -> k
    void a(java.lang.Object,net.owan.android.e.b.b) -> a
    void i(net.owan.android.e.b.b) -> i
    void g(net.owan.android.e.b.b,java.io.File) -> g
    void a(java.lang.Object,net.owan.android.e.b.b,java.io.File) -> a
    void e(net.owan.android.e.b.b,java.io.File) -> e
    void a(java.lang.Object,net.owan.android.e.b.b,long,long,int,long) -> a
    void a(net.owan.android.e.b.b,long,long,int,long) -> a
    void a(net.owan.android.e.b.a.g,net.owan.android.e.b.b,java.lang.String,java.lang.String,java.lang.String) -> a
    void a(net.owan.android.e.b.a.g,net.owan.android.e.b.b) -> a
    void a(net.owan.android.e.b.a.g) -> a
    boolean c(net.owan.android.e.b.b,java.io.File) -> c
    boolean g(net.owan.android.e.b.b) -> g
net.owan.android.e.b.a.d -> net.owan.android.e.b.a.d:
    net.owan.android.e.b.a.d a -> a
    int b -> b
    int c -> c
    java.util.HashMap d -> d
    net.owan.android.e.b.a.d a() -> a
    boolean a(android.content.Context,net.owan.android.e.b.b,java.io.File,net.owan.android.e.b.e) -> a
    void a(net.owan.android.e.b.b,long,long,int,long) -> a
    void a(net.owan.android.e.b.b) -> a
    void a(net.owan.android.e.b.b,java.io.File) -> a
    void b(net.owan.android.e.b.b,java.io.File) -> b
    void b(net.owan.android.e.b.b) -> b
    void a(net.owan.android.e.b.b,net.owan.android.e.b.a.j) -> a
net.owan.android.e.b.a.e -> net.owan.android.e.b.a.e:
net.owan.android.e.b.a.f -> net.owan.android.e.b.a.f:
    int a -> a
    java.io.File b -> b
    java.io.File c -> c
    int d -> d
    int e -> e
    boolean f -> f
    boolean g -> g
    net.owan.android.c.g.c h -> h
    android.content.Context i -> i
    int j -> j
    int k -> k
    void run() -> run
    void a(boolean) -> a
    void f() -> f
    boolean a() -> a
    boolean b() -> b
    long c() -> c
    long d() -> d
    int e() -> e
net.owan.android.e.b.a.g -> net.owan.android.e.b.a.g:
    net.owan.android.e.b.h a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    boolean d -> d
    void a() -> a
    void b() -> b
    void onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long) -> onDownloadStart
    void run() -> run
net.owan.android.e.b.a.h -> net.owan.android.e.b.a.h:
    boolean onJsAlert(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsAlert
    boolean onJsConfirm(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsConfirm
    boolean onJsPrompt(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsPromptResult) -> onJsPrompt
net.owan.android.e.b.a.i -> net.owan.android.e.b.a.i:
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
net.owan.android.e.b.a.j -> net.owan.android.e.b.a.j:
    boolean a -> a
    net.owan.android.e.b.b b -> b
    net.owan.android.e.b.a.f c -> c
    java.io.File d -> d
    java.io.File e -> e
    android.content.Context f -> f
    net.owan.android.e.b.a.k g -> g
    net.owan.android.e.b.e h -> h
    net.owan.android.e.b.b.a i -> i
    net.owan.android.e.b.b.f j -> j
    net.owan.android.e.b.b.g k -> k
    net.owan.android.e.b.b.b l -> l
    net.owan.android.e.b.b.j m -> m
    net.owan.android.e.b.b.i n -> n
    net.owan.android.e.b.b.h o -> o
    net.owan.android.e.b.b.e p -> p
    net.owan.android.e.b.b.d q -> q
    net.owan.android.e.b.b.c r -> r
    void a(java.io.File) -> a
    int hashCode() -> hashCode
    java.io.File a() -> a
    java.io.File b() -> b
    net.owan.android.e.b.b c() -> c
    net.owan.android.e.b.a.f d() -> d
    net.owan.android.e.b.e e() -> e
    boolean f() -> f
    net.owan.android.e.b.b.a t() -> t
    net.owan.android.e.b.b.a g() -> g
    net.owan.android.e.b.b.a h() -> h
    net.owan.android.e.b.b.a i() -> i
    net.owan.android.e.b.b.a j() -> j
    net.owan.android.e.b.b.a k() -> k
    net.owan.android.e.b.b.a l() -> l
    net.owan.android.e.b.b.a m() -> m
    net.owan.android.e.b.b.a n() -> n
    void a(net.owan.android.e.b.b.a) -> a
    boolean o() -> o
    java.lang.Void a(java.lang.Void[]) -> a
    void p() -> p
    void q() -> q
    void r() -> r
    void s() -> s
    void a(int,long,long,long) -> a
    void a(net.owan.android.e.b.a.k[]) -> a
    void a(net.owan.android.e.b.a.k) -> a
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
net.owan.android.e.b.a.k -> net.owan.android.e.b.a.k:
    int a -> a
    long b -> b
    long c -> c
    long d -> d
    int e -> e
net.owan.android.e.b.b -> net.owan.android.e.b.b:
    java.lang.String a -> a
    java.lang.String b -> b
    int c -> c
    boolean d -> d
    long e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String a() -> a
    java.lang.String b() -> b
    boolean c() -> c
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    void a(long) -> a
    long d() -> d
    void a(java.lang.String) -> a
    java.lang.String e() -> e
    void b(java.lang.String) -> b
    java.lang.String f() -> f
net.owan.android.e.b.b.a -> net.owan.android.e.b.b.a:
    long a -> a
    net.owan.android.e.b.a.j b -> b
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
net.owan.android.e.b.b.b -> net.owan.android.e.b.b.b:
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
net.owan.android.e.b.b.c -> net.owan.android.e.b.b.c:
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
net.owan.android.e.b.b.d -> net.owan.android.e.b.b.d:
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
net.owan.android.e.b.b.e -> net.owan.android.e.b.b.e:
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
net.owan.android.e.b.b.f -> net.owan.android.e.b.b.f:
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
net.owan.android.e.b.b.g -> net.owan.android.e.b.b.g:
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
net.owan.android.e.b.b.h -> net.owan.android.e.b.b.h:
    long c -> c
    boolean d -> d
    long e -> e
    int f -> f
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
net.owan.android.e.b.b.i -> net.owan.android.e.b.b.i:
    long c -> c
    boolean d -> d
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
net.owan.android.e.b.b.j -> net.owan.android.e.b.b.j:
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
net.owan.android.e.b.c -> net.owan.android.e.b.c:
    void a(net.owan.android.e.b.b,java.io.File) -> a
    void a(net.owan.android.e.b.b) -> a
    void b(net.owan.android.e.b.b) -> b
    void a(net.owan.android.e.b.b,long,long,int,long) -> a
net.owan.android.e.b.d -> net.owan.android.e.b.d:
    java.lang.String a(net.owan.android.e.b.b,java.lang.String) -> a
net.owan.android.e.b.e -> net.owan.android.e.b.e:
    boolean c(net.owan.android.e.b.b,java.io.File) -> c
    boolean g(net.owan.android.e.b.b) -> g
net.owan.android.e.b.f -> net.owan.android.e.b.f:
    void a(net.owan.android.e.b.b,long,long,int,long) -> a
    void h(net.owan.android.e.b.b) -> h
net.owan.android.e.b.g -> net.owan.android.e.b.g:
    void d(net.owan.android.e.b.b,java.io.File) -> d
    void i(net.owan.android.e.b.b) -> i
    void e(net.owan.android.e.b.b,java.io.File) -> e
net.owan.android.e.b.h -> net.owan.android.e.b.h:
    void a(net.owan.android.e.b.a.g,net.owan.android.e.b.b,java.lang.String,java.lang.String,java.lang.String) -> a
    void a(net.owan.android.e.b.a.g,net.owan.android.e.b.b) -> a
    void a(net.owan.android.e.b.a.g) -> a
net.owan.android.e.b.i -> net.owan.android.e.b.i:
    void a(java.lang.String,android.graphics.Bitmap) -> a
    void a(java.lang.String) -> a
net.owan.android.e.b.j -> net.owan.android.e.b.j:
    net.owan.android.e.b.j a -> a
    net.owan.android.e.b.j a() -> a
    java.lang.String a(net.owan.android.e.b.b,java.lang.String) -> a
net.owan.android.f.a -> net.owan.android.f.a:
net.owan.android.f.a.a -> net.owan.android.f.a.a:
    android.graphics.Bitmap a(java.lang.String) -> a
net.owan.android.f.a.b -> net.owan.android.f.a.b:
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String f() -> f
    java.lang.String g() -> g
net.owan.android.f.b -> net.owan.android.f.b:
    android.content.Context a -> a
    net.owan.android.f.c b -> b
    android.view.View c -> c
    android.view.View d -> d
    android.view.View e -> e
    android.view.View f -> f
    android.view.View g -> g
    void a() -> a
    void a(android.widget.TableRow,int,android.view.View,android.widget.RelativeLayout$LayoutParams) -> a
    void setBackEnable(boolean) -> setBackEnable
    void setForwardEnable(boolean) -> setForwardEnable
    void onClick(android.view.View) -> onClick
net.owan.android.f.c -> net.owan.android.f.c:
    void b() -> b
    void c() -> c
    void d() -> d
    void e() -> e
    void f() -> f
net.owan.android.f.d -> net.owan.android.f.d:
    void a(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> a
    int[] a() -> a
    int[] b() -> b
    int[] c() -> c
    int[] d() -> d
    int[] e() -> e
    int[] f() -> f
net.owan.android.f.e -> net.owan.android.f.e:
    net.owan.android.f.d a -> a
net.owan.android.f.f -> net.owan.android.f.f:
    net.owan.android.f.d a -> a
net.umipay.android.GameParamInfo -> net.umipay.android.GameParamInfo:
    net.umipay.android.GameParamInfo a -> a
    android.content.Context b -> b
    net.owan.android.e.a.f c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    boolean l -> l
    boolean m -> m
    boolean n -> n
    java.lang.String getAppId() -> getAppId
    void setAppId(java.lang.String) -> setAppId
    java.lang.String getAppSecret() -> getAppSecret
    void setAppSecret(java.lang.String) -> setAppSecret
    java.lang.String getCpId() -> getCpId
    void setCpId(java.lang.String) -> setCpId
    java.lang.String getServerId() -> getServerId
    void setServerId(java.lang.String) -> setServerId
    java.lang.String getAreadId() -> getAreadId
    void setAreadId(java.lang.String) -> setAreadId
    java.lang.String getChannelId() -> getChannelId
    void setChannel(java.lang.String,java.lang.String) -> setChannel
    java.lang.String getChildChannel() -> getChildChannel
    boolean deserialize(java.lang.String) -> deserialize
    java.lang.String getCacheKey() -> getCacheKey
    long getValidCacheTime_ms() -> getValidCacheTime_ms
    java.lang.String serialize() -> serialize
    net.umipay.android.GameParamInfo getInstance(android.content.Context) -> getInstance
    boolean save() -> save
    void Async_save() -> Async_save
    net.umipay.android.GameParamInfo a(android.content.Context) -> a
    void copy(android.content.Context,net.umipay.android.GameParamInfo) -> copy
    boolean isTestMode() -> isTestMode
    void setTestMode(boolean) -> setTestMode
    boolean isDeduplication() -> isDeduplication
    void setDeduplication(boolean) -> setDeduplication
    boolean isSDKCallBack() -> isSDKCallBack
    void setSDKCallBack(boolean) -> setSDKCallBack
    net.umipay.android.GameParamInfo a() -> a
    net.owan.android.e.a.f a(net.umipay.android.GameParamInfo) -> a
net.umipay.android.GameUserInfo -> net.umipay.android.GameUserInfo:
    java.lang.String a -> a
    int b -> b
    java.lang.String c -> c
    java.lang.String getUid() -> getUid
    void setUid(java.lang.String) -> setUid
    int getTimestamp_s() -> getTimestamp_s
    void setTimestamp_s(int) -> setTimestamp_s
    java.lang.String getSign() -> getSign
    void setSign(java.lang.String) -> setSign
net.umipay.android.UmiPaySDKManager -> net.umipay.android.UmiPaySDKManager:
    void initSDK(android.content.Context,net.umipay.android.GameParamInfo,net.umipay.android.interfaces.InitCallbackListener,net.umipay.android.interfaces.OrderReceiverListener) -> initSDK
    boolean a() -> a
    void a(android.content.Context) -> a
    void setOrderCallback(net.umipay.android.interfaces.OrderReceiverListener) -> setOrderCallback
    void setPayProcessListener(net.umipay.android.interfaces.PayProcessListener) -> setPayProcessListener
    void showPayView(android.content.Context,net.umipay.android.UmiPaymentInfo) -> showPayView
    net.umipay.android.GameParamInfo getGameParamInfo(android.content.Context) -> getGameParamInfo
    void getUnHandledOrders(android.content.Context) -> getUnHandledOrders
net.umipay.android.UmiPaymentInfo -> net.umipay.android.UmiPaymentInfo:
    int SERVICE_TYPE_RATE -> SERVICE_TYPE_RATE
    int SERVICE_TYPE_QUOTA -> SERVICE_TYPE_QUOTA
    java.lang.String a -> a
    java.lang.String b -> b
    int c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    int h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    int k -> k
    boolean l -> l
    int m -> m
    java.lang.String getCustomInfo() -> getCustomInfo
    void setCustomInfo(java.lang.String) -> setCustomInfo
    java.lang.String getServerId() -> getServerId
    void setServerId(java.lang.String) -> setServerId
    int getAmount() -> getAmount
    void setAmount(int) -> setAmount
    java.lang.String getRoleId() -> getRoleId
    void setRoleId(java.lang.String) -> setRoleId
    java.lang.String getRoleName() -> getRoleName
    void setRoleName(java.lang.String) -> setRoleName
    java.lang.String getRoleGrade() -> getRoleGrade
    void setRoleGrade(java.lang.String) -> setRoleGrade
    java.lang.String getAreadId() -> getAreadId
    void setAreadId(java.lang.String) -> setAreadId
    boolean isSinglePayMode() -> isSinglePayMode
    void setSinglePayMode(boolean) -> setSinglePayMode
    int getMinFee() -> getMinFee
    void setMinFee(int) -> setMinFee
    int getServiceType() -> getServiceType
    void setServiceType(int) -> setServiceType
    java.lang.String getDesc() -> getDesc
    void setDesc(java.lang.String) -> setDesc
    java.lang.String getTradeno() -> getTradeno
    void setTradeno(java.lang.String) -> setTradeno
    int getPayMoney() -> getPayMoney
    void setPayMoney(int) -> setPayMoney
net.umipay.android.UmipayBrowser -> net.umipay.android.UmipayBrowser:
    java.lang.String m -> m
    java.lang.String n -> n
    net.owan.android.a.k.a.i a -> a
    java.lang.String b -> b
    int c -> c
    java.lang.String d -> d
    android.os.Handler e -> e
    java.lang.String o -> o
    android.view.View f -> f
    android.widget.TextView g -> g
    android.widget.RelativeLayout h -> h
    boolean p -> p
    int q -> q
    long r -> r
    void onCreate(android.os.Bundle) -> onCreate
    void a() -> a
    void b() -> b
    boolean a(android.content.Intent) -> a
    android.app.Activity getActivity() -> getActivity
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void loadUrl(android.content.Context,java.lang.String,java.lang.String,int) -> loadUrl
    void loadUrl(android.content.Context,java.lang.String,java.lang.String) -> loadUrl
    void preLoadUrl(android.content.Context,java.lang.String) -> preLoadUrl
    void loadUrl(android.content.Context,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String) -> loadUrl
    void postUrl(android.content.Context,java.lang.String,java.lang.String,java.util.List,int,java.lang.String,java.lang.String) -> postUrl
    void setCloseViewVisibility(int) -> setCloseViewVisibility
    void setPayStatus(int) -> setPayStatus
    void setWebTitle(java.lang.String) -> setWebTitle
    net.owan.android.a.g.f js_SDK_Handler_AsyncResponseGwAppsLog(android.content.Context,java.util.List) -> js_SDK_Handler_AsyncResponseGwAppsLog
    net.owan.android.a.g.f js_SDK_Handler_AsyncStartAppDownload(net.owan.android.a.g.i,net.owan.android.a.g.o) -> js_SDK_Handler_AsyncStartAppDownload
    net.owan.android.a.g.f js_SDK_Handler_Browser(net.owan.android.a.g.m) -> js_SDK_Handler_Browser
    net.owan.android.a.g.f js_SDK_Handler_BrowserInDialog_RunOnUiThread(net.owan.android.a.g.p) -> js_SDK_Handler_BrowserInDialog_RunOnUiThread
    net.owan.android.a.g.f js_SDK_Handler_CloseCurrentWindow() -> js_SDK_Handler_CloseCurrentWindow
    net.owan.android.a.g.f js_SDK_Handler_ReloadPage() -> js_SDK_Handler_ReloadPage
    net.owan.android.a.g.f js_Sdk_Handler_TrackEvent(java.lang.String,java.lang.String,java.lang.String,long) -> js_Sdk_Handler_TrackEvent
    net.owan.android.a.g.f js_Sdk_Handler_TrackView(java.lang.String) -> js_Sdk_Handler_TrackView
    void onClick(android.view.View) -> onClick
    boolean c() -> c
    void a(android.content.Context) -> a
    java.lang.String a(java.util.List) -> a
    java.lang.String js_SDK_Handler_GetGwExtendUrl_RSD(net.owan.android.a.g.j) -> js_SDK_Handler_GetGwExtendUrl_RSD
    java.lang.String js_SDK_Handler_GetGwExtendUrl_RandomKey(java.lang.String,java.lang.String) -> js_SDK_Handler_GetGwExtendUrl_RandomKey
    net.owan.android.a.g.f js_Sdk_Handler_AsyncSendEffLog(int,net.owan.android.a.g.j) -> js_Sdk_Handler_AsyncSendEffLog
    int js_SDK_Handler_GetSdkVersion() -> js_SDK_Handler_GetSdkVersion
    int js_SDK_Handler_GetSdkID() -> js_SDK_Handler_GetSdkID
    void setSdkHandlerProxy(net.owan.android.a.k.a.d) -> setSdkHandlerProxy
    net.owan.android.a.g.f js_SDK_Handler_CopyBrowser(net.owan.android.a.g.n) -> js_SDK_Handler_CopyBrowser
    net.owan.android.a.g.f js_Sdk_Handler_SetVisibility(int) -> js_Sdk_Handler_SetVisibility
    net.owan.android.a.g.f js_SDK_Handler_BrowserInDialogOnScreen_RunOnUiThread(net.owan.android.a.g.p) -> js_SDK_Handler_BrowserInDialogOnScreen_RunOnUiThread
    void onDestroy() -> onDestroy
net.umipay.android.UmipayOrderInfo -> net.umipay.android.UmipayOrderInfo:
    java.lang.String a -> a
    int b -> b
    java.lang.String c -> c
    int d -> d
    float e -> e
    java.lang.String f -> f
    int g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    boolean parserJson(org.json.JSONObject) -> parserJson
    java.lang.String getOid() -> getOid
    void setOid(java.lang.String) -> setOid
    int getStatus() -> getStatus
    void setStatus(int) -> setStatus
    java.lang.String getPayType() -> getPayType
    void setPayType(java.lang.String) -> setPayType
    int getAmount() -> getAmount
    void setAmount(int) -> setAmount
    int getPayTime_s() -> getPayTime_s
    void setPayTime_s(int) -> setPayTime_s
    java.lang.String getCData() -> getCData
    void setCData(java.lang.String) -> setCData
    void setRid(java.lang.String) -> setRid
    java.lang.String getRid() -> getRid
    void setTradeNo(java.lang.String) -> setTradeNo
    java.lang.String getTradeNo() -> getTradeNo
    boolean deserialize(java.lang.String) -> deserialize
    java.lang.String serialize() -> serialize
    java.lang.String getCacheKey() -> getCacheKey
    long getValidCacheTime_ms() -> getValidCacheTime_ms
    float getRealMoney() -> getRealMoney
    void setRealMoney(float) -> setRealMoney
net.umipay.android.UmipaySDKStatusCode -> net.umipay.android.UmipaySDKStatusCode:
    int SUCCESS -> SUCCESS
    int PAY_PROCESS_SUCCESS -> PAY_PROCESS_SUCCESS
    int PAY_PROCESS_FAIL -> PAY_PROCESS_FAIL
    int ERR_DEFAULT -> ERR_DEFAULT
    int PARAMETER_ERR -> PARAMETER_ERR
    int INIT_FAIL -> INIT_FAIL
    int ERR_LOAD_USERNAME -> ERR_LOAD_USERNAME
    int ERR_NO_SOLIB -> ERR_NO_SOLIB
    int ERR_WRONG_SOLIB -> ERR_WRONG_SOLIB
    int ERR_RUNTIME -> ERR_RUNTIME
    int ERR_110_MP_ERR_APPKEY -> ERR_110_MP_ERR_APPKEY
    int ERR_112_MP_ERR_HASH -> ERR_112_MP_ERR_HASH
    int ERR_201_POINTS_QUERY_FAILED -> ERR_201_POINTS_QUERY_FAILED
    int ERR_202_POINTS_INSUFFICIENT -> ERR_202_POINTS_INSUFFICIENT
    int ERR_203_POINTS_AWARD_FAILED -> ERR_203_POINTS_AWARD_FAILED
    int ERR_204_POINTS_SPEND_FAILED -> ERR_204_POINTS_SPEND_FAILED
    int ERR_205_POINTS_VID_INVALID -> ERR_205_POINTS_VID_INVALID
    int ERR_250_ACCOUNT_USER_CONNECT -> ERR_250_ACCOUNT_USER_CONNECT
    int ERR_251_ACCOUNT_USER_REGISTERED -> ERR_251_ACCOUNT_USER_REGISTERED
    int ERR_252_ACCOUNT_USER_NOT_EXIST -> ERR_252_ACCOUNT_USER_NOT_EXIST
    int ERR_253_ACCOUNT_USER_PASSWORD -> ERR_253_ACCOUNT_USER_PASSWORD
    int ERR_254_ACCOUNT_SESS_CONNECT -> ERR_254_ACCOUNT_SESS_CONNECT
    int ERR_255_ACCOUNT_SESSION_INVAILED -> ERR_255_ACCOUNT_SESSION_INVAILED
    int ERR_256_MP_SESS_SET -> ERR_256_MP_SESS_SET
    int ERR_257_MP_SESS_ERROR -> ERR_257_MP_SESS_ERROR
    int ERR_259_MP_USER_VISITOR_BINDED -> ERR_259_MP_USER_VISITOR_BINDED
    int ERR_260_ACCOUNT_USER_PASSWORD_TO_SIMPLE -> ERR_260_ACCOUNT_USER_PASSWORD_TO_SIMPLE
    int ERR_270_EXCHANGE_MIBAO_INSUFFICIENT -> ERR_270_EXCHANGE_MIBAO_INSUFFICIENT
    int ERR_271_ACCOUNT_NICK_REGISTERED -> ERR_271_ACCOUNT_NICK_REGISTERED
    int ERR_272_ACCOUNT_PSW_ILLEAGE -> ERR_272_ACCOUNT_PSW_ILLEAGE
    int ERR_301_ACCOUNT_USER_NAME_ILLEAGE -> ERR_301_ACCOUNT_USER_NAME_ILLEAGE
    int ERR_310_MP_APP_NOT_EXIST -> ERR_310_MP_APP_NOT_EXIST
    int ERR_311_MP_APP_NO_MIPAY -> ERR_311_MP_APP_NO_MIPAY
    java.lang.String a(int) -> a
net.umipay.android.a -> net.umipay.android.a:
    net.umipay.android.GameParamInfo a -> a
    void run() -> run
net.umipay.android.a.a -> net.umipay.android.a.a:
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    int e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    int h -> h
    int i -> i
    java.lang.String j -> j
    int k -> k
    int l -> l
    int m -> m
    int n -> n
    long o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    int r -> r
    java.lang.String s -> s
    int t -> t
    int u -> u
    java.lang.String v -> v
    java.lang.String w -> w
    java.lang.String x -> x
    net.umipay.android.GameUserInfo y -> y
    boolean z -> z
    int a() -> a
    void a(int) -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    long b() -> b
    void a(long) -> a
    java.lang.String serialize() -> serialize
    boolean deserialize(java.lang.String) -> deserialize
    long getValidCacheTime_ms() -> getValidCacheTime_ms
    java.lang.String getCacheKey() -> getCacheKey
    net.umipay.android.GameUserInfo c() -> c
    void a(net.umipay.android.GameUserInfo) -> a
    void d(java.lang.String) -> d
    java.lang.String d() -> d
    void e(java.lang.String) -> e
    int e() -> e
    void b(int) -> b
    java.lang.String f() -> f
    boolean g() -> g
net.umipay.android.a.b -> net.umipay.android.a.b:
    net.umipay.android.a.b a -> a
    android.content.Context b -> b
    net.owan.android.e.a.f c -> c
    net.umipay.android.a.a d -> d
    net.umipay.android.a.b a(android.content.Context) -> a
    net.umipay.android.a.a a(java.lang.String) -> a
    java.util.List a() -> a
    void a(java.util.List) -> a
    boolean a(net.umipay.android.a.a) -> a
    net.umipay.android.a.a b() -> b
    net.umipay.android.GameUserInfo c() -> c
    void b(net.umipay.android.a.a) -> b
    java.lang.String d(android.content.Context) -> d
    java.lang.String b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
net.umipay.android.a.c -> net.umipay.android.a.c:
    net.umipay.android.a.b a -> a
    int a(net.umipay.android.a.a,net.umipay.android.a.a) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
net.umipay.android.b -> net.umipay.android.b:
    boolean a(android.content.Context,net.umipay.android.UmipayOrderInfo) -> a
    boolean b(android.content.Context,net.umipay.android.UmipayOrderInfo) -> b
    java.lang.String a(android.content.Context) -> a
net.umipay.android.b.a -> net.umipay.android.b.a:
    android.widget.RelativeLayout i -> i
    android.view.ViewGroup j -> j
    android.widget.ProgressBar k -> k
    android.widget.TextView l -> l
    void onCreate(android.os.Bundle) -> onCreate
    void a(int) -> a
    void showLoadingView(boolean,java.lang.String) -> showLoadingView
    boolean isLoadingViewVisible() -> isLoadingViewVisible
    void toast(java.lang.String) -> toast
    void toastL(java.lang.String) -> toastL
net.umipay.android.c -> net.umipay.android.c:
    int a -> a
    net.umipay.android.UmipayBrowser b -> b
    void run() -> run
net.umipay.android.c.a -> net.umipay.android.c.a:
    android.content.Context a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    net.umipay.android.a.a d -> d
    int e -> e
    java.lang.String f -> f
    long g -> g
    java.lang.Boolean a(java.lang.Void[]) -> a
    void a(java.lang.Boolean) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
net.umipay.android.c.b -> net.umipay.android.c.b:
    android.content.Context a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.Boolean a(java.lang.Void[]) -> a
    void a(java.lang.Boolean) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
net.umipay.android.c.c -> net.umipay.android.c.c:
    android.content.Context b -> b
    java.util.List c -> c
    int d -> d
    java.util.List e -> e
    net.umipay.android.c.d a -> a
    java.lang.Boolean a(java.lang.Void[]) -> a
    void a(java.lang.Boolean) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
net.umipay.android.c.d -> net.umipay.android.c.d:
    void a(java.util.List) -> a
net.umipay.android.c.e -> net.umipay.android.c.e:
    android.os.AsyncTask a(java.lang.Object[]) -> a
net.umipay.android.d -> net.umipay.android.d:
    net.umipay.android.UmipayBrowser a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
net.umipay.android.d.a -> net.umipay.android.d.a:
    int a -> a
    org.json.JSONObject b -> b
    java.lang.String c -> c
    org.json.JSONObject a() -> a
    java.lang.String b() -> b
    net.umipay.android.d.a a(android.content.Context,java.lang.String) -> a
    int c() -> c
    net.umipay.android.d.a d() -> d
    net.umipay.android.d.a e() -> e
    net.umipay.android.d.a f() -> f
net.umipay.android.d.aa -> net.umipay.android.d.aa:
    java.lang.String mA -> mA
    java.lang.String mB -> mB
    java.lang.String a() -> a
    java.lang.String b() -> b
net.umipay.android.d.ab -> net.umipay.android.d.ab:
    java.lang.String c(android.content.Context,java.lang.String,java.lang.String,int,java.lang.String,net.umipay.android.d.aa[],int,int) -> c
    java.lang.String cmd(android.content.Context,java.lang.String,java.lang.String,int,java.lang.String,int,int,java.lang.String,int) -> cmd
net.umipay.android.d.b -> net.umipay.android.d.b:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    boolean a(java.lang.String,java.lang.String) -> a
    org.json.JSONObject a(android.content.Context) -> a
    org.json.JSONObject b(android.content.Context) -> b
    net.umipay.android.d.a a(android.content.Context,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    net.umipay.android.d.a c(android.content.Context) -> c
    net.umipay.android.d.a a(android.content.Context,java.util.List,int) -> a
    net.umipay.android.d.a a(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
net.umipay.android.e -> net.umipay.android.e:
    net.umipay.android.UmipayBrowser e -> e
    void a(android.webkit.WebView,java.lang.String) -> a
    void a(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> a
    void a(android.webkit.WebView,int) -> a
net.umipay.android.e.a -> net.umipay.android.e.a:
    boolean a -> a
    boolean b -> b
    boolean c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    java.lang.String g -> g
    android.content.Context h -> h
    net.umipay.android.e.a i -> i
    java.util.List j -> j
    boolean deserialize(java.lang.String) -> deserialize
    java.lang.String serialize() -> serialize
    void a(java.util.List) -> a
    java.util.List a() -> a
    net.umipay.android.e.a a(android.content.Context) -> a
    void a(boolean) -> a
    boolean b() -> b
    void b(boolean) -> b
    void c(boolean) -> c
    void d(boolean) -> d
    boolean b(android.content.Context) -> b
    net.umipay.android.e.a c(android.content.Context) -> c
    java.lang.String getCacheKey() -> getCacheKey
    long getValidCacheTime_ms() -> getValidCacheTime_ms
    void e(boolean) -> e
    boolean c() -> c
    void f(boolean) -> f
net.umipay.android.e.b -> net.umipay.android.e.b:
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    boolean c(android.content.Context) -> c
    boolean d(android.content.Context) -> d
net.umipay.android.f.a -> net.umipay.android.f.a:
    net.umipay.android.interfaces.InitCallbackListener a -> a
    net.umipay.android.interfaces.OrderReceiverListener b -> b
    net.umipay.android.interfaces.PayProcessListener c -> c
    boolean d -> d
    net.umipay.android.interfaces.OrderReceiverListener a() -> a
    void a(net.umipay.android.interfaces.OrderReceiverListener) -> a
    net.umipay.android.interfaces.InitCallbackListener b() -> b
    void a(net.umipay.android.interfaces.InitCallbackListener) -> a
    void a(net.umipay.android.interfaces.PayProcessListener) -> a
    net.umipay.android.interfaces.PayProcessListener c() -> c
    void a(int,java.lang.String) -> a
    void a(android.content.Context,net.umipay.android.a.a) -> a
    void b(int,java.lang.String) -> b
    boolean d() -> d
    void a(boolean) -> a
net.umipay.android.f.b -> net.umipay.android.f.b:
    android.content.Context a -> a
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void a(java.util.List) -> a
net.umipay.android.f.c -> net.umipay.android.f.c:
    java.util.List a -> a
    net.umipay.android.interfaces.OrderReceiverListener b -> b
    java.util.List c -> c
    net.umipay.android.f.b d -> d
    void run() -> run
net.umipay.android.f.d -> net.umipay.android.f.d:
    net.umipay.android.f.c a -> a
    void run() -> run
net.umipay.android.f.e -> net.umipay.android.f.e:
    long a -> a
    int b -> b
    int c -> c
    android.content.Context d -> d
    java.util.Timer e -> e
    net.umipay.android.f.e f -> f
    void a(android.content.Context) -> a
    void a(android.content.Context,int,long) -> a
    void a() -> a
    void a(int,long) -> a
    net.umipay.android.f.e b(android.content.Context) -> b
net.umipay.android.f.f -> net.umipay.android.f.f:
    net.umipay.android.f.e a -> a
    void run() -> run
net.umipay.android.f.g -> net.umipay.android.f.g:
    net.umipay.android.f.e a -> a
    void run() -> run
net.umipay.android.g.a -> net.umipay.android.g.a:
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    int f -> f
    long g -> g
    int a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    long f() -> f
    boolean a(org.json.JSONObject) -> a
    org.json.JSONObject g() -> g
    java.lang.String toString() -> toString
    int h() -> h
net.umipay.android.g.b -> net.umipay.android.g.b:
    java.lang.String a -> a
    java.lang.String b -> b
    void a(java.lang.String) -> a
    java.lang.String a() -> a
    void b(java.lang.String) -> b
    java.lang.String b() -> b
    boolean a(org.json.JSONObject) -> a
    boolean a(java.lang.String,java.lang.String) -> a
net.umipay.android.h.a -> net.umipay.android.h.a:
    net.umipay.android.h.a a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    android.content.Context d -> d
    java.lang.String a() -> a
    java.lang.String b() -> b
    net.umipay.android.h.a a(android.content.Context) -> a
    void c() -> c
    void a(java.lang.String,java.lang.String) -> a
    void a(java.io.File,java.lang.String,java.lang.String) -> a
    java.lang.String[] a(java.io.File) -> a
net.umipay.android.h.b -> net.umipay.android.h.b:
    java.util.concurrent.ThreadPoolExecutor a -> a
    android.graphics.Bitmap a(android.content.Context,java.lang.String) -> a
    android.graphics.Bitmap b(android.content.Context,java.lang.String) -> b
    void a(android.graphics.Bitmap,java.lang.String) -> a
    android.graphics.Bitmap a(java.lang.String) -> a
net.umipay.android.h.c -> net.umipay.android.h.c:
    java.lang.Object a(android.content.Context,java.lang.String) -> a
    int a(android.content.Context,java.lang.String,int) -> a
net.umipay.android.h.d -> net.umipay.android.h.d:
    org.apache.http.client.HttpClient a(android.content.Context) -> a
    org.apache.http.HttpResponse a(android.content.Context,org.apache.http.client.methods.HttpUriRequest) -> a
    boolean b(android.content.Context) -> b
net.umipay.android.h.e -> net.umipay.android.h.e:
    int a(android.content.Context,java.lang.String,java.lang.String) -> a
net.umipay.android.h.f -> net.umipay.android.h.f:
    java.lang.String a(android.content.Context) -> a
    boolean b(android.content.Context) -> b
    boolean a() -> a
    boolean b() -> b
net.umipay.android.h.g -> net.umipay.android.h.g:
    net.umipay.android.h.g a -> a
    java.lang.String b() -> b
    java.io.File d(java.lang.String) -> d
    net.umipay.android.h.g a(android.content.Context) -> a
net.umipay.android.handler.JsHandler_CloseView_SetVisibility -> net.umipay.android.handler.JsHandler_CloseView_SetVisibility:
    int mVisibility -> mVisibility
    org.json.JSONObject toHandler(net.owan.android.a.g.e,net.owan.android.a.g.b,org.json.JSONObject) -> toHandler
net.umipay.android.handler.JsHandler_Get_SupportPayType -> net.umipay.android.handler.JsHandler_Get_SupportPayType:
    org.json.JSONObject toHandler(net.owan.android.a.g.e,net.owan.android.a.g.b) -> toHandler
net.umipay.android.handler.JsHandler_Pay_With_Alipay -> net.umipay.android.handler.JsHandler_Pay_With_Alipay:
    org.json.JSONObject toHandler(net.owan.android.a.g.e,net.owan.android.a.g.b,org.json.JSONObject) -> toHandler
net.umipay.android.handler.JsHandler_Pay_With_Sms -> net.umipay.android.handler.JsHandler_Pay_With_Sms:
    java.lang.String mJsFn -> mJsFn
    long mReqCode -> mReqCode
    java.lang.String mReceiverCallPageUrl -> mReceiverCallPageUrl
    org.json.JSONObject toHandler(net.owan.android.a.g.e,net.owan.android.a.g.b,org.json.JSONObject) -> toHandler
    void sendSms(android.content.Context,java.lang.String,java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,java.lang.String) -> sendSms
net.umipay.android.handler.JsHandler_Pay_With_UPMP -> net.umipay.android.handler.JsHandler_Pay_With_UPMP:
    java.lang.String UPMP_PLUGIN_PAYEND_ACTION -> UPMP_PLUGIN_PAYEND_ACTION
    java.lang.String mode -> mode
    java.lang.String mJsFn -> mJsFn
    long mReqCode -> mReqCode
    java.lang.String mReceiverCallPageUrl -> mReceiverCallPageUrl
    org.json.JSONObject toHandler(net.owan.android.a.g.e,net.owan.android.a.g.b,org.json.JSONObject) -> toHandler
net.umipay.android.handler.JsHandler_Pay_With_UPMP$UnionpayBroadcastReceiver -> net.umipay.android.handler.JsHandler_Pay_With_UPMP$UnionpayBroadcastReceiver:
    android.content.Context mAppContext -> mAppContext
    net.umipay.android.handler.JsHandler_Pay_With_UPMP this$0 -> this$0
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
net.umipay.android.handler.JsHandler_Update_Pay_Status -> net.umipay.android.handler.JsHandler_Update_Pay_Status:
    int mPayStatus -> mPayStatus
    org.json.JSONObject toHandler(net.owan.android.a.g.e,net.owan.android.a.g.b,org.json.JSONObject) -> toHandler
net.umipay.android.handler.JsModel_Browser_PayExtent_Js_Interface_Factory -> net.umipay.android.handler.JsModel_Browser_PayExtent_Js_Interface_Factory:
    long serialVersionUID -> serialVersionUID
    boolean canYouHandleThisCatalog(int) -> canYouHandleThisCatalog
    net.owan.android.a.g.b.a getActionHanlder(int,int) -> getActionHanlder
net.umipay.android.interfaces.InitCallbackListener -> net.umipay.android.interfaces.InitCallbackListener:
    void onInitCallback(int,java.lang.String) -> onInitCallback
net.umipay.android.interfaces.OrderReceiverListener -> net.umipay.android.interfaces.OrderReceiverListener:
    java.util.List onReceiveOrders(java.util.List) -> onReceiveOrders
net.umipay.android.interfaces.PayProcessListener -> net.umipay.android.interfaces.PayProcessListener:
    void OnPayProcess(int) -> OnPayProcess
    void handleMessage(android.os.Message) -> handleMessage
net.umipay.android.poll.Push_Alarm_Receiver -> net.umipay.android.poll.Push_Alarm_Receiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
net.umipay.android.poll.Push_Boot_Receiver -> net.umipay.android.poll.Push_Boot_Receiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void a(android.content.Context) -> a
net.umipay.android.poll.Push_Poll_service -> net.umipay.android.poll.Push_Poll_service:
    int PUSH_NOTIFY_ID -> PUSH_NOTIFY_ID
    int ACTION_NULL -> ACTION_NULL
    int ACTION_PULL -> ACTION_PULL
    int ACTION_NOTIFY -> ACTION_NOTIFY
    int ACTION_RUN -> ACTION_RUN
    android.os.Handler a -> a
    void onHandleIntent(android.content.Intent) -> onHandleIntent
    void b() -> b
    void a() -> a
    void a(net.umipay.android.g.a) -> a
    int a(int) -> a
    void getImageViews(android.view.View,java.util.List) -> getImageViews
    void b(net.umipay.android.g.a) -> b
net.umipay.android.poll.SmsReceiverService -> net.umipay.android.poll.SmsReceiverService:
    net.umipay.android.poll.d a -> a
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
net.umipay.android.poll.a -> net.umipay.android.poll.a:
    java.util.List a -> a
    java.util.List b -> b
    int c -> c
    android.content.Context d -> d
    net.umipay.android.poll.a e -> e
    net.umipay.android.poll.a a(android.content.Context) -> a
    net.umipay.android.poll.a b(android.content.Context) -> b
    boolean a() -> a
    void a(org.json.JSONObject) -> a
    void b() -> b
    net.umipay.android.g.a c() -> c
    boolean a(net.umipay.android.g.a) -> a
    boolean b(net.umipay.android.g.a) -> b
    net.umipay.android.g.a a(int) -> a
    void b(int) -> b
    int d() -> d
    void c(int) -> c
    boolean deserialize(java.lang.String) -> deserialize
    java.lang.String serialize() -> serialize
    java.lang.String getCacheKey() -> getCacheKey
    long getValidCacheTime_ms() -> getValidCacheTime_ms
net.umipay.android.poll.b -> net.umipay.android.poll.b:
    net.umipay.android.poll.a a -> a
    int a(net.umipay.android.g.a,net.umipay.android.g.a) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
net.umipay.android.poll.c -> net.umipay.android.poll.c:
    net.umipay.android.poll.c a -> a
    android.content.Context b -> b
    net.umipay.android.poll.c a(android.content.Context) -> a
    void a(long,long) -> a
    void a() -> a
net.umipay.android.poll.d -> net.umipay.android.poll.d:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
net.umipay.android.poll.e -> net.umipay.android.poll.e:
    android.content.Context a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
net.youmi.android.AdBrowser -> net.youmi.android.AdBrowser:
    net.youmi.android.a.k.a.i a -> a
    net.youmi.android.a.h.l b -> b
    net.youmi.android.i.a c -> c
    android.widget.RelativeLayout d -> d
    net.youmi.android.i.b e -> e
    net.youmi.android.d.i.a f -> f
    void onCreate(android.os.Bundle) -> onCreate
    void g() -> g
    void setWebTitle(java.lang.String) -> setWebTitle
    void onWebPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onWebPageStarted
    void onWebReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onWebReceivedError
    void onWebPageFinished(android.webkit.WebView,java.lang.String) -> onWebPageFinished
    void a() -> a
    void onClick(android.view.View) -> onClick
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void b() -> b
    void c() -> c
    void d() -> d
    void e() -> e
    void f() -> f
    boolean proxyCloseCurrentWindow() -> proxyCloseCurrentWindow
    boolean proxyLoadUrl(java.lang.String) -> proxyLoadUrl
    boolean proxyPostUrl(java.lang.String,byte[]) -> proxyPostUrl
    boolean proxyClearWebViewHistory() -> proxyClearWebViewHistory
    boolean proxySetVisibility(int) -> proxySetVisibility
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
net.youmi.android.AdManager -> net.youmi.android.AdManager:
    android.content.Context a -> a
    net.youmi.android.AdManager b -> b
    boolean c -> c
    boolean d -> d
    boolean getTipsDisplayOnNotificationAfterInstall() -> getTipsDisplayOnNotificationAfterInstall
    void setTipsDisplayOnNotificationAfterInstall(boolean) -> setTipsDisplayOnNotificationAfterInstall
    boolean getIsDownloadProgressDisplayOnNotification() -> getIsDownloadProgressDisplayOnNotification
    void setIsDownloadProgressDisplayOnNotification(boolean) -> setIsDownloadProgressDisplayOnNotification
    net.youmi.android.AdManager getInstance(android.content.Context) -> getInstance
    void init(java.lang.String,java.lang.String,boolean) -> init
    void setEnableDebugLog(boolean) -> setEnableDebugLog
    java.lang.String getOnlineConfig(java.lang.String,java.lang.String) -> getOnlineConfig
    java.lang.String syncGetOnlineConfig(java.lang.String,java.lang.String) -> syncGetOnlineConfig
    void asyncGetOnlineConfig(java.lang.String,net.youmi.android.dev.OnlineConfigCallBack) -> asyncGetOnlineConfig
    net.youmi.android.dev.AppUpdateInfo syncCheckAppUpdate() -> syncCheckAppUpdate
    void asyncCheckAppUpdate(net.youmi.android.dev.CheckAppUpdateCallBack) -> asyncCheckAppUpdate
    net.youmi.android.dev.AppUpdateInfo checkAppUpdate() -> checkAppUpdate
    void setUserDataCollect(boolean) -> setUserDataCollect
net.youmi.android.AdReceiver -> net.youmi.android.AdReceiver:
    int a -> a
    int b -> b
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
net.youmi.android.AdService -> net.youmi.android.AdService:
    void onHandleIntent(android.content.Intent) -> onHandleIntent
net.youmi.android.ExpService -> net.youmi.android.ExpService:
    void onHandleIntent(android.content.Intent) -> onHandleIntent
net.youmi.android.SmartBannerActivity -> net.youmi.android.SmartBannerActivity:
    net.youmi.android.i.a a -> a
    net.youmi.android.f.f b -> b
    android.content.Context c -> c
    android.widget.RelativeLayout e -> e
    android.widget.FrameLayout f -> f
    net.youmi.android.a.h.e d -> d
    net.youmi.android.a.h.p g -> g
    void onCreate(android.os.Bundle) -> onCreate
    void a(android.content.Context,net.youmi.android.a.h.p,net.youmi.android.a.h.e,boolean) -> a
    void a(int) -> a
    void a(android.content.Context,net.youmi.android.a.h.p) -> a
    void a() -> a
    void onClick(android.view.View) -> onClick
    void setWebTitle(java.lang.String) -> setWebTitle
    boolean proxySetVisibility(int) -> proxySetVisibility
    boolean proxyClearWebViewHistory() -> proxyClearWebViewHistory
    boolean proxyPostUrl(java.lang.String,byte[]) -> proxyPostUrl
    boolean proxyLoadUrl(java.lang.String) -> proxyLoadUrl
    boolean proxyCloseCurrentWindow() -> proxyCloseCurrentWindow
    boolean js_SDK_Handler_RunOnUIThread(java.lang.Runnable) -> js_SDK_Handler_RunOnUIThread
    net.youmi.android.a.h.f js_SDK_Handler_ClearCurrentBrowserHistory() -> js_SDK_Handler_ClearCurrentBrowserHistory
net.youmi.android.SmartBannerService -> net.youmi.android.SmartBannerService:
    java.lang.String cachePackage -> cachePackage
    long cachePackageSM -> cachePackageSM
    int nextTime -> nextTime
    java.lang.String cacheActivity -> cacheActivity
    long cacheActivitySM -> cacheActivitySM
    int acNextTime -> acNextTime
    void onHandleIntent(android.content.Intent) -> onHandleIntent
net.youmi.android.a -> net.youmi.android.a:
    net.youmi.android.AdBrowser a -> a
    void run() -> run
net.youmi.android.a.a.a -> net.youmi.android.a.a.a:
    java.lang.String a -> a
    java.lang.String b -> b
    net.youmi.android.a.a.b c -> c
    net.youmi.android.a.a.c d -> d
    java.lang.String e -> e
    boolean f -> f
    java.lang.String g -> g
    long h -> h
    java.lang.String i -> i
    long j -> j
    boolean k -> k
    net.youmi.android.a.h.j l -> l
    java.lang.String m -> m
    long n -> n
    java.lang.String o -> o
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    long b() -> b
    void a(long) -> a
    java.lang.String c() -> c
    void b(java.lang.String) -> b
    java.lang.String d() -> d
    boolean e() -> e
    void a(boolean) -> a
    void c(java.lang.String) -> c
    java.lang.String f() -> f
    java.lang.String g() -> g
    void d(java.lang.String) -> d
    boolean h() -> h
    void b(boolean) -> b
    net.youmi.android.a.a.c i() -> i
    void a(net.youmi.android.a.a.c) -> a
    void b(long) -> b
    net.youmi.android.a.h.j j() -> j
    void a(net.youmi.android.a.h.j) -> a
    java.lang.String k() -> k
    boolean e(java.lang.String) -> e
    long l() -> l
    java.lang.String m() -> m
    java.lang.String f(java.lang.String) -> f
net.youmi.android.a.a.a.a -> net.youmi.android.a.a.a.a:
    int a -> a
    int b -> b
    long c -> c
    java.lang.String d -> d
    net.youmi.android.a.a.a.f e -> e
    net.youmi.android.a.a.a.c f -> f
    net.youmi.android.a.a.a.g g -> g
    net.youmi.android.a.a.a.e h -> h
    net.youmi.android.a.a.a.d i -> i
    net.youmi.android.a.a.a.j j -> j
    net.youmi.android.a.a.a.h k -> k
    int a() -> a
    int b() -> b
    long c() -> c
    void a(long) -> a
    java.lang.String d() -> d
    java.lang.String a(int,int) -> a
    net.youmi.android.a.a.a.f e() -> e
    void a(net.youmi.android.a.a.a.f) -> a
    net.youmi.android.a.a.a.c f() -> f
    void a(net.youmi.android.a.a.a.c) -> a
    net.youmi.android.a.a.a.g g() -> g
    void a(net.youmi.android.a.a.a.g) -> a
    void a(net.youmi.android.a.a.a.e) -> a
    net.youmi.android.a.a.a.e h() -> h
    void a(net.youmi.android.a.a.a.d) -> a
    net.youmi.android.a.a.a.d i() -> i
    net.youmi.android.a.a.a.j j() -> j
    void a(net.youmi.android.a.a.a.j) -> a
    net.youmi.android.a.a.a.h n() -> n
    void a(net.youmi.android.a.a.a.h) -> a
    java.lang.String toString() -> toString
    java.lang.String k() -> k
    boolean e(java.lang.String) -> e
    long l() -> l
    java.lang.String m() -> m
net.youmi.android.a.a.a.b -> net.youmi.android.a.a.a.b:
    java.lang.String a(net.youmi.android.a.a.a.a) -> a
    boolean a(net.youmi.android.a.a.a.a,java.lang.String) -> a
net.youmi.android.a.a.a.c -> net.youmi.android.a.a.a.c:
    long a -> a
    java.util.ArrayList b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.util.ArrayList a() -> a
    void a(java.lang.String) -> a
    java.lang.String b() -> b
    void b(java.lang.String) -> b
    java.lang.String c() -> c
    void c(java.lang.String) -> c
    java.lang.String d() -> d
    void d(java.lang.String) -> d
    java.lang.String e() -> e
    void e(java.lang.String) -> e
    java.lang.String f() -> f
    void f(java.lang.String) -> f
    java.lang.String g() -> g
    void g(java.lang.String) -> g
    void h(java.lang.String) -> h
    java.lang.String h() -> h
    java.lang.String i() -> i
    void i(java.lang.String) -> i
    long j() -> j
    void a(long) -> a
    java.lang.String toString() -> toString
net.youmi.android.a.a.a.d -> net.youmi.android.a.a.a.d:
    long a -> a
    int b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    int e -> e
    long a() -> a
    void a(long) -> a
    int b() -> b
    void a(int) -> a
    java.lang.String c() -> c
    void a(java.lang.String) -> a
    java.lang.String d() -> d
    void b(java.lang.String) -> b
    int e() -> e
    void b(int) -> b
    java.lang.String toString() -> toString
net.youmi.android.a.a.a.e -> net.youmi.android.a.a.a.e:
    long a -> a
    long b -> b
    java.lang.String c -> c
    long a() -> a
    void a(long) -> a
    void b(long) -> b
    long b() -> b
    java.lang.String c() -> c
    void a(java.lang.String) -> a
    java.lang.String toString() -> toString
net.youmi.android.a.a.a.f -> net.youmi.android.a.a.a.f:
    boolean a -> a
    boolean b -> b
    boolean c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    int g -> g
    long h -> h
    boolean a(android.content.Context,java.lang.String) -> a
    void a(boolean) -> a
    boolean a() -> a
    void b(boolean) -> b
    boolean b() -> b
    boolean c() -> c
    int d() -> d
    java.lang.String toString() -> toString
net.youmi.android.a.a.a.g -> net.youmi.android.a.a.a.g:
    long b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    int a -> a
    java.lang.String g -> g
    long a() -> a
    void a(long) -> a
    java.lang.String b() -> b
    void a(java.lang.String) -> a
    java.lang.String c() -> c
    void b(java.lang.String) -> b
    java.lang.String d() -> d
    void c(java.lang.String) -> c
    java.lang.String e() -> e
    void d(java.lang.String) -> d
    java.lang.String f() -> f
    void e(java.lang.String) -> e
    java.lang.String toString() -> toString
    int g() -> g
    void a(int) -> a
net.youmi.android.a.a.a.h -> net.youmi.android.a.a.a.h:
    long a -> a
    int b -> b
    long a() -> a
    void a(long) -> a
    int b() -> b
    void a(int) -> a
net.youmi.android.a.a.a.i -> net.youmi.android.a.a.a.i:
    int a -> a
    java.lang.String b -> b
    int c -> c
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    int b() -> b
    void a(int) -> a
    int c() -> c
    void b(int) -> b
net.youmi.android.a.a.a.j -> net.youmi.android.a.a.a.j:
    long a -> a
    java.util.List b -> b
    long a() -> a
    void a(long) -> a
    java.util.List b() -> b
    void a(net.youmi.android.a.a.a.i) -> a
    java.lang.String toString() -> toString
net.youmi.android.a.a.b -> net.youmi.android.a.a.b:
    net.youmi.android.a.a.c a() -> a
    net.youmi.android.a.a.c a(org.json.JSONObject,net.youmi.android.a.a.c) -> a
net.youmi.android.a.a.c -> net.youmi.android.a.a.c:
    org.json.JSONObject a() -> a
    boolean a(org.json.JSONObject) -> a
net.youmi.android.a.a.d -> net.youmi.android.a.a.d:
    net.youmi.android.a.a.d a -> a
    net.youmi.android.a.a.d a(android.content.Context) -> a
    net.youmi.android.a.a.a a(android.content.Context,java.lang.String,net.youmi.android.a.a.b) -> a
    boolean a(android.content.Context,net.youmi.android.a.a.a) -> a
    boolean a(java.lang.String) -> a
net.youmi.android.a.a.e -> net.youmi.android.a.a.e:
    void a(android.content.Context,net.youmi.android.a.h.e,java.util.List) -> a
net.youmi.android.a.b.a -> net.youmi.android.a.b.a:
    net.youmi.android.e.a.g a -> a
    net.youmi.android.e.a.f b -> b
    void a(android.content.Context) -> a
    boolean a(android.content.Context,java.lang.String,java.lang.String,long) -> a
    boolean a(android.content.Context,java.lang.String,boolean,long) -> a
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String) -> a
    boolean a(android.content.Context,java.lang.String,boolean) -> a
net.youmi.android.a.c.a -> net.youmi.android.a.c.a:
    android.webkit.WebViewClient a(net.youmi.android.a.k.a.h) -> a
    int a() -> a
    android.webkit.WebChromeClient a(android.content.Context,net.youmi.android.a.k.a.b) -> a
    void a(android.content.Context,android.webkit.WebSettings) -> a
    void a(android.content.Context) -> a
    void a(android.os.AsyncTask,java.lang.Object[]) -> a
net.youmi.android.a.c.b -> net.youmi.android.a.c.b:
    void a(android.content.Context) -> a
net.youmi.android.a.c.c -> net.youmi.android.a.c.c:
    void a(android.os.AsyncTask,java.lang.Object[]) -> a
net.youmi.android.a.c.d -> net.youmi.android.a.c.d:
    int a() -> a
net.youmi.android.a.c.e -> net.youmi.android.a.c.e:
    net.youmi.android.a.k.a.b a -> a
    net.youmi.android.a.c.e a(net.youmi.android.a.k.a.b) -> a
    void onReceivedTitle(android.webkit.WebView,java.lang.String) -> onReceivedTitle
    void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
    boolean onJsAlert(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsAlert
    boolean onJsConfirm(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsConfirm
    boolean onJsPrompt(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsPromptResult) -> onJsPrompt
net.youmi.android.a.c.f -> net.youmi.android.a.c.f:
    net.youmi.android.a.c.f b(net.youmi.android.a.k.a.b) -> b
    void onExceededDatabaseQuota(java.lang.String,java.lang.String,long,long,long,android.webkit.WebStorage$QuotaUpdater) -> onExceededDatabaseQuota
    void onGeolocationPermissionsShowPrompt(java.lang.String,android.webkit.GeolocationPermissions$Callback) -> onGeolocationPermissionsShowPrompt
net.youmi.android.a.c.g -> net.youmi.android.a.c.g:
    android.webkit.GeolocationPermissions$Callback a -> a
    java.lang.String b -> b
    net.youmi.android.a.c.f c -> c
    void onClick(android.content.DialogInterface,int) -> onClick
net.youmi.android.a.c.h -> net.youmi.android.a.c.h:
    android.webkit.GeolocationPermissions$Callback a -> a
    java.lang.String b -> b
    net.youmi.android.a.c.f c -> c
    void onClick(android.content.DialogInterface,int) -> onClick
net.youmi.android.a.c.i -> net.youmi.android.a.c.i:
    android.webkit.GeolocationPermissions$Callback a -> a
    java.lang.String b -> b
    net.youmi.android.a.c.f c -> c
    void onClick(android.content.DialogInterface,int) -> onClick
net.youmi.android.a.c.j -> net.youmi.android.a.c.j:
    net.youmi.android.a.c.j c(net.youmi.android.a.k.a.b) -> c
    void onShowCustomView(android.view.View,android.webkit.WebChromeClient$CustomViewCallback) -> onShowCustomView
    void onHideCustomView() -> onHideCustomView
    android.graphics.Bitmap getDefaultVideoPoster() -> getDefaultVideoPoster
    android.view.View getVideoLoadingProgressView() -> getVideoLoadingProgressView
    void onReachedMaxAppCacheSize(long,long,android.webkit.WebStorage$QuotaUpdater) -> onReachedMaxAppCacheSize
net.youmi.android.a.c.k -> net.youmi.android.a.c.k:
    net.youmi.android.a.k.a.h a -> a
    net.youmi.android.a.c.k a(net.youmi.android.a.k.a.h) -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
net.youmi.android.a.c.l -> net.youmi.android.a.c.l:
    net.youmi.android.a.k.a.h a -> a
    net.youmi.android.a.c.l a(net.youmi.android.a.k.a.h) -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError) -> onReceivedSslError
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
net.youmi.android.a.c.m -> net.youmi.android.a.c.m:
    void a(android.content.Context,android.webkit.WebSettings) -> a
net.youmi.android.a.c.n -> net.youmi.android.a.c.n:
    void a(android.content.Context,android.webkit.WebSettings) -> a
net.youmi.android.a.d.a -> net.youmi.android.a.d.a:
    net.youmi.android.e.a.d a -> a
    net.youmi.android.e.a.d b -> b
    net.youmi.android.e.a.d c -> c
    net.youmi.android.e.a.d a(android.content.Context) -> a
    net.youmi.android.e.a.d b(android.content.Context) -> b
    net.youmi.android.e.a.d c(android.content.Context) -> c
net.youmi.android.a.e.a.a -> net.youmi.android.a.e.a.a:
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String) -> a
    java.lang.String a() -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
net.youmi.android.a.e.a.b -> net.youmi.android.a.e.a.b:
    java.lang.String a -> a
    java.lang.String b -> b
    long c -> c
    java.lang.String k() -> k
    boolean e(java.lang.String) -> e
    void a(long) -> a
    long l() -> l
    java.lang.String m() -> m
    java.lang.String a() -> a
    void a(java.lang.String) -> a
net.youmi.android.a.e.a.c -> net.youmi.android.a.e.a.c:
    net.youmi.android.a.e.a.c a -> a
    net.youmi.android.a.e.a.c a(android.content.Context) -> a
    java.lang.String a(java.lang.String,java.lang.String) -> a
    boolean a(java.lang.String,java.lang.String,long) -> a
net.youmi.android.a.f.a -> net.youmi.android.a.f.a:
    net.youmi.android.c.f.a a(net.youmi.android.e.b.b) -> a
    net.youmi.android.e.b.d a() -> a
    java.io.File a(java.lang.String,java.lang.String) -> a
net.youmi.android.a.f.b -> net.youmi.android.a.f.b:
    net.youmi.android.a.f.b a -> a
    net.youmi.android.a.f.b a(android.content.Context) -> a
net.youmi.android.a.f.c -> net.youmi.android.a.f.c:
    net.youmi.android.a.f.c a -> a
    net.youmi.android.a.f.c a(android.content.Context) -> a
net.youmi.android.a.g.a -> net.youmi.android.a.g.a:
    net.youmi.android.a.g.a a -> a
    net.youmi.android.a.g.a b -> b
    net.youmi.android.a.g.a c -> c
    net.youmi.android.a.g.a d -> d
    net.youmi.android.a.g.a e -> e
    net.youmi.android.a.g.a f -> f
    net.youmi.android.a.g.a g -> g
    java.lang.String b() -> b
    java.io.File c(java.lang.String) -> c
    net.youmi.android.a.g.a a(android.content.Context,net.youmi.android.a.g.a,net.youmi.android.a.g.a,int,long) -> a
    net.youmi.android.a.g.a a(android.content.Context,int) -> a
    net.youmi.android.a.g.a b(android.content.Context,int) -> b
    net.youmi.android.a.g.a c(android.content.Context,int) -> c
    net.youmi.android.a.g.a d(android.content.Context,int) -> d
    net.youmi.android.a.g.a a(android.content.Context) -> a
    net.youmi.android.a.g.a b(android.content.Context) -> b
    net.youmi.android.a.g.a c(android.content.Context) -> c
net.youmi.android.a.h.a -> net.youmi.android.a.h.a:
net.youmi.android.a.h.a.a -> net.youmi.android.a.h.a.a:
    java.lang.String a -> a
    java.lang.String b -> b
    long c -> c
    boolean d -> d
    boolean a() -> a
    java.lang.String k() -> k
    boolean e(java.lang.String) -> e
    void a(java.lang.String) -> a
    java.lang.String b() -> b
    void a(long) -> a
    long l() -> l
    java.lang.String m() -> m
net.youmi.android.a.h.a.b -> net.youmi.android.a.h.a.b:
    net.youmi.android.a.h.a.b a -> a
    net.youmi.android.a.h.a.b a(android.content.Context) -> a
    net.youmi.android.a.h.a.a a(java.lang.String) -> a
    boolean a(java.lang.String,java.lang.String,long) -> a
    boolean a(java.util.List) -> a
    boolean b(java.lang.String) -> b
net.youmi.android.a.h.b -> net.youmi.android.a.h.b:
    net.youmi.android.a.h.f js_SDK_Handler_ClearCurrentBrowserHistory() -> js_SDK_Handler_ClearCurrentBrowserHistory
    boolean js_SDK_Handler_RunOnUIThread(java.lang.Runnable) -> js_SDK_Handler_RunOnUIThread
net.youmi.android.a.h.b.a -> net.youmi.android.a.h.b.a:
    java.lang.String a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,java.lang.String) -> a
net.youmi.android.a.h.b.a.a -> net.youmi.android.a.h.b.a.a:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.a.h.b.a.b -> net.youmi.android.a.h.b.a.b:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.a.h.b.a.c -> net.youmi.android.a.h.b.a.c:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.a.h.b.a.d -> net.youmi.android.a.h.b.a.d:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.a.h.b.a.e -> net.youmi.android.a.h.b.a.e:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.a.h.b.a.f -> net.youmi.android.a.h.b.a.f:
    int[] a -> a
net.youmi.android.a.h.b.a.g -> net.youmi.android.a.h.b.a.g:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
    void a(android.content.Context,java.lang.String,int) -> a
net.youmi.android.a.h.b.a.h -> net.youmi.android.a.h.b.a.h:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.a.h.b.a.i -> net.youmi.android.a.h.b.a.i:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.a.h.b.a.j -> net.youmi.android.a.h.b.a.j:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.a.h.b.a.k -> net.youmi.android.a.h.b.a.k:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.a.h.b.a.l -> net.youmi.android.a.h.b.a.l:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b) -> a
net.youmi.android.a.h.b.b -> net.youmi.android.a.h.b.b:
    net.youmi.android.a.h.y a -> a
    net.youmi.android.a.h.a b -> b
    void a(net.youmi.android.a.h.y) -> a
    void a(net.youmi.android.a.h.a) -> a
    java.lang.String a(org.json.JSONObject) -> a
    org.json.JSONObject a(int) -> a
    java.lang.String b(int) -> b
net.youmi.android.a.h.b.b.a -> net.youmi.android.a.h.b.b.a:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b) -> a
net.youmi.android.a.h.b.b.b -> net.youmi.android.a.h.b.b.b:
    int[] a -> a
net.youmi.android.a.h.b.b.c -> net.youmi.android.a.h.b.b.c:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.a.h.b.b.d -> net.youmi.android.a.h.b.b.d:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.a.h.b.b.e -> net.youmi.android.a.h.b.b.e:
    int[] a -> a
net.youmi.android.a.h.b.b.f -> net.youmi.android.a.h.b.b.f:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b) -> a
net.youmi.android.a.h.b.b.g -> net.youmi.android.a.h.b.b.g:
    int[] a -> a
net.youmi.android.a.h.b.b.h -> net.youmi.android.a.h.b.b.h:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.a.h.b.b.i -> net.youmi.android.a.h.b.b.i:
    int[] a -> a
net.youmi.android.a.h.b.b.j -> net.youmi.android.a.h.b.b.j:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.a.h.b.b.k -> net.youmi.android.a.h.b.b.k:
    int[] a -> a
net.youmi.android.a.h.b.b.l -> net.youmi.android.a.h.b.b.l:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.a.h.b.b.m -> net.youmi.android.a.h.b.b.m:
    int[] a -> a
net.youmi.android.a.h.b.b.n -> net.youmi.android.a.h.b.b.n:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b) -> a
net.youmi.android.a.h.b.b.o -> net.youmi.android.a.h.b.b.o:
    net.youmi.android.a.h.b a -> a
    net.youmi.android.a.h.b.b.n b -> b
    void run() -> run
net.youmi.android.a.h.b.b.p -> net.youmi.android.a.h.b.b.p:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.a.h.b.b.q -> net.youmi.android.a.h.b.b.q:
    android.content.Context a -> a
    net.youmi.android.a.h.c.a.a b -> b
    net.youmi.android.a.h.b.b.p c -> c
    void run() -> run
net.youmi.android.a.h.b.b.r -> net.youmi.android.a.h.b.b.r:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.a.h.b.b.s -> net.youmi.android.a.h.b.b.s:
    int[] a -> a
net.youmi.android.a.h.b.c -> net.youmi.android.a.h.b.c:
    java.lang.String a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,java.lang.String) -> a
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b) -> a
net.youmi.android.a.h.b.c.a -> net.youmi.android.a.h.b.c.a:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.a.h.b.c.b -> net.youmi.android.a.h.b.c.b:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.a.h.b.c.c -> net.youmi.android.a.h.b.c.c:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.a.h.b.c.d -> net.youmi.android.a.h.b.c.d:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.a.h.b.d -> net.youmi.android.a.h.b.d:
    java.lang.String a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,java.lang.String) -> a
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.a.h.b.d.a -> net.youmi.android.a.h.b.d.a:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b) -> a
net.youmi.android.a.h.b.d.b -> net.youmi.android.a.h.b.d.b:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b) -> a
net.youmi.android.a.h.b.e.a -> net.youmi.android.a.h.b.e.a:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b) -> a
net.youmi.android.a.h.b.e.b -> net.youmi.android.a.h.b.e.b:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.a.h.b.e.c -> net.youmi.android.a.h.b.e.c:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.a.h.b.e.d -> net.youmi.android.a.h.b.e.d:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.a.h.b.e.e -> net.youmi.android.a.h.b.e.e:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.a.h.b.f.a -> net.youmi.android.a.h.b.f.a:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.a.h.b.f.b -> net.youmi.android.a.h.b.f.b:
    android.content.Context a -> a
    java.lang.String b -> b
    int c -> c
    net.youmi.android.a.h.b.f.a d -> d
    void run() -> run
net.youmi.android.a.h.b.f.c -> net.youmi.android.a.h.b.f.c:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.a.h.b.g.a -> net.youmi.android.a.h.b.g.a:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b) -> a
net.youmi.android.a.h.b.g.b -> net.youmi.android.a.h.b.g.b:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.a.h.b.g.c -> net.youmi.android.a.h.b.g.c:
    int[] a -> a
net.youmi.android.a.h.b.g.d -> net.youmi.android.a.h.b.g.d:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.a.h.b.g.e -> net.youmi.android.a.h.b.g.e:
    int[] a -> a
net.youmi.android.a.h.b.h.a -> net.youmi.android.a.h.b.h.a:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.a.h.b.h.b -> net.youmi.android.a.h.b.h.b:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.a.h.b.h.c -> net.youmi.android.a.h.b.h.c:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
    java.lang.String a(net.youmi.android.b.a.b,java.lang.String) -> a
net.youmi.android.a.h.c -> net.youmi.android.a.h.c:
    void a(java.lang.String,java.lang.String) -> a
net.youmi.android.a.h.c.a.a -> net.youmi.android.a.h.c.a.a:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    java.lang.String b() -> b
    void b(java.lang.String) -> b
    java.lang.String c() -> c
    void c(java.lang.String) -> c
    java.lang.String d() -> d
    void d(java.lang.String) -> d
    java.lang.String e() -> e
    void e(java.lang.String) -> e
    java.lang.String f() -> f
    void f(java.lang.String) -> f
    java.lang.String g() -> g
    void g(java.lang.String) -> g
    boolean h() -> h
net.youmi.android.a.h.c.b.a -> net.youmi.android.a.h.c.b.a:
    net.youmi.android.a.h.c.b.a a -> a
    java.util.HashSet b -> b
    net.youmi.android.a.h.c.b.a a() -> a
    java.util.HashSet b() -> b
    void a(net.youmi.android.a.h.c) -> a
    void b(net.youmi.android.a.h.c) -> b
    void a(java.lang.String,java.lang.String) -> a
net.youmi.android.a.h.c.b.b -> net.youmi.android.a.h.c.b.b:
    net.youmi.android.a.h.c a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    net.youmi.android.a.h.c.b.a d -> d
    void run() -> run
net.youmi.android.a.h.c.b.c -> net.youmi.android.a.h.c.b.c:
    android.content.Context a -> a
    net.youmi.android.a.h.c.b.c b -> b
    java.util.HashMap c -> c
    net.youmi.android.a.h.c.b.c a(android.content.Context) -> a
    boolean a(net.youmi.android.a.h.c.a.a) -> a
    void a(net.youmi.android.a.h.c.a.a,android.graphics.Bitmap) -> a
    void a(java.lang.String,android.graphics.Bitmap) -> a
    android.graphics.Bitmap a(android.graphics.Bitmap) -> a
    void a(java.lang.String) -> a
net.youmi.android.a.h.c.b.d -> net.youmi.android.a.h.c.b.d:
    android.content.Context a -> a
    java.util.ArrayList c -> c
    java.lang.String d -> d
    long e -> e
    org.json.JSONArray b -> b
    java.lang.String f -> f
    net.youmi.android.a.h.e g -> g
    net.youmi.android.a.h.c.b.e h -> h
    void run() -> run
net.youmi.android.a.h.c.b.e -> net.youmi.android.a.h.c.b.e:
    net.youmi.android.a.h.c.b.d a -> a
    void b(net.youmi.android.e.b.b) -> b
    void a(net.youmi.android.e.b.b,java.io.File) -> a
    void c(net.youmi.android.e.b.b) -> c
    void b(net.youmi.android.e.b.b,java.io.File) -> b
net.youmi.android.a.h.c.b.f -> net.youmi.android.a.h.c.b.f:
    android.content.Context a -> a
    java.util.ArrayList c -> c
    java.lang.String d -> d
    long e -> e
    org.json.JSONArray b -> b
    java.lang.String f -> f
    net.youmi.android.a.h.e g -> g
    void run() -> run
net.youmi.android.a.h.d -> net.youmi.android.a.h.d:
    void setWebTitle(java.lang.String) -> setWebTitle
net.youmi.android.a.h.e -> net.youmi.android.a.h.e:
    android.content.Context a() -> a
    android.app.Activity b() -> b
    void a(net.youmi.android.a.k.a.d) -> a
    net.youmi.android.a.h.f c() -> c
    int d() -> d
    int e() -> e
    java.lang.String a(java.lang.String,java.lang.String) -> a
    java.lang.String a(net.youmi.android.a.h.j) -> a
    net.youmi.android.a.h.f f() -> f
    net.youmi.android.a.h.f a(net.youmi.android.a.h.m) -> a
    net.youmi.android.a.h.f a(net.youmi.android.a.h.n) -> a
    net.youmi.android.a.h.f a(net.youmi.android.a.h.p) -> a
    net.youmi.android.a.h.f a(net.youmi.android.a.h.i,net.youmi.android.a.h.o) -> a
    net.youmi.android.a.h.f a(android.content.Context,java.util.List) -> a
    net.youmi.android.a.h.f a(java.lang.String,java.lang.String,java.lang.String,long) -> a
    net.youmi.android.a.h.f a(java.lang.String) -> a
    net.youmi.android.a.h.f a(int,net.youmi.android.a.h.j) -> a
    net.youmi.android.a.h.f a(int) -> a
    net.youmi.android.a.h.f b(net.youmi.android.a.h.p) -> b
net.youmi.android.a.h.f -> net.youmi.android.a.h.f:
    net.youmi.android.a.h.f a -> a
    net.youmi.android.a.h.f b -> b
    net.youmi.android.a.h.f c -> c
    net.youmi.android.a.h.f[] d -> d
    net.youmi.android.a.h.f[] values() -> values
    net.youmi.android.a.h.f valueOf(java.lang.String) -> valueOf
net.youmi.android.a.h.g -> net.youmi.android.a.h.g:
    net.youmi.android.a.h.e a -> a
    net.youmi.android.a.h.b b -> b
    net.youmi.android.a.h.k c -> c
    net.youmi.android.a.h.y d -> d
    net.youmi.android.a.h.a e -> e
    void setYmWebBrowser(net.youmi.android.a.h.y) -> setYmWebBrowser
    void setExtendJsObject(net.youmi.android.a.h.a) -> setExtendJsObject
    boolean d(java.lang.String) -> d
    boolean i(java.lang.String) -> i
    boolean e(java.lang.String) -> e
    boolean w(java.lang.String) -> w
    boolean dd(java.lang.String) -> dd
    boolean di(java.lang.String) -> di
    boolean de(java.lang.String) -> de
    boolean dw(java.lang.String) -> dw
    java.lang.String a(int,int,java.lang.String) -> a
    net.youmi.android.a.h.b.a a(int) -> a
    net.youmi.android.a.h.b.a b(int) -> b
    net.youmi.android.a.h.b.a c(int) -> c
    net.youmi.android.a.h.b.a d(int) -> d
    net.youmi.android.a.h.b.a e(int) -> e
    net.youmi.android.a.h.b.a f(int) -> f
    net.youmi.android.a.h.b.a g(int) -> g
    net.youmi.android.a.h.b.a h(int) -> h
net.youmi.android.a.h.h -> net.youmi.android.a.h.h:
    java.lang.String a(int,int,java.lang.String) -> a
    boolean d(java.lang.String) -> d
    boolean i(java.lang.String) -> i
    boolean w(java.lang.String) -> w
    boolean e(java.lang.String) -> e
    boolean di(java.lang.String) -> di
    boolean de(java.lang.String) -> de
    boolean dw(java.lang.String) -> dw
    boolean dd(java.lang.String) -> dd
    net.youmi.android.a.h.b.a a(int) -> a
    net.youmi.android.a.h.b.a b(int) -> b
    net.youmi.android.a.h.b.a c(int) -> c
    net.youmi.android.a.h.b.a d(int) -> d
    net.youmi.android.a.h.b.a e(int) -> e
    net.youmi.android.a.h.b.a f(int) -> f
    net.youmi.android.a.h.b.a g(int) -> g
    net.youmi.android.a.h.b.a h(int) -> h
net.youmi.android.a.h.i -> net.youmi.android.a.h.i:
    net.youmi.android.a.a.a.a a -> a
    int b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    long f -> f
    java.lang.String g -> g
    boolean h -> h
    boolean i -> i
    net.youmi.android.a.h.j j -> j
    void a(long) -> a
    long a() -> a
    void a(int) -> a
    java.lang.String b() -> b
    void a(java.lang.String) -> a
    java.lang.String c() -> c
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    java.lang.String d() -> d
    void d(java.lang.String) -> d
    boolean e() -> e
    void a(boolean) -> a
    net.youmi.android.a.a.a.a f() -> f
    void a(net.youmi.android.a.a.a.a) -> a
    net.youmi.android.a.h.j g() -> g
    void a(net.youmi.android.a.h.j) -> a
    boolean h() -> h
    void b(boolean) -> b
net.youmi.android.a.h.j -> net.youmi.android.a.h.j:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    java.lang.String b() -> b
    void b(java.lang.String) -> b
    java.lang.String c() -> c
    void c(java.lang.String) -> c
    java.lang.String d() -> d
    void d(java.lang.String) -> d
    boolean e() -> e
    java.lang.String toString() -> toString
net.youmi.android.a.h.k -> net.youmi.android.a.h.k:
    boolean a(int) -> a
    net.youmi.android.a.h.b.a a(int,int) -> a
net.youmi.android.a.h.l -> net.youmi.android.a.h.l:
    int a -> a
    int b -> b
    java.lang.String c -> c
    int d -> d
    int e -> e
    net.youmi.android.a.h.k f -> f
    boolean a() -> a
    java.lang.String b() -> b
    int c() -> c
    void a(int) -> a
    void a(java.lang.String) -> a
    void b(int) -> b
    int d() -> d
    int e() -> e
    int f() -> f
    net.youmi.android.a.h.k g() -> g
    void a(net.youmi.android.a.h.k) -> a
net.youmi.android.a.h.m -> net.youmi.android.a.h.m:
    java.util.ArrayList a -> a
    java.lang.String b -> b
    void a(java.lang.String) -> a
    boolean a(net.youmi.android.a.h.l) -> a
    net.youmi.android.a.h.l a(int) -> a
net.youmi.android.a.h.n -> net.youmi.android.a.h.n:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    int e -> e
    void b(java.lang.String) -> b
    java.lang.String h() -> h
    void c(java.lang.String) -> c
    java.lang.String i() -> i
    java.lang.String j() -> j
    int k() -> k
    void d(java.lang.String) -> d
    java.lang.String l() -> l
    void e(java.lang.String) -> e
net.youmi.android.a.h.o -> net.youmi.android.a.h.o:
    long a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    int d -> d
    boolean e -> e
    void e() -> e
    java.lang.String a() -> a
    long b() -> b
    java.lang.String c() -> c
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    boolean d() -> d
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
net.youmi.android.a.h.p -> net.youmi.android.a.h.p:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    double e -> e
    double f -> f
    boolean g -> g
    void c(int) -> c
    int m() -> m
    void d(int) -> d
    int n() -> n
    void e(int) -> e
    int o() -> o
    void f(int) -> f
    int p() -> p
    int a(android.content.Context) -> a
    int b(android.content.Context) -> b
    boolean q() -> q
    void a(boolean) -> a
    double r() -> r
    void a(double) -> a
    double s() -> s
    void b(double) -> b
net.youmi.android.a.h.q -> net.youmi.android.a.h.q:
    long a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    void a(java.lang.String) -> a
    java.lang.String a() -> a
    java.lang.String k() -> k
    boolean e(java.lang.String) -> e
    long l() -> l
    java.lang.String m() -> m
net.youmi.android.a.h.r -> net.youmi.android.a.h.r:
    java.util.Hashtable a -> a
    net.youmi.android.a.h.r b -> b
    void a(android.content.Context,android.webkit.WebView,java.lang.String) -> a
    void a(java.lang.String,java.lang.String) -> a
    net.youmi.android.a.h.r a() -> a
    java.lang.String a(java.lang.String) -> a
net.youmi.android.a.h.s -> net.youmi.android.a.h.s:
    java.util.Hashtable a -> a
    net.youmi.android.a.h.s b -> b
    void a(android.content.Context,android.webkit.WebView,java.lang.String) -> a
    void a(java.lang.String,java.lang.String) -> a
    net.youmi.android.a.h.s a() -> a
    java.lang.String a(java.lang.String) -> a
net.youmi.android.a.h.t -> net.youmi.android.a.h.t:
    net.youmi.android.e.a.g a -> a
    net.youmi.android.e.a.g a(android.content.Context) -> a
    boolean a(android.content.Context,java.lang.String,java.lang.String,long) -> a
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String) -> a
net.youmi.android.a.h.u -> net.youmi.android.a.h.u:
    net.youmi.android.e.a.f a -> a
    net.youmi.android.e.a.f a(android.content.Context) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    boolean a(android.content.Context,java.lang.String,java.lang.String,long) -> a
net.youmi.android.a.h.v -> net.youmi.android.a.h.v:
    android.content.Context a -> a
    long b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    long g -> g
    boolean h -> h
    boolean i -> i
    java.lang.String j -> j
    void run() -> run
    int a() -> a
    void a(int) -> a
net.youmi.android.a.h.w -> net.youmi.android.a.h.w:
    void a(android.content.Context,android.webkit.WebView,java.lang.String) -> a
net.youmi.android.a.h.x -> net.youmi.android.a.h.x:
    android.content.Context a -> a
    java.lang.String b -> b
    android.webkit.WebView c -> c
    void run() -> run
net.youmi.android.a.h.y -> net.youmi.android.a.h.y:
net.youmi.android.a.i.a -> net.youmi.android.a.i.a:
    android.location.Location a -> a
    net.youmi.android.a.i.a b -> b
    android.content.Context c -> c
    net.youmi.android.a.i.a a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void a(android.location.Location) -> a
    android.location.Location a() -> a
net.youmi.android.a.j.a -> net.youmi.android.a.j.a:
    net.youmi.android.c.m.a a -> a
    android.view.animation.Animation b -> b
    net.youmi.android.a.j.a a(android.content.Context,android.view.View,int) -> a
    void a() -> a
net.youmi.android.a.k.a -> net.youmi.android.a.k.a:
    android.webkit.WebView a -> a
    java.lang.String b -> b
    void run() -> run
net.youmi.android.a.k.a.a -> net.youmi.android.a.k.a.a:
    net.youmi.android.a.k.a.i a -> a
    android.content.Context b -> b
    android.widget.RelativeLayout d -> d
    android.widget.RelativeLayout e -> e
    net.youmi.android.a.h.e c -> c
    net.youmi.android.a.h.p f -> f
    int g -> g
    int h -> h
    void a(android.content.Context,net.youmi.android.a.h.p,net.youmi.android.a.h.e,boolean) -> a
    void a(int) -> a
    void a(int,int,int,int) -> a
    void onBackPressed() -> onBackPressed
    boolean js_SDK_Handler_RunOnUIThread(java.lang.Runnable) -> js_SDK_Handler_RunOnUIThread
    net.youmi.android.a.h.f js_SDK_Handler_ClearCurrentBrowserHistory() -> js_SDK_Handler_ClearCurrentBrowserHistory
    void setWebTitle(java.lang.String) -> setWebTitle
    boolean proxyCloseCurrentWindow() -> proxyCloseCurrentWindow
    boolean proxyLoadUrl(java.lang.String) -> proxyLoadUrl
    boolean proxyPostUrl(java.lang.String,byte[]) -> proxyPostUrl
    boolean proxyClearWebViewHistory() -> proxyClearWebViewHistory
    void a() -> a
net.youmi.android.a.k.a.b -> net.youmi.android.a.k.a.b:
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    net.youmi.android.a.k.a.h d -> d
    net.youmi.android.a.k.a.f e -> e
    net.youmi.android.a.h.e f -> f
    net.youmi.android.a.h.b g -> g
    net.youmi.android.a.h.e a() -> a
    void a(net.youmi.android.a.h.e) -> a
    net.youmi.android.a.h.b b() -> b
    void a(net.youmi.android.a.h.b) -> a
    int c() -> c
    void a(int) -> a
    java.lang.String d() -> d
    void a(java.lang.String) -> a
    java.lang.String e() -> e
    void b(java.lang.String) -> b
    net.youmi.android.a.k.a.f f() -> f
    void a(net.youmi.android.a.k.a.f) -> a
    void a(net.youmi.android.a.k.a.h) -> a
    net.youmi.android.a.k.a.h g() -> g
    android.app.Activity h() -> h
net.youmi.android.a.k.a.c -> net.youmi.android.a.k.a.c:
    net.youmi.android.a.k.a.a a -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
net.youmi.android.a.k.a.d -> net.youmi.android.a.k.a.d:
    boolean proxyCloseCurrentWindow() -> proxyCloseCurrentWindow
    boolean proxyLoadUrl(java.lang.String) -> proxyLoadUrl
    boolean proxyPostUrl(java.lang.String,byte[]) -> proxyPostUrl
    boolean proxyClearWebViewHistory() -> proxyClearWebViewHistory
    boolean proxySetVisibility(int) -> proxySetVisibility
net.youmi.android.a.k.a.e -> net.youmi.android.a.k.a.e:
    boolean a() -> a
    boolean b() -> b
    boolean canGoBack() -> canGoBack
    boolean canGoForward() -> canGoForward
    void loadUrl(java.lang.String) -> loadUrl
    void clearHistory() -> clearHistory
    android.view.View getCurrentView() -> getCurrentView
    void reload() -> reload
    void postUrl(java.lang.String,byte[]) -> postUrl
net.youmi.android.a.k.a.f -> net.youmi.android.a.k.a.f:
    void a(android.webkit.WebView,int) -> a
    void a(android.webkit.WebView,java.lang.String) -> a
net.youmi.android.a.k.a.g -> net.youmi.android.a.k.a.g:
    void onWebPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onWebPageStarted
    void onWebReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onWebReceivedError
    void onWebPageFinished(android.webkit.WebView,java.lang.String) -> onWebPageFinished
net.youmi.android.a.k.a.h -> net.youmi.android.a.k.a.h:
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
net.youmi.android.a.k.a.i -> net.youmi.android.a.k.a.i:
    net.youmi.android.a.k.a.e e -> e
    net.youmi.android.a.k.a.o f -> f
    net.youmi.android.a.k.a.n g -> g
    net.youmi.android.a.k.a.g h -> h
    boolean a -> a
    boolean b -> b
    boolean c -> c
    java.lang.String d -> d
    android.widget.RelativeLayout i -> i
    net.youmi.android.a.h.d j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    android.content.Context m -> m
    java.util.Timer n -> n
    java.util.TimerTask o -> o
    void a(java.lang.String) -> a
    boolean c() -> c
    void reload() -> reload
    void loadUrl(java.lang.String) -> loadUrl
    void postUrl(java.lang.String,byte[]) -> postUrl
    void onWebPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onWebPageStarted
    void onWebReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onWebReceivedError
    void onWebPageFinished(android.webkit.WebView,java.lang.String) -> onWebPageFinished
    void a(android.webkit.WebView,int) -> a
    void a(boolean,int) -> a
    void a(net.youmi.android.a.k.a.g) -> a
    void a(android.webkit.WebView,java.lang.String) -> a
    boolean a() -> a
    boolean b() -> b
    boolean canGoBack() -> canGoBack
    boolean canGoForward() -> canGoForward
    void clearHistory() -> clearHistory
    android.view.View getCurrentView() -> getCurrentView
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    net.youmi.android.a.h.f js_SDK_Handler_ClearCurrentBrowserHistory() -> js_SDK_Handler_ClearCurrentBrowserHistory
    boolean js_SDK_Handler_RunOnUIThread(java.lang.Runnable) -> js_SDK_Handler_RunOnUIThread
    void onClick(android.view.View) -> onClick
    void a(net.youmi.android.a.k.a.i,boolean,int) -> a
net.youmi.android.a.k.a.j -> net.youmi.android.a.k.a.j:
    int b -> b
    net.youmi.android.a.k.a.i a -> a
    void run() -> run
    int a(net.youmi.android.a.k.a.j) -> a
    int a(net.youmi.android.a.k.a.j,int) -> a
net.youmi.android.a.k.a.k -> net.youmi.android.a.k.a.k:
    net.youmi.android.a.k.a.j a -> a
    void run() -> run
net.youmi.android.a.k.a.l -> net.youmi.android.a.k.a.l:
    boolean a -> a
    boolean b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    net.youmi.android.a.k.a.f f -> f
    net.youmi.android.a.k.a.h g -> g
    android.content.Context h -> h
    net.youmi.android.a.k.a.b i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    void a(android.content.Context,net.youmi.android.a.k.a.b,net.youmi.android.a.h.g) -> a
    void c() -> c
    void a(net.youmi.android.a.h.g,int) -> a
    void a(int) -> a
    void d() -> d
    void a(net.youmi.android.a.k.a.h) -> a
    void a(net.youmi.android.a.k.a.f) -> a
    void setEnableOffersJsCodeLoader(boolean) -> setEnableOffersJsCodeLoader
    void setEnableOffersJsFileLoader(boolean) -> setEnableOffersJsFileLoader
    void onWebPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onWebPageStarted
    void onWebReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onWebReceivedError
    void onWebPageFinished(android.webkit.WebView,java.lang.String) -> onWebPageFinished
    void a(android.webkit.WebView,int) -> a
    void a(java.lang.String,java.lang.String) -> a
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    void a(android.webkit.WebView,java.lang.String) -> a
    boolean a() -> a
    boolean b() -> b
    android.view.View getCurrentView() -> getCurrentView
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void setUserAgentString(java.lang.String) -> setUserAgentString
    java.lang.String getUserAgentString() -> getUserAgentString
    void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    android.content.Context a(net.youmi.android.a.k.a.l) -> a
net.youmi.android.a.k.a.m -> net.youmi.android.a.k.a.m:
    net.youmi.android.a.k.a.l a -> a
    void onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long) -> onDownloadStart
net.youmi.android.a.k.a.n -> net.youmi.android.a.k.a.n:
    android.widget.TextView a -> a
    android.widget.Button b -> b
    android.widget.Button c -> c
    void setErrTips(java.lang.String) -> setErrTips
    android.widget.TextView getTipsView() -> getTipsView
    android.widget.Button getSetNetworkButton() -> getSetNetworkButton
    android.widget.Button getRefreshButton() -> getRefreshButton
net.youmi.android.a.k.a.o -> net.youmi.android.a.k.a.o:
    android.widget.ProgressBar a -> a
    android.widget.TextView b -> b
    net.youmi.android.a.k.a.q c -> c
    android.widget.LinearLayout d -> d
    void a(java.lang.String) -> a
    net.youmi.android.a.k.a.q getStyleConfig() -> getStyleConfig
net.youmi.android.a.k.a.p -> net.youmi.android.a.k.a.p:
net.youmi.android.a.k.a.q -> net.youmi.android.a.k.a.q:
    net.youmi.android.a.k.a.o a -> a
    float b -> b
    int c -> c
    android.graphics.drawable.Drawable d -> d
    int e -> e
    int f -> f
    net.youmi.android.a.k.a.q a(int) -> a
    net.youmi.android.a.k.a.q a(float) -> a
    net.youmi.android.a.k.a.q a(android.graphics.drawable.Drawable) -> a
    net.youmi.android.a.k.a.q b(int) -> b
net.youmi.android.b -> net.youmi.android.b:
    android.content.Context a -> a
    java.util.List b -> b
    net.youmi.android.ExpService c -> c
    void run() -> run
net.youmi.android.b.a.a -> net.youmi.android.b.a.a:
    char[] b -> b
    int[] c -> c
    char[] a -> a
    java.lang.String a(byte[],java.lang.String,int) -> a
    java.lang.String a(int) -> a
    java.lang.String a(java.lang.String) -> a
    int a(char) -> a
    char b(int) -> b
net.youmi.android.b.a.b -> net.youmi.android.b.a.b:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    boolean f -> f
    java.lang.String f() -> f
    java.lang.String a(android.content.Context) -> a
    java.lang.String a(java.lang.String) -> a
    boolean g() -> g
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    boolean e() -> e
net.youmi.android.b.a.c -> net.youmi.android.b.a.c:
    void a(java.lang.String,java.io.ByteArrayOutputStream) -> a
net.youmi.android.b.b.a -> net.youmi.android.b.b.a:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    int d -> d
    int e -> e
    java.lang.String f -> f
    boolean g -> g
    java.lang.String a() -> a
    java.lang.String a(android.content.Context) -> a
    void a(android.content.Context,java.lang.String) -> a
    java.lang.String b(android.content.Context) -> b
    void b(android.content.Context,java.lang.String) -> b
    boolean c(android.content.Context) -> c
    java.lang.String d(android.content.Context) -> d
    int e(android.content.Context) -> e
    int f(android.content.Context) -> f
    void c(android.content.Context,java.lang.String) -> c
    java.lang.String g(android.content.Context) -> g
    void a(boolean) -> a
    boolean b() -> b
net.youmi.android.b.b.b -> net.youmi.android.b.b.b:
    boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String b(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> b
net.youmi.android.banner.AdSize -> net.youmi.android.banner.AdSize:
    int FILL_PARENT -> FILL_PARENT
    int WRAP_CONTENT -> WRAP_CONTENT
    int LANDSPACE_AD_HEIGHT -> LANDSPACE_AD_HEIGHT
    int PORAIT_AD_HEIGHT -> PORAIT_AD_HEIGHT
    int LARGE_AD_HEIGHT -> LARGE_AD_HEIGHT
    net.youmi.android.banner.AdSize SIZE_320x50 -> SIZE_320x50
    net.youmi.android.banner.AdSize SIZE_300x250 -> SIZE_300x250
    net.youmi.android.banner.AdSize SIZE_468x60 -> SIZE_468x60
    net.youmi.android.banner.AdSize SIZE_728x90 -> SIZE_728x90
    net.youmi.android.banner.AdSize FIT_SCREEN -> FIT_SCREEN
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int getAdWidth() -> getAdWidth
    int getAdHeight() -> getAdHeight
    int resizeWidth(android.content.Context) -> resizeWidth
    int resizeHeight(android.content.Context) -> resizeHeight
net.youmi.android.banner.AdView -> net.youmi.android.banner.AdView:
    net.youmi.android.banner.AdViewListener a -> a
    net.youmi.android.banner.e e -> e
    java.lang.String f -> f
    android.content.Context g -> g
    net.youmi.android.banner.AdSize b -> b
    int c -> c
    int d -> d
    int h -> h
    boolean i -> i
    void a() -> a
    void setAdListener(net.youmi.android.banner.AdViewListener) -> setAdListener
    boolean a(android.content.Context) -> a
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    int getVisibility() -> getVisibility
    void setVisibility(int) -> setVisibility
net.youmi.android.banner.AdViewListener -> net.youmi.android.banner.AdViewListener:
    void onReceivedAd(net.youmi.android.banner.AdView) -> onReceivedAd
    void onSwitchedAd(net.youmi.android.banner.AdView) -> onSwitchedAd
    void onFailedToReceivedAd(net.youmi.android.banner.AdView) -> onFailedToReceivedAd
net.youmi.android.banner.BannerManager -> net.youmi.android.banner.BannerManager:
    java.lang.String PROTOCOLVERSION -> PROTOCOLVERSION
    int b -> b
    java.util.HashMap a -> a
    int a() -> a
    void a(int) -> a
    java.lang.String checkPermissions(android.content.Context) -> checkPermissions
    net.youmi.android.banner.h getBannerObject(int) -> getBannerObject
    void setBannerObject(int,net.youmi.android.banner.h) -> setBannerObject
    boolean checkBannerAdConfig(android.content.Context) -> checkBannerAdConfig
    java.lang.String b() -> b
net.youmi.android.banner.a -> net.youmi.android.banner.a:
    android.content.Context f -> f
    net.youmi.android.a.k.a.l a -> a
    net.youmi.android.a.h.e b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    net.youmi.android.banner.b g -> g
    int h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    void a(net.youmi.android.banner.b) -> a
    void a(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void a() -> a
    void b() -> b
    void c() -> c
    void d() -> d
    net.youmi.android.a.k.a.l e() -> e
    void onWebPageFinished(android.webkit.WebView,java.lang.String) -> onWebPageFinished
    void onWebPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onWebPageStarted
    void onWebReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onWebReceivedError
    net.youmi.android.a.h.f js_SDK_Handler_ClearCurrentBrowserHistory() -> js_SDK_Handler_ClearCurrentBrowserHistory
    boolean js_SDK_Handler_RunOnUIThread(java.lang.Runnable) -> js_SDK_Handler_RunOnUIThread
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void a(android.webkit.WebView,int) -> a
    void a(android.webkit.WebView,java.lang.String) -> a
net.youmi.android.banner.b -> net.youmi.android.banner.b:
    void b(int) -> b
net.youmi.android.banner.c -> net.youmi.android.banner.c:
    android.content.Context d -> d
    net.youmi.android.banner.d e -> e
    net.youmi.android.a.k.a.l a -> a
    net.youmi.android.a.h.e b -> b
    java.lang.String c -> c
    int f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    void a(net.youmi.android.banner.d) -> a
    void a(int,java.lang.String,java.lang.String,java.lang.String) -> a
    void a() -> a
    void b() -> b
    net.youmi.android.a.k.a.l c() -> c
    void onWebPageFinished(android.webkit.WebView,java.lang.String) -> onWebPageFinished
    void onWebPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onWebPageStarted
    void onWebReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onWebReceivedError
    net.youmi.android.a.h.f js_SDK_Handler_ClearCurrentBrowserHistory() -> js_SDK_Handler_ClearCurrentBrowserHistory
    boolean js_SDK_Handler_RunOnUIThread(java.lang.Runnable) -> js_SDK_Handler_RunOnUIThread
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void a(android.webkit.WebView,int) -> a
    void a(android.webkit.WebView,java.lang.String) -> a
net.youmi.android.banner.d -> net.youmi.android.banner.d:
    void c(int) -> c
net.youmi.android.banner.e -> net.youmi.android.banner.e:
    android.content.Context a -> a
    int i -> i
    android.os.Handler b -> b
    net.youmi.android.banner.AdView c -> c
    int d -> d
    int j -> j
    java.util.Timer k -> k
    net.youmi.android.banner.f l -> l
    int e -> e
    net.youmi.android.banner.g f -> f
    net.youmi.android.banner.a g -> g
    net.youmi.android.banner.c h -> h
    net.youmi.android.a.h.f b(net.youmi.android.a.h.p) -> b
    void g() -> g
    void h() -> h
    void i() -> i
    void j() -> j
    void c(int) -> c
    void b(int) -> b
    void b(net.youmi.android.banner.h) -> b
    void a(net.youmi.android.banner.h) -> a
    java.lang.String m() -> m
    void b(java.lang.String) -> b
    void k() -> k
    void l() -> l
    android.app.Activity b() -> b
    android.content.Context a() -> a
    net.youmi.android.a.h.f a(android.content.Context,java.util.List) -> a
    net.youmi.android.a.h.f a(net.youmi.android.a.h.i,net.youmi.android.a.h.o) -> a
    net.youmi.android.a.h.f a(net.youmi.android.a.h.m) -> a
    net.youmi.android.a.h.f a(net.youmi.android.a.h.p) -> a
    net.youmi.android.a.h.f c() -> c
    net.youmi.android.a.h.f f() -> f
    net.youmi.android.a.h.f a(java.lang.String,java.lang.String,java.lang.String,long) -> a
    net.youmi.android.a.h.f a(java.lang.String) -> a
    java.lang.String a(net.youmi.android.a.h.j) -> a
    java.lang.String a(java.lang.String,java.lang.String) -> a
    net.youmi.android.a.h.f a(int,net.youmi.android.a.h.j) -> a
    int d() -> d
    int e() -> e
    void a(net.youmi.android.a.k.a.d) -> a
    net.youmi.android.a.h.f a(net.youmi.android.a.h.n) -> a
    net.youmi.android.a.h.f a(int) -> a
    java.lang.String n() -> n
    int a(net.youmi.android.banner.e) -> a
    void a(net.youmi.android.banner.e,net.youmi.android.banner.h) -> a
net.youmi.android.banner.f -> net.youmi.android.banner.f:
    net.youmi.android.banner.e a -> a
    void run() -> run
net.youmi.android.banner.g -> net.youmi.android.banner.g:
    net.youmi.android.banner.e a -> a
    void handleMessage(android.os.Message) -> handleMessage
net.youmi.android.banner.h -> net.youmi.android.banner.h:
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    int h -> h
    int a() -> a
    void a(int) -> a
    java.lang.String b() -> b
    void a(java.lang.String) -> a
    java.lang.String c() -> c
    void b(java.lang.String) -> b
    java.lang.String d() -> d
    void c(java.lang.String) -> c
    java.lang.String e() -> e
    void d(java.lang.String) -> d
    java.lang.String f() -> f
    void e(java.lang.String) -> e
    void b(int) -> b
    java.lang.String g() -> g
    void f(java.lang.String) -> f
net.youmi.android.c.a -> net.youmi.android.c.a:
net.youmi.android.c.a.a -> net.youmi.android.c.a.a:
    android.view.animation.Animation a(android.content.Context,int) -> a
    android.view.animation.Animation b(android.content.Context,int) -> b
    android.view.animation.Animation c(android.content.Context,int) -> c
    android.view.animation.Animation d(android.content.Context,int) -> d
    android.view.animation.AnimationSet a(android.content.Context,int,int,int) -> a
net.youmi.android.c.b -> net.youmi.android.c.b:
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(java.lang.String,java.lang.String) -> a
    java.lang.String a(java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String a(byte[],java.lang.String) -> a
net.youmi.android.c.b.a -> net.youmi.android.c.b.a:
    char[] a -> a
    char[] b -> b
    byte a(char) -> a
    java.lang.String a(byte[]) -> a
net.youmi.android.c.b.b -> net.youmi.android.c.b.b:
    org.json.JSONObject a(java.lang.String) -> a
    java.lang.String a(org.json.JSONObject,java.lang.String,java.lang.String) -> a
    boolean a(org.json.JSONObject,java.lang.String,boolean) -> a
    java.lang.String a(org.json.JSONArray,int,java.lang.String) -> a
    int a(org.json.JSONObject,java.lang.String,int) -> a
    long a(org.json.JSONObject,java.lang.String,long) -> a
    double a(org.json.JSONObject,java.lang.String,double) -> a
    org.json.JSONObject a(org.json.JSONObject,java.lang.String,org.json.JSONObject) -> a
    org.json.JSONObject a(org.json.JSONArray,int,org.json.JSONObject) -> a
    org.json.JSONArray a(org.json.JSONObject,java.lang.String,org.json.JSONArray) -> a
net.youmi.android.c.b.c -> net.youmi.android.c.b.c:
    java.util.Properties a(android.content.Context,java.lang.String) -> a
    boolean a(android.content.Context,java.util.Properties,java.lang.String) -> a
net.youmi.android.c.b.d -> net.youmi.android.c.b.d:
    java.util.Random a -> a
    int a(int) -> a
net.youmi.android.c.b.e -> net.youmi.android.c.b.e:
    boolean a(java.lang.String) -> a
    java.lang.String a() -> a
    java.lang.String b(java.lang.String) -> b
net.youmi.android.c.c -> net.youmi.android.c.c:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String a() -> a
    java.lang.String j(android.content.Context) -> j
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    java.lang.String k(android.content.Context) -> k
    java.lang.String c(android.content.Context) -> c
    java.lang.String d(android.content.Context) -> d
    java.lang.String e(android.content.Context) -> e
    java.lang.String f(android.content.Context) -> f
    java.lang.String l(android.content.Context) -> l
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    void m(android.content.Context) -> m
    java.lang.String g(android.content.Context) -> g
    int h(android.content.Context) -> h
    int i(android.content.Context) -> i
    boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String) -> a
net.youmi.android.c.c.a -> net.youmi.android.c.c.a:
    byte[] a(java.lang.String) -> a
    byte[] a(byte[]) -> a
    byte[] a(byte[],int) -> a
    byte[] b(byte[]) -> b
    void a(java.io.InputStream,java.io.OutputStream,int) -> a
    void a(java.io.InputStream,java.io.OutputStream) -> a
    void b(java.io.InputStream,java.io.OutputStream) -> b
net.youmi.android.c.c.b -> net.youmi.android.c.c.b:
    java.io.InputStream a -> a
    int[] b -> b
    int c -> c
    boolean d -> d
    int read() -> read
    void a() -> a
    void close() -> close
net.youmi.android.c.c.c -> net.youmi.android.c.c.c:
    java.io.OutputStream a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    void write(int) -> write
    void close() -> close
    void a() -> a
net.youmi.android.c.c.d -> net.youmi.android.c.c.d:
    java.lang.String a -> a
    char b -> b
net.youmi.android.c.c.e -> net.youmi.android.c.c.e:
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(byte[]) -> a
    java.lang.String a(java.io.File) -> a
    boolean a(java.io.File,java.lang.String) -> a
net.youmi.android.c.c.f -> net.youmi.android.c.c.f:
    byte[] a() -> a
    java.security.Key a(java.lang.String) -> a
    byte[] a(byte[],java.lang.String,byte[]) -> a
    java.lang.String a(java.lang.String,java.lang.String,byte[]) -> a
    byte[] b(byte[],java.lang.String,byte[]) -> b
    java.lang.String b(java.lang.String,java.lang.String,byte[]) -> b
net.youmi.android.c.c.g -> net.youmi.android.c.c.g:
    java.lang.String a(java.lang.String,java.lang.String) -> a
net.youmi.android.c.c.h -> net.youmi.android.c.c.h:
    java.lang.String a(java.lang.String,java.lang.String) -> a
    java.lang.String b(java.lang.String,java.lang.String) -> b
net.youmi.android.c.c.i -> net.youmi.android.c.c.i:
    java.lang.String a(java.lang.String) -> a
net.youmi.android.c.d -> net.youmi.android.c.d:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    java.lang.String d(android.content.Context) -> d
    java.lang.String e(android.content.Context) -> e
    java.lang.String a(java.lang.String) -> a
    java.lang.String f(android.content.Context) -> f
    java.lang.String g(android.content.Context) -> g
    java.lang.String h(android.content.Context) -> h
net.youmi.android.c.d.a -> net.youmi.android.c.d.a:
    java.lang.String a -> a
    android.database.sqlite.SQLiteDatabase$CursorFactory b -> b
    int c -> c
    android.content.Context d -> d
    android.database.sqlite.SQLiteDatabase e -> e
    boolean f -> f
    boolean g -> g
    android.database.sqlite.SQLiteDatabase a() -> a
    void a(android.database.sqlite.SQLiteDatabase) -> a
    void a(android.database.sqlite.SQLiteDatabase,int,int) -> a
    void b(android.database.sqlite.SQLiteDatabase) -> b
net.youmi.android.c.e.a -> net.youmi.android.c.e.a:
    java.lang.String a -> a
    boolean b -> b
    java.lang.String a() -> a
    void a(boolean) -> a
    void a(java.lang.String,java.lang.Throwable) -> a
    void a(java.lang.String,java.lang.Object[]) -> a
    void a(java.lang.String,java.lang.String,java.lang.Object[]) -> a
    void a(java.lang.Throwable) -> a
    void b(java.lang.String,java.lang.Object[]) -> b
    void c(java.lang.String,java.lang.Object[]) -> c
    void b(java.lang.String,java.lang.String,java.lang.Object[]) -> b
    void b(java.lang.Throwable) -> b
    void d(java.lang.String,java.lang.Object[]) -> d
    void a(int,java.lang.String,java.lang.String,java.lang.Object[]) -> a
    void a(int,java.lang.String,java.lang.String,java.lang.Throwable) -> a
net.youmi.android.c.e.b -> net.youmi.android.c.e.b:
    java.lang.String a -> a
    java.lang.String a() -> a
    void a(java.lang.String,java.lang.Throwable) -> a
    void a(java.lang.Throwable) -> a
    void a(java.lang.String) -> a
    void b(java.lang.String,java.lang.Throwable) -> b
    void b(java.lang.Throwable) -> b
    void a(java.lang.String,java.lang.Object[]) -> a
    void c(java.lang.Throwable) -> c
    void a(java.lang.String,java.lang.String,java.lang.Object[]) -> a
    void c(java.lang.String,java.lang.Throwable) -> c
net.youmi.android.c.e.c -> net.youmi.android.c.e.c:
    java.util.Hashtable a -> a
    java.lang.String a() -> a
    void a(java.lang.String) -> a
net.youmi.android.c.f.a -> net.youmi.android.c.f.a:
    long a -> a
    long b -> b
    java.io.File c -> c
    void b() -> b
    java.io.File[] a() -> a
    java.lang.String a(java.lang.String) -> a
    java.io.File b(java.lang.String) -> b
    boolean a(java.io.File) -> a
    void c() -> c
    java.io.File a(net.youmi.android.c.f.a) -> a
    boolean a(net.youmi.android.c.f.a,java.io.File) -> a
    long b(net.youmi.android.c.f.a) -> b
net.youmi.android.c.f.b -> net.youmi.android.c.f.b:
    net.youmi.android.c.f.a a -> a
    void run() -> run
net.youmi.android.c.f.c -> net.youmi.android.c.f.c:
    net.youmi.android.c.f.a a -> a
    int a(java.io.File,java.io.File) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
net.youmi.android.c.g.a -> net.youmi.android.c.g.a:
    org.apache.http.client.methods.HttpUriRequest a -> a
    long b -> b
    org.apache.http.client.HttpClient c -> c
    net.youmi.android.c.g.b d -> d
    net.youmi.android.c.g.c e -> e
    android.content.Context f -> f
    long a() -> a
    void a(net.youmi.android.c.g.b) -> a
    void b() -> b
    void a(org.apache.http.HttpResponse) -> a
    void c() -> c
    void a(org.apache.http.HttpResponse,long) -> a
    org.apache.http.HttpResponse d() -> d
    void a(int) -> a
net.youmi.android.c.g.b -> net.youmi.android.c.g.b:
    org.apache.http.Header[] a -> a
    int b -> b
    int c -> c
    java.lang.String d -> d
    long e -> e
    long f -> f
    boolean g -> g
    boolean h -> h
    org.apache.http.Header[] i -> i
    int a() -> a
    void a(int) -> a
    org.apache.http.Header[] b() -> b
    void a(org.apache.http.Header[]) -> a
    int c() -> c
    void b(int) -> b
    void a(java.lang.String) -> a
    long d() -> d
    void a(long) -> a
    long e() -> e
    void b(long) -> b
    boolean f() -> f
    void a(boolean) -> a
    org.apache.http.Header[] g() -> g
    void b(org.apache.http.Header[]) -> b
net.youmi.android.c.g.c -> net.youmi.android.c.g.c:
    java.lang.String a -> a
    boolean b -> b
    java.util.List c -> c
    java.util.List d -> d
    java.lang.String e -> e
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    boolean b() -> b
    void a(boolean) -> a
    java.util.List c() -> c
    void a(java.util.List) -> a
    java.util.List d() -> d
    void b(java.util.List) -> b
    java.lang.String e() -> e
    java.lang.String f() -> f
    java.lang.String a(java.util.Map) -> a
    java.lang.String b(java.lang.String) -> b
net.youmi.android.c.g.d -> net.youmi.android.c.g.d:
    java.lang.String g -> g
    void a(org.apache.http.HttpResponse) -> a
    void b() -> b
    java.lang.String d() -> d
    java.lang.String a(android.content.Context,org.apache.http.HttpResponse,java.lang.String,boolean) -> a
net.youmi.android.c.g.e -> net.youmi.android.c.g.e:
    java.lang.String a -> a
    int b -> b
    java.lang.String c -> c
    int d -> d
    java.lang.String e -> e
    int f -> f
    java.lang.String g -> g
    int h -> h
    long i -> i
    boolean a(java.lang.String) -> a
    void a() -> a
    void a(android.content.Context,org.json.JSONObject) -> a
net.youmi.android.c.g.f -> net.youmi.android.c.g.f:
    void a(android.content.Context,org.json.JSONObject,java.lang.String,int) -> a
net.youmi.android.c.g.g -> net.youmi.android.c.g.g:
    void a(android.content.Context,org.json.JSONObject,java.lang.String,int) -> a
net.youmi.android.c.h.a -> net.youmi.android.c.h.a:
    void a(java.lang.String) -> a
net.youmi.android.c.h.b -> net.youmi.android.c.h.b:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    java.lang.String b() -> b
    void b(java.lang.String) -> b
net.youmi.android.c.h.c -> net.youmi.android.c.h.c:
    java.lang.String a(android.content.Context) -> a
net.youmi.android.c.h.d -> net.youmi.android.c.h.d:
    android.content.Context a -> a
    long b -> b
    long c -> c
    boolean d -> d
    java.lang.String e -> e
    java.io.File f -> f
    int a() -> a
    long b() -> b
    int c() -> c
    long d() -> d
net.youmi.android.c.h.e -> net.youmi.android.c.h.e:
    java.lang.String a(android.content.Context,java.lang.String,boolean) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.lang.String a(android.content.Context,java.lang.String,net.youmi.android.c.h.b) -> a
    java.lang.String a(android.content.Context,java.lang.String,java.util.List,boolean,org.apache.http.Header[],net.youmi.android.c.h.b) -> a
    java.lang.String a(android.content.Context,java.lang.String,java.util.List,net.youmi.android.c.h.b) -> a
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String,net.youmi.android.c.h.b) -> a
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String,boolean,org.apache.http.Header[],net.youmi.android.c.h.b) -> a
    java.lang.String a(android.content.Context,java.lang.String,java.util.List,java.lang.String,org.apache.http.Header[],net.youmi.android.c.h.b) -> a
net.youmi.android.c.h.f -> net.youmi.android.c.h.f:
    net.youmi.android.c.g.b a -> a
    net.youmi.android.c.g.d b -> b
    android.content.Context c -> c
    net.youmi.android.c.g.c d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    void run() -> run
net.youmi.android.c.h.g -> net.youmi.android.c.h.g:
    net.youmi.android.c.g.b a -> a
    net.youmi.android.c.g.d b -> b
    android.content.Context c -> c
    net.youmi.android.c.g.c d -> d
    java.lang.String e -> e
    java.util.List f -> f
    void run() -> run
net.youmi.android.c.h.h -> net.youmi.android.c.h.h:
    java.lang.String a -> a
    java.lang.String a() -> a
    org.apache.http.params.HttpParams a(android.content.Context) -> a
    org.apache.http.impl.client.DefaultHttpClient b(android.content.Context) -> b
    org.apache.http.impl.client.DefaultHttpClient a(android.content.Context,net.youmi.android.c.h.a) -> a
    boolean a(java.lang.String,java.lang.String) -> a
    long a(android.content.Context,java.lang.String) -> a
net.youmi.android.c.h.i -> net.youmi.android.c.h.i:
    void a(java.lang.String) -> a
net.youmi.android.c.h.j -> net.youmi.android.c.h.j:
    net.youmi.android.c.h.a a -> a
    boolean isRedirectRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isRedirectRequested
    java.net.URI getLocationURI(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getLocationURI
net.youmi.android.c.h.k -> net.youmi.android.c.h.k:
    boolean a(android.content.Context) -> a
    boolean b(android.content.Context) -> b
    int c(android.content.Context) -> c
net.youmi.android.c.i.a -> net.youmi.android.c.i.a:
    byte[] a -> a
    android.graphics.drawable.NinePatchDrawable a(android.content.Context) -> a
net.youmi.android.c.i.b -> net.youmi.android.c.i.b:
    android.graphics.Bitmap b -> b
net.youmi.android.c.j.a -> net.youmi.android.c.j.a:
    net.youmi.android.c.j.a a -> a
    android.os.Handler b -> b
    net.youmi.android.c.j.a a() -> a
    boolean b() -> b
    boolean a(java.lang.Runnable) -> a
    boolean a(java.lang.Runnable,long) -> a
net.youmi.android.c.k.a -> net.youmi.android.c.k.a:
    java.lang.String a -> a
    java.lang.String b -> b
    int c -> c
    java.lang.String a() -> a
    java.lang.String b() -> b
    int c() -> c
net.youmi.android.c.k.b -> net.youmi.android.c.k.b:
    boolean a(android.content.Context,java.lang.Class) -> a
    boolean a(android.content.Context,java.lang.String) -> a
    android.content.pm.ActivityInfo b(android.content.Context,java.lang.String) -> b
    boolean b(android.content.Context,java.lang.Class) -> b
    boolean c(android.content.Context,java.lang.String) -> c
    android.content.pm.ServiceInfo d(android.content.Context,java.lang.String) -> d
    boolean c(android.content.Context,java.lang.Class) -> c
    boolean e(android.content.Context,java.lang.String) -> e
    android.content.pm.ActivityInfo f(android.content.Context,java.lang.String) -> f
net.youmi.android.c.k.c -> net.youmi.android.c.k.c:
    long a() -> a
    long a(android.content.Context) -> a
net.youmi.android.c.k.d -> net.youmi.android.c.k.d:
    boolean a -> a
    int b -> b
    int c -> c
    float d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    boolean a() -> a
    int b() -> b
    int c() -> c
    int d() -> d
    int e() -> e
    float f() -> f
    net.youmi.android.c.k.d a(android.content.Context) -> a
    net.youmi.android.c.k.d b(android.content.Context) -> b
    int g() -> g
    int h() -> h
    int a(int) -> a
    int b(int) -> b
    float a(float) -> a
net.youmi.android.c.k.e -> net.youmi.android.c.k.e:
    boolean a(java.io.File,java.lang.String) -> a
net.youmi.android.c.k.f -> net.youmi.android.c.k.f:
    boolean a(android.content.Context,java.lang.String,int,java.lang.String) -> a
    boolean a(android.content.Context,java.lang.String,int) -> a
    boolean b(android.content.Context,java.lang.String,int) -> b
    boolean c(android.content.Context,java.lang.String,int) -> c
    boolean d(android.content.Context,java.lang.String,int) -> d
    android.content.Intent a(android.content.Context,java.lang.String) -> a
    boolean b(android.content.Context,java.lang.String) -> b
    boolean b(android.content.Context,java.lang.String,int,java.lang.String) -> b
    boolean c(android.content.Context,java.lang.String) -> c
net.youmi.android.c.k.g -> net.youmi.android.c.k.g:
    void a(android.content.Context) -> a
    android.content.Intent a(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
net.youmi.android.c.k.h -> net.youmi.android.c.k.h:
    java.lang.String a(android.content.Context) -> a
    net.youmi.android.c.k.a a(android.content.Context,java.lang.String) -> a
    android.content.pm.PackageInfo b(android.content.Context,java.lang.String) -> b
    int a(android.content.Context,java.lang.String,int) -> a
    android.content.Intent c(android.content.Context,java.lang.String) -> c
    void d(android.content.Context,java.lang.String) -> d
net.youmi.android.c.k.i -> net.youmi.android.c.k.i:
    boolean a(android.content.Context,java.lang.String) -> a
    boolean a(android.content.Context) -> a
    boolean b(android.content.Context) -> b
    boolean c(android.content.Context) -> c
    boolean d(android.content.Context) -> d
    boolean e(android.content.Context) -> e
    boolean f(android.content.Context) -> f
    boolean g(android.content.Context) -> g
    boolean h(android.content.Context) -> h
    boolean i(android.content.Context) -> i
    boolean j(android.content.Context) -> j
net.youmi.android.c.k.j -> net.youmi.android.c.k.j:
    boolean a(android.content.Context) -> a
net.youmi.android.c.k.k -> net.youmi.android.c.k.k:
    boolean a() -> a
    boolean a(android.content.Context) -> a
    boolean a(android.content.Context,long) -> a
    long b() -> b
    java.lang.String c() -> c
    long b(android.content.Context) -> b
net.youmi.android.c.k.l -> net.youmi.android.c.k.l:
    android.telephony.TelephonyManager a(android.content.Context) -> a
    android.net.wifi.WifiManager b(android.content.Context) -> b
net.youmi.android.c.l.a -> net.youmi.android.c.l.a:
    java.util.List a -> a
    java.util.List b() -> b
    void a(java.lang.Object) -> a
    void b(java.lang.Object) -> b
net.youmi.android.c.m.a -> net.youmi.android.c.m.a:
    android.view.WindowManager a -> a
    android.view.WindowManager$LayoutParams b -> b
    android.widget.LinearLayout c -> c
    android.view.View d -> d
    boolean a() -> a
    boolean b() -> b
    void a(android.view.animation.Animation) -> a
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
net.youmi.android.d.a -> net.youmi.android.d.a:
    net.youmi.android.i.a d -> d
    net.youmi.android.d.b e -> e
    void a(net.youmi.android.d.b) -> a
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreatePanelView(int) -> onCreatePanelView
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    void onWindowAttributesChanged(android.view.WindowManager$LayoutParams) -> onWindowAttributesChanged
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    android.os.Bundle onSaveInstanceState() -> onSaveInstanceState
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    void onContentChanged() -> onContentChanged
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void a(android.content.Context,net.youmi.android.a.h.p) -> a
    net.youmi.android.d.a b(android.content.Context,net.youmi.android.a.h.p) -> b
    void onClick(android.view.View) -> onClick
    boolean proxySetVisibility(int) -> proxySetVisibility
net.youmi.android.d.a.a -> net.youmi.android.d.a.a:
    java.lang.String a -> a
    java.lang.String b -> b
    long c -> c
    long d -> d
    long e -> e
    int f -> f
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    java.lang.String b() -> b
    void b(java.lang.String) -> b
    long c() -> c
    void a(long) -> a
    long d() -> d
    void b(long) -> b
    long e() -> e
    void c(long) -> c
    int f() -> f
    void a(int) -> a
    java.lang.String toString() -> toString
net.youmi.android.d.a.b -> net.youmi.android.d.a.b:
    android.content.Context a -> a
    net.youmi.android.d.a.a b -> b
    void a() -> a
net.youmi.android.d.a.c -> net.youmi.android.d.a.c:
    int b -> b
    int c -> c
    int a -> a
    net.youmi.android.d.a.h d -> d
    android.content.Context e -> e
    int b() -> b
    void a() -> a
    boolean a(java.lang.String) -> a
    boolean b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void c() -> c
    void a(java.lang.String,long) -> a
    boolean a(net.youmi.android.d.a.c,java.lang.String) -> a
    android.content.Context a(net.youmi.android.d.a.c) -> a
net.youmi.android.d.a.d -> net.youmi.android.d.a.d:
    java.lang.String a -> a
    net.youmi.android.d.a.c b -> b
    void run() -> run
net.youmi.android.d.a.e -> net.youmi.android.d.a.e:
    java.lang.String a -> a
    net.youmi.android.d.a.c b -> b
    void run() -> run
net.youmi.android.d.a.f -> net.youmi.android.d.a.f:
    net.youmi.android.d.a.c a -> a
    void run() -> run
net.youmi.android.d.a.g -> net.youmi.android.d.a.g:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    java.lang.String a(android.content.Context) -> a
net.youmi.android.d.a.h -> net.youmi.android.d.a.h:
    net.youmi.android.d.a.g a -> a
    java.lang.String b -> b
    net.youmi.android.d.a.h c -> c
    net.youmi.android.d.a.h a(android.content.Context) -> a
    boolean a(android.database.sqlite.SQLiteDatabase) -> a
    void a(android.database.Cursor) -> a
    void b(android.database.sqlite.SQLiteDatabase) -> b
    void a(net.youmi.android.d.a.a) -> a
    void b(net.youmi.android.d.a.a) -> b
    void a() -> a
    void c(net.youmi.android.d.a.a) -> c
    void a(java.lang.String) -> a
    void b() -> b
    java.util.List c() -> c
    net.youmi.android.d.a.a b(java.lang.String) -> b
    net.youmi.android.d.a.a d() -> d
net.youmi.android.d.a.i -> net.youmi.android.d.a.i:
    void a(java.lang.String,int,int) -> a
net.youmi.android.d.a.j -> net.youmi.android.d.a.j:
    net.youmi.android.d.a.j a -> a
    net.youmi.android.d.a.j a() -> a
    void a(java.lang.String,int,int) -> a
net.youmi.android.d.a.k -> net.youmi.android.d.a.k:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    void a(android.content.Context,long,long) -> a
    void a(android.content.Context,net.youmi.android.d.a.a,long,long) -> a
    void a(android.content.Context,net.youmi.android.d.a.a) -> a
    void b(android.content.Context,net.youmi.android.d.a.a) -> b
    void a(android.content.Context,long) -> a
    void b(android.content.Context,long) -> b
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void c(android.content.Context) -> c
    void d(android.content.Context) -> d
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
net.youmi.android.d.a.l -> net.youmi.android.d.a.l:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    java.lang.String a(android.content.Context) -> a
net.youmi.android.d.a.m -> net.youmi.android.d.a.m:
    java.lang.String a -> a
    net.youmi.android.d.a.l b -> b
    net.youmi.android.d.a.m c -> c
    net.youmi.android.d.a.m a(android.content.Context) -> a
    boolean a(android.database.sqlite.SQLiteDatabase) -> a
    void a(android.database.Cursor) -> a
    void b(android.database.sqlite.SQLiteDatabase) -> b
    void a(net.youmi.android.d.a.n) -> a
    int b(net.youmi.android.d.a.n) -> b
    net.youmi.android.d.a.n a(java.lang.String) -> a
net.youmi.android.d.a.n -> net.youmi.android.d.a.n:
    java.lang.String a -> a
    int b -> b
    java.lang.String c -> c
    int d -> d
    int e -> e
    int f -> f
    java.lang.String g -> g
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    int b() -> b
    void a(int) -> a
    java.lang.String c() -> c
    void b(java.lang.String) -> b
    int d() -> d
    void b(int) -> b
    int e() -> e
    void c(int) -> c
    int f() -> f
    void d(int) -> d
    java.lang.String g() -> g
    void c(java.lang.String) -> c
    java.lang.String toString() -> toString
net.youmi.android.d.a.o -> net.youmi.android.d.a.o:
    java.lang.String a(java.lang.String) -> a
net.youmi.android.d.b -> net.youmi.android.d.b:
    void onDialogClose() -> onDialogClose
net.youmi.android.d.b.a -> net.youmi.android.d.b.a:
    net.youmi.android.d.b.a d -> d
    net.youmi.android.d.b.h a -> a
    net.youmi.android.d.b.g b -> b
    android.util.SparseArray e -> e
    android.util.SparseArray f -> f
    net.youmi.android.d.b.a a(android.content.Context) -> a
    void b(net.youmi.android.e.b.b) -> b
    void a(net.youmi.android.e.b.b,java.io.File) -> a
    void c(net.youmi.android.e.b.b) -> c
    void a(int) -> a
    java.lang.String a(java.io.File) -> a
    void b(net.youmi.android.e.b.b,java.io.File) -> b
    void d(java.lang.String) -> d
    void d() -> d
    void a(java.lang.String,net.youmi.android.a.h.i,net.youmi.android.e.b.b) -> a
    void b(java.io.File) -> b
    void a(net.youmi.android.a.h.i,net.youmi.android.a.h.o) -> a
    net.youmi.android.a.h.j l(net.youmi.android.e.b.b) -> l
    net.youmi.android.a.h.o d(net.youmi.android.e.b.b) -> d
    net.youmi.android.a.h.i e(net.youmi.android.e.b.b) -> e
    boolean a(java.lang.String) -> a
    boolean b(java.lang.String,java.lang.String) -> b
    int f(net.youmi.android.e.b.b) -> f
    net.youmi.android.a.h.j a(net.youmi.android.d.b.a,net.youmi.android.e.b.b) -> a
    android.content.Context a(net.youmi.android.d.b.a) -> a
    void a(net.youmi.android.d.b.a,java.lang.String) -> a
    java.lang.String a(net.youmi.android.d.b.a,java.io.File) -> a
    android.content.Context b(net.youmi.android.d.b.a) -> b
    void a(net.youmi.android.d.b.a,java.lang.String,net.youmi.android.a.h.i,net.youmi.android.e.b.b) -> a
    void c(net.youmi.android.d.b.a) -> c
    void b(net.youmi.android.d.b.a,java.io.File) -> b
    android.content.Context d(net.youmi.android.d.b.a) -> d
    android.content.Context e(net.youmi.android.d.b.a) -> e
net.youmi.android.d.b.b -> net.youmi.android.d.b.b:
    net.youmi.android.e.b.b a -> a
    net.youmi.android.d.b.a b -> b
    void run() -> run
net.youmi.android.d.b.c -> net.youmi.android.d.b.c:
    java.io.File a -> a
    net.youmi.android.e.b.b b -> b
    net.youmi.android.d.b.a c -> c
    void run() -> run
net.youmi.android.d.b.d -> net.youmi.android.d.b.d:
    java.io.File a -> a
    net.youmi.android.e.b.b b -> b
    net.youmi.android.d.b.a c -> c
    void run() -> run
net.youmi.android.d.b.e -> net.youmi.android.d.b.e:
    java.lang.String a -> a
    net.youmi.android.d.b.a b -> b
    void run() -> run
net.youmi.android.d.b.f -> net.youmi.android.d.b.f:
    int a -> a
    android.app.Notification b -> b
    android.app.PendingIntent c -> c
    android.app.PendingIntent d -> d
    android.app.NotificationManager e -> e
    android.content.Context f -> f
    net.youmi.android.a.a.a.g g -> g
    net.youmi.android.a.a.a.a h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    void b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    boolean e() -> e
    boolean f() -> f
    boolean g() -> g
    boolean c(java.lang.String) -> c
    void a(int,long) -> a
    void a(java.lang.String) -> a
    void a() -> a
    void b(java.lang.String) -> b
net.youmi.android.d.b.g -> net.youmi.android.d.b.g:
    net.youmi.android.d.b.a a -> a
    android.content.Context b -> b
    java.util.HashMap c -> c
    void a(net.youmi.android.e.b.b,java.io.File) -> a
    void a(net.youmi.android.e.b.b) -> a
    void b(net.youmi.android.e.b.b) -> b
    void a(net.youmi.android.e.b.b,long,long,int,long) -> a
    net.youmi.android.d.b.f d(net.youmi.android.e.b.b) -> d
    int c(net.youmi.android.e.b.b) -> c
    void a(android.content.Context,int,java.lang.String) -> a
    void a(int) -> a
net.youmi.android.d.b.h -> net.youmi.android.d.b.h:
    net.youmi.android.d.b.a a -> a
    void a(net.youmi.android.e.b.b,java.io.File) -> a
    void a(net.youmi.android.e.b.b) -> a
    void b(net.youmi.android.e.b.b) -> b
    void a(net.youmi.android.e.b.b,long,long,int,long) -> a
    void a(net.youmi.android.a.h.i,net.youmi.android.a.h.o) -> a
    void a(net.youmi.android.e.b.b,int,int,long) -> a
    void a(net.youmi.android.a.h.i,net.youmi.android.a.h.o,int,int,long) -> a
    void a(int) -> a
net.youmi.android.d.b.i -> net.youmi.android.d.b.i:
    net.youmi.android.AdReceiver a -> a
    void a(android.content.Context) -> a
net.youmi.android.d.b.j -> net.youmi.android.d.b.j:
    java.lang.String a -> a
    android.content.Context b -> b
    int c -> c
    int d -> d
    java.lang.String e -> e
    boolean f -> f
    void a(android.content.Context) -> a
    void run() -> run
net.youmi.android.d.b.k -> net.youmi.android.d.b.k:
    int a -> a
    int b -> b
    org.json.JSONObject a() -> a
    boolean a(org.json.JSONObject) -> a
    int b() -> b
    void a(int) -> a
    int c() -> c
    void b(int) -> b
net.youmi.android.d.b.l -> net.youmi.android.d.b.l:
    net.youmi.android.d.b.l a -> a
    net.youmi.android.a.a.c a() -> a
    net.youmi.android.d.b.l b() -> b
net.youmi.android.d.c -> net.youmi.android.d.c:
    android.app.Activity a -> a
    net.youmi.android.a.h.p b -> b
    void run() -> run
net.youmi.android.d.c.a -> net.youmi.android.d.c.a:
    java.lang.String a() -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.lang.String a(android.content.Context) -> a
    java.lang.String a(android.content.Context,net.youmi.android.a.h.j,int) -> a
    java.lang.String a(android.content.Context,net.youmi.android.a.h.j) -> a
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String,int) -> a
    java.lang.String a(android.content.Context,int,java.lang.String) -> a
    java.lang.String b(android.content.Context) -> b
net.youmi.android.d.d.a -> net.youmi.android.d.d.a:
    android.content.Context a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    boolean d -> d
    void run() -> run
    void a(android.content.Context) -> a
    java.lang.String a() -> a
    void b(android.content.Context) -> b
net.youmi.android.d.d.b -> net.youmi.android.d.d.b:
    android.content.Context a -> a
    void run() -> run
net.youmi.android.d.d.c -> net.youmi.android.d.d.c:
    android.content.Context a -> a
    void run() -> run
net.youmi.android.d.e.a.a -> net.youmi.android.d.e.a.a:
    void a(android.content.Context) -> a
    void a(android.content.Intent) -> a
net.youmi.android.d.e.a.b -> net.youmi.android.d.e.a.b:
    net.youmi.android.d.e.a.b a -> a
    android.content.IntentFilter b -> b
    void b(android.content.Context) -> b
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void a(android.content.Context) -> a
net.youmi.android.d.e.a.c -> net.youmi.android.d.e.a.c:
    android.content.Context a -> a
    int b -> b
    java.lang.String c -> c
    void a(android.content.Context,java.util.List) -> a
    void a(android.content.Context,java.lang.String) -> a
    void a(android.content.Context,int) -> a
    void run() -> run
    java.lang.String a() -> a
net.youmi.android.d.e.a.d -> net.youmi.android.d.e.a.d:
    android.content.Context a -> a
    net.youmi.android.a.h.j b -> b
    int[] c -> c
    void run() -> run
net.youmi.android.d.f.a -> net.youmi.android.d.f.a:
    java.util.HashMap a -> a
    java.util.HashMap b -> b
    java.util.HashMap c -> c
    java.util.HashMap b() -> b
    java.util.HashMap c() -> c
    java.util.HashMap d() -> d
    java.util.HashMap a() -> a
net.youmi.android.d.f.a.a -> net.youmi.android.d.f.a.a:
    android.graphics.drawable.NinePatchDrawable a(android.content.Context) -> a
net.youmi.android.d.g.a -> net.youmi.android.d.g.a:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    java.lang.String a(android.content.Context) -> a
net.youmi.android.d.g.b -> net.youmi.android.d.g.b:
    net.youmi.android.d.g.a b -> b
    java.lang.String a -> a
    net.youmi.android.d.g.b c -> c
    net.youmi.android.d.g.b a(android.content.Context) -> a
    boolean a(android.database.sqlite.SQLiteDatabase) -> a
    void a(android.database.Cursor) -> a
    void b(android.database.sqlite.SQLiteDatabase) -> b
    void a(net.youmi.android.d.g.c) -> a
    void b(net.youmi.android.d.g.c) -> b
    void a(java.lang.String) -> a
    java.util.List a() -> a
net.youmi.android.d.g.c -> net.youmi.android.d.g.c:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    java.lang.String b() -> b
    void b(java.lang.String) -> b
    java.lang.String toString() -> toString
net.youmi.android.d.g.d -> net.youmi.android.d.g.d:
    android.content.Context a -> a
    net.youmi.android.d.g.d b -> b
    java.util.List c -> c
    java.util.List d -> d
    java.util.Timer e -> e
    net.youmi.android.d.g.d a(android.content.Context) -> a
    void a() -> a
    void f() -> f
    void b() -> b
    java.util.List c() -> c
    java.util.List d() -> d
    java.util.List a(java.util.List) -> a
    java.util.Timer e() -> e
    java.util.Timer a(java.util.Timer) -> a
    android.content.Context a(net.youmi.android.d.g.d) -> a
net.youmi.android.d.g.e -> net.youmi.android.d.g.e:
    net.youmi.android.d.g.d a -> a
    void run() -> run
net.youmi.android.d.g.f -> net.youmi.android.d.g.f:
    net.youmi.android.d.g.e a -> a
    void run() -> run
net.youmi.android.d.h.a -> net.youmi.android.d.h.a:
    android.content.Context a -> a
    void a(java.lang.String,int) -> a
    void a(java.lang.String,int,int) -> a
net.youmi.android.d.h.b -> net.youmi.android.d.h.b:
    android.content.Context a -> a
    android.content.Context b -> b
    android.widget.Toast c -> c
    void a(java.lang.String,int,int) -> a
    void a(java.lang.String,int) -> a
    void a(java.lang.String,int,int,int) -> a
    void a() -> a
net.youmi.android.d.i.a -> net.youmi.android.d.i.a:
    android.app.Activity a -> a
    android.content.Context b -> b
    net.youmi.android.a.k.a.d c -> c
    net.youmi.android.a.h.l d -> d
    android.content.Context a() -> a
    android.app.Activity b() -> b
    android.content.Context g() -> g
    net.youmi.android.a.h.f c() -> c
    int d() -> d
    int e() -> e
    java.lang.String a(java.lang.String,java.lang.String) -> a
    java.lang.String a(net.youmi.android.a.h.j) -> a
    net.youmi.android.a.h.f f() -> f
    net.youmi.android.a.h.f a(net.youmi.android.a.h.m) -> a
    net.youmi.android.a.h.f b(net.youmi.android.a.h.p) -> b
    net.youmi.android.a.h.f a(net.youmi.android.a.h.p) -> a
    net.youmi.android.a.h.f a(net.youmi.android.a.h.i,net.youmi.android.a.h.o) -> a
    net.youmi.android.a.h.f a(android.content.Context,java.util.List) -> a
    net.youmi.android.a.h.f a(java.lang.String,java.lang.String,java.lang.String,long) -> a
    net.youmi.android.a.h.f a(java.lang.String) -> a
    net.youmi.android.a.h.f a(int,net.youmi.android.a.h.j) -> a
    void a(net.youmi.android.a.k.a.d) -> a
    net.youmi.android.a.h.f a(net.youmi.android.a.h.n) -> a
    net.youmi.android.a.h.f a(int) -> a
net.youmi.android.d.i.b -> net.youmi.android.d.i.b:
    net.youmi.android.d.i.a a -> a
    void run() -> run
net.youmi.android.d.i.c -> net.youmi.android.d.i.c:
    net.youmi.android.d.i.a a -> a
    void run() -> run
net.youmi.android.d.i.d -> net.youmi.android.d.i.d:
    net.youmi.android.d.i.a a -> a
    void run() -> run
net.youmi.android.d.i.e -> net.youmi.android.d.i.e:
    net.youmi.android.a.h.i a -> a
    net.youmi.android.a.h.o b -> b
    net.youmi.android.d.i.a c -> c
    void run() -> run
net.youmi.android.dev.AppUpdateInfo -> net.youmi.android.dev.AppUpdateInfo:
    java.lang.String a -> a
    int b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    int getVersionCode() -> getVersionCode
    void a(int) -> a
    java.lang.String getVersionName() -> getVersionName
    void a(java.lang.String) -> a
    java.lang.String getUpdateTips() -> getUpdateTips
    void b(java.lang.String) -> b
    java.lang.String getUrl() -> getUrl
    void c(java.lang.String) -> c
net.youmi.android.dev.CheckAppUpdateCallBack -> net.youmi.android.dev.CheckAppUpdateCallBack:
    void onCheckAppUpdateFinish(net.youmi.android.dev.AppUpdateInfo) -> onCheckAppUpdateFinish
net.youmi.android.dev.OnlineConfigCallBack -> net.youmi.android.dev.OnlineConfigCallBack:
    void onGetOnlineConfigSuccessful(java.lang.String,java.lang.String) -> onGetOnlineConfigSuccessful
    void onGetOnlineConfigFailed(java.lang.String) -> onGetOnlineConfigFailed
net.youmi.android.dev.a -> net.youmi.android.dev.a:
    boolean a(android.content.Context) -> a
    boolean b(android.content.Context) -> b
    boolean c(android.content.Context) -> c
net.youmi.android.dev.b -> net.youmi.android.dev.b:
    java.lang.String a() -> a
    java.lang.String a(android.content.Context) -> a
    net.youmi.android.dev.AppUpdateInfo a(android.content.Context,java.lang.String) -> a
    net.youmi.android.dev.AppUpdateInfo b(android.content.Context) -> b
net.youmi.android.dev.c -> net.youmi.android.dev.c:
    net.youmi.android.dev.CheckAppUpdateCallBack a -> a
    android.content.Context b -> b
    void run() -> run
    void a(net.youmi.android.dev.AppUpdateInfo) -> a
    net.youmi.android.dev.CheckAppUpdateCallBack a(net.youmi.android.dev.c) -> a
net.youmi.android.dev.d -> net.youmi.android.dev.d:
    net.youmi.android.dev.AppUpdateInfo a -> a
    net.youmi.android.dev.c b -> b
    void run() -> run
net.youmi.android.dev.e -> net.youmi.android.dev.e:
    net.youmi.android.dev.OnlineConfigCallBack a -> a
    android.content.Context b -> b
    java.lang.String c -> c
    void run() -> run
    void a(java.lang.String) -> a
    java.lang.String a(net.youmi.android.dev.e) -> a
    net.youmi.android.dev.OnlineConfigCallBack b(net.youmi.android.dev.e) -> b
net.youmi.android.dev.f -> net.youmi.android.dev.f:
    java.lang.String a -> a
    net.youmi.android.dev.e b -> b
    void run() -> run
net.youmi.android.diy.AdObject -> net.youmi.android.diy.AdObject:
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    int d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    android.graphics.Bitmap k -> k
    org.json.JSONArray l -> l
    java.util.ArrayList m -> m
    java.lang.String n -> n
    void setAdId(int) -> setAdId
    int getAdId() -> getAdId
    void setPackageName(java.lang.String) -> setPackageName
    java.lang.String getPackageName() -> getPackageName
    void setAppName(java.lang.String) -> setAppName
    java.lang.String getAppName() -> getAppName
    void setVersionCode(int) -> setVersionCode
    int getVersionCode() -> getVersionCode
    void setVersionName(java.lang.String) -> setVersionName
    java.lang.String getVersionName() -> getVersionName
    void setDescription(java.lang.String) -> setDescription
    java.lang.String getDescription() -> getDescription
    void setAdText(java.lang.String) -> setAdText
    java.lang.String getAdText() -> getAdText
    void setSize(java.lang.String) -> setSize
    java.lang.String getSize() -> getSize
    void setCategory(java.lang.String) -> setCategory
    java.lang.String getCategory() -> getCategory
    android.graphics.Bitmap getIcon() -> getIcon
    void setIcon(android.graphics.Bitmap) -> setIcon
    java.lang.String getIconUrl() -> getIconUrl
    void setIconUrl(java.lang.String) -> setIconUrl
    java.util.ArrayList getScreenShortcuts() -> getScreenShortcuts
    void setAuthor(java.lang.String) -> setAuthor
    java.lang.String getAuthor() -> getAuthor
net.youmi.android.diy.DiyAdWebView -> net.youmi.android.diy.DiyAdWebView:
    net.youmi.android.diy.banner.a a -> a
    android.widget.RelativeLayout b -> b
    net.youmi.android.a.k.a.l c -> c
    net.youmi.android.a.h.l d -> d
    boolean e -> e
    int f -> f
    boolean g -> g
    android.content.Context h -> h
    net.youmi.android.diy.banner.DiyAdSize i -> i
    int j -> j
    boolean isInited() -> isInited
    void onAttachedToWindow() -> onAttachedToWindow
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onDetachedFromWindow() -> onDetachedFromWindow
    void maybeNeedToInit() -> maybeNeedToInit
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    boolean proxyClearWebViewHistory() -> proxyClearWebViewHistory
    boolean proxyCloseCurrentWindow() -> proxyCloseCurrentWindow
    boolean proxyLoadUrl(java.lang.String) -> proxyLoadUrl
    boolean proxyPostUrl(java.lang.String,byte[]) -> proxyPostUrl
    net.youmi.android.a.h.f js_SDK_Handler_ClearCurrentBrowserHistory() -> js_SDK_Handler_ClearCurrentBrowserHistory
    boolean js_SDK_Handler_RunOnUIThread(java.lang.Runnable) -> js_SDK_Handler_RunOnUIThread
    void onWebPageFinished(android.webkit.WebView,java.lang.String) -> onWebPageFinished
    void onWebPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onWebPageStarted
    void onWebReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onWebReceivedError
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    boolean proxySetVisibility(int) -> proxySetVisibility
    void setCanShowAdNow(boolean) -> setCanShowAdNow
    boolean canShowAdNow() -> canShowAdNow
    void run() -> run
net.youmi.android.diy.DiyManager -> net.youmi.android.diy.DiyManager:
    int b -> b
    boolean a -> a
    java.lang.String BANNERURL -> BANNERURL
    void showRecommendWall(android.content.Context) -> showRecommendWall
    void showRecommendGameWall(android.content.Context) -> showRecommendGameWall
    void showRecommendAppWall(android.content.Context) -> showRecommendAppWall
    void a(android.content.Context,int) -> a
    boolean checkDiyAdConfig(android.content.Context) -> checkDiyAdConfig
net.youmi.android.diy.a.a -> net.youmi.android.diy.a.a:
    boolean a(int) -> a
    net.youmi.android.a.h.b.a a(int,int) -> a
net.youmi.android.diy.a.a.a -> net.youmi.android.diy.a.a.a:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.diy.a.a.b -> net.youmi.android.diy.a.a.b:
    int[] a -> a
net.youmi.android.diy.a.a.c -> net.youmi.android.diy.a.a.c:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.diy.banner.DiyAdSize -> net.youmi.android.diy.banner.DiyAdSize:
    int HEIGHT_BANNER -> HEIGHT_BANNER
    int HEIGHT_MINI_BANNER -> HEIGHT_MINI_BANNER
    int MATCH_SCREEN -> MATCH_SCREEN
    net.youmi.android.diy.banner.DiyAdSize SIZE_320x60 -> SIZE_320x60
    net.youmi.android.diy.banner.DiyAdSize SIZE_MATCH_SCREENx60 -> SIZE_MATCH_SCREENx60
    net.youmi.android.diy.banner.DiyAdSize SIZE_320x32 -> SIZE_320x32
    net.youmi.android.diy.banner.DiyAdSize SIZE_MATCH_SCREENx32 -> SIZE_MATCH_SCREENx32
    int a -> a
    int b -> b
    int getHeight() -> getHeight
    int getWidth() -> getWidth
net.youmi.android.diy.banner.DiyBanner -> net.youmi.android.diy.banner.DiyBanner:
    int TYPE_BANNER -> TYPE_BANNER
    int TYPE_MINI_BANNER -> TYPE_MINI_BANNER
    java.lang.String a(net.youmi.android.diy.banner.DiyAdSize) -> a
net.youmi.android.diy.banner.a -> net.youmi.android.diy.banner.a:
    net.youmi.android.diy.DiyAdWebView a -> a
    void run() -> run
    net.youmi.android.diy.DiyAdWebView a(net.youmi.android.diy.banner.a) -> a
net.youmi.android.diy.banner.b -> net.youmi.android.diy.banner.b:
    net.youmi.android.diy.banner.a a -> a
    void run() -> run
net.youmi.android.e.a.a -> net.youmi.android.e.a.a:
    java.lang.String k() -> k
    boolean e(java.lang.String) -> e
    long l() -> l
    java.lang.String m() -> m
net.youmi.android.e.a.b -> net.youmi.android.e.a.b:
    java.lang.String a -> a
    net.youmi.android.e.a.d b -> b
    java.lang.String a() -> a
    net.youmi.android.e.a.d b() -> b
    byte[] a(byte[],java.lang.String,int) -> a
    boolean a(android.content.Context,java.lang.String,byte[],long,int) -> a
    byte[] a(android.content.Context,java.lang.String,int) -> a
    boolean a(java.lang.String) -> a
net.youmi.android.e.a.c -> net.youmi.android.e.a.c:
    byte[] a(byte[],java.lang.String) -> a
    byte[] b(byte[],java.lang.String) -> b
net.youmi.android.e.a.d -> net.youmi.android.e.a.d:
    net.youmi.android.e.a.d a -> a
    net.youmi.android.e.a.d b -> b
    net.youmi.android.e.a.d c -> c
    java.lang.String d -> d
    int e -> e
    android.database.sqlite.SQLiteDatabase f -> f
    net.youmi.android.e.a.d d(android.content.Context) -> d
    net.youmi.android.e.a.d e(android.content.Context) -> e
    net.youmi.android.e.a.d f(android.content.Context) -> f
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    java.lang.String b() -> b
    java.lang.String c(java.lang.String) -> c
    boolean a(java.lang.String,byte[],long) -> a
    boolean a(java.util.List) -> a
    byte[] a(java.lang.String) -> a
    void a(android.content.ContentValues,java.lang.String,java.lang.String) -> a
    void a(android.content.ContentValues,java.lang.String,byte[]) -> a
    void a(android.content.ContentValues,java.lang.String,long) -> a
    boolean a(java.lang.String,java.lang.String,java.lang.String) -> a
    boolean a(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String) -> a
    boolean a(android.content.ContentValues,java.lang.String,java.lang.String,java.lang.String) -> a
    int a(android.database.sqlite.SQLiteDatabase,android.content.ContentValues,java.lang.String,java.lang.String,java.lang.String) -> a
    boolean a(android.content.ContentValues,java.lang.String) -> a
    int a(android.database.sqlite.SQLiteDatabase,android.content.ContentValues,java.lang.String) -> a
    void a() -> a
    boolean b(java.lang.String) -> b
    boolean d(java.lang.String) -> d
    void close() -> close
net.youmi.android.e.a.e -> net.youmi.android.e.a.e:
    java.lang.String a -> a
    byte[] b -> b
    long c -> c
    byte[] a() -> a
    java.lang.String b() -> b
    long c() -> c
net.youmi.android.e.a.f -> net.youmi.android.e.a.f:
    net.youmi.android.e.a.g a -> a
    int a() -> a
    net.youmi.android.e.a.d b() -> b
    boolean a(net.youmi.android.e.a.a) -> a
    java.lang.String c() -> c
    boolean b(net.youmi.android.e.a.a) -> b
    boolean c(java.lang.String) -> c
net.youmi.android.e.a.g -> net.youmi.android.e.a.g:
    net.youmi.android.e.a.b a -> a
    android.content.Context b -> b
    int c -> c
    java.lang.String a() -> a
    net.youmi.android.e.a.d b() -> b
    boolean a(java.lang.String,java.lang.String,long) -> a
    java.lang.String a(java.lang.String,java.lang.String) -> a
    boolean a(java.lang.String) -> a
    int c() -> c
net.youmi.android.e.b.a -> net.youmi.android.e.b.a:
net.youmi.android.e.b.a.a -> net.youmi.android.e.b.a.a:
    boolean b(java.lang.String) -> b
    void b(net.youmi.android.e.b.b) -> b
    void j(net.youmi.android.e.b.b) -> j
    void a(net.youmi.android.e.b.b,java.io.File) -> a
    void f(net.youmi.android.e.b.b,java.io.File) -> f
    void c(net.youmi.android.e.b.b) -> c
    void k(net.youmi.android.e.b.b) -> k
    void b(net.youmi.android.e.b.b,java.io.File) -> b
    void g(net.youmi.android.e.b.b,java.io.File) -> g
    void a(net.youmi.android.e.b.c,net.youmi.android.e.b.b,java.io.File) -> a
    void a(net.youmi.android.e.b.c,net.youmi.android.e.b.b) -> a
    void a(net.youmi.android.e.b.c,net.youmi.android.e.b.b,long,long,int,long) -> a
    void b(net.youmi.android.e.b.c,net.youmi.android.e.b.b) -> b
    void b(net.youmi.android.e.b.c,net.youmi.android.e.b.b,java.io.File) -> b
    void a(java.lang.Object,net.youmi.android.e.b.b,long,long,int,long) -> a
    void a(java.lang.Object,net.youmi.android.e.b.b,java.io.File) -> a
    void a(java.lang.Object,net.youmi.android.e.b.b) -> a
    void b(java.lang.Object,net.youmi.android.e.b.b,java.io.File) -> b
    void b(java.lang.Object,net.youmi.android.e.b.b) -> b
net.youmi.android.e.b.a.b -> net.youmi.android.e.b.a.b:
    android.content.Context a -> a
    net.youmi.android.c.f.a b -> b
    java.util.HashMap c -> c
    java.util.HashSet d -> d
    android.graphics.Bitmap a(java.lang.String) -> a
    android.graphics.Bitmap a(net.youmi.android.e.b.b) -> a
    android.graphics.Bitmap a(java.io.File) -> a
    boolean a(net.youmi.android.e.b.b,android.graphics.Bitmap) -> a
    void i(net.youmi.android.e.b.b) -> i
    void a(net.youmi.android.e.b.b,long,long,int,long) -> a
    void h(net.youmi.android.e.b.b) -> h
    void d(net.youmi.android.e.b.b,java.io.File) -> d
    void e(net.youmi.android.e.b.b,java.io.File) -> e
    boolean c(net.youmi.android.e.b.b,java.io.File) -> c
    boolean g(net.youmi.android.e.b.b) -> g
net.youmi.android.e.b.a.c -> net.youmi.android.e.b.a.c:
    java.util.HashSet a -> a
    java.util.HashMap b -> b
    java.util.HashMap d -> d
    java.util.HashSet e -> e
    android.content.Context c -> c
    android.content.Context c() -> c
    boolean a(java.lang.String) -> a
    boolean b(java.lang.String,java.lang.String) -> b
    java.io.File a(net.youmi.android.e.b.b,java.lang.String) -> a
    net.youmi.android.c.f.a a(net.youmi.android.e.b.b) -> a
    net.youmi.android.e.b.d a() -> a
    boolean b(java.lang.String) -> b
    boolean c(java.lang.String) -> c
    void j(net.youmi.android.e.b.b) -> j
    void b(java.lang.Object,net.youmi.android.e.b.b) -> b
    void h(net.youmi.android.e.b.b) -> h
    void f(net.youmi.android.e.b.b,java.io.File) -> f
    void d(net.youmi.android.e.b.b,java.io.File) -> d
    void b(java.lang.Object,net.youmi.android.e.b.b,java.io.File) -> b
    void k(net.youmi.android.e.b.b) -> k
    void a(java.lang.Object,net.youmi.android.e.b.b) -> a
    void i(net.youmi.android.e.b.b) -> i
    void g(net.youmi.android.e.b.b,java.io.File) -> g
    void a(java.lang.Object,net.youmi.android.e.b.b,java.io.File) -> a
    void e(net.youmi.android.e.b.b,java.io.File) -> e
    void a(java.lang.Object,net.youmi.android.e.b.b,long,long,int,long) -> a
    void a(net.youmi.android.e.b.b,long,long,int,long) -> a
    void a(net.youmi.android.e.b.a.g,net.youmi.android.e.b.b,java.lang.String,java.lang.String,java.lang.String) -> a
    void a(net.youmi.android.e.b.a.g,net.youmi.android.e.b.b) -> a
    void a(net.youmi.android.e.b.a.g) -> a
    boolean c(net.youmi.android.e.b.b,java.io.File) -> c
    boolean g(net.youmi.android.e.b.b) -> g
net.youmi.android.e.b.a.d -> net.youmi.android.e.b.a.d:
    net.youmi.android.e.b.a.d a -> a
    int b -> b
    int c -> c
    java.util.HashMap d -> d
    net.youmi.android.e.b.a.d a() -> a
    boolean a(android.content.Context,net.youmi.android.e.b.b,java.io.File,net.youmi.android.e.b.e) -> a
    void a(net.youmi.android.e.b.b,long,long,int,long) -> a
    void a(net.youmi.android.e.b.b) -> a
    void a(net.youmi.android.e.b.b,java.io.File) -> a
    void b(net.youmi.android.e.b.b,java.io.File) -> b
    void b(net.youmi.android.e.b.b) -> b
    void a(net.youmi.android.e.b.b,net.youmi.android.e.b.a.j) -> a
net.youmi.android.e.b.a.e -> net.youmi.android.e.b.a.e:
    net.youmi.android.e.b.a.e a(java.lang.String,java.lang.String) -> a
net.youmi.android.e.b.a.f -> net.youmi.android.e.b.a.f:
    int a -> a
    java.io.File b -> b
    java.io.File c -> c
    int d -> d
    int e -> e
    boolean f -> f
    boolean g -> g
    net.youmi.android.c.h.d h -> h
    android.content.Context i -> i
    int j -> j
    int k -> k
    void run() -> run
    void a(boolean) -> a
    void f() -> f
    boolean a() -> a
    boolean b() -> b
    long c() -> c
    long d() -> d
    int e() -> e
net.youmi.android.e.b.a.g -> net.youmi.android.e.b.a.g:
    net.youmi.android.e.b.h a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    boolean d -> d
    void a() -> a
    void b() -> b
    void onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long) -> onDownloadStart
    void run() -> run
net.youmi.android.e.b.a.h -> net.youmi.android.e.b.a.h:
    boolean onJsAlert(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsAlert
    boolean onJsConfirm(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsConfirm
    boolean onJsPrompt(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsPromptResult) -> onJsPrompt
net.youmi.android.e.b.a.i -> net.youmi.android.e.b.a.i:
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
net.youmi.android.e.b.a.j -> net.youmi.android.e.b.a.j:
    boolean a -> a
    net.youmi.android.e.b.b b -> b
    net.youmi.android.e.b.a.f c -> c
    java.io.File d -> d
    java.io.File e -> e
    android.content.Context f -> f
    net.youmi.android.e.b.a.k g -> g
    net.youmi.android.e.b.e h -> h
    net.youmi.android.e.b.b.a i -> i
    net.youmi.android.e.b.b.f j -> j
    net.youmi.android.e.b.b.g k -> k
    net.youmi.android.e.b.b.b l -> l
    net.youmi.android.e.b.b.j m -> m
    net.youmi.android.e.b.b.i n -> n
    net.youmi.android.e.b.b.h o -> o
    net.youmi.android.e.b.b.e p -> p
    net.youmi.android.e.b.b.d q -> q
    net.youmi.android.e.b.b.c r -> r
    void a(java.io.File) -> a
    int hashCode() -> hashCode
    java.io.File a() -> a
    java.io.File b() -> b
    net.youmi.android.e.b.b c() -> c
    net.youmi.android.e.b.a.f d() -> d
    net.youmi.android.e.b.e e() -> e
    boolean f() -> f
    net.youmi.android.e.b.b.a t() -> t
    net.youmi.android.e.b.b.a g() -> g
    net.youmi.android.e.b.b.a h() -> h
    net.youmi.android.e.b.b.a i() -> i
    net.youmi.android.e.b.b.a j() -> j
    net.youmi.android.e.b.b.a k() -> k
    net.youmi.android.e.b.b.a l() -> l
    net.youmi.android.e.b.b.a m() -> m
    net.youmi.android.e.b.b.a n() -> n
    void a(net.youmi.android.e.b.b.a) -> a
    boolean o() -> o
    java.lang.Void a(java.lang.Void[]) -> a
    void p() -> p
    void q() -> q
    void r() -> r
    void s() -> s
    void a(int,long,long,long) -> a
    void a(net.youmi.android.e.b.a.k[]) -> a
    void a(net.youmi.android.e.b.a.k) -> a
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
net.youmi.android.e.b.a.k -> net.youmi.android.e.b.a.k:
    int a -> a
    long b -> b
    long c -> c
    long d -> d
    int e -> e
net.youmi.android.e.b.b -> net.youmi.android.e.b.b:
    java.lang.String a -> a
    java.lang.String b -> b
    int c -> c
    boolean d -> d
    long e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String a() -> a
    java.lang.String b() -> b
    boolean c() -> c
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    void a(long) -> a
    long d() -> d
    void a(java.lang.String) -> a
    java.lang.String e() -> e
    void b(java.lang.String) -> b
    java.lang.String f() -> f
net.youmi.android.e.b.b.a -> net.youmi.android.e.b.b.a:
    long a -> a
    net.youmi.android.e.b.a.j b -> b
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
net.youmi.android.e.b.b.b -> net.youmi.android.e.b.b.b:
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
net.youmi.android.e.b.b.c -> net.youmi.android.e.b.b.c:
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
net.youmi.android.e.b.b.d -> net.youmi.android.e.b.b.d:
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
net.youmi.android.e.b.b.e -> net.youmi.android.e.b.b.e:
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
net.youmi.android.e.b.b.f -> net.youmi.android.e.b.b.f:
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
net.youmi.android.e.b.b.g -> net.youmi.android.e.b.b.g:
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
net.youmi.android.e.b.b.h -> net.youmi.android.e.b.b.h:
    long c -> c
    boolean d -> d
    long e -> e
    int f -> f
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
net.youmi.android.e.b.b.i -> net.youmi.android.e.b.b.i:
    long c -> c
    boolean d -> d
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
net.youmi.android.e.b.b.j -> net.youmi.android.e.b.b.j:
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
net.youmi.android.e.b.c -> net.youmi.android.e.b.c:
    void a(net.youmi.android.e.b.b,java.io.File) -> a
    void a(net.youmi.android.e.b.b) -> a
    void b(net.youmi.android.e.b.b) -> b
    void a(net.youmi.android.e.b.b,long,long,int,long) -> a
    void a(int) -> a
net.youmi.android.e.b.d -> net.youmi.android.e.b.d:
    java.lang.String a(net.youmi.android.e.b.b,java.lang.String) -> a
net.youmi.android.e.b.e -> net.youmi.android.e.b.e:
    boolean c(net.youmi.android.e.b.b,java.io.File) -> c
    boolean g(net.youmi.android.e.b.b) -> g
net.youmi.android.e.b.f -> net.youmi.android.e.b.f:
    void a(net.youmi.android.e.b.b,long,long,int,long) -> a
    void h(net.youmi.android.e.b.b) -> h
net.youmi.android.e.b.g -> net.youmi.android.e.b.g:
    void d(net.youmi.android.e.b.b,java.io.File) -> d
    void i(net.youmi.android.e.b.b) -> i
    void e(net.youmi.android.e.b.b,java.io.File) -> e
net.youmi.android.e.b.h -> net.youmi.android.e.b.h:
    void a(net.youmi.android.e.b.a.g,net.youmi.android.e.b.b,java.lang.String,java.lang.String,java.lang.String) -> a
    void a(net.youmi.android.e.b.a.g,net.youmi.android.e.b.b) -> a
    void a(net.youmi.android.e.b.a.g) -> a
net.youmi.android.e.b.i -> net.youmi.android.e.b.i:
    void a(java.lang.String,android.graphics.Bitmap) -> a
    void a(java.lang.String) -> a
net.youmi.android.e.b.j -> net.youmi.android.e.b.j:
    net.youmi.android.e.b.j a -> a
    net.youmi.android.e.b.j a() -> a
    java.lang.String a(net.youmi.android.e.b.b,java.lang.String) -> a
net.youmi.android.f.a -> net.youmi.android.f.a:
    android.content.Context e -> e
    android.view.WindowManager a -> a
    android.view.WindowManager$LayoutParams f -> f
    android.widget.LinearLayout b -> b
    net.youmi.android.f.g c -> c
    int g -> g
    boolean h -> h
    int d -> d
    boolean a() -> a
    void b() -> b
    void c() -> c
    void d() -> d
net.youmi.android.f.a.a -> net.youmi.android.f.a.a:
    java.lang.String[] a -> a
    net.youmi.android.f.a.d b -> b
    net.youmi.android.f.a.d c -> c
    net.youmi.android.f.a.d d -> d
    net.youmi.android.f.a.d e -> e
    net.youmi.android.f.a.d f -> f
    net.youmi.android.f.a.d g -> g
    net.youmi.android.f.a.d[] l -> l
    java.lang.String a() -> a
    void a(java.lang.String,int,int,long,int,long) -> a
    void a(java.lang.String,long) -> a
    net.youmi.android.f.c.a a(java.lang.String) -> a
    java.util.ArrayList a(int) -> a
    long b(java.lang.String) -> b
net.youmi.android.f.a.b -> net.youmi.android.f.a.b:
    android.database.sqlite.SQLiteDatabase c -> c
    net.youmi.android.f.a.a a -> a
    net.youmi.android.f.a.b d -> d
    net.youmi.android.f.a.c b -> b
    void a(android.content.Context) -> a
    net.youmi.android.f.a.b b(android.content.Context) -> b
net.youmi.android.f.a.c -> net.youmi.android.f.a.c:
    void a(android.database.sqlite.SQLiteDatabase) -> a
    void a(android.database.sqlite.SQLiteDatabase,int,int) -> a
net.youmi.android.f.a.d -> net.youmi.android.f.a.d:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String a() -> a
    java.lang.String b() -> b
net.youmi.android.f.a.e -> net.youmi.android.f.a.e:
    java.lang.String h -> h
    android.database.sqlite.SQLiteDatabase i -> i
    net.youmi.android.f.a.d[] j -> j
    java.lang.String a(java.lang.String,net.youmi.android.f.a.d[]) -> a
    void a(android.database.sqlite.SQLiteDatabase) -> a
net.youmi.android.f.a.f -> net.youmi.android.f.a.f:
net.youmi.android.f.a.g -> net.youmi.android.f.a.g:
    net.youmi.android.f.a.d k -> k
net.youmi.android.f.b -> net.youmi.android.f.b:
    int c -> c
    int d -> d
    java.lang.String a -> a
    java.lang.String b -> b
    void a(android.content.Context,java.lang.String,int) -> a
    void a(android.content.Context,int) -> a
    int a() -> a
    int b() -> b
net.youmi.android.f.b.a -> net.youmi.android.f.b.a:
    boolean a(int) -> a
    net.youmi.android.a.h.b.a a(int,int) -> a
net.youmi.android.f.b.a.a -> net.youmi.android.f.b.a.a:
    java.lang.String a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,java.lang.String) -> a
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.f.b.a.b -> net.youmi.android.f.b.a.b:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.f.b.a.c -> net.youmi.android.f.b.a.c:
    int[] a -> a
net.youmi.android.f.b.b -> net.youmi.android.f.b.b:
    int e -> e
    android.content.Context a() -> a
    net.youmi.android.a.h.f c() -> c
    android.app.Activity b() -> b
    int d() -> d
    int e() -> e
    java.lang.String a(java.lang.String,java.lang.String) -> a
    java.lang.String a(net.youmi.android.a.h.j) -> a
    net.youmi.android.a.h.f f() -> f
    net.youmi.android.a.h.f a(net.youmi.android.a.h.m) -> a
    net.youmi.android.a.h.f b(net.youmi.android.a.h.p) -> b
    net.youmi.android.a.h.f a(net.youmi.android.a.h.p) -> a
    net.youmi.android.a.h.f a(net.youmi.android.a.h.i,net.youmi.android.a.h.o) -> a
    net.youmi.android.a.h.f a(android.content.Context,java.util.List) -> a
    net.youmi.android.a.h.f a(java.lang.String,java.lang.String,java.lang.String,long) -> a
    net.youmi.android.a.h.f a(java.lang.String) -> a
    void a(net.youmi.android.a.k.a.d) -> a
    net.youmi.android.a.h.f a(int,net.youmi.android.a.h.j) -> a
    net.youmi.android.a.h.f a(net.youmi.android.a.h.n) -> a
    net.youmi.android.a.h.f a(int) -> a
net.youmi.android.f.c -> net.youmi.android.f.c:
    android.content.Context a -> a
    int b -> b
    int c -> c
    void run() -> run
net.youmi.android.f.c.a -> net.youmi.android.f.c.a:
    java.lang.String a -> a
    long b -> b
    long c -> c
    long d -> d
    long e -> e
    long a() -> a
    void a(long) -> a
    void a(java.lang.String) -> a
    long b() -> b
    void b(long) -> b
    void c(long) -> c
    long c() -> c
    void d(long) -> d
    void e(long) -> e
net.youmi.android.f.d -> net.youmi.android.f.d:
    android.content.Context a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    java.lang.String a(java.lang.Void[]) -> a
    void a(java.lang.String) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
net.youmi.android.f.e -> net.youmi.android.f.e:
    void a(android.content.Context,int) -> a
    void a(android.content.Context,long) -> a
    void a(android.content.Context) -> a
    net.youmi.android.f.a.b b(android.content.Context) -> b
    int c(android.content.Context) -> c
net.youmi.android.f.f -> net.youmi.android.f.f:
    net.youmi.android.a.k.a.e e -> e
    net.youmi.android.a.k.a.o f -> f
    net.youmi.android.a.k.a.g g -> g
    boolean a -> a
    boolean b -> b
    boolean c -> c
    java.lang.String d -> d
    android.widget.RelativeLayout h -> h
    net.youmi.android.a.h.d i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    android.content.Context l -> l
    void a(java.lang.String) -> a
    void reload() -> reload
    void loadUrl(java.lang.String) -> loadUrl
    void postUrl(java.lang.String,byte[]) -> postUrl
    void onWebPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onWebPageStarted
    void onWebReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onWebReceivedError
    void onWebPageFinished(android.webkit.WebView,java.lang.String) -> onWebPageFinished
    void a(android.webkit.WebView,int) -> a
    void a(boolean,int) -> a
    void a(android.webkit.WebView,java.lang.String) -> a
    boolean a() -> a
    boolean b() -> b
    boolean canGoBack() -> canGoBack
    boolean canGoForward() -> canGoForward
    void clearHistory() -> clearHistory
    android.view.View getCurrentView() -> getCurrentView
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    net.youmi.android.a.h.f js_SDK_Handler_ClearCurrentBrowserHistory() -> js_SDK_Handler_ClearCurrentBrowserHistory
    boolean js_SDK_Handler_RunOnUIThread(java.lang.Runnable) -> js_SDK_Handler_RunOnUIThread
net.youmi.android.f.g -> net.youmi.android.f.g:
    android.widget.RelativeLayout a -> a
    net.youmi.android.a.k.a.l b -> b
    net.youmi.android.a.h.l c -> c
    boolean d -> d
    boolean e -> e
    android.content.Context f -> f
    int g -> g
    int h -> h
    java.lang.String i -> i
    net.youmi.android.f.a j -> j
    int k -> k
    void setClickableToast(net.youmi.android.f.a) -> setClickableToast
    void onAttachedToWindow() -> onAttachedToWindow
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onDetachedFromWindow() -> onDetachedFromWindow
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    boolean proxyClearWebViewHistory() -> proxyClearWebViewHistory
    boolean proxyCloseCurrentWindow() -> proxyCloseCurrentWindow
    boolean proxyLoadUrl(java.lang.String) -> proxyLoadUrl
    boolean proxyPostUrl(java.lang.String,byte[]) -> proxyPostUrl
    net.youmi.android.a.h.f js_SDK_Handler_ClearCurrentBrowserHistory() -> js_SDK_Handler_ClearCurrentBrowserHistory
    boolean js_SDK_Handler_RunOnUIThread(java.lang.Runnable) -> js_SDK_Handler_RunOnUIThread
    void onWebPageFinished(android.webkit.WebView,java.lang.String) -> onWebPageFinished
    void onWebPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onWebPageStarted
    void onWebReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onWebReceivedError
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    boolean proxySetVisibility(int) -> proxySetVisibility
    void setCanShowAdNow(boolean) -> setCanShowAdNow
    void run() -> run
    net.youmi.android.f.a a(net.youmi.android.f.g) -> a
    net.youmi.android.f.a a(net.youmi.android.f.g,net.youmi.android.f.a) -> a
net.youmi.android.f.h -> net.youmi.android.f.h:
    net.youmi.android.f.g a -> a
    void run() -> run
net.youmi.android.g.a -> net.youmi.android.g.a:
    net.youmi.android.g.a a(java.lang.String) -> a
    net.youmi.android.g.a b(java.lang.String) -> b
    net.youmi.android.g.a a(long) -> a
    net.youmi.android.g.e a(net.youmi.android.g.k) -> a
net.youmi.android.g.a.a -> net.youmi.android.g.a.a:
    boolean a(long,long) -> a
net.youmi.android.g.a.b -> net.youmi.android.g.a.b:
    java.lang.String a(java.lang.String) -> a
net.youmi.android.g.b -> net.youmi.android.g.b:
    java.util.HashMap a -> a
    net.youmi.android.g.f a() -> a
    net.youmi.android.g.a b() -> b
    net.youmi.android.g.b c() -> c
    net.youmi.android.g.b c(java.lang.String) -> c
    net.youmi.android.g.b d(java.lang.String) -> d
    net.youmi.android.g.b e(java.lang.String) -> e
    net.youmi.android.g.b f(java.lang.String) -> f
    net.youmi.android.g.e a(net.youmi.android.g.k) -> a
net.youmi.android.g.c -> net.youmi.android.g.c:
    java.lang.String a -> a
    net.youmi.android.g.c b -> b
    net.youmi.android.g.c a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    boolean a(net.youmi.android.g.e) -> a
    boolean a(java.util.List) -> a
    boolean b(java.util.List) -> b
    java.util.List a(int,int) -> a
net.youmi.android.g.d -> net.youmi.android.g.d:
    void a(android.content.Context) -> a
    boolean b(android.content.Context,net.youmi.android.g.e) -> b
    boolean b(android.content.Context,java.util.List) -> b
    org.apache.http.params.HttpParams b(android.content.Context) -> b
    boolean a(android.content.Context,net.youmi.android.g.e) -> a
    boolean a(android.content.Context,java.util.List) -> a
net.youmi.android.g.e -> net.youmi.android.g.e:
    int a -> a
    java.lang.String b -> b
    int c -> c
    long d -> d
    java.lang.String e -> e
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    int b() -> b
    void a(int) -> a
    java.lang.String c() -> c
    void b(java.lang.String) -> b
    long d() -> d
    void a(long) -> a
    int e() -> e
    void b(int) -> b
net.youmi.android.g.f -> net.youmi.android.g.f:
    net.youmi.android.g.f a(long) -> a
    net.youmi.android.g.f b(long) -> b
    net.youmi.android.g.f d() -> d
    net.youmi.android.g.e a(net.youmi.android.g.k) -> a
net.youmi.android.g.g -> net.youmi.android.g.g:
    net.youmi.android.g.k a -> a
    android.content.Context b -> b
    int c -> c
    void run() -> run
net.youmi.android.g.h -> net.youmi.android.g.h:
    java.lang.String a -> a
    net.youmi.android.g.h b -> b
    net.youmi.android.g.h a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    net.youmi.android.g.i a(int,java.lang.String) -> a
    boolean a(net.youmi.android.g.i) -> a
    boolean a(java.util.List) -> a
    java.util.List a(android.database.Cursor) -> a
net.youmi.android.g.i -> net.youmi.android.g.i:
    int a -> a
    java.lang.String b -> b
    int c -> c
    long d -> d
    int a() -> a
    void a(int) -> a
    java.lang.String b() -> b
    void a(java.lang.String) -> a
    long c() -> c
    void a(long) -> a
    int d() -> d
    void b(int) -> b
net.youmi.android.g.j -> net.youmi.android.g.j:
    java.util.concurrent.ExecutorService a -> a
    android.content.Context b -> b
    net.youmi.android.g.e c -> c
    java.util.List d -> d
    void a(android.content.Context,java.util.List) -> a
    void run() -> run
net.youmi.android.g.k -> net.youmi.android.g.k:
    android.content.Context a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.util.Queue f -> f
    java.util.concurrent.ExecutorService g -> g
    java.lang.String a(java.lang.String) -> a
    void a(int) -> a
    net.youmi.android.g.k a(net.youmi.android.g.b) -> a
    java.lang.String a() -> a
    boolean b(net.youmi.android.g.b) -> b
    void b() -> b
    void c(net.youmi.android.g.b) -> c
net.youmi.android.h.a.a -> net.youmi.android.h.a.a:
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String a -> a
    java.lang.String l -> l
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String f() -> f
    java.lang.String g() -> g
    java.lang.String h() -> h
    java.lang.String i() -> i
    java.lang.String j() -> j
    java.lang.String k() -> k
    java.lang.String l() -> l
    java.lang.String a(android.content.Context,net.youmi.android.banner.AdSize) -> a
    java.lang.String a(android.content.Context) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
net.youmi.android.h.a.b -> net.youmi.android.h.a.b:
    java.lang.String a(int) -> a
net.youmi.android.h.a.c -> net.youmi.android.h.a.c:
    java.lang.String a -> a
    java.lang.String a() -> a
net.youmi.android.i.a -> net.youmi.android.i.a:
net.youmi.android.i.a.a -> net.youmi.android.i.a.a:
    android.graphics.Bitmap a(java.lang.String) -> a
net.youmi.android.i.a.b -> net.youmi.android.i.a.b:
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String f() -> f
    java.lang.String g() -> g
net.youmi.android.i.b -> net.youmi.android.i.b:
    android.content.Context a -> a
    net.youmi.android.i.c b -> b
    android.view.View c -> c
    android.view.View d -> d
    android.view.View e -> e
    android.view.View f -> f
    android.view.View g -> g
    void a() -> a
    void a(android.widget.TableRow,int,android.view.View,android.widget.RelativeLayout$LayoutParams) -> a
    void setBackEnable(boolean) -> setBackEnable
    void setForwardEnable(boolean) -> setForwardEnable
    void onClick(android.view.View) -> onClick
net.youmi.android.i.c -> net.youmi.android.i.c:
    void b() -> b
    void c() -> c
    void d() -> d
    void e() -> e
    void f() -> f
net.youmi.android.i.d -> net.youmi.android.i.d:
    void a(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> a
    int[] a() -> a
    int[] b() -> b
    int[] c() -> c
    int[] d() -> d
    int[] e() -> e
    int[] f() -> f
net.youmi.android.i.e -> net.youmi.android.i.e:
    net.youmi.android.i.d a -> a
net.youmi.android.i.f -> net.youmi.android.i.f:
    net.youmi.android.i.d a -> a
net.youmi.android.offers.EarnPointsOrderInfo -> net.youmi.android.offers.EarnPointsOrderInfo:
    java.lang.String a -> a
    int b -> b
    java.lang.String c -> c
    int d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    int g -> g
    long h -> h
    int i -> i
    java.lang.String getOrderID() -> getOrderID
    void a(java.lang.String) -> a
    int getChannelId() -> getChannelId
    void a(int) -> a
    java.lang.String getCustomUserID() -> getCustomUserID
    void b(java.lang.String) -> b
    int getStatus() -> getStatus
    void b(int) -> b
    java.lang.String getMessage() -> getMessage
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    int getPoints() -> getPoints
    void c(int) -> c
    long getSettlingTime() -> getSettlingTime
    void a(long) -> a
    int a() -> a
    void d(int) -> d
net.youmi.android.offers.EarnPointsOrderList -> net.youmi.android.offers.EarnPointsOrderList:
    java.lang.String a -> a
    java.util.ArrayList b -> b
    java.lang.String getCurrencyName() -> getCurrencyName
    void a(java.lang.String) -> a
    boolean a(net.youmi.android.offers.EarnPointsOrderInfo) -> a
    void a() -> a
    net.youmi.android.offers.EarnPointsOrderInfo get(int) -> get
    boolean isEmpty() -> isEmpty
    int size() -> size
net.youmi.android.offers.OffersAdSize -> net.youmi.android.offers.OffersAdSize:
    int HEIGHT_BANNER -> HEIGHT_BANNER
    int HEIGHT_MINI_BANNER -> HEIGHT_MINI_BANNER
    int MATCH_SCREEN -> MATCH_SCREEN
    net.youmi.android.offers.OffersAdSize SIZE_320x60 -> SIZE_320x60
    net.youmi.android.offers.OffersAdSize SIZE_MATCH_SCREENx60 -> SIZE_MATCH_SCREENx60
    net.youmi.android.offers.OffersAdSize SIZE_320x32 -> SIZE_320x32
    net.youmi.android.offers.OffersAdSize SIZE_MATCH_SCREENx32 -> SIZE_MATCH_SCREENx32
    int a -> a
    int b -> b
    int getHeight() -> getHeight
    int getWidth() -> getWidth
net.youmi.android.offers.OffersBanner -> net.youmi.android.offers.OffersBanner:
    java.lang.String a(net.youmi.android.offers.OffersAdSize) -> a
net.youmi.android.offers.OffersManager -> net.youmi.android.offers.OffersManager:
    int STYLE_SPOT_CENTER -> STYLE_SPOT_CENTER
    int STYLE_SPOT_TOP_DOWN_REVERSE -> STYLE_SPOT_TOP_DOWN_REVERSE
    net.youmi.android.offers.OffersManager a -> a
    android.content.Context b -> b
    net.youmi.android.offers.OffersManager getInstance(android.content.Context) -> getInstance
    boolean checkOffersAdConfig() -> checkOffersAdConfig
    boolean checkOffersAdConfig(boolean) -> checkOffersAdConfig
    android.content.Intent getShowOffersWallIntent(int) -> getShowOffersWallIntent
    boolean showOffersSpot() -> showOffersSpot
    boolean showOffersSpot(int) -> showOffersSpot
    void showOffersWall() -> showOffersWall
    void showOffersWallDialog(android.app.Activity,net.youmi.android.offers.OffersWallDialogListener) -> showOffersWallDialog
    void showOffersWallDialog(android.app.Activity) -> showOffersWallDialog
    void showOffersWallDialog(android.app.Activity,int,int,net.youmi.android.offers.OffersWallDialogListener) -> showOffersWallDialog
    void showOffersWallDialog(android.app.Activity,int,int) -> showOffersWallDialog
    void showOffersWallDialog(android.app.Activity,double,double) -> showOffersWallDialog
    void showOffersWallDialog(android.app.Activity,double,double,net.youmi.android.offers.OffersWallDialogListener) -> showOffersWallDialog
    void setCustomUserId(java.lang.String) -> setCustomUserId
    java.lang.String getCustomUserId() -> getCustomUserId
    void onAppLaunch() -> onAppLaunch
    void onAppExit() -> onAppExit
    android.content.Context a(net.youmi.android.offers.OffersManager) -> a
net.youmi.android.offers.OffersReceiver -> net.youmi.android.offers.OffersReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
net.youmi.android.offers.OffersWallDialogListener -> net.youmi.android.offers.OffersWallDialogListener:
net.youmi.android.offers.PointsChangeNotify -> net.youmi.android.offers.PointsChangeNotify:
    void onPointBalanceChange(int) -> onPointBalanceChange
net.youmi.android.offers.PointsManager -> net.youmi.android.offers.PointsManager:
    android.content.Context a -> a
    net.youmi.android.offers.PointsManager b -> b
    boolean c -> c
    boolean d -> d
    net.youmi.android.offers.PointsManager getInstance(android.content.Context) -> getInstance
    int queryPoints() -> queryPoints
    boolean awardPoints(int) -> awardPoints
    boolean spendPoints(int) -> spendPoints
    void registerNotify(net.youmi.android.offers.PointsChangeNotify) -> registerNotify
    void unRegisterNotify(net.youmi.android.offers.PointsChangeNotify) -> unRegisterNotify
    void setEnableEarnPointsNotification(boolean) -> setEnableEarnPointsNotification
    boolean isEnableEarnPointsNotification() -> isEnableEarnPointsNotification
    void setEnableEarnPointsToastTips(boolean) -> setEnableEarnPointsToastTips
    boolean isEnableEarnPointsToastTips() -> isEnableEarnPointsToastTips
net.youmi.android.offers.PointsReceiver -> net.youmi.android.offers.PointsReceiver:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String getActionName_EarnPoints(android.content.Context) -> getActionName_EarnPoints
    java.lang.String getActionName_ViewPoints(android.content.Context) -> getActionName_ViewPoints
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void onEarnPoints(android.content.Context,net.youmi.android.offers.EarnPointsOrderList) -> onEarnPoints
    void onViewPoints(android.content.Context) -> onViewPoints
net.youmi.android.offers.a -> net.youmi.android.offers.a:
    java.lang.String a -> a
    net.youmi.android.offers.OffersManager b -> b
    void run() -> run
net.youmi.android.offers.a.a -> net.youmi.android.offers.a.a:
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
net.youmi.android.offers.b -> net.youmi.android.offers.b:
    net.youmi.android.offers.c.c a -> a
    net.youmi.android.offers.c b -> b
    boolean c -> c
    long d -> d
    void a() -> a
    void a(android.content.Context,net.youmi.android.offers.c.c) -> a
    void b(android.content.Context,net.youmi.android.offers.c.c) -> b
    void c(android.content.Context,net.youmi.android.offers.c.c) -> c
net.youmi.android.offers.b.a.a -> net.youmi.android.offers.b.a.a:
    boolean a(int) -> a
    net.youmi.android.a.h.b.a a(int,int) -> a
net.youmi.android.offers.b.a.a.a -> net.youmi.android.offers.b.a.a.a:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.offers.b.a.a.b -> net.youmi.android.offers.b.a.a.b:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.offers.b.a.a.c -> net.youmi.android.offers.b.a.a.c:
    int[] a -> a
net.youmi.android.offers.b.a.a.d -> net.youmi.android.offers.b.a.a.d:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.offers.b.a.a.e -> net.youmi.android.offers.b.a.a.e:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.offers.b.b.a.a -> net.youmi.android.offers.b.b.a.a:
    java.lang.String a() -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
net.youmi.android.offers.b.b.b.a -> net.youmi.android.offers.b.b.b.a:
    android.content.Intent a(android.content.Context,int) -> a
    net.youmi.android.a.h.p a(android.content.Context) -> a
    boolean a(android.content.Context,net.youmi.android.offers.OffersWallDialogListener) -> a
    boolean a(android.content.Context,int,int,net.youmi.android.offers.OffersWallDialogListener) -> a
    boolean a(android.content.Context,double,double,net.youmi.android.offers.OffersWallDialogListener) -> a
    java.lang.String b(android.content.Context,int) -> b
net.youmi.android.offers.b.b.c.a -> net.youmi.android.offers.b.b.c.a:
    void a(int,int) -> a
net.youmi.android.offers.b.b.c.b -> net.youmi.android.offers.b.b.c.b:
    android.content.Context a -> a
    net.youmi.android.offers.b.b.c.b b -> b
    net.youmi.android.offers.b.b.c.b a(android.content.Context) -> a
    void a() -> a
net.youmi.android.offers.b.b.c.c -> net.youmi.android.offers.b.b.c.c:
    net.youmi.android.offers.b.b.c.c a -> a
    java.util.HashSet b -> b
    net.youmi.android.offers.b.b.c.c a() -> a
    void a(java.lang.String,java.lang.String) -> a
    void onPointBalanceChange(int) -> onPointBalanceChange
net.youmi.android.offers.b.b.c.d -> net.youmi.android.offers.b.b.c.d:
    net.youmi.android.offers.b.b.c.d a -> a
    java.util.HashSet b -> b
    net.youmi.android.offers.b.b.c.d a() -> a
    void a(java.lang.String,java.lang.String) -> a
    void a(int,int) -> a
net.youmi.android.offers.b.b.c.e -> net.youmi.android.offers.b.b.c.e:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    net.youmi.android.offers.b.b.c.e d -> d
    android.content.Context e -> e
    net.youmi.android.offers.b.b.c.e a(android.content.Context) -> a
    int a() -> a
    boolean a(int) -> a
    boolean b(int) -> b
    boolean a(android.content.Context,int) -> a
    int b(android.content.Context) -> b
net.youmi.android.offers.b.b.c.f -> net.youmi.android.offers.b.b.c.f:
    void a(android.content.Context,net.youmi.android.offers.EarnPointsOrderInfo) -> a
    void a(android.content.Context,net.youmi.android.offers.EarnPointsOrderInfo,net.youmi.android.c.k.a) -> a
    void b(android.content.Context,net.youmi.android.offers.EarnPointsOrderInfo,net.youmi.android.c.k.a) -> b
net.youmi.android.offers.b.b.c.g -> net.youmi.android.offers.b.b.c.g:
    android.content.Context a -> a
    java.lang.String b -> b
    int c -> c
    int d -> d
    void run() -> run
net.youmi.android.offers.b.b.c.h -> net.youmi.android.offers.b.b.c.h:
    android.app.PendingIntent e(android.content.Context) -> e
    void a(android.content.Context) -> a
    void f(android.content.Context) -> f
    void a(android.content.Context,long) -> a
    void b(android.content.Context) -> b
    void c(android.content.Context) -> c
    void d(android.content.Context) -> d
net.youmi.android.offers.b.b.c.i -> net.youmi.android.offers.b.b.c.i:
    android.content.Context a -> a
    void run() -> run
net.youmi.android.offers.b.b.c.j -> net.youmi.android.offers.b.b.c.j:
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void c(android.content.Context) -> c
    long a(android.content.Context,java.lang.String) -> a
    boolean d(android.content.Context) -> d
net.youmi.android.offers.b.b.c.k -> net.youmi.android.offers.b.b.c.k:
    java.lang.String a(android.content.Context) -> a
    void a(android.content.Context,java.lang.String) -> a
net.youmi.android.offers.b.b.c.l -> net.youmi.android.offers.b.b.c.l:
    net.youmi.android.offers.PointsChangeNotify a -> a
    int b -> b
    void run() -> run
net.youmi.android.offers.b.b.c.m -> net.youmi.android.offers.b.b.c.m:
    net.youmi.android.offers.b.b.c.a a -> a
    int b -> b
    int c -> c
    void run() -> run
net.youmi.android.offers.b.b.d.a -> net.youmi.android.offers.b.b.d.a:
    net.youmi.android.offers.b.b.d.b a -> a
    void a() -> a
    void a(android.content.Context) -> a
net.youmi.android.offers.b.b.d.b -> net.youmi.android.offers.b.b.d.b:
    net.youmi.android.a.k.a.l a -> a
    net.youmi.android.a.h.l b -> b
    int b() -> b
    void a() -> a
    boolean proxyClearWebViewHistory() -> proxyClearWebViewHistory
    boolean proxyCloseCurrentWindow() -> proxyCloseCurrentWindow
    boolean proxyLoadUrl(java.lang.String) -> proxyLoadUrl
    boolean proxyPostUrl(java.lang.String,byte[]) -> proxyPostUrl
    net.youmi.android.a.h.f js_SDK_Handler_ClearCurrentBrowserHistory() -> js_SDK_Handler_ClearCurrentBrowserHistory
    boolean js_SDK_Handler_RunOnUIThread(java.lang.Runnable) -> js_SDK_Handler_RunOnUIThread
    boolean proxySetVisibility(int) -> proxySetVisibility
net.youmi.android.offers.b.b.e.a -> net.youmi.android.offers.b.b.e.a:
    android.content.Context c -> c
    net.youmi.android.offers.b d -> d
    net.youmi.android.offers.b.b.e.a e -> e
    android.view.WindowManager f -> f
    android.view.WindowManager$LayoutParams g -> g
    android.widget.LinearLayout a -> a
    android.widget.LinearLayout$LayoutParams b -> b
    android.view.animation.Animation h -> h
    android.view.animation.Animation i -> i
    int j -> j
    android.view.animation.Animation k -> k
    android.view.animation.Animation l -> l
    android.view.animation.Animation m -> m
    android.view.animation.Animation n -> n
    boolean o -> o
    net.youmi.android.offers.b.b.e.a a(android.content.Context) -> a
    void b() -> b
    void c() -> c
    void a() -> a
    void a(int) -> a
    void d() -> d
    void a(android.content.Context,net.youmi.android.offers.b) -> a
    void b(android.content.Context,net.youmi.android.offers.b) -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
net.youmi.android.offers.c -> net.youmi.android.offers.c:
    void a(android.content.Context,net.youmi.android.offers.b) -> a
    void b(android.content.Context,net.youmi.android.offers.b) -> b
net.youmi.android.offers.c.a -> net.youmi.android.offers.c.a:
    net.youmi.android.offers.c.f e -> e
    android.widget.RelativeLayout f -> f
    net.youmi.android.a.k.a.l a -> a
    net.youmi.android.a.h.l g -> g
    boolean b -> b
    int c -> c
    boolean h -> h
    android.content.Context i -> i
    net.youmi.android.offers.OffersAdSize d -> d
    int j -> j
    boolean a() -> a
    void b() -> b
    void startLoad() -> startLoad
    void onAttachedToWindow() -> onAttachedToWindow
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onDetachedFromWindow() -> onDetachedFromWindow
    void c() -> c
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void d() -> d
    boolean proxyClearWebViewHistory() -> proxyClearWebViewHistory
    boolean proxyCloseCurrentWindow() -> proxyCloseCurrentWindow
    boolean proxyLoadUrl(java.lang.String) -> proxyLoadUrl
    boolean proxyPostUrl(java.lang.String,byte[]) -> proxyPostUrl
    net.youmi.android.a.h.f js_SDK_Handler_ClearCurrentBrowserHistory() -> js_SDK_Handler_ClearCurrentBrowserHistory
    boolean js_SDK_Handler_RunOnUIThread(java.lang.Runnable) -> js_SDK_Handler_RunOnUIThread
    void onWebPageFinished(android.webkit.WebView,java.lang.String) -> onWebPageFinished
    void onWebPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onWebPageStarted
    void onWebReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onWebReceivedError
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    boolean proxySetVisibility(int) -> proxySetVisibility
    void setCanShowAdNow(boolean) -> setCanShowAdNow
    boolean canShowAdNow() -> canShowAdNow
    void run() -> run
net.youmi.android.offers.c.b -> net.youmi.android.offers.c.b:
    net.youmi.android.offers.OffersAdSize c -> c
    net.youmi.android.offers.OffersAdSize d -> d
    net.youmi.android.offers.OffersAdSize e -> e
    void a(int) -> a
    void b(int) -> b
    net.youmi.android.offers.OffersAdSize a(android.content.Context,double) -> a
net.youmi.android.offers.c.c -> net.youmi.android.offers.c.c:
    net.youmi.android.offers.c.e f -> f
    boolean e -> e
    void e() -> e
    void onAttachedToWindow() -> onAttachedToWindow
    void f() -> f
    void b() -> b
    void run() -> run
    void startLoad() -> startLoad
    boolean proxyCloseCurrentWindow() -> proxyCloseCurrentWindow
    net.youmi.android.offers.c.e a(net.youmi.android.offers.c.c) -> a
net.youmi.android.offers.c.d -> net.youmi.android.offers.c.d:
    net.youmi.android.offers.c.c a -> a
    void run() -> run
net.youmi.android.offers.c.e -> net.youmi.android.offers.c.e:
    void a(android.content.Context,net.youmi.android.offers.c.c) -> a
    void b(android.content.Context,net.youmi.android.offers.c.c) -> b
    void c(android.content.Context,net.youmi.android.offers.c.c) -> c
net.youmi.android.offers.c.f -> net.youmi.android.offers.c.f:
    net.youmi.android.offers.c.a b -> b
    net.youmi.android.offers.c.g a -> a
    void a() -> a
    void b() -> b
net.youmi.android.offers.c.g -> net.youmi.android.offers.c.g:
    net.youmi.android.offers.c.a a -> a
    boolean b -> b
    void a() -> a
    void run() -> run
    net.youmi.android.offers.c.a a(net.youmi.android.offers.c.g) -> a
net.youmi.android.offers.c.h -> net.youmi.android.offers.c.h:
    net.youmi.android.offers.c.g a -> a
    void run() -> run
net.youmi.android.offers.d -> net.youmi.android.offers.d:
    android.content.Context a -> a
    net.youmi.android.offers.d b -> b
    net.youmi.android.offers.d a(android.content.Context) -> a
    void a(net.youmi.android.offers.EarnPointsOrderList) -> a
net.youmi.android.offers.e -> net.youmi.android.offers.e:
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void a(android.content.Context,java.lang.String) -> a
    void a(android.content.Context,org.json.JSONObject) -> a
    void a(android.content.Context,net.youmi.android.offers.EarnPointsOrderList) -> a
    void b(android.content.Context,net.youmi.android.offers.EarnPointsOrderList) -> b
    void b(android.content.Context,org.json.JSONObject) -> b
    boolean a(org.json.JSONObject) -> a
    void c(android.content.Context,org.json.JSONObject) -> c
    void c(android.content.Context,net.youmi.android.offers.EarnPointsOrderList) -> c
net.youmi.android.offers.f -> net.youmi.android.offers.f:
    android.content.Context a -> a
    net.youmi.android.offers.EarnPointsOrderList b -> b
    net.youmi.android.offers.e c -> c
    void run() -> run
net.youmi.android.spot.SpotDialogListener -> net.youmi.android.spot.SpotDialogListener:
    void onShowSuccess() -> onShowSuccess
    void onShowFailed() -> onShowFailed
net.youmi.android.spot.SpotManager -> net.youmi.android.spot.SpotManager:
    java.lang.String PROTOCOLVERSION -> PROTOCOLVERSION
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String i -> i
    java.lang.String d -> d
    long j -> j
    long k -> k
    int l -> l
    long m -> m
    boolean e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String abtest -> abtest
    java.lang.String A -> A
    java.lang.String B -> B
    net.youmi.android.spot.i n -> n
    boolean o -> o
    boolean p -> p
    boolean q -> q
    long r -> r
    long h -> h
    net.youmi.android.spot.SpotManager s -> s
    android.content.Context t -> t
    android.content.BroadcastReceiver u -> u
    void setLoading(boolean) -> setLoading
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String f() -> f
    net.youmi.android.spot.SpotManager getInstance(android.content.Context) -> getInstance
    void setSpotTimeout(long) -> setSpotTimeout
    long getSpotTimeout() -> getSpotTimeout
    void loadSpotAds() -> loadSpotAds
    void a(boolean,boolean) -> a
    void a(boolean,boolean,net.youmi.android.spot.SpotDialogListener) -> a
    void showSpotAds(android.content.Context,net.youmi.android.spot.SpotDialogListener) -> showSpotAds
    void showSpotAds(android.content.Context) -> showSpotAds
    void a(android.content.Context,net.youmi.android.spot.SpotDialogListener) -> a
    void a(net.youmi.android.spot.SpotDialogListener) -> a
    boolean a() -> a
    boolean checkLoadComplete() -> checkLoadComplete
    void a(android.content.Context,java.lang.String) -> a
    boolean disMiss(boolean) -> disMiss
    boolean checkSpotAdConfig(android.content.Context) -> checkSpotAdConfig
    void setShowInterval(int) -> setShowInterval
    void setAutoCloseSpot(boolean) -> setAutoCloseSpot
    void setCloseTime(long) -> setCloseTime
    void unregisterSceenReceiver() -> unregisterSceenReceiver
    void checkPermission(android.content.Context) -> checkPermission
    void a(java.lang.String) -> a
    boolean a(net.youmi.android.spot.SpotManager,boolean) -> a
    android.content.Context a(net.youmi.android.spot.SpotManager) -> a
    net.youmi.android.spot.i a(net.youmi.android.spot.SpotManager,net.youmi.android.spot.i) -> a
    net.youmi.android.spot.i b(net.youmi.android.spot.SpotManager) -> b
    boolean c(net.youmi.android.spot.SpotManager) -> c
    long d(net.youmi.android.spot.SpotManager) -> d
net.youmi.android.spot.a -> net.youmi.android.spot.a:
    android.content.Context e -> e
    android.view.WindowManager a -> a
    android.view.WindowManager$LayoutParams f -> f
    android.widget.LinearLayout b -> b
    net.youmi.android.spot.i c -> c
    int g -> g
    boolean h -> h
    int d -> d
    boolean a() -> a
    void b() -> b
    void c() -> c
    void d() -> d
net.youmi.android.spot.b -> net.youmi.android.spot.b:
    boolean a -> a
    android.content.Context b -> b
    net.youmi.android.spot.SpotManager c -> c
    net.youmi.android.spot.SpotDialogListener d -> d
    java.lang.String a(java.lang.Void[]) -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void onCancelled(java.lang.Object) -> onCancelled
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
net.youmi.android.spot.c -> net.youmi.android.spot.c:
    java.lang.String a -> a
    net.youmi.android.spot.b b -> b
    void run() -> run
net.youmi.android.spot.d -> net.youmi.android.spot.d:
    net.youmi.android.spot.SpotManager a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
net.youmi.android.spot.e -> net.youmi.android.spot.e:
    boolean a -> a
    net.youmi.android.spot.SpotDialogListener b -> b
    net.youmi.android.spot.SpotManager c -> c
    void run() -> run
net.youmi.android.spot.f -> net.youmi.android.spot.f:
    net.youmi.android.spot.SpotManager a -> a
    void run() -> run
net.youmi.android.spot.g -> net.youmi.android.spot.g:
    java.lang.String a -> a
    net.youmi.android.spot.f b -> b
    void run() -> run
net.youmi.android.spot.h -> net.youmi.android.spot.h:
    java.lang.String a -> a
    java.lang.String b -> b
    net.youmi.android.spot.SpotDialogListener c -> c
    net.youmi.android.spot.SpotManager d -> d
    void run() -> run
net.youmi.android.spot.i -> net.youmi.android.spot.i:
    android.widget.RelativeLayout d -> d
    net.youmi.android.a.k.a.l e -> e
    net.youmi.android.a.h.l f -> f
    boolean g -> g
    boolean h -> h
    android.content.Context i -> i
    int a -> a
    boolean j -> j
    long k -> k
    int l -> l
    int m -> m
    java.lang.String n -> n
    net.youmi.android.spot.a o -> o
    net.youmi.android.spot.SpotDialogListener p -> p
    net.youmi.android.spot.SpotManager q -> q
    int r -> r
    android.os.Handler b -> b
    java.lang.Runnable c -> c
    void setClickableToast(net.youmi.android.spot.a) -> setClickableToast
    void setSpotDialogLinster(net.youmi.android.spot.SpotDialogListener) -> setSpotDialogLinster
    void setSpotManager(net.youmi.android.spot.SpotManager) -> setSpotManager
    void onAttachedToWindow() -> onAttachedToWindow
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onDetachedFromWindow() -> onDetachedFromWindow
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    boolean a() -> a
    boolean proxyClearWebViewHistory() -> proxyClearWebViewHistory
    boolean proxyCloseCurrentWindow() -> proxyCloseCurrentWindow
    boolean proxyLoadUrl(java.lang.String) -> proxyLoadUrl
    boolean proxyPostUrl(java.lang.String,byte[]) -> proxyPostUrl
    net.youmi.android.a.h.f js_SDK_Handler_ClearCurrentBrowserHistory() -> js_SDK_Handler_ClearCurrentBrowserHistory
    boolean js_SDK_Handler_RunOnUIThread(java.lang.Runnable) -> js_SDK_Handler_RunOnUIThread
    void onWebPageFinished(android.webkit.WebView,java.lang.String) -> onWebPageFinished
    void onWebPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onWebPageStarted
    void onWebReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onWebReceivedError
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    boolean proxySetVisibility(int) -> proxySetVisibility
    void setCanShowAdNow(boolean) -> setCanShowAdNow
    void run() -> run
    void setAutoClose(boolean) -> setAutoClose
    long getCloseSpotTime() -> getCloseSpotTime
    void setCloseSpotTime(long) -> setCloseSpotTime
    boolean a(net.youmi.android.spot.i) -> a
    net.youmi.android.spot.SpotDialogListener b(net.youmi.android.spot.i) -> b
    net.youmi.android.a.k.a.l c(net.youmi.android.spot.i) -> c
    net.youmi.android.a.k.a.l a(net.youmi.android.spot.i,net.youmi.android.a.k.a.l) -> a
    net.youmi.android.spot.a d(net.youmi.android.spot.i) -> d
    net.youmi.android.spot.a a(net.youmi.android.spot.i,net.youmi.android.spot.a) -> a
    net.youmi.android.spot.SpotManager e(net.youmi.android.spot.i) -> e
net.youmi.android.spot.j -> net.youmi.android.spot.j:
    net.youmi.android.spot.i a -> a
    void run() -> run
net.youmi.android.spot.k -> net.youmi.android.spot.k:
    net.youmi.android.spot.j a -> a
    void run() -> run
net.youmi.android.spot.l -> net.youmi.android.spot.l:
    net.youmi.android.spot.i a -> a
    void run() -> run
net.youmi.android.spot.m -> net.youmi.android.spot.m:
    net.youmi.android.spot.i a -> a
    void run() -> run
